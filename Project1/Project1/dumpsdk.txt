class Object
{
  *                                                                   ExecuteUbergraph                                  //0x0000(0x0229)
};


class ActorComponent : public Object
{
  ActorComponentTickFunction*                                         PrimaryComponentTick                              //0x0030(0x0030)
  ComponentTags*                                                      ComponentTags                                     //0x0060(0x0010)
  AssetUserData*                                                      AssetUserData                                     //0x0070(0x0010)
  *                                                                   bReplicates                                       //0x0084(0x0001)
  *                                                                   bNetAddressable                                   //0x0084(0x0001)
  *                                                                   bAutoActivate                                     //0x0085(0x0001)
  *                                                                   bIsActive                                         //0x0086(0x0001)
  *                                                                   bEditableWhenInherited                            //0x0086(0x0001)
  *                                                                   bCanEverAffectNavigation                          //0x0086(0x0001)
  *                                                                   bIsEditorOnly                                     //0x0086(0x0001)
  UnderlyingType*                                                     CreationMethod                                    //0x0088(0x0001)
  ActorComponentActivatedSignature__DelegateSignature*                OnComponentActivated                              //0x0089(0x0001)
  ActorComponentDeactivateSignature__DelegateSignature*               OnComponentDeactivated                            //0x008A(0x0001)
  UCSModifiedProperties*                                              UCSModifiedProperties                             //0x0090(0x0010)
  *                                                                   ToggleActive                                      //0x0000(0x0229)
  *                                                                   SetTickGroup                                      //0x0000(0x0229)
  *                                                                   SetTickableWhenPaused                             //0x0000(0x0229)
  *                                                                   SetIsReplicated                                   //0x0000(0x0229)
  *                                                                   SetComponentTickInterval                          //0x0000(0x0229)
  *                                                                   SetComponentTickEnabled                           //0x0000(0x0229)
  *                                                                   SetAutoActivate                                   //0x0000(0x0229)
  *                                                                   SetActive                                         //0x0000(0x0229)
  PrerequisiteComponent*                                              RemoveTickPrerequisiteComponent                   //0x0000(0x0229)
  PrerequisiteActor*                                                  RemoveTickPrerequisiteActor                       //0x0000(0x0229)
  *                                                                   ReceiveTick                                       //0x0000(0x0229)
  *                                                                   ReceiveEndPlay                                    //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0000(0x0229)
  *                                                                   OnRep_IsActive                                    //0x0000(0x0229)
  Object*                                                             K2_DestroyComponent                               //0x0000(0x0229)
  *                                                                   IsComponentTickEnabled                            //0x0000(0x0229)
  *                                                                   IsBeingDestroyed                                  //0x0000(0x0229)
  *                                                                   IsActive                                          //0x0000(0x0229)
  ReturnValue*                                                        GetOwner                                          //0x0000(0x0229)
  *                                                                   GetComponentTickInterval                          //0x0000(0x0229)
  *                                                                   Deactivate                                        //0x0000(0x0229)
  *                                                                   ComponentHasTag                                   //0x0000(0x0229)
  PrerequisiteComponent*                                              AddTickPrerequisiteComponent                      //0x0000(0x0229)
  PrerequisiteActor*                                                  AddTickPrerequisiteActor                          //0x0000(0x0229)
  *                                                                   Activate                                          //0x0000(0x0229)
};


class SmoothSync : public ActorComponent
{
  *                                                                   interpolationBackTime                             //0x0108(0x0004)
  UnderlyingType*                                                     ExtrapolationMode                                 //0x010C(0x0001)
  *                                                                   useExtrapolationTimeLimit                         //0x010D(0x0001)
  *                                                                   extrapolationTimeLimit                            //0x0110(0x0004)
  *                                                                   useExtrapolationDistanceLimit                     //0x0114(0x0001)
  *                                                                   extrapolationDistanceLimit                        //0x0118(0x0004)
  *                                                                   sendPositionThreshold                             //0x011C(0x0004)
  *                                                                   sendRotationThreshold                             //0x0120(0x0004)
  *                                                                   sendScaleThreshold                                //0x0124(0x0004)
  *                                                                   sendVelocityThreshold                             //0x0128(0x0004)
  *                                                                   sendAngularVelocityThreshold                      //0x012C(0x0004)
  *                                                                   receivedPositionThreshold                         //0x0130(0x0004)
  *                                                                   receivedRotationThreshold                         //0x0134(0x0004)
  *                                                                   positionSnapThreshold                             //0x0138(0x0004)
  *                                                                   rotationSnapThreshold                             //0x013C(0x0004)
  *                                                                   scaleSnapThreshold                                //0x0140(0x0004)
  *                                                                   timeSmoothing                                     //0x0144(0x0004)
  *                                                                   positionLerpSpeed                                 //0x0148(0x0004)
  *                                                                   rotationLerpSpeed                                 //0x014C(0x0004)
  *                                                                   scaleLerpSpeed                                    //0x0150(0x0004)
  UnderlyingType*                                                     syncPosition                                      //0x0154(0x0001)
  UnderlyingType*                                                     syncRotation                                      //0x0155(0x0001)
  UnderlyingType*                                                     syncScale                                         //0x0156(0x0001)
  UnderlyingType*                                                     syncVelocity                                      //0x0157(0x0001)
  UnderlyingType*                                                     syncAngularVelocity                               //0x0158(0x0001)
  *                                                                   syncMovementMode                                  //0x0159(0x0001)
  *                                                                   isPositionCompressed                              //0x015A(0x0001)
  *                                                                   isRotationCompressed                              //0x015B(0x0001)
  *                                                                   isScaleCompressed                                 //0x015C(0x0001)
  *                                                                   isVelocityCompressed                              //0x015D(0x0001)
  *                                                                   isAngularVelocityCompressed                       //0x015E(0x0001)
  *                                                                   sendRate                                          //0x0160(0x0004)
  *                                                                   isUsingOriginRebasing                             //0x0164(0x0001)
  *                                                                   alwaysSendOrigin                                  //0x0165(0x0001)
  *                                                                   syncOwnershipChange                               //0x0166(0x0001)
  SceneComponent*                                                     realComponentToSync                               //0x01F8(0x0008)
  *                                                                   InterpolationTime                                 //0x0218(0x0004)
  *                                                                   atRestPositionThreshold                           //0x0350(0x0004)
  *                                                                   atRestRotationThreshold                           //0x0354(0x0004)
  *                                                                   teleport                                          //0x0000(0x0229)
  *                                                                   SmoothSyncTeleportServerToClients                 //0x0000(0x0229)
  *                                                                   SmoothSyncTeleportClientToServer                  //0x0000(0x0229)
  *                                                                   SmoothSyncEnableServerToClients                   //0x0000(0x0229)
  *                                                                   SmoothSyncEnableClientToServer                    //0x0000(0x0229)
  theComponent*                                                       setSceneComponentToSync                           //0x0000(0x0229)
  *                                                                   ServerSendsTransformToEveryone                    //0x0000(0x0229)
  *                                                                   forceStateSendNextFrame                           //0x0000(0x0229)
  *                                                                   enableSmoothSync                                  //0x0000(0x0229)
  *                                                                   ClientSendsTransformToServer                      //0x0000(0x0229)
  *                                                                   clearBuffer                                       //0x0000(0x0229)
};


class Visual : public Object
{
};


class Widget : public Visual
{
  PanelSlot*                                                          Slot                                              //0x0028(0x0008)
  GetBool__DelegateSignature*                                         bIsEnabledDelegate                                //0x0030(0x0010)
  *                                                                   ToolTipText                                       //0x0040(0x0018)
  GetText__DelegateSignature*                                         ToolTipTextDelegate                               //0x0058(0x0010)
  Widget*                                                             ToolTipWidget                                     //0x0068(0x0008)
  GetWidget__DelegateSignature*                                       ToolTipWidgetDelegate                             //0x0070(0x0010)
  GetSlateVisibility__DelegateSignature*                              VisibilityDelegate                                //0x0080(0x0010)
  WidgetTransform*                                                    RenderTransform                                   //0x0090(0x001C)
  Vector2D*                                                           RenderTransformPivot                              //0x00AC(0x0008)
  *                                                                   bIsVariable                                       //0x00B4(0x0001)
  *                                                                   bCreatedByConstructionScript                      //0x00B4(0x0001)
  *                                                                   bIsEnabled                                        //0x00B4(0x0001)
  *                                                                   bOverride_Cursor                                  //0x00B4(0x0001)
  SlateAccessibleWidgetData*                                          AccessibleWidgetData                              //0x00B8(0x0008)
  *                                                                   bIsVolatile                                       //0x00C0(0x0001)
  EMouseCursor*                                                       Cursor                                            //0x00C1(0x0001)
  UnderlyingType*                                                     Clipping                                          //0x00C2(0x0001)
  UnderlyingType*                                                     Visibility                                        //0x00C3(0x0001)
  *                                                                   RenderOpacity                                     //0x00C4(0x0004)
  WidgetNavigation*                                                   Navigation                                        //0x00C8(0x0008)
  UnderlyingType*                                                     FlowDirectionPreference                           //0x00D0(0x0001)
  NativeBindings*                                                     NativeBindings                                    //0x00F8(0x0010)
  *                                                                   SetVisibility                                     //0x0000(0x0229)
  PlayerController*                                                   SetUserFocus                                      //0x0000(0x0229)
  *                                                                   SetToolTipText                                    //0x0000(0x0229)
  Widget*                                                             SetToolTip                                        //0x0000(0x0229)
  *                                                                   SetRenderTranslation                              //0x0000(0x0229)
  *                                                                   SetRenderTransformPivot                           //0x0000(0x0229)
  *                                                                   SetRenderTransformAngle                           //0x0000(0x0229)
  *                                                                   SetRenderTransform                                //0x0000(0x0229)
  *                                                                   SetRenderShear                                    //0x0000(0x0229)
  *                                                                   SetRenderScale                                    //0x0000(0x0229)
  *                                                                   SetRenderOpacity                                  //0x0000(0x0229)
  InWidget*                                                           SetNavigationRuleExplicit                         //0x0000(0x0229)
  InCustomDelegate*                                                   SetNavigationRuleCustomBoundary                   //0x0000(0x0229)
  InCustomDelegate*                                                   SetNavigationRuleCustom                           //0x0000(0x0229)
  *                                                                   SetNavigationRuleBase                             //0x0000(0x0229)
  *                                                                   SetNavigationRule                                 //0x0000(0x0229)
  *                                                                   SetKeyboardFocus                                  //0x0000(0x0229)
  *                                                                   SetIsEnabled                                      //0x0000(0x0229)
  *                                                                   SetFocus                                          //0x0000(0x0229)
  *                                                                   SetCursor                                         //0x0000(0x0229)
  *                                                                   SetClipping                                       //0x0000(0x0229)
  *                                                                   SetAllNavigationRules                             //0x0000(0x0229)
  *                                                                   ResetCursor                                       //0x0000(0x0229)
  *                                                                   RemoveFromParent                                  //0x0000(0x0229)
  *                                                                   OnReply__DelegateSignature                        //0x0000(0x0229)
  *                                                                   OnPointerEvent__DelegateSignature                 //0x0000(0x0229)
  *                                                                   IsVisible                                         //0x0000(0x0229)
  *                                                                   IsHovered                                         //0x0000(0x0229)
  *                                                                   InvalidateLayoutAndVolatility                     //0x0000(0x0229)
  PlayerController*                                                   HasUserFocusedDescendants                         //0x0000(0x0229)
  PlayerController*                                                   HasUserFocus                                      //0x0000(0x0229)
  *                                                                   HasMouseCaptureByUser                             //0x0000(0x0229)
  *                                                                   HasMouseCapture                                   //0x0000(0x0229)
  *                                                                   HasKeyboardFocus                                  //0x0000(0x0229)
  *                                                                   HasFocusedDescendants                             //0x0000(0x0229)
  *                                                                   HasAnyUserFocus                                   //0x0000(0x0229)
  ReturnValue*                                                        GetWidget__DelegateSignature                      //0x0000(0x0229)
  *                                                                   GetVisibility                                     //0x0000(0x0229)
  *                                                                   GetTickSpaceGeometry                              //0x0000(0x0229)
  *                                                                   GetText__DelegateSignature                        //0x0000(0x0229)
  *                                                                   GetSlateVisibility__DelegateSignature             //0x0000(0x0229)
  *                                                                   GetSlateColor__DelegateSignature                  //0x0000(0x0229)
  ReturnValue*                                                        GetSlateBrush__DelegateSignature                  //0x0000(0x0229)
  *                                                                   GetRenderTransformAngle                           //0x0000(0x0229)
  *                                                                   GetRenderOpacity                                  //0x0000(0x0229)
  ReturnValue*                                                        GetParent                                         //0x0000(0x0229)
  *                                                                   GetPaintSpaceGeometry                             //0x0000(0x0229)
  ReturnValue*                                                        GetOwningPlayer                                   //0x0000(0x0229)
  ReturnValue*                                                        GetOwningLocalPlayer                              //0x0000(0x0229)
  *                                                                   GetMouseCursor__DelegateSignature                 //0x0000(0x0229)
  *                                                                   GetLinearColor__DelegateSignature                 //0x0000(0x0229)
  *                                                                   GetIsEnabled                                      //0x0000(0x0229)
  *                                                                   GetInt32__DelegateSignature                       //0x0000(0x0229)
  ReturnValue*                                                        GetGameInstance                                   //0x0000(0x0229)
  *                                                                   GetFloat__DelegateSignature                       //0x0000(0x0229)
  *                                                                   GetDesiredSize                                    //0x0000(0x0229)
  *                                                                   GetClipping                                       //0x0000(0x0229)
  *                                                                   GetCheckBoxState__DelegateSignature               //0x0000(0x0229)
  *                                                                   GetCachedGeometry                                 //0x0000(0x0229)
  *                                                                   GetBool__DelegateSignature                        //0x0000(0x0229)
  ReturnValue*                                                        GenerateWidgetForString__DelegateSignature        //0x0000(0x0229)
  Item*                                                               GenerateWidgetForObject__DelegateSignature        //0x0000(0x0229)
  *                                                                   ForceVolatile                                     //0x0000(0x0229)
  *                                                                   ForceLayoutPrepass                                //0x0000(0x0229)
};


class UserWidget : public Widget
{
  LinearColor*                                                        ColorAndOpacity                                   //0x0110(0x0010)
  GetLinearColor__DelegateSignature*                                  ColorAndOpacityDelegate                           //0x0120(0x0010)
  SlateColor*                                                         ForegroundColor                                   //0x0130(0x0028)
  GetSlateColor__DelegateSignature*                                   ForegroundColorDelegate                           //0x0158(0x0010)
  Margin*                                                             Padding                                           //0x0168(0x0010)
  ActiveSequencePlayers*                                              ActiveSequencePlayers                             //0x0178(0x0010)
  StoppedSequencePlayers*                                             StoppedSequencePlayers                            //0x0188(0x0010)
  NamedSlotBindings*                                                  NamedSlotBindings                                 //0x0198(0x0010)
  WidgetTree*                                                         WidgetTree                                        //0x01A8(0x0008)
  *                                                                   Priority                                          //0x01B0(0x0004)
  *                                                                   bSupportsKeyboardFocus                            //0x01B4(0x0001)
  *                                                                   bIsFocusable                                      //0x01B4(0x0001)
  *                                                                   bStopAction                                       //0x01B4(0x0001)
  *                                                                   bHasScriptImplementedTick                         //0x01B4(0x0001)
  *                                                                   bHasScriptImplementedPaint                        //0x01B4(0x0001)
  *                                                                   bCookedWidgetTree                                 //0x01B4(0x0001)
  UnderlyingType*                                                     TickFrequency                                     //0x01C0(0x0001)
  InputComponent*                                                     InputComponent                                    //0x01C8(0x0008)
  AnimationCallbacks*                                                 AnimationCallbacks                                //0x01D0(0x0010)
  *                                                                   UnregisterInputComponent                          //0x0000(0x0229)
  Animation*                                                          UnbindFromAnimationStarted                        //0x0000(0x0229)
  Animation*                                                          UnbindFromAnimationFinished                       //0x0000(0x0229)
  Animation*                                                          UnbindAllFromAnimationStarted                     //0x0000(0x0229)
  Animation*                                                          UnbindAllFromAnimationFinished                    //0x0000(0x0229)
  *                                                                   Tick                                              //0x0000(0x0229)
  *                                                                   StopListeningForInputAction                       //0x0000(0x0229)
  *                                                                   StopListeningForAllInputActions                   //0x0000(0x0229)
  *                                                                   StopAnimationsAndLatentActions                    //0x0000(0x0229)
  InAnimation*                                                        StopAnimation                                     //0x0000(0x0229)
  *                                                                   StopAllAnimations                                 //0x0000(0x0229)
  *                                                                   SetPositionInViewport                             //0x0000(0x0229)
  InAnimation*                                                        SetPlaybackSpeed                                  //0x0000(0x0229)
  *                                                                   SetPadding                                        //0x0000(0x0229)
  LocalPlayerController*                                              SetOwningPlayer                                   //0x0000(0x0229)
  InAnimation*                                                        SetNumLoopsToPlay                                 //0x0000(0x0229)
  *                                                                   SetInputActionPriority                            //0x0000(0x0229)
  *                                                                   SetInputActionBlocking                            //0x0000(0x0229)
  *                                                                   SetForegroundColor                                //0x0000(0x0229)
  *                                                                   SetDesiredSizeInViewport                          //0x0000(0x0229)
  *                                                                   SetColorAndOpacity                                //0x0000(0x0229)
  *                                                                   SetAnchorsInViewport                              //0x0000(0x0229)
  *                                                                   SetAlignmentInViewport                            //0x0000(0x0229)
  InAnimation*                                                        ReverseAnimation                                  //0x0000(0x0229)
  *                                                                   RemoveFromViewport                                //0x0000(0x0229)
  *                                                                   RegisterInputComponent                            //0x0000(0x0229)
  *                                                                   PreConstruct                                      //0x0000(0x0229)
  SoundToPlay*                                                        PlaySound                                         //0x0000(0x0229)
  InAnimation*                                                        PlayAnimationTimeRange                            //0x0000(0x0229)
  InAnimation*                                                        PlayAnimationReverse                              //0x0000(0x0229)
  InAnimation*                                                        PlayAnimationForward                              //0x0000(0x0229)
  InAnimation*                                                        PlayAnimation                                     //0x0000(0x0229)
  InAnimation*                                                        PauseAnimation                                    //0x0000(0x0229)
  *                                                                   OnTouchStarted                                    //0x0000(0x0229)
  *                                                                   OnTouchMoved                                      //0x0000(0x0229)
  *                                                                   OnTouchGesture                                    //0x0000(0x0229)
  *                                                                   OnTouchForceChanged                               //0x0000(0x0229)
  *                                                                   OnTouchEnded                                      //0x0000(0x0229)
  *                                                                   OnRemovedFromFocusPath                            //0x0000(0x0229)
  *                                                                   OnPreviewMouseButtonDown                          //0x0000(0x0229)
  *                                                                   OnPreviewKeyDown                                  //0x0000(0x0229)
  *                                                                   OnPaint                                           //0x0000(0x0229)
  *                                                                   OnMouseWheel                                      //0x0000(0x0229)
  *                                                                   OnMouseMove                                       //0x0000(0x0229)
  *                                                                   OnMouseLeave                                      //0x0000(0x0229)
  *                                                                   OnMouseEnter                                      //0x0000(0x0229)
  *                                                                   OnMouseCaptureLost                                //0x0000(0x0229)
  *                                                                   OnMouseButtonUp                                   //0x0000(0x0229)
  *                                                                   OnMouseButtonDown                                 //0x0000(0x0229)
  *                                                                   OnMouseButtonDoubleClick                          //0x0000(0x0229)
  *                                                                   OnMotionDetected                                  //0x0000(0x0229)
  *                                                                   OnKeyUp                                           //0x0000(0x0229)
  *                                                                   OnKeyDown                                         //0x0000(0x0229)
  *                                                                   OnKeyChar                                         //0x0000(0x0229)
  *                                                                   OnInitialized                                     //0x0000(0x0229)
  *                                                                   OnFocusReceived                                   //0x0000(0x0229)
  *                                                                   OnFocusLost                                       //0x0000(0x0229)
  Operation*                                                          OnDrop                                            //0x0000(0x0229)
  Operation*                                                          OnDragOver                                        //0x0000(0x0229)
  Operation*                                                          OnDragLeave                                       //0x0000(0x0229)
  Operation*                                                          OnDragEnter                                       //0x0000(0x0229)
  Operation*                                                          OnDragDetected                                    //0x0000(0x0229)
  Operation*                                                          OnDragCancelled                                   //0x0000(0x0229)
  Animation*                                                          OnAnimationStarted                                //0x0000(0x0229)
  Animation*                                                          OnAnimationFinished                               //0x0000(0x0229)
  *                                                                   OnAnalogValueChanged                              //0x0000(0x0229)
  *                                                                   OnAddedToFocusPath                                //0x0000(0x0229)
  Callback*                                                           ListenForInputAction                              //0x0000(0x0229)
  *                                                                   IsPlayingAnimation                                //0x0000(0x0229)
  *                                                                   IsListeningForInputAction                         //0x0000(0x0229)
  *                                                                   IsInViewport                                      //0x0000(0x0229)
  *                                                                   IsInteractable                                    //0x0000(0x0229)
  *                                                                   IsAnyAnimationPlaying                             //0x0000(0x0229)
  InAnimation*                                                        IsAnimationPlayingForward                         //0x0000(0x0229)
  InAnimation*                                                        IsAnimationPlaying                                //0x0000(0x0229)
  ReturnValue*                                                        GetOwningPlayerPawn                               //0x0000(0x0229)
  *                                                                   GetIsVisible                                      //0x0000(0x0229)
  InAnimation*                                                        GetAnimationCurrentTime                           //0x0000(0x0229)
  *                                                                   GetAnchorsInViewport                              //0x0000(0x0229)
  *                                                                   GetAlignmentInViewport                            //0x0000(0x0229)
  *                                                                   Destruct                                          //0x0000(0x0229)
  *                                                                   Construct                                         //0x0000(0x0229)
  *                                                                   CancelLatentActions                               //0x0000(0x0229)
  Animation*                                                          BindToAnimationStarted                            //0x0000(0x0229)
  Animation*                                                          BindToAnimationFinished                           //0x0000(0x0229)
  Animation*                                                          BindToAnimationEvent                              //0x0000(0x0229)
  *                                                                   AddToViewport                                     //0x0000(0x0229)
  *                                                                   AddToPlayerScreen                                 //0x0000(0x0229)
};


class ECP_ClickableArea : public UserWidget
{
  Image*                                                              FakeImage                                         //0x0278(0x0008)
};


class Slider : public Widget
{
  *                                                                   Value                                             //0x0108(0x0004)
  GetFloat__DelegateSignature*                                        ValueDelegate                                     //0x010C(0x0010)
  *                                                                   MinValue                                          //0x011C(0x0004)
  *                                                                   MaxValue                                          //0x0120(0x0004)
  SliderStyle*                                                        WidgetStyle                                       //0x0128(0x0340)
  EOrientation*                                                       Orientation                                       //0x0468(0x0001)
  LinearColor*                                                        SliderBarColor                                    //0x046C(0x0010)
  LinearColor*                                                        SliderHandleColor                                 //0x047C(0x0010)
  *                                                                   IndentHandle                                      //0x048C(0x0001)
  *                                                                   Locked                                            //0x048D(0x0001)
  *                                                                   MouseUsesStep                                     //0x048E(0x0001)
  *                                                                   RequiresControllerLock                            //0x048F(0x0001)
  *                                                                   StepSize                                          //0x0490(0x0004)
  *                                                                   IsFocusable                                       //0x0494(0x0001)
  OnMouseCaptureBeginEvent__DelegateSignature*                        OnMouseCaptureBegin                               //0x0498(0x0010)
  OnMouseCaptureEndEvent__DelegateSignature*                          OnMouseCaptureEnd                                 //0x04A8(0x0010)
  OnControllerCaptureBeginEvent__DelegateSignature*                   OnControllerCaptureBegin                          //0x04B8(0x0010)
  OnControllerCaptureEndEvent__DelegateSignature*                     OnControllerCaptureEnd                            //0x04C8(0x0010)
  OnFloatValueChangedEvent__DelegateSignature*                        OnValueChanged                                    //0x04D8(0x0010)
  *                                                                   SetValue                                          //0x0000(0x0229)
  *                                                                   SetStepSize                                       //0x0000(0x0229)
  *                                                                   SetSliderHandleColor                              //0x0000(0x0229)
  *                                                                   SetSliderBarColor                                 //0x0000(0x0229)
  *                                                                   SetMinValue                                       //0x0000(0x0229)
  *                                                                   SetMaxValue                                       //0x0000(0x0229)
  *                                                                   SetLocked                                         //0x0000(0x0229)
  *                                                                   SetIndentHandle                                   //0x0000(0x0229)
  *                                                                   GetValue                                          //0x0000(0x0229)
  *                                                                   GetNormalizedValue                                //0x0000(0x0229)
};


class ECP_Slider : public Slider
{
  Color*                                                              LeftColor                                         //0x0500(0x0004)
  Color*                                                              RightColor                                        //0x0504(0x0004)
  OnNewColorPickedDelegate__DelegateSignature*                        OnNewColorPicked                                  //0x0508(0x0010)
  Material*                                                           GradientMaterialRef                               //0x0518(0x0028)
  Material*                                                           SliderThumbMaterialRef                            //0x0540(0x0028)
  MaterialInstanceDynamic*                                            GradientMaterialInstance                          //0x0580(0x0008)
  MaterialInstanceDynamic*                                            SliderThumbMaterialInstance                       //0x0588(0x0008)
  *                                                                   OnValueChangedFunction                            //0x0000(0x0229)
};


class ECP_Wheel : public UserWidget
{
  ValueChangedDelegate__DelegateSignature*                            OnValueChanged                                    //0x0230(0x0010)
  ECP_ClickableArea*                                                  ClickableArea                                     //0x0260(0x0008)
  Image*                                                              WheelImage                                        //0x0268(0x0008)
  Image*                                                              PointerImage                                      //0x0270(0x0008)
  Image*                                                              PreviewImage                                      //0x0278(0x0008)
  Image*                                                              PreviewImageBackground                            //0x0280(0x0008)
};


class ECP_WheelAndSlider : public UserWidget
{
  *                                                                   WheelSize                                         //0x0230(0x0004)
  *                                                                   SliderWidth                                       //0x0234(0x0004)
  *                                                                   SliderHeight                                      //0x0238(0x0004)
  OnNewColorPickedDelegate__DelegateSignature*                        OnNewColorPicked                                  //0x0240(0x0010)
  Texture2D*                                                          WheelTextureRef                                   //0x0250(0x0028)
  Texture2D*                                                          PointerTextureRef                                 //0x0278(0x0028)
  Texture2D*                                                          PreviewTextureRef                                 //0x02A0(0x0028)
  Texture2D*                                                          PreviewTextureBackgroundRef                       //0x02C8(0x0028)
  Material*                                                           GradientMaterialRef                               //0x02F0(0x0028)
  Material*                                                           SliderThumbMaterialRef                            //0x0318(0x0028)
  Class*                                                              SliderAsset                                       //0x0340(0x0008)
  ECP_Wheel*                                                          WheelPicker                                       //0x0348(0x0008)
  ECP_Slider*                                                         FirstGradientSlider                               //0x0350(0x0008)
  ECP_Slider*                                                         SecondGradientSlider                              //0x0358(0x0008)
  SizeBox*                                                            SliderSizeBox                                     //0x0360(0x0008)
  HorizontalBox*                                                      HRootWidget                                       //0x0368(0x0008)
  VerticalBox*                                                        VSliderBox                                        //0x0370(0x0008)
  SizeBoxSlot*                                                        FirstBoxSlot                                      //0x0378(0x0008)
  SizeBoxSlot*                                                        SecondBoxSlot                                     //0x0380(0x0008)
  *                                                                   SetColor                                          //0x0000(0x0229)
  *                                                                   OnWheelPickerValueChanged                         //0x0000(0x0229)
  *                                                                   OnSecondSliderValueChanged                        //0x0000(0x0229)
  *                                                                   OnFirstSliderValueChanged                         //0x0000(0x0229)
  *                                                                   GetColor                                          //0x0000(0x0229)
};


class InputLabel : public UserWidget
{
  *                                                                   MappingGroup                                      //0x0230(0x0004)
  GameplayTag*                                                        KeyGroup                                          //0x0234(0x0008)
  *                                                                   bUsePlayerKeyGroup                                //0x023C(0x0001)
  GameplayTagContainer*                                               IconTags                                          //0x0240(0x0020)
  *                                                                   UpdateLabel                                       //0x0000(0x0229)
  Player*                                                             MappingsChanged                                   //0x0000(0x0229)
};


class ActionLabel : public InputLabel
{
  *                                                                   ActionName                                        //0x0260(0x0008)
  Class*                                                              KeyLabelWidgetClass                               //0x0268(0x0008)
  Class*                                                              KeySeparatorWidgetClass                           //0x0270(0x0008)
  PanelWidget*                                                        KeyContainer                                      //0x0278(0x0008)
  KeyLabel*                                                           PrimaryKeyLabel                                   //0x0280(0x0008)
  KeyLabel*                                                           ShiftLabel                                        //0x0288(0x0008)
  KeyLabel*                                                           CtrlLabel                                         //0x0290(0x0008)
  KeyLabel*                                                           AltLabel                                          //0x0298(0x0008)
  KeyLabel*                                                           CmdLabel                                          //0x02A0(0x0008)
  Widget*                                                             ShiftSeparator                                    //0x02A8(0x0008)
  Widget*                                                             CtrlSeparator                                     //0x02B0(0x0008)
  Widget*                                                             AltSeparator                                      //0x02B8(0x0008)
  Widget*                                                             CmdSeparator                                      //0x02C0(0x0008)
};


class InputMapping : public UserWidget
{
  *                                                                   MappingGroup                                      //0x0230(0x0004)
  GameplayTag*                                                        KeyGroup                                          //0x0234(0x0008)
  GameplayTagContainer*                                               IconTags                                          //0x0240(0x0020)
  BindCaptureButton*                                                  BindCaptureButton                                 //0x0260(0x0008)
  *                                                                   UpdateMapping                                     //0x0000(0x0229)
  *                                                                   UpdateLabel                                       //0x0000(0x0229)
  *                                                                   ChordCaptured                                     //0x0000(0x0229)
  *                                                                   BindChord                                         //0x0000(0x0229)
};


class ActionMapping : public InputMapping
{
  *                                                                   ActionName                                        //0x0268(0x0008)
  ActionLabel*                                                        ActionLabel                                       //0x0270(0x0008)
};


class AutoSettingsConfig : public Object
{
  *                                                                   bAutoInitializePlayerInputOverrides               //0x0028(0x0001)
  *                                                                   AllowModifierKeys                                 //0x0029(0x0001)
  *                                                                   ShiftModifierOverrideText                         //0x0030(0x0018)
  *                                                                   CtrlModifierOverrideText                          //0x0048(0x0018)
  *                                                                   AltModifierOverrideText                           //0x0060(0x0018)
  *                                                                   CmdModifierOverrideText                           //0x0078(0x0018)
  InputPresets*                                                       InputPresets                                      //0x0090(0x0010)
  *                                                                   AllowMultipleBindingsPerKey                       //0x00A0(0x0001)
  MappingGroupLinks*                                                  MappingGroupLinks                                 //0x00A8(0x0010)
  BlacklistedActions*                                                 BlacklistedActions                                //0x00B8(0x0010)
  BlacklistedAxes*                                                    BlacklistedAxes                                   //0x00C8(0x0010)
  KeyIconSets*                                                        KeyIconSets                                       //0x00D8(0x0010)
  KeyFriendlyNames*                                                   KeyFriendlyNames                                  //0x00E8(0x0010)
  KeyGroups*                                                          KeyGroups                                         //0x00F8(0x0010)
  AllowedKeys*                                                        AllowedKeys                                       //0x0108(0x0010)
  DisallowedKeys*                                                     DisallowedKeys                                    //0x0118(0x0010)
  BindingEscapeKeys*                                                  BindingEscapeKeys                                 //0x0128(0x0010)
  *                                                                   MouseMoveCaptureDistance                          //0x0138(0x0004)
  AxisAssociations*                                                   AxisAssociations                                  //0x0140(0x0010)
  *                                                                   GetKeyGroupStatic                                 //0x0000(0x0229)
  *                                                                   GetKeyFriendlyNameStatic                          //0x0000(0x0229)
};


class Interface : public Object
{
};


class AutoSettingsPlayer : public Interface
{
  *                                                                   SaveInputMappings                                 //0x0000(0x0229)
  *                                                                   GetUniquePlayerIdentifier                         //0x0000(0x0229)
  *                                                                   GetInputMappings                                  //0x0000(0x0229)
  *                                                                   GetDefaultInputMappingPreset                      //0x0000(0x0229)
};


class GameInstance : public Object
{
  LocalPlayers*                                                       LocalPlayers                                      //0x0038(0x0010)
  OnlineSession*                                                      OnlineSession                                     //0x0048(0x0008)
  ReferencedObjects*                                                  ReferencedObjects                                 //0x0050(0x0010)
  *                                                                   ReceiveShutdown                                   //0x0000(0x0229)
  *                                                                   ReceiveInit                                       //0x0000(0x0229)
  *                                                                   HandleTravelError                                 //0x0000(0x0229)
  *                                                                   HandleNetworkError                                //0x0000(0x0229)
  *                                                                   DebugRemovePlayer                                 //0x0000(0x0229)
  *                                                                   DebugCreatePlayer                                 //0x0000(0x0229)
};


class Subsystem : public Object
{
};


class GameInstanceSubsystem : public Subsystem
{
};


class AutoSettingsValidationSubsystem : public GameInstanceSubsystem
{
};


class AutoSettingWidget : public UserWidget
{
  *                                                                   CVarName                                          //0x0230(0x0008)
  Class*                                                              ValueMask                                         //0x0238(0x0008)
  *                                                                   bAutoSave                                         //0x0240(0x0001)
  *                                                                   bAutoApply                                        //0x0241(0x0001)
  GameplayTagContainer*                                               SettingTags                                       //0x0248(0x0020)
  *                                                                   CurrentValue                                      //0x0268(0x0010)
  *                                                                   bHasUnappliedChange                               //0x0278(0x0001)
  *                                                                   bHasUnsavedChange                                 //0x0279(0x0001)
  *                                                                   bUpdatingSettingSelection                         //0x027A(0x0001)
  *                                                                   UpdateSelection                                   //0x0000(0x0229)
  *                                                                   Save                                              //0x0000(0x0229)
  *                                                                   HasUnsavedChange                                  //0x0000(0x0229)
  *                                                                   HasUnappliedChange                                //0x0000(0x0229)
  *                                                                   Cancel                                            //0x0000(0x0229)
  *                                                                   ApplySettingValue                                 //0x0000(0x0229)
  *                                                                   Apply                                             //0x0000(0x0229)
};


class AxisLabel : public InputLabel
{
  *                                                                   AxisName                                          //0x0260(0x0008)
  *                                                                   Scale                                             //0x0268(0x0004)
  KeyLabel*                                                           KeyLabel                                          //0x0270(0x0008)
};


class AxisMapping : public InputMapping
{
  *                                                                   AxisName                                          //0x0268(0x0008)
  *                                                                   Scale                                             //0x0270(0x0004)
  AxisLabel*                                                          AxisLabel                                         //0x0278(0x0008)
};


class BindCaptureButton : public UserWidget
{
  GameplayTag*                                                        KeyGroup                                          //0x0230(0x0008)
  Class*                                                              BindCapturePromptClass                            //0x0238(0x0008)
  *                                                                   CapturePromptZOrder                               //0x0240(0x0004)
  BindCapturePrompt*                                                  Prompt                                            //0x0258(0x0008)
  ReturnValue*                                                        StartCapture                                      //0x0000(0x0229)
  PromptWidget*                                                       InitializePrompt                                  //0x0000(0x0229)
  *                                                                   ChordCaptured                                     //0x0000(0x0229)
};


class BindCapturePrompt : public UserWidget
{
  *                                                                   bIgnoreGameViewportInputWhileCapturing            //0x0230(0x0001)
  *                                                                   bRestrictKeyGroup                                 //0x0231(0x0001)
  UnderlyingType*                                                     CaptureMode                                       //0x0232(0x0001)
  GameplayTag*                                                        KeyGroup                                          //0x0234(0x0008)
  ChordCapturedEvent__DelegateSignature*                              OnChordCaptured                                   //0x0240(0x0010)
  ChordRejectedEvent__DelegateSignature*                              OnChordRejected                                   //0x0250(0x0010)
  CapturePromptClosedEvent__DelegateSignature*                        OnCapturePromptClosed                             //0x0260(0x0010)
  KeysDown*                                                           KeysDown                                          //0x0270(0x0010)
  *                                                                   PreviousIgnoreInput                               //0x0280(0x0001)
  Vector2D*                                                           AccumulatedMouseDelta                             //0x0284(0x0008)
  *                                                                   IsKeyAllowed                                      //0x0000(0x0229)
  *                                                                   GetKeyGroup                                       //0x0000(0x0229)
  *                                                                   Cancel                                            //0x0000(0x0229)
};


class ToggleSetting : public AutoSettingWidget
{
  *                                                                   UpdateToggleState                                 //0x0000(0x0229)
  *                                                                   ToggleStateUpdated                                //0x0000(0x0229)
};


class CheckBoxSetting : public ToggleSetting
{
  CheckBox*                                                           CheckBox                                          //0x0280(0x0008)
  *                                                                   CheckBoxStateChanged                              //0x0000(0x0229)
};


class SelectSetting : public AutoSettingWidget
{
  Options*                                                            Options                                           //0x0280(0x0010)
  Class*                                                              OptionFactory                                     //0x0290(0x0008)
  *                                                                   bUpdatingSettingOptions                           //0x0298(0x0001)
  *                                                                   UpdateOptions                                     //0x0000(0x0229)
};


class ComboBoxSetting : public SelectSetting
{
  ComboBoxString*                                                     ComboBox                                          //0x02A0(0x0008)
  *                                                                   ComboBoxSelectionChanged                          //0x0000(0x0229)
};


class BlueprintFunctionLibrary : public Object
{
};


class ConsoleUtils : public BlueprintFunctionLibrary
{
  *                                                                   SetStringCVar                                     //0x0000(0x0229)
  *                                                                   SetIntCVar                                        //0x0000(0x0229)
  *                                                                   SetFloatCVar                                      //0x0000(0x0229)
  *                                                                   SetBoolCVar                                       //0x0000(0x0229)
  *                                                                   IsCVarRegistered                                  //0x0000(0x0229)
  *                                                                   GetStringCVar                                     //0x0000(0x0229)
  *                                                                   GetIntCVar                                        //0x0000(0x0229)
  *                                                                   GetFloatCVar                                      //0x0000(0x0229)
  *                                                                   GetBoolCVar                                       //0x0000(0x0229)
};


class CVarChangeListener : public Object
{
};


class CVarChangeListenerManager : public Object
{
  Listeners_Key*                                                      Listeners                                         //0x0028(0x0050)
  ChangedCallback*                                                    AddStringCVarCallbackStatic                       //0x0000(0x0229)
  ChangedCallback*                                                    AddIntCVarCallbackStatic                          //0x0000(0x0229)
  ChangedCallback*                                                    AddFloatCVarCallbackStatic                        //0x0000(0x0229)
  ChangedCallback*                                                    AddBoolCVarCallbackStatic                         //0x0000(0x0229)
};


class GlobalKeyIconTagManager : public Object
{
  GlobalKeyIconTagsModifiedEvent__DelegateSignature*                  OnGlobalKeyIconTagsModified                       //0x0028(0x0010)
  GameplayTagContainer*                                               GlobalKeyIconTags                                 //0x0038(0x0020)
  *                                                                   SetGlobalKeyIconTags                              //0x0000(0x0229)
  ReturnValue*                                                        GetIconForKey                                     //0x0000(0x0229)
};


class InputMappingManager : public Object
{
  PlayerInputOverrides*                                               PlayerInputOverrides                              //0x0040(0x0010)
  RegisteredPlayerControllers*                                        RegisteredPlayerControllers                       //0x0050(0x0010)
  Player*                                                             SetPlayerKeyGroupStatic                           //0x0000(0x0229)
  Player*                                                             SetPlayerInputPresetStatic                        //0x0000(0x0229)
  Player*                                                             SetPlayerInputPresetByTag                         //0x0000(0x0229)
  DestroyedActor*                                                     OnRegisteredPlayerControllerDestroyed             //0x0000(0x0229)
  Player*                                                             InitializePlayerInputOverridesStatic              //0x0000(0x0229)
  Player*                                                             GetPlayerInputMappingsStatic                      //0x0000(0x0229)
  Player*                                                             GetPlayerAxisMappingStatic                        //0x0000(0x0229)
  Player*                                                             GetPlayerActionMappingStatic                      //0x0000(0x0229)
  *                                                                   GetDefaultInputPresets                            //0x0000(0x0229)
  Player*                                                             AddPlayerAxisOverrideStatic                       //0x0000(0x0229)
  Player*                                                             AddPlayerAxisOverride                             //0x0000(0x0229)
  Player*                                                             AddPlayerActionOverrideStatic                     //0x0000(0x0229)
  Player*                                                             AddPlayerActionOverride                           //0x0000(0x0229)
};


class KeyLabel : public UserWidget
{
  *                                                                   KeyInvalidText                                    //0x0230(0x0018)
  *                                                                   LabelOverride                                     //0x0248(0x0018)
  Key*                                                                Key                                               //0x0260(0x0018)
  GameplayTagContainer*                                               IconTags                                          //0x0278(0x0020)
  *                                                                   UpdateKeyLabel                                    //0x0000(0x0229)
  *                                                                   OnGlobalKeyIconTagsModified                       //0x0000(0x0229)
  *                                                                   HasValidKey                                       //0x0000(0x0229)
  *                                                                   HasIcon                                           //0x0000(0x0229)
  *                                                                   GetIconVisibility                                 //0x0000(0x0229)
  ReturnValue*                                                        GetIconBrush                                      //0x0000(0x0229)
  ReturnValue*                                                        GetIcon                                           //0x0000(0x0229)
  *                                                                   GetDisplayNameVisibility                          //0x0000(0x0229)
  *                                                                   GetDisplayName                                    //0x0000(0x0229)
};


class SliderSetting : public AutoSettingWidget
{
  *                                                                   LeftValue                                         //0x0280(0x0004)
  *                                                                   RightValue                                        //0x0284(0x0004)
  *                                                                   UpdateSliderValue                                 //0x0000(0x0229)
  *                                                                   SliderValueUpdated                                //0x0000(0x0229)
  *                                                                   ShouldSaveCurrentValue                            //0x0000(0x0229)
  *                                                                   OnSliderValueUpdated                              //0x0000(0x0229)
};


class NativeSliderSetting : public SliderSetting
{
  Slider*                                                             Slider                                            //0x0288(0x0008)
  *                                                                   bMouseCaptureInProgress                           //0x0290(0x0001)
  *                                                                   SliderValueChanged                                //0x0000(0x0229)
  *                                                                   SliderMouseCaptureEnd                             //0x0000(0x0229)
  *                                                                   SliderMouseCaptureBegin                           //0x0000(0x0229)
};


class RadioButton : public UserWidget
{
  RadioSelectedSignature__DelegateSignature*                          OnSelected                                        //0x0230(0x0010)
  *                                                                   Label                                             //0x0240(0x0018)
  *                                                                   Value                                             //0x0258(0x0010)
  *                                                                   Selected                                          //0x0268(0x0001)
  *                                                                   UpdateSelected                                    //0x0000(0x0229)
  *                                                                   UpdateLabel                                       //0x0000(0x0229)
  *                                                                   TriggerSelection                                  //0x0000(0x0229)
  *                                                                   SetValue                                          //0x0000(0x0229)
  *                                                                   SetSelected                                       //0x0000(0x0229)
  *                                                                   SetLabel                                          //0x0000(0x0229)
  *                                                                   GetValue                                          //0x0000(0x0229)
  *                                                                   GetSelected                                       //0x0000(0x0229)
  *                                                                   GetLabel                                          //0x0000(0x0229)
};


class RadioSelect : public UserWidget
{
  Options*                                                            Options                                           //0x0230(0x0010)
  Class*                                                              RadioButtonClass                                  //0x0240(0x0008)
  RadioSelectedSignature__DelegateSignature*                          SelectionChangedEvent                             //0x0248(0x0010)
  PanelWidget*                                                        ButtonContainer                                   //0x0258(0x0008)
  RadioButtons*                                                       RadioButtons                                      //0x0260(0x0010)
  *                                                                   SetOptions                                        //0x0000(0x0229)
  *                                                                   Select                                            //0x0000(0x0229)
  *                                                                   GetOptions                                        //0x0000(0x0229)
  *                                                                   ButtonSelected                                    //0x0000(0x0229)
};


class RadioSelectSetting : public SelectSetting
{
  Class*                                                              RadioButtonClass                                  //0x02A0(0x0008)
  RadioSelect*                                                        RadioSelect                                       //0x02A8(0x0008)
  *                                                                   RadioSelectionChanged                             //0x0000(0x0229)
};


class SettingOptionFactory : public Object
{
  *                                                                   ConstructOptions                                  //0x0000(0x0229)
};


class ResolutionOptionFactory : public SettingOptionFactory
{
};


class ResolutionStringUtils : public BlueprintFunctionLibrary
{
};


class SettingValueMask : public Object
{
  *                                                                   RecombineValues                                   //0x0000(0x0229)
  *                                                                   MaskValue                                         //0x0000(0x0229)
};


class ResolutionValueMask : public SettingValueMask
{
};


class SettingContainerUtils : public BlueprintFunctionLibrary
{
  UserWidget*                                                         SaveChildSettings                                 //0x0000(0x0229)
  UserWidget*                                                         GetChildSettings                                  //0x0000(0x0229)
  UserWidget*                                                         DoesAnyChildSettingHaveUnsavedChange              //0x0000(0x0229)
  UserWidget*                                                         DoesAnyChildSettingHaveUnappliedChange            //0x0000(0x0229)
  UserWidget*                                                         CancelChildSettings                               //0x0000(0x0229)
  UserWidget*                                                         ApplyChildSettings                                //0x0000(0x0229)
};


class SettingsManager : public Object
{
  SettingSavedSignature__DelegateSignature*                           OnSettingSaved                                    //0x0028(0x0010)
  *                                                                   IniName                                           //0x0038(0x0010)
  *                                                                   IniFilename                                       //0x0048(0x0010)
  *                                                                   SectionName                                       //0x0058(0x0010)
  *                                                                   SaveSettingStatic                                 //0x0000(0x0229)
  ChangedCallback*                                                    RegisterStringCVarSettingWithCallback             //0x0000(0x0229)
  *                                                                   RegisterStringCVarSetting                         //0x0000(0x0229)
  ChangedCallback*                                                    RegisterIntCVarSettingWithCallback                //0x0000(0x0229)
  *                                                                   RegisterIntCVarSetting                            //0x0000(0x0229)
  ChangedCallback*                                                    RegisterFloatCVarSettingWithCallback              //0x0000(0x0229)
  *                                                                   RegisterFloatCVarSetting                          //0x0000(0x0229)
  ChangedCallback*                                                    RegisterBoolCVarSettingWithCallback               //0x0000(0x0229)
  *                                                                   RegisterBoolCVarSetting                           //0x0000(0x0229)
  *                                                                   GetValue                                          //0x0000(0x0229)
  *                                                                   GetInitialValue                                   //0x0000(0x0229)
  *                                                                   AutoDetectSettingsStatic                          //0x0000(0x0229)
  *                                                                   ApplySettingStatic                                //0x0000(0x0229)
};


class Spinner : public UserWidget
{
  Options*                                                            Options                                           //0x0230(0x0010)
  *                                                                   bAllowWrapping                                    //0x0240(0x0001)
  SpinnerSelectionChanged__DelegateSignature*                         SelectionChangedEvent                             //0x0248(0x0010)
  *                                                                   SelectValue                                       //0x0000(0x0229)
  *                                                                   SelectIndex                                       //0x0000(0x0229)
  *                                                                   Previous                                          //0x0000(0x0229)
  *                                                                   Next                                              //0x0000(0x0229)
  *                                                                   HasValidPrevious                                  //0x0000(0x0229)
  *                                                                   HasValidNext                                      //0x0000(0x0229)
  *                                                                   GetCurrentOption                                  //0x0000(0x0229)
  *                                                                   GetCurrentIndex                                   //0x0000(0x0229)
};


class SpinnerSetting : public SelectSetting
{
  Spinner*                                                            Spinner                                           //0x02A0(0x0008)
  *                                                                   SpinnerSelectionChanged                           //0x0000(0x0229)
};


class WindowModeValueMask : public SettingValueMask
{
};


class AdvancedExternalUILibrary : public BlueprintFunctionLibrary
{
  *                                                                   ShowWebURLUI                                      //0x0000(0x0229)
  *                                                                   ShowProfileUI                                     //0x0000(0x0229)
  *                                                                   ShowLeaderBoardUI                                 //0x0000(0x0229)
  PlayerController*                                                   ShowInviteUI                                      //0x0000(0x0229)
  PlayerController*                                                   ShowFriendsUI                                     //0x0000(0x0229)
  *                                                                   ShowAccountUpgradeUI                              //0x0000(0x0229)
  *                                                                   CloseWebURLUI                                     //0x0000(0x0229)
};


class AdvancedFriendsGameInstance : public GameInstance
{
  *                                                                   bCallFriendInterfaceEventsOnPlayerControllers     //0x0168(0x0001)
  *                                                                   bCallIdentityInterfaceEventsOnPlayerControllers   //0x0169(0x0001)
  *                                                                   bCallVoiceInterfaceEventsOnPlayerControllers      //0x016A(0x0001)
  *                                                                   bEnableTalkingStatusDelegate                      //0x016B(0x0001)
  *                                                                   OnSessionInviteReceived                           //0x0000(0x0229)
  *                                                                   OnSessionInviteAccepted                           //0x0000(0x0229)
  *                                                                   OnPlayerTalkingStateChanged                       //0x0000(0x0229)
  *                                                                   OnPlayerLoginStatusChanged                        //0x0000(0x0229)
  *                                                                   OnPlayerLoginChanged                              //0x0000(0x0229)
};


class AdvancedFriendsInterface : public Interface
{
  *                                                                   OnSessionInviteReceived                           //0x0000(0x0229)
  *                                                                   OnSessionInviteAccepted                           //0x0000(0x0229)
  *                                                                   OnPlayerVoiceStateChanged                         //0x0000(0x0229)
  *                                                                   OnPlayerLoginStatusChanged                        //0x0000(0x0229)
  *                                                                   OnPlayerLoginChanged                              //0x0000(0x0229)
};


class AdvancedFriendsLibrary : public BlueprintFunctionLibrary
{
  PlayerController*                                                   SendSessionInviteToFriends                        //0x0000(0x0229)
  PlayerController*                                                   SendSessionInviteToFriend                         //0x0000(0x0229)
  PlayerController*                                                   IsAFriend                                         //0x0000(0x0229)
  *                                                                   GetStoredRecentPlayersList                        //0x0000(0x0229)
  PlayerController*                                                   GetStoredFriendsList                              //0x0000(0x0229)
  PlayerController*                                                   GetFriend                                         //0x0000(0x0229)
};


class AdvancedIdentityLibrary : public BlueprintFunctionLibrary
{
  *                                                                   SetUserAccountAttribute                           //0x0000(0x0229)
  *                                                                   GetUserID                                         //0x0000(0x0229)
  *                                                                   GetUserAccountRealName                            //0x0000(0x0229)
  *                                                                   GetUserAccountDisplayName                         //0x0000(0x0229)
  *                                                                   GetUserAccountAuthAttribute                       //0x0000(0x0229)
  *                                                                   GetUserAccountAttribute                           //0x0000(0x0229)
  *                                                                   GetUserAccountAccessToken                         //0x0000(0x0229)
  *                                                                   GetUserAccount                                    //0x0000(0x0229)
  *                                                                   GetPlayerNickname                                 //0x0000(0x0229)
  PlayerController*                                                   GetPlayerAuthToken                                //0x0000(0x0229)
  *                                                                   GetLoginStatus                                    //0x0000(0x0229)
  *                                                                   GetAllUserAccounts                                //0x0000(0x0229)
};


class AdvancedSessionsLibrary : public BlueprintFunctionLibrary
{
  *                                                                   UniqueNetIdToString                               //0x0000(0x0229)
  PlayerController*                                                   SetPlayerName                                     //0x0000(0x0229)
  *                                                                   MakeLiteralSessionSearchProperty                  //0x0000(0x0229)
  *                                                                   MakeLiteralSessionPropertyString                  //0x0000(0x0229)
  *                                                                   MakeLiteralSessionPropertyInt                     //0x0000(0x0229)
  *                                                                   MakeLiteralSessionPropertyFloat                   //0x0000(0x0229)
  *                                                                   MakeLiteralSessionPropertyByte                    //0x0000(0x0229)
  *                                                                   MakeLiteralSessionPropertyBool                    //0x0000(0x0229)
  *                                                                   IsValidUniqueNetID                                //0x0000(0x0229)
  *                                                                   IsValidSession                                    //0x0000(0x0229)
  WorldContextObject*                                                 IsPlayerInSession                                 //0x0000(0x0229)
  *                                                                   HasOnlineSubsystem                                //0x0000(0x0229)
  PlayerState*                                                        GetUniqueNetIDFromPlayerState                     //0x0000(0x0229)
  PlayerController*                                                   GetUniqueNetID                                    //0x0000(0x0229)
  *                                                                   GetUniqueBuildID                                  //0x0000(0x0229)
  WorldContextObject*                                                 GetSessionState                                   //0x0000(0x0229)
  WorldContextObject*                                                 GetSessionSettings                                //0x0000(0x0229)
  *                                                                   GetSessionPropertyString                          //0x0000(0x0229)
  *                                                                   GetSessionPropertyKey                             //0x0000(0x0229)
  *                                                                   GetSessionPropertyInt                             //0x0000(0x0229)
  *                                                                   GetSessionPropertyFloat                           //0x0000(0x0229)
  *                                                                   GetSessionPropertyByte                            //0x0000(0x0229)
  *                                                                   GetSessionPropertyBool                            //0x0000(0x0229)
  *                                                                   GetSessionID_AsString                             //0x0000(0x0229)
  PlayerController*                                                   GetPlayerName                                     //0x0000(0x0229)
  WorldContextObject*                                                 GetNumberOfNetworkPlayers                         //0x0000(0x0229)
  PlayerController*                                                   GetNetPlayerIndex                                 //0x0000(0x0229)
  *                                                                   GetExtraSettings                                  //0x0000(0x0229)
  *                                                                   GetCurrentUniqueBuildID                           //0x0000(0x0229)
  WorldContextObject*                                                 GetCurrentSessionID_AsString                      //0x0000(0x0229)
  *                                                                   FindSessionPropertyIndexByName                    //0x0000(0x0229)
  *                                                                   FindSessionPropertyByName                         //0x0000(0x0229)
  *                                                                   EqualEqual_UNetIDUnetID                           //0x0000(0x0229)
  *                                                                   AddOrModifyExtraSettings                          //0x0000(0x0229)
};


class AdvancedVoiceLibrary : public BlueprintFunctionLibrary
{
  *                                                                   UnRegisterRemoteTalker                            //0x0000(0x0229)
  *                                                                   UnRegisterLocalTalker                             //0x0000(0x0229)
  *                                                                   UnRegisterAllLocalTalkers                         //0x0000(0x0229)
  *                                                                   UnMuteRemoteTalker                                //0x0000(0x0229)
  *                                                                   StopNetworkedVoice                                //0x0000(0x0229)
  *                                                                   StartNetworkedVoice                               //0x0000(0x0229)
  *                                                                   RemoveAllRemoteTalkers                            //0x0000(0x0229)
  *                                                                   RegisterRemoteTalker                              //0x0000(0x0229)
  *                                                                   RegisterLocalTalker                               //0x0000(0x0229)
  *                                                                   RegisterAllLocalTalkers                           //0x0000(0x0229)
  *                                                                   MuteRemoteTalker                                  //0x0000(0x0229)
  *                                                                   IsRemotePlayerTalking                             //0x0000(0x0229)
  *                                                                   IsPlayerMuted                                     //0x0000(0x0229)
  *                                                                   IsLocalPlayerTalking                              //0x0000(0x0229)
  *                                                                   IsHeadsetPresent                                  //0x0000(0x0229)
  *                                                                   GetNumLocalTalkers                                //0x0000(0x0229)
};


class OnlineBlueprintCallProxyBase : public Object
{
  *                                                                   Activate                                          //0x0000(0x0229)
};


class CancelFindSessionsCallbackProxy : public OnlineBlueprintCallProxyBase
{
  EmptyOnlineDelegate__DelegateSignature*                             OnSuccess                                         //0x0028(0x0010)
  EmptyOnlineDelegate__DelegateSignature*                             OnFailure                                         //0x0038(0x0010)
  WorldContextObject*                                                 CancelFindSessions                                //0x0000(0x0229)
};


class CreateSessionCallbackProxyAdvanced : public OnlineBlueprintCallProxyBase
{
  EmptyOnlineDelegate__DelegateSignature*                             OnSuccess                                         //0x0028(0x0010)
  EmptyOnlineDelegate__DelegateSignature*                             OnFailure                                         //0x0038(0x0010)
  WorldContextObject*                                                 CreateAdvancedSession                             //0x0000(0x0229)
};


class EndSessionCallbackProxy : public OnlineBlueprintCallProxyBase
{
  EmptyOnlineDelegate__DelegateSignature*                             OnSuccess                                         //0x0028(0x0010)
  EmptyOnlineDelegate__DelegateSignature*                             OnFailure                                         //0x0038(0x0010)
  WorldContextObject*                                                 EndSession                                        //0x0000(0x0229)
};


class FindFriendSessionCallbackProxy : public OnlineBlueprintCallProxyBase
{
  BlueprintFindFriendSessionDelegate__DelegateSignature*              OnSuccess                                         //0x0028(0x0010)
  BlueprintFindFriendSessionDelegate__DelegateSignature*              OnFailure                                         //0x0038(0x0010)
  WorldContextObject*                                                 FindFriendSession                                 //0x0000(0x0229)
};


class FindSessionsCallbackProxyAdvanced : public OnlineBlueprintCallProxyBase
{
  BlueprintFindSessionsResultDelegate__DelegateSignature*             OnSuccess                                         //0x0028(0x0010)
  BlueprintFindSessionsResultDelegate__DelegateSignature*             OnFailure                                         //0x0038(0x0010)
  WorldContextObject*                                                 FindSessionsAdvanced                              //0x0000(0x0229)
  *                                                                   FilterSessionResults                              //0x0000(0x0229)
};


class GetFriendsCallbackProxy : public OnlineBlueprintCallProxyBase
{
  BlueprintGetFriendsListDelegate__DelegateSignature*                 OnSuccess                                         //0x0028(0x0010)
  BlueprintGetFriendsListDelegate__DelegateSignature*                 OnFailure                                         //0x0038(0x0010)
  WorldContextObject*                                                 GetAndStoreFriendsList                            //0x0000(0x0229)
};


class GetRecentPlayersCallbackProxy : public OnlineBlueprintCallProxyBase
{
  BlueprintGetRecentPlayersDelegate__DelegateSignature*               OnSuccess                                         //0x0028(0x0010)
  BlueprintGetRecentPlayersDelegate__DelegateSignature*               OnFailure                                         //0x0038(0x0010)
  WorldContextObject*                                                 GetAndStoreRecentPlayersList                      //0x0000(0x0229)
};


class GetUserPrivilegeCallbackProxy : public OnlineBlueprintCallProxyBase
{
  BlueprintGetUserPrivilegeDelegate__DelegateSignature*               OnSuccess                                         //0x0028(0x0010)
  EmptyOnlineDelegate__DelegateSignature*                             OnFailure                                         //0x0038(0x0010)
  WorldContextObject*                                                 GetUserPrivilege                                  //0x0000(0x0229)
};


class LoginUserCallbackProxy : public OnlineBlueprintCallProxyBase
{
  EmptyOnlineDelegate__DelegateSignature*                             OnSuccess                                         //0x0028(0x0010)
  EmptyOnlineDelegate__DelegateSignature*                             OnFailure                                         //0x0038(0x0010)
  WorldContextObject*                                                 LoginUser                                         //0x0000(0x0229)
};


class LogoutUserCallbackProxy : public OnlineBlueprintCallProxyBase
{
  EmptyOnlineDelegate__DelegateSignature*                             OnSuccess                                         //0x0028(0x0010)
  EmptyOnlineDelegate__DelegateSignature*                             OnFailure                                         //0x0038(0x0010)
  WorldContextObject*                                                 LogoutUser                                        //0x0000(0x0229)
};


class SendFriendInviteCallbackProxy : public OnlineBlueprintCallProxyBase
{
  BlueprintSendFriendInviteDelegate__DelegateSignature*               OnSuccess                                         //0x0028(0x0010)
  BlueprintSendFriendInviteDelegate__DelegateSignature*               OnFailure                                         //0x0038(0x0010)
  WorldContextObject*                                                 SendFriendInvite                                  //0x0000(0x0229)
};


class UpdateSessionCallbackProxyAdvanced : public OnlineBlueprintCallProxyBase
{
  EmptyOnlineDelegate__DelegateSignature*                             OnSuccess                                         //0x0028(0x0010)
  EmptyOnlineDelegate__DelegateSignature*                             OnFailure                                         //0x0038(0x0010)
  WorldContextObject*                                                 UpdateSession                                     //0x0000(0x0229)
};


class NamedInterfaces : public Object
{
  NamedInterfaces*                                                    NamedInterfaces                                   //0x0028(0x0010)
  NamedInterfaceDefs*                                                 NamedInterfaceDefs                                //0x0038(0x0010)
};


class TurnBasedMatchInterface : public Interface
{
  *                                                                   OnMatchReceivedTurn                               //0x0000(0x0229)
  *                                                                   OnMatchEnded                                      //0x0000(0x0229)
};


class AchievementBlueprintLibrary : public BlueprintFunctionLibrary
{
  WorldContextObject*                                                 GetCachedAchievementProgress                      //0x0000(0x0229)
  WorldContextObject*                                                 GetCachedAchievementDescription                   //0x0000(0x0229)
};


class AchievementQueryCallbackProxy : public OnlineBlueprintCallProxyBase
{
  EmptyOnlineDelegate__DelegateSignature*                             OnSuccess                                         //0x0028(0x0010)
  EmptyOnlineDelegate__DelegateSignature*                             OnFailure                                         //0x0038(0x0010)
  WorldContextObject*                                                 CacheAchievements                                 //0x0000(0x0229)
  WorldContextObject*                                                 CacheAchievementDescriptions                      //0x0000(0x0229)
};


class AchievementWriteCallbackProxy : public OnlineBlueprintCallProxyBase
{
  AchievementWriteDelegate__DelegateSignature*                        OnSuccess                                         //0x0028(0x0010)
  AchievementWriteDelegate__DelegateSignature*                        OnFailure                                         //0x0038(0x0010)
  WorldContextObject*                                                 WriteAchievementProgress                          //0x0000(0x0229)
};


class ConnectionCallbackProxy : public OnlineBlueprintCallProxyBase
{
  OnlineConnectionResult__DelegateSignature*                          OnSuccess                                         //0x0028(0x0010)
  OnlineConnectionResult__DelegateSignature*                          OnFailure                                         //0x0038(0x0010)
  WorldContextObject*                                                 ConnectToService                                  //0x0000(0x0229)
};


class CreateSessionCallbackProxy : public OnlineBlueprintCallProxyBase
{
  EmptyOnlineDelegate__DelegateSignature*                             OnSuccess                                         //0x0028(0x0010)
  EmptyOnlineDelegate__DelegateSignature*                             OnFailure                                         //0x0038(0x0010)
  WorldContextObject*                                                 CreateSession                                     //0x0000(0x0229)
};


class DestroySessionCallbackProxy : public OnlineBlueprintCallProxyBase
{
  EmptyOnlineDelegate__DelegateSignature*                             OnSuccess                                         //0x0028(0x0010)
  EmptyOnlineDelegate__DelegateSignature*                             OnFailure                                         //0x0038(0x0010)
  WorldContextObject*                                                 DestroySession                                    //0x0000(0x0229)
};


class EndMatchCallbackProxy : public OnlineBlueprintCallProxyBase
{
  EmptyOnlineDelegate__DelegateSignature*                             OnSuccess                                         //0x0028(0x0010)
  EmptyOnlineDelegate__DelegateSignature*                             OnFailure                                         //0x0038(0x0010)
  WorldContextObject*                                                 EndMatch                                          //0x0000(0x0229)
};


class EndTurnCallbackProxy : public OnlineBlueprintCallProxyBase
{
  EmptyOnlineDelegate__DelegateSignature*                             OnSuccess                                         //0x0028(0x0010)
  EmptyOnlineDelegate__DelegateSignature*                             OnFailure                                         //0x0038(0x0010)
  WorldContextObject*                                                 EndTurn                                           //0x0000(0x0229)
};


class FindSessionsCallbackProxy : public OnlineBlueprintCallProxyBase
{
  BlueprintFindSessionsResultDelegate__DelegateSignature*             OnSuccess                                         //0x0028(0x0010)
  BlueprintFindSessionsResultDelegate__DelegateSignature*             OnFailure                                         //0x0038(0x0010)
  *                                                                   GetServerName                                     //0x0000(0x0229)
  *                                                                   GetPingInMs                                       //0x0000(0x0229)
  *                                                                   GetMaxPlayers                                     //0x0000(0x0229)
  *                                                                   GetCurrentPlayers                                 //0x0000(0x0229)
  WorldContextObject*                                                 FindSessions                                      //0x0000(0x0229)
};


class FindTurnBasedMatchCallbackProxy : public OnlineBlueprintCallProxyBase
{
  OnlineTurnBasedMatchResult__DelegateSignature*                      OnSuccess                                         //0x0028(0x0010)
  OnlineTurnBasedMatchResult__DelegateSignature*                      OnFailure                                         //0x0038(0x0010)
  WorldContextObject*                                                 FindTurnBasedMatch                                //0x0000(0x0229)
};


class InAppPurchaseCallbackProxy : public Object
{
  InAppPurchaseResult__DelegateSignature*                             OnSuccess                                         //0x0028(0x0010)
  InAppPurchaseResult__DelegateSignature*                             OnFailure                                         //0x0038(0x0010)
  PlayerController*                                                   CreateProxyObjectForInAppPurchase                 //0x0000(0x0229)
};


class InAppPurchaseQueryCallbackProxy : public Object
{
  InAppPurchaseQueryResult__DelegateSignature*                        OnSuccess                                         //0x0028(0x0010)
  InAppPurchaseQueryResult__DelegateSignature*                        OnFailure                                         //0x0038(0x0010)
  PlayerController*                                                   CreateProxyObjectForInAppPurchaseQuery            //0x0000(0x0229)
};


class InAppPurchaseRestoreCallbackProxy : public Object
{
  InAppPurchaseRestoreResult__DelegateSignature*                      OnSuccess                                         //0x0028(0x0010)
  InAppPurchaseRestoreResult__DelegateSignature*                      OnFailure                                         //0x0038(0x0010)
  PlayerController*                                                   CreateProxyObjectForInAppPurchaseRestore          //0x0000(0x0229)
};


class Player : public Object
{
  PlayerController*                                                   PlayerController                                  //0x0030(0x0008)
  *                                                                   CurrentNetSpeed                                   //0x0038(0x0004)
  *                                                                   ConfiguredInternetSpeed                           //0x003C(0x0004)
  *                                                                   ConfiguredLanSpeed                                //0x0040(0x0004)
};


class NetConnection : public Player
{
  Children*                                                           Children                                          //0x0048(0x0010)
  NetDriver*                                                          Driver                                            //0x0058(0x0008)
  Class*                                                              PackageMapClass                                   //0x0060(0x0008)
  PackageMap*                                                         PackageMap                                        //0x0068(0x0008)
  OpenChannels*                                                       OpenChannels                                      //0x0070(0x0010)
  SentTemporaries*                                                    SentTemporaries                                   //0x0080(0x0010)
  Actor*                                                              ViewTarget                                        //0x0090(0x0008)
  Actor*                                                              OwningActor                                       //0x0098(0x0008)
  *                                                                   MaxPacket                                         //0x00A0(0x0004)
  *                                                                   InternalAck                                       //0x00A4(0x0001)
  UniqueNetIdRepl*                                                    PlayerId                                          //0x0160(0x0028)
  *                                                                   LastReceiveTime                                   //0x01D0(0x0008)
  ChannelsToTick*                                                     ChannelsToTick                                    //0x14A8(0x0010)
};


class IpConnection : public NetConnection
{
  *                                                                   SocketErrorDisconnectDelay                        //0x1A10(0x0004)
};


class NetDriver : public Object
{
  *                                                                   NetConnectionClassName                            //0x0030(0x0010)
  *                                                                   ReplicationDriverClassName                        //0x0040(0x0010)
  *                                                                   MaxDownloadSize                                   //0x0050(0x0004)
  *                                                                   bClampListenServerTickRate                        //0x0054(0x0001)
  *                                                                   NetServerMaxTickRate                              //0x0058(0x0004)
  *                                                                   MaxNetTickRate                                    //0x005C(0x0004)
  *                                                                   MaxInternetClientRate                             //0x0060(0x0004)
  *                                                                   MaxClientRate                                     //0x0064(0x0004)
  *                                                                   ServerTravelPause                                 //0x0068(0x0004)
  *                                                                   SpawnPrioritySeconds                              //0x006C(0x0004)
  *                                                                   RelevantTimeout                                   //0x0070(0x0004)
  *                                                                   KeepAliveTime                                     //0x0074(0x0004)
  *                                                                   InitialConnectTimeout                             //0x0078(0x0004)
  *                                                                   ConnectionTimeout                                 //0x007C(0x0004)
  *                                                                   TimeoutMultiplierForUnoptimizedBuilds             //0x0080(0x0004)
  *                                                                   bNoTimeouts                                       //0x0084(0x0001)
  *                                                                   bNeverApplyNetworkEmulationSettings               //0x0085(0x0001)
  NetConnection*                                                      ServerConnection                                  //0x0088(0x0008)
  ClientConnections*                                                  ClientConnections                                 //0x0090(0x0010)
  *                                                                   RecentlyDisconnectedTrackingTime                  //0x0100(0x0004)
  World*                                                              World                                             //0x0140(0x0008)
  Package*                                                            WorldPackage                                      //0x0148(0x0008)
  Class*                                                              NetConnectionClass                                //0x0170(0x0008)
  Class*                                                              ReplicationDriverClass                            //0x0178(0x0008)
  Property*                                                           RoleProperty                                      //0x0180(0x0008)
  Property*                                                           RemoteRoleProperty                                //0x0188(0x0008)
  *                                                                   NetDriverName                                     //0x0190(0x0008)
  ChannelDefinitions*                                                 ChannelDefinitions                                //0x0198(0x0010)
  ChannelDefinitionMap_Key*                                           ChannelDefinitionMap                              //0x01A8(0x0050)
  ActorChannelPool*                                                   ActorChannelPool                                  //0x01F8(0x0010)
  *                                                                   Time                                              //0x0210(0x0004)
  ReplicationDriver*                                                  ReplicationDriver                                 //0x06E0(0x0008)
};


class IpNetDriver : public NetDriver
{
  *                                                                   LogPortUnreach                                    //0x0708(0x0001)
  *                                                                   AllowPlayerPortUnreach                            //0x0708(0x0001)
  *                                                                   MaxPortCountToTry                                 //0x070C(0x0004)
  *                                                                   ServerDesiredSocketReceiveBufferBytes             //0x071C(0x0004)
  *                                                                   ServerDesiredSocketSendBufferBytes                //0x0720(0x0004)
  *                                                                   ClientDesiredSocketReceiveBufferBytes             //0x0724(0x0004)
  *                                                                   ClientDesiredSocketSendBufferBytes                //0x0728(0x0004)
  *                                                                   MaxSecondsInReceive                               //0x0730(0x0008)
  *                                                                   NbPacketsBetweenReceiveTimeTest                   //0x0738(0x0004)
};


class JoinSessionCallbackProxy : public OnlineBlueprintCallProxyBase
{
  EmptyOnlineDelegate__DelegateSignature*                             OnSuccess                                         //0x0028(0x0010)
  EmptyOnlineDelegate__DelegateSignature*                             OnFailure                                         //0x0038(0x0010)
  WorldContextObject*                                                 JoinSession                                       //0x0000(0x0229)
};


class LeaderboardBlueprintLibrary : public BlueprintFunctionLibrary
{
  PlayerController*                                                   WriteLeaderboardInteger                           //0x0000(0x0229)
};


class LeaderboardFlushCallbackProxy : public Object
{
  OnLeaderboardFlushed__DelegateSignature*                            OnSuccess                                         //0x0028(0x0010)
  OnLeaderboardFlushed__DelegateSignature*                            OnFailure                                         //0x0038(0x0010)
  PlayerController*                                                   CreateProxyObjectForFlush                         //0x0000(0x0229)
};


class LeaderboardQueryCallbackProxy : public Object
{
  LeaderboardQueryResult__DelegateSignature*                          OnSuccess                                         //0x0028(0x0010)
  LeaderboardQueryResult__DelegateSignature*                          OnFailure                                         //0x0038(0x0010)
  PlayerController*                                                   CreateProxyObjectForIntQuery                      //0x0000(0x0229)
};


class BlueprintAsyncActionBase : public Object
{
  *                                                                   Activate                                          //0x0000(0x0229)
};


class LogoutCallbackProxy : public BlueprintAsyncActionBase
{
  OnlineLogoutResult__DelegateSignature*                              OnSuccess                                         //0x0030(0x0010)
  OnlineLogoutResult__DelegateSignature*                              OnFailure                                         //0x0040(0x0010)
  WorldContextObject*                                                 Logout                                            //0x0000(0x0229)
};


class Actor : public Object
{
  ActorTickFunction*                                                  PrimaryActorTick                                  //0x0028(0x0030)
  *                                                                   bHidden                                           //0x0058(0x0001)
  *                                                                   bNetTemporary                                     //0x0058(0x0001)
  *                                                                   bNetStartup                                       //0x0058(0x0001)
  *                                                                   bOnlyRelevantToOwner                              //0x0058(0x0001)
  *                                                                   bAlwaysRelevant                                   //0x0058(0x0001)
  *                                                                   bReplicateMovement                                //0x0058(0x0001)
  *                                                                   bTearOff                                          //0x0058(0x0001)
  *                                                                   bExchangedRoles                                   //0x0058(0x0001)
  *                                                                   bNetLoadOnClient                                  //0x0059(0x0001)
  *                                                                   bNetUseOwnerRelevancy                             //0x0059(0x0001)
  *                                                                   bRelevantForNetworkReplays                        //0x0059(0x0001)
  *                                                                   bRelevantForLevelBounds                           //0x0059(0x0001)
  *                                                                   bReplayRewindable                                 //0x0059(0x0001)
  *                                                                   bAllowTickBeforeBeginPlay                         //0x0059(0x0001)
  *                                                                   bAutoDestroyWhenFinished                          //0x0059(0x0001)
  *                                                                   bBlockInput                                       //0x0059(0x0001)
  *                                                                   bCanBeDamaged                                     //0x005A(0x0001)
  *                                                                   bCollideWhenPlacing                               //0x005A(0x0001)
  *                                                                   bFindCameraComponentWhenViewTarget                //0x005A(0x0001)
  *                                                                   bGenerateOverlapEventsDuringLevelStreaming        //0x005A(0x0001)
  *                                                                   bIgnoresOriginShifting                            //0x005A(0x0001)
  *                                                                   bEnableAutoLODGeneration                          //0x005A(0x0001)
  *                                                                   bIsEditorOnlyActor                                //0x005A(0x0001)
  *                                                                   bActorSeamlessTraveled                            //0x005A(0x0001)
  *                                                                   bReplicates                                       //0x005B(0x0001)
  *                                                                   bCanBeInCluster                                   //0x005B(0x0001)
  *                                                                   bAllowReceiveTickEventOnDedicatedServer           //0x005B(0x0001)
  *                                                                   bActorEnableCollision                             //0x005C(0x0001)
  *                                                                   bActorIsBeingDestroyed                            //0x005C(0x0001)
  UnderlyingType*                                                     UpdateOverlapsMethodDuringLevelStreaming          //0x005D(0x0001)
  UnderlyingType*                                                     DefaultUpdateOverlapsMethodDuringLevelStreaming   //0x005E(0x0001)
  ENetRole*                                                           RemoteRole                                        //0x005F(0x0001)
  RepMovement*                                                        ReplicatedMovement                                //0x0060(0x0034)
  *                                                                   InitialLifeSpan                                   //0x0094(0x0004)
  *                                                                   CustomTimeDilation                                //0x0098(0x0004)
  RepAttachment*                                                      AttachmentReplication                             //0x00A0(0x0040)
  Actor*                                                              Owner                                             //0x00E0(0x0008)
  *                                                                   NetDriverName                                     //0x00E8(0x0008)
  ENetRole*                                                           Role                                              //0x00F0(0x0001)
  ENetDormancy*                                                       NetDormancy                                       //0x00F1(0x0001)
  UnderlyingType*                                                     SpawnCollisionHandlingMethod                      //0x00F2(0x0001)
  EAutoReceiveInput*                                                  AutoReceiveInput                                  //0x00F3(0x0001)
  *                                                                   InputPriority                                     //0x00F4(0x0004)
  InputComponent*                                                     InputComponent                                    //0x00F8(0x0008)
  *                                                                   NetCullDistanceSquared                            //0x0100(0x0004)
  *                                                                   NetTag                                            //0x0104(0x0004)
  *                                                                   NetUpdateFrequency                                //0x0108(0x0004)
  *                                                                   MinNetUpdateFrequency                             //0x010C(0x0004)
  *                                                                   NetPriority                                       //0x0110(0x0004)
  Pawn*                                                               Instigator                                        //0x0118(0x0008)
  Children*                                                           Children                                          //0x0120(0x0010)
  SceneComponent*                                                     RootComponent                                     //0x0130(0x0008)
  ControllingMatineeActors*                                           ControllingMatineeActors                          //0x0138(0x0010)
  Layers*                                                             Layers                                            //0x0150(0x0010)
  ChildActorComponent*                                                ParentComponent                                   //0x0160(0x0008)
  Tags*                                                               Tags                                              //0x0168(0x0010)
  TakeAnyDamageSignature__DelegateSignature*                          OnTakeAnyDamage                                   //0x0178(0x0001)
  TakePointDamageSignature__DelegateSignature*                        OnTakePointDamage                                 //0x0179(0x0001)
  TakeRadialDamageSignature__DelegateSignature*                       OnTakeRadialDamage                                //0x017A(0x0001)
  ActorBeginOverlapSignature__DelegateSignature*                      OnActorBeginOverlap                               //0x017B(0x0001)
  ActorEndOverlapSignature__DelegateSignature*                        OnActorEndOverlap                                 //0x017C(0x0001)
  ActorBeginCursorOverSignature__DelegateSignature*                   OnBeginCursorOver                                 //0x017D(0x0001)
  ActorEndCursorOverSignature__DelegateSignature*                     OnEndCursorOver                                   //0x017E(0x0001)
  ActorOnClickedSignature__DelegateSignature*                         OnClicked                                         //0x017F(0x0001)
  ActorOnReleasedSignature__DelegateSignature*                        OnReleased                                        //0x0180(0x0001)
  ActorOnInputTouchBeginSignature__DelegateSignature*                 OnInputTouchBegin                                 //0x0181(0x0001)
  ActorOnInputTouchEndSignature__DelegateSignature*                   OnInputTouchEnd                                   //0x0182(0x0001)
  ActorBeginTouchOverSignature__DelegateSignature*                    OnInputTouchEnter                                 //0x0183(0x0001)
  ActorEndTouchOverSignature__DelegateSignature*                      OnInputTouchLeave                                 //0x0184(0x0001)
  ActorHitSignature__DelegateSignature*                               OnActorHit                                        //0x0185(0x0001)
  ActorDestroyedSignature__DelegateSignature*                         OnDestroyed                                       //0x0186(0x0001)
  ActorEndPlaySignature__DelegateSignature*                           OnEndPlay                                         //0x0187(0x0001)
  InstanceComponents*                                                 InstanceComponents                                //0x01E8(0x0010)
  BlueprintCreatedComponents*                                         BlueprintCreatedComponents                        //0x01F8(0x0010)
  *                                                                   WasRecentlyRendered                               //0x0000(0x0229)
  *                                                                   UserConstructionScript                            //0x0000(0x0229)
  *                                                                   TearOff                                           //0x0000(0x0229)
  InParentActor*                                                      SnapRootComponentTo                               //0x0000(0x0229)
  *                                                                   SetTickGroup                                      //0x0000(0x0229)
  *                                                                   SetTickableWhenPaused                             //0x0000(0x0229)
  *                                                                   SetReplicates                                     //0x0000(0x0229)
  *                                                                   SetReplicateMovement                              //0x0000(0x0229)
  NewOwner*                                                           SetOwner                                          //0x0000(0x0229)
  *                                                                   SetNetDormancy                                    //0x0000(0x0229)
  *                                                                   SetLifeSpan                                       //0x0000(0x0229)
  *                                                                   SetActorTickInterval                              //0x0000(0x0229)
  *                                                                   SetActorTickEnabled                               //0x0000(0x0229)
  *                                                                   SetActorScale3D                                   //0x0000(0x0229)
  *                                                                   SetActorRelativeScale3D                           //0x0000(0x0229)
  *                                                                   SetActorHiddenInGame                              //0x0000(0x0229)
  *                                                                   SetActorEnableCollision                           //0x0000(0x0229)
  PrerequisiteComponent*                                              RemoveTickPrerequisiteComponent                   //0x0000(0x0229)
  PrerequisiteActor*                                                  RemoveTickPrerequisiteActor                       //0x0000(0x0229)
  *                                                                   ReceiveTick                                       //0x0000(0x0229)
  DamageType*                                                         ReceiveRadialDamage                               //0x0000(0x0229)
  DamageType*                                                         ReceivePointDamage                                //0x0000(0x0229)
  MyComp*                                                             ReceiveHit                                        //0x0000(0x0229)
  *                                                                   ReceiveEndPlay                                    //0x0000(0x0229)
  *                                                                   ReceiveDestroyed                                  //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0000(0x0229)
  DamageType*                                                         ReceiveAnyDamage                                  //0x0000(0x0229)
  *                                                                   ReceiveActorOnReleased                            //0x0000(0x0229)
  *                                                                   ReceiveActorOnInputTouchLeave                     //0x0000(0x0229)
  *                                                                   ReceiveActorOnInputTouchEnter                     //0x0000(0x0229)
  *                                                                   ReceiveActorOnInputTouchEnd                       //0x0000(0x0229)
  *                                                                   ReceiveActorOnInputTouchBegin                     //0x0000(0x0229)
  *                                                                   ReceiveActorOnClicked                             //0x0000(0x0229)
  OtherActor*                                                         ReceiveActorEndOverlap                            //0x0000(0x0229)
  *                                                                   ReceiveActorEndCursorOver                         //0x0000(0x0229)
  OtherActor*                                                         ReceiveActorBeginOverlap                          //0x0000(0x0229)
  *                                                                   ReceiveActorBeginCursorOver                       //0x0000(0x0229)
  *                                                                   PrestreamTextures                                 //0x0000(0x0229)
  *                                                                   OnRep_ReplicateMovement                           //0x0000(0x0229)
  *                                                                   OnRep_ReplicatedMovement                          //0x0000(0x0229)
  *                                                                   OnRep_Owner                                       //0x0000(0x0229)
  *                                                                   OnRep_Instigator                                  //0x0000(0x0229)
  *                                                                   OnRep_AttachmentReplication                       //0x0000(0x0229)
  NoiseInstigator*                                                    MakeNoise                                         //0x0000(0x0229)
  Parent*                                                             MakeMIDForMaterial                                //0x0000(0x0229)
  *                                                                   K2_TeleportTo                                     //0x0000(0x0229)
  SweepHitResult*                                                     K2_SetActorTransform                              //0x0000(0x0229)
  *                                                                   K2_SetActorRotation                               //0x0000(0x0229)
  SweepHitResult*                                                     K2_SetActorRelativeTransform                      //0x0000(0x0229)
  SweepHitResult*                                                     K2_SetActorRelativeRotation                       //0x0000(0x0229)
  SweepHitResult*                                                     K2_SetActorRelativeLocation                       //0x0000(0x0229)
  SweepHitResult*                                                     K2_SetActorLocationAndRotation                    //0x0000(0x0229)
  SweepHitResult*                                                     K2_SetActorLocation                               //0x0000(0x0229)
  *                                                                   K2_OnReset                                        //0x0000(0x0229)
  PC*                                                                 K2_OnEndViewTarget                                //0x0000(0x0229)
  PC*                                                                 K2_OnBecomeViewTarget                             //0x0000(0x0229)
  ReturnValue*                                                        K2_GetRootComponent                               //0x0000(0x0229)
  ComponentClass*                                                     K2_GetComponentsByClass                           //0x0000(0x0229)
  *                                                                   K2_GetActorRotation                               //0x0000(0x0229)
  *                                                                   K2_GetActorLocation                               //0x0000(0x0229)
  *                                                                   K2_DetachFromActor                                //0x0000(0x0229)
  Component*                                                          K2_DestroyComponent                               //0x0000(0x0229)
  *                                                                   K2_DestroyActor                                   //0x0000(0x0229)
  Parent*                                                             K2_AttachToComponent                              //0x0000(0x0229)
  ParentActor*                                                        K2_AttachToActor                                  //0x0000(0x0229)
  InParentActor*                                                      K2_AttachRootComponentToActor                     //0x0000(0x0229)
  InParent*                                                           K2_AttachRootComponentTo                          //0x0000(0x0229)
  SweepHitResult*                                                     K2_AddActorWorldTransform                         //0x0000(0x0229)
  SweepHitResult*                                                     K2_AddActorWorldRotation                          //0x0000(0x0229)
  SweepHitResult*                                                     K2_AddActorWorldOffset                            //0x0000(0x0229)
  SweepHitResult*                                                     K2_AddActorLocalTransform                         //0x0000(0x0229)
  SweepHitResult*                                                     K2_AddActorLocalRotation                          //0x0000(0x0229)
  SweepHitResult*                                                     K2_AddActorLocalOffset                            //0x0000(0x0229)
  Other*                                                              IsOverlappingActor                                //0x0000(0x0229)
  *                                                                   IsChildActor                                      //0x0000(0x0229)
  *                                                                   IsActorTickEnabled                                //0x0000(0x0229)
  *                                                                   IsActorBeingDestroyed                             //0x0000(0x0229)
  *                                                                   HasAuthority                                      //0x0000(0x0229)
  OtherActor*                                                         GetVerticalDistanceTo                             //0x0000(0x0229)
  *                                                                   GetVelocity                                       //0x0000(0x0229)
  *                                                                   GetTransform                                      //0x0000(0x0229)
  *                                                                   GetTickableWhenPaused                             //0x0000(0x0229)
  OtherActor*                                                         GetSquaredDistanceTo                              //0x0000(0x0229)
  *                                                                   GetRemoteRole                                     //0x0000(0x0229)
  ReturnValue*                                                        GetParentComponent                                //0x0000(0x0229)
  ReturnValue*                                                        GetParentActor                                    //0x0000(0x0229)
  ReturnValue*                                                        GetOwner                                          //0x0000(0x0229)
  OverlappingComponents*                                              GetOverlappingComponents                          //0x0000(0x0229)
  OverlappingActors*                                                  GetOverlappingActors                              //0x0000(0x0229)
  *                                                                   GetLocalRole                                      //0x0000(0x0229)
  *                                                                   GetLifeSpan                                       //0x0000(0x0229)
  ReturnValue*                                                        GetInstigatorController                           //0x0000(0x0229)
  ReturnValue*                                                        GetInstigator                                     //0x0000(0x0229)
  *                                                                   GetInputVectorAxisValue                           //0x0000(0x0229)
  *                                                                   GetInputAxisValue                                 //0x0000(0x0229)
  *                                                                   GetInputAxisKeyValue                              //0x0000(0x0229)
  OtherActor*                                                         GetHorizontalDotProductTo                         //0x0000(0x0229)
  OtherActor*                                                         GetHorizontalDistanceTo                           //0x0000(0x0229)
  *                                                                   GetGameTimeSinceCreation                          //0x0000(0x0229)
  OtherActor*                                                         GetDotProductTo                                   //0x0000(0x0229)
  OtherActor*                                                         GetDistanceTo                                     //0x0000(0x0229)
  ComponentClass*                                                     GetComponentsByTag                                //0x0000(0x0229)
  Interface*                                                          GetComponentsByInterface                          //0x0000(0x0229)
  ComponentClass*                                                     GetComponentByClass                               //0x0000(0x0229)
  *                                                                   GetAttachParentSocketName                         //0x0000(0x0229)
  ReturnValue*                                                        GetAttachParentActor                              //0x0000(0x0229)
  OutActors*                                                          GetAttachedActors                                 //0x0000(0x0229)
  ChildActors*                                                        GetAllChildActors                                 //0x0000(0x0229)
  *                                                                   GetActorUpVector                                  //0x0000(0x0229)
  *                                                                   GetActorTimeDilation                              //0x0000(0x0229)
  *                                                                   GetActorTickInterval                              //0x0000(0x0229)
  *                                                                   GetActorScale3D                                   //0x0000(0x0229)
  *                                                                   GetActorRightVector                               //0x0000(0x0229)
  *                                                                   GetActorRelativeScale3D                           //0x0000(0x0229)
  *                                                                   GetActorForwardVector                             //0x0000(0x0229)
  *                                                                   GetActorEyesViewPoint                             //0x0000(0x0229)
  *                                                                   GetActorEnableCollision                           //0x0000(0x0229)
  *                                                                   GetActorBounds                                    //0x0000(0x0229)
  *                                                                   ForceNetUpdate                                    //0x0000(0x0229)
  *                                                                   FlushNetDormancy                                  //0x0000(0x0229)
  PlayerController*                                                   EnableInput                                       //0x0000(0x0229)
  PlayerController*                                                   DisableInput                                      //0x0000(0x0229)
  *                                                                   DetachRootComponentFromParent                     //0x0000(0x0229)
  PrerequisiteComponent*                                              AddTickPrerequisiteComponent                      //0x0000(0x0229)
  PrerequisiteActor*                                                  AddTickPrerequisiteActor                          //0x0000(0x0229)
  ComponentTemplateContext*                                           AddComponent                                      //0x0000(0x0229)
  *                                                                   ActorHasTag                                       //0x0000(0x0229)
};


class OnlineBeacon : public Actor
{
  *                                                                   BeaconConnectionInitialTimeout                    //0x0220(0x0004)
  *                                                                   BeaconConnectionTimeout                           //0x0224(0x0004)
  NetDriver*                                                          NetDriver                                         //0x0228(0x0008)
};


class OnlineBeaconClient : public OnlineBeacon
{
  OnlineBeaconHostObject*                                             BeaconOwner                                       //0x0248(0x0008)
  NetConnection*                                                      BeaconConnection                                  //0x0250(0x0008)
  UnderlyingType*                                                     ConnectionState                                   //0x0258(0x0001)
  *                                                                   ClientOnConnected                                 //0x0000(0x0229)
};


class OnlineBeaconHost : public OnlineBeacon
{
  *                                                                   ListenPort                                        //0x0248(0x0004)
  ClientActors*                                                       ClientActors                                      //0x0250(0x0010)
};


class OnlineBeaconHostObject : public Actor
{
  *                                                                   BeaconTypeName                                    //0x0218(0x0010)
  Class*                                                              ClientBeaconActorClass                            //0x0228(0x0008)
  ClientActors*                                                       ClientActors                                      //0x0230(0x0010)
};


class OnlineEngineInterface : public Object
{
};


class OnlineEngineInterfaceImpl : public OnlineEngineInterface
{
  *                                                                   VoiceSubsystemNameOverride                        //0x0028(0x0008)
};


class DeveloperSettings : public Object
{
};


class OnlinePIESettings : public DeveloperSettings
{
  *                                                                   bOnlinePIEEnabled                                 //0x0038(0x0001)
  Logins*                                                             Logins                                            //0x0040(0x0010)
};


class OnlineSession : public Object
{
};


class OnlineSessionClient : public OnlineSession
{
  *                                                                   bIsFromInvite                                     //0x0188(0x0001)
  *                                                                   bHandlingDisconnect                               //0x0189(0x0001)
};


class PartyBeaconClient : public OnlineBeaconClient
{
  *                                                                   DestSessionId                                     //0x02D8(0x0010)
  PartyReservation*                                                   PendingReservation                                //0x02E8(0x0050)
  UnderlyingType*                                                     RequestType                                       //0x0338(0x0001)
  *                                                                   bPendingReservationSent                           //0x0339(0x0001)
  *                                                                   bCancelReservation                                //0x033A(0x0001)
  *                                                                   ServerUpdateReservationRequest                    //0x0000(0x0229)
  *                                                                   ServerReservationRequest                          //0x0000(0x0229)
  *                                                                   ServerRemoveMemberFromReservationRequest          //0x0000(0x0229)
  *                                                                   ServerCancelReservationRequest                    //0x0000(0x0229)
  *                                                                   ClientSendReservationUpdates                      //0x0000(0x0229)
  *                                                                   ClientSendReservationFull                         //0x0000(0x0229)
  *                                                                   ClientReservationResponse                         //0x0000(0x0229)
  *                                                                   ClientCancelReservationResponse                   //0x0000(0x0229)
};


class PartyBeaconHost : public OnlineBeaconHostObject
{
  PartyBeaconState*                                                   State                                             //0x0240(0x0008)
  *                                                                   bLogoutOnSessionTimeout                           //0x02A8(0x0001)
  *                                                                   SessionTimeoutSecs                                //0x02AC(0x0004)
  *                                                                   TravelSessionTimeoutSecs                          //0x02B0(0x0004)
};


class PartyBeaconState : public Object
{
  *                                                                   SessionName                                       //0x0028(0x0008)
  *                                                                   NumConsumedReservations                           //0x0030(0x0004)
  *                                                                   MaxReservations                                   //0x0034(0x0004)
  *                                                                   NumTeams                                          //0x0038(0x0004)
  *                                                                   NumPlayersPerTeam                                 //0x003C(0x0004)
  *                                                                   TeamAssignmentMethod                              //0x0040(0x0008)
  *                                                                   ReservedHostTeamNum                               //0x0048(0x0004)
  *                                                                   ForceTeamNum                                      //0x004C(0x0004)
  *                                                                   bRestrictCrossConsole                             //0x0050(0x0001)
  *                                                                   bEnableRemovalRequests                            //0x0051(0x0001)
  Reservations*                                                       Reservations                                      //0x0058(0x0010)
};


class QuitMatchCallbackProxy : public OnlineBlueprintCallProxyBase
{
  EmptyOnlineDelegate__DelegateSignature*                             OnSuccess                                         //0x0028(0x0010)
  EmptyOnlineDelegate__DelegateSignature*                             OnFailure                                         //0x0038(0x0010)
  WorldContextObject*                                                 QuitMatch                                         //0x0000(0x0229)
};


class ShowLoginUICallbackProxy : public BlueprintAsyncActionBase
{
  OnlineShowLoginUIResult__DelegateSignature*                         OnSuccess                                         //0x0030(0x0010)
  OnlineShowLoginUIResult__DelegateSignature*                         OnFailure                                         //0x0040(0x0010)
  WorldContextObject*                                                 ShowExternalLoginUI                               //0x0000(0x0229)
};


class SpectatorBeaconClient : public OnlineBeaconClient
{
  *                                                                   DestSessionId                                     //0x02D8(0x0010)
  SpectatorReservation*                                               PendingReservation                                //0x02E8(0x0078)
  UnderlyingType*                                                     RequestType                                       //0x0360(0x0001)
  *                                                                   bPendingReservationSent                           //0x0361(0x0001)
  *                                                                   bCancelReservation                                //0x0362(0x0001)
  *                                                                   ServerReservationRequest                          //0x0000(0x0229)
  *                                                                   ServerCancelReservationRequest                    //0x0000(0x0229)
  *                                                                   ClientSendReservationUpdates                      //0x0000(0x0229)
  *                                                                   ClientSendReservationFull                         //0x0000(0x0229)
  *                                                                   ClientReservationResponse                         //0x0000(0x0229)
  *                                                                   ClientCancelReservationResponse                   //0x0000(0x0229)
};


class SpectatorBeaconHost : public OnlineBeaconHostObject
{
  SpectatorBeaconState*                                               State                                             //0x0240(0x0008)
  *                                                                   bLogoutOnSessionTimeout                           //0x02A8(0x0001)
  *                                                                   SessionTimeoutSecs                                //0x02AC(0x0004)
  *                                                                   TravelSessionTimeoutSecs                          //0x02B0(0x0004)
};


class SpectatorBeaconState : public Object
{
  *                                                                   SessionName                                       //0x0028(0x0008)
  *                                                                   NumConsumedReservations                           //0x0030(0x0004)
  *                                                                   MaxReservations                                   //0x0034(0x0004)
  *                                                                   bRestrictCrossConsole                             //0x0038(0x0001)
  Reservations*                                                       Reservations                                      //0x0040(0x0010)
};


class TestBeaconClient : public OnlineBeaconClient
{
  *                                                                   ServerPong                                        //0x0000(0x0229)
  *                                                                   ClientPing                                        //0x0000(0x0229)
};


class TestBeaconHost : public OnlineBeaconHostObject
{
};


class TurnBasedBlueprintLibrary : public BlueprintFunctionLibrary
{
  WorldContextObject*                                                 RegisterTurnBasedMatchInterfaceObject             //0x0000(0x0229)
  WorldContextObject*                                                 GetPlayerDisplayName                              //0x0000(0x0229)
  WorldContextObject*                                                 GetMyPlayerIndex                                  //0x0000(0x0229)
  WorldContextObject*                                                 GetIsMyTurn                                       //0x0000(0x0229)
};


class SceneComponent : public ActorComponent
{
  PhysicsVolume*                                                      PhysicsVolume                                     //0x00B8(0x0008)
  SceneComponent*                                                     AttachParent                                      //0x00C0(0x0008)
  *                                                                   AttachSocketName                                  //0x00C8(0x0008)
  AttachChildren*                                                     AttachChildren                                    //0x00D0(0x0010)
  ClientAttachedChildren*                                             ClientAttachedChildren                            //0x00E0(0x0010)
  Vector*                                                             RelativeLocation                                  //0x011C(0x000C)
  Rotator*                                                            RelativeRotation                                  //0x0128(0x000C)
  Vector*                                                             RelativeScale3D                                   //0x0134(0x000C)
  Vector*                                                             ComponentVelocity                                 //0x0140(0x000C)
  *                                                                   bComponentToWorldUpdated                          //0x014C(0x0001)
  *                                                                   bAbsoluteLocation                                 //0x014C(0x0001)
  *                                                                   bAbsoluteRotation                                 //0x014C(0x0001)
  *                                                                   bAbsoluteScale                                    //0x014C(0x0001)
  *                                                                   bVisible                                          //0x014C(0x0001)
  *                                                                   bHiddenInGame                                     //0x014C(0x0001)
  *                                                                   bShouldBeAttached                                 //0x014C(0x0001)
  *                                                                   bShouldSnapLocationWhenAttached                   //0x014D(0x0001)
  *                                                                   bShouldSnapRotationWhenAttached                   //0x014D(0x0001)
  *                                                                   bShouldUpdatePhysicsVolume                        //0x014D(0x0001)
  *                                                                   bBoundsChangeTriggersStreamingDataRebuild         //0x014D(0x0001)
  *                                                                   bUseAttachParentBound                             //0x014D(0x0001)
  EComponentMobility*                                                 Mobility                                          //0x014F(0x0001)
  EDetailMode*                                                        DetailMode                                        //0x0150(0x0001)
  PhysicsVolumeChanged__DelegateSignature*                            PhysicsVolumeChangedDelegate                      //0x0151(0x0001)
  *                                                                   ToggleVisibility                                  //0x0000(0x0229)
  InParent*                                                           SnapTo                                            //0x0000(0x0229)
  *                                                                   SetWorldScale3D                                   //0x0000(0x0229)
  *                                                                   SetVisibility                                     //0x0000(0x0229)
  *                                                                   SetShouldUpdatePhysicsVolume                      //0x0000(0x0229)
  *                                                                   SetRelativeScale3D                                //0x0000(0x0229)
  *                                                                   SetMobility                                       //0x0000(0x0229)
  *                                                                   SetHiddenInGame                                   //0x0000(0x0229)
  *                                                                   SetAbsolute                                       //0x0000(0x0229)
  *                                                                   ResetRelativeTransform                            //0x0000(0x0229)
  *                                                                   OnRep_Visibility                                  //0x0000(0x0229)
  *                                                                   OnRep_Transform                                   //0x0000(0x0229)
  *                                                                   OnRep_AttachSocketName                            //0x0000(0x0229)
  *                                                                   OnRep_AttachParent                                //0x0000(0x0229)
  *                                                                   OnRep_AttachChildren                              //0x0000(0x0229)
  SweepHitResult*                                                     K2_SetWorldTransform                              //0x0000(0x0229)
  SweepHitResult*                                                     K2_SetWorldRotation                               //0x0000(0x0229)
  SweepHitResult*                                                     K2_SetWorldLocationAndRotation                    //0x0000(0x0229)
  SweepHitResult*                                                     K2_SetWorldLocation                               //0x0000(0x0229)
  SweepHitResult*                                                     K2_SetRelativeTransform                           //0x0000(0x0229)
  SweepHitResult*                                                     K2_SetRelativeRotation                            //0x0000(0x0229)
  SweepHitResult*                                                     K2_SetRelativeLocationAndRotation                 //0x0000(0x0229)
  SweepHitResult*                                                     K2_SetRelativeLocation                            //0x0000(0x0229)
  *                                                                   K2_GetComponentToWorld                            //0x0000(0x0229)
  *                                                                   K2_GetComponentScale                              //0x0000(0x0229)
  *                                                                   K2_GetComponentRotation                           //0x0000(0x0229)
  *                                                                   K2_GetComponentLocation                           //0x0000(0x0229)
  *                                                                   K2_DetachFromComponent                            //0x0000(0x0229)
  Parent*                                                             K2_AttachToComponent                              //0x0000(0x0229)
  InParent*                                                           K2_AttachTo                                       //0x0000(0x0229)
  SweepHitResult*                                                     K2_AddWorldTransform                              //0x0000(0x0229)
  SweepHitResult*                                                     K2_AddWorldRotation                               //0x0000(0x0229)
  SweepHitResult*                                                     K2_AddWorldOffset                                 //0x0000(0x0229)
  SweepHitResult*                                                     K2_AddRelativeRotation                            //0x0000(0x0229)
  SweepHitResult*                                                     K2_AddRelativeLocation                            //0x0000(0x0229)
  SweepHitResult*                                                     K2_AddLocalTransform                              //0x0000(0x0229)
  SweepHitResult*                                                     K2_AddLocalRotation                               //0x0000(0x0229)
  SweepHitResult*                                                     K2_AddLocalOffset                                 //0x0000(0x0229)
  *                                                                   IsVisible                                         //0x0000(0x0229)
  *                                                                   IsSimulatingPhysics                               //0x0000(0x0229)
  *                                                                   IsAnySimulatingPhysics                            //0x0000(0x0229)
  *                                                                   GetUpVector                                       //0x0000(0x0229)
  *                                                                   GetSocketTransform                                //0x0000(0x0229)
  *                                                                   GetSocketRotation                                 //0x0000(0x0229)
  *                                                                   GetSocketQuaternion                               //0x0000(0x0229)
  *                                                                   GetSocketLocation                                 //0x0000(0x0229)
  *                                                                   GetShouldUpdatePhysicsVolume                      //0x0000(0x0229)
  *                                                                   GetRightVector                                    //0x0000(0x0229)
  *                                                                   GetRelativeTransform                              //0x0000(0x0229)
  ReturnValue*                                                        GetPhysicsVolume                                  //0x0000(0x0229)
  Parents*                                                            GetParentComponents                               //0x0000(0x0229)
  *                                                                   GetNumChildrenComponents                          //0x0000(0x0229)
  *                                                                   GetForwardVector                                  //0x0000(0x0229)
  *                                                                   GetComponentVelocity                              //0x0000(0x0229)
  Children*                                                           GetChildrenComponents                             //0x0000(0x0229)
  ReturnValue*                                                        GetChildComponent                                 //0x0000(0x0229)
  *                                                                   GetAttachSocketName                               //0x0000(0x0229)
  ReturnValue*                                                        GetAttachParent                                   //0x0000(0x0229)
  *                                                                   GetAllSocketNames                                 //0x0000(0x0229)
  *                                                                   DoesSocketExist                                   //0x0000(0x0229)
  *                                                                   DetachFromParent                                  //0x0000(0x0229)
};


class SynthComponent : public SceneComponent
{
  *                                                                   bAutoDestroy                                      //0x01F0(0x0001)
  *                                                                   bStopWhenOwnerDestroyed                           //0x01F0(0x0001)
  *                                                                   bAllowSpatialization                              //0x01F0(0x0001)
  *                                                                   bOverrideAttenuation                              //0x01F0(0x0001)
  *                                                                   bOutputToBusOnly                                  //0x01F4(0x0001)
  SoundAttenuation*                                                   AttenuationSettings                               //0x01F8(0x0008)
  SoundAttenuationSettings*                                           AttenuationOverrides                              //0x0200(0x02F0)
  SoundConcurrency*                                                   ConcurrencySettings                               //0x04F0(0x0008)
  ConcurrencySet*                                                     ConcurrencySet                                    //0x04F8(0x0050)
  SoundClass*                                                         SoundClass                                        //0x0548(0x0008)
  SoundEffectSourcePresetChain*                                       SourceEffectChain                                 //0x0550(0x0008)
  SoundSubmix*                                                        SoundSubmix                                       //0x0558(0x0008)
  SoundSubmixSends*                                                   SoundSubmixSends                                  //0x0560(0x0010)
  BusSends*                                                           BusSends                                          //0x0570(0x0010)
  SoundModulation*                                                    Modulation                                        //0x0580(0x0010)
  PreEffectBusSends*                                                  PreEffectBusSends                                 //0x0590(0x0010)
  *                                                                   bIsUISound                                        //0x05A0(0x0001)
  *                                                                   bIsPreviewSound                                   //0x05A0(0x0001)
  *                                                                   EnvelopeFollowerAttackTime                        //0x05A4(0x0004)
  *                                                                   EnvelopeFollowerReleaseTime                       //0x05A8(0x0004)
  OnSynthEnvelopeValue__DelegateSignature*                            OnAudioEnvelopeValue                              //0x05B0(0x0010)
  SynthSound*                                                         Synth                                             //0x05E0(0x0008)
  AudioComponent*                                                     AudioComponent                                    //0x05E8(0x0008)
  *                                                                   Stop                                              //0x0000(0x0229)
  *                                                                   Start                                             //0x0000(0x0229)
  *                                                                   SetVolumeMultiplier                               //0x0000(0x0229)
  Submix*                                                             SetSubmixSend                                     //0x0000(0x0229)
  *                                                                   IsPlaying                                         //0x0000(0x0229)
};


class VoipListenerSynthComponent : public SynthComponent
{
  *                                                                   IsIdling                                          //0x0000(0x0229)
};


class AdvancedSteamFriendsLibrary : public BlueprintFunctionLibrary
{
  *                                                                   RequestSteamFriendInfo                            //0x0000(0x0229)
  *                                                                   OpenSteamUserOverlay                              //0x0000(0x0229)
  *                                                                   GetSteamPersonaName                               //0x0000(0x0229)
  *                                                                   GetSteamGroups                                    //0x0000(0x0229)
  *                                                                   GetSteamFriendGamePlayed                          //0x0000(0x0229)
  ReturnValue*                                                        GetSteamFriendAvatar                              //0x0000(0x0229)
  *                                                                   GetLocalSteamIDFromSteam                          //0x0000(0x0229)
  *                                                                   GetFriendSteamLevel                               //0x0000(0x0229)
  *                                                                   CreateSteamIDFromString                           //0x0000(0x0229)
};


class AdvancedSteamWorkshopLibrary : public BlueprintFunctionLibrary
{
  *                                                                   GetSubscribedWorkshopItems                        //0x0000(0x0229)
  *                                                                   GetNumSubscribedWorkshopItems                     //0x0000(0x0229)
};


class SteamRequestGroupOfficersCallbackProxy : public OnlineBlueprintCallProxyBase
{
  BlueprintGroupOfficerDetailsDelegate__DelegateSignature*            OnSuccess                                         //0x0028(0x0010)
  BlueprintGroupOfficerDetailsDelegate__DelegateSignature*            OnFailure                                         //0x0038(0x0010)
  WorldContextObject*                                                 GetSteamGroupOfficerList                          //0x0000(0x0229)
};


class SteamWSRequestUGCDetailsCallbackProxy : public OnlineBlueprintCallProxyBase
{
  BlueprintWorkshopDetailsDelegate__DelegateSignature*                OnSuccess                                         //0x0028(0x0010)
  BlueprintWorkshopDetailsDelegate__DelegateSignature*                OnFailure                                         //0x0038(0x0010)
  WorldContextObject*                                                 GetWorkshopItemDetails                            //0x0000(0x0229)
};


class HandlerComponentFactory : public Object
{
};


class SteamAuthComponentModuleInterface : public HandlerComponentFactory
{
};


class SteamNetConnection : public IpConnection
{
  *                                                                   bIsPassthrough                                    //0x1A20(0x0001)
};


class SteamNetDriver : public IpNetDriver
{
};


class VaRestJsonObject : public Object
{
  *                                                                   WriteToFilePath                                   //0x0000(0x0229)
  *                                                                   SetStringField                                    //0x0000(0x0229)
  *                                                                   SetStringArrayField                               //0x0000(0x0229)
  JsonObject*                                                         SetObjectField                                    //0x0000(0x0229)
  ObjectArray*                                                        SetObjectArrayField                               //0x0000(0x0229)
  *                                                                   SetNumberField                                    //0x0000(0x0229)
  *                                                                   SetNumberArrayField                               //0x0000(0x0229)
  *                                                                   SetMapFields_uint8                                //0x0000(0x0229)
  *                                                                   SetMapFields_string                               //0x0000(0x0229)
  *                                                                   SetMapFields_int64                                //0x0000(0x0229)
  *                                                                   SetMapFields_int32                                //0x0000(0x0229)
  *                                                                   SetMapFields_bool                                 //0x0000(0x0229)
  *                                                                   SetIntegerField                                   //0x0000(0x0229)
  JsonValue*                                                          SetField                                          //0x0000(0x0229)
  *                                                                   SetBoolField                                      //0x0000(0x0229)
  *                                                                   SetBoolArrayField                                 //0x0000(0x0229)
  inArray*                                                            SetArrayField                                     //0x0000(0x0229)
  *                                                                   Reset                                             //0x0000(0x0229)
  *                                                                   RemoveField                                       //0x0000(0x0229)
  InJsonObject*                                                       MergeJsonObject                                   //0x0000(0x0229)
  *                                                                   HasField                                          //0x0000(0x0229)
  *                                                                   GetStringField                                    //0x0000(0x0229)
  *                                                                   GetStringArrayField                               //0x0000(0x0229)
  ReturnValue*                                                        GetObjectField                                    //0x0000(0x0229)
  ReturnValue*                                                        GetObjectArrayField                               //0x0000(0x0229)
  *                                                                   GetNumberField                                    //0x0000(0x0229)
  *                                                                   GetNumberArrayField                               //0x0000(0x0229)
  *                                                                   GetIntegerField                                   //0x0000(0x0229)
  *                                                                   GetFieldNames                                     //0x0000(0x0229)
  ReturnValue*                                                        GetField                                          //0x0000(0x0229)
  *                                                                   GetBoolField                                      //0x0000(0x0229)
  *                                                                   GetBoolArrayField                                 //0x0000(0x0229)
  ReturnValue*                                                        GetArrayField                                     //0x0000(0x0229)
  *                                                                   EncodeJsonToSingleString                          //0x0000(0x0229)
  *                                                                   EncodeJson                                        //0x0000(0x0229)
  *                                                                   DecodeJson                                        //0x0000(0x0229)
};


class VaRestJsonValue : public Object
{
  *                                                                   IsNull                                            //0x0000(0x0229)
  *                                                                   GetTypeString                                     //0x0000(0x0229)
  *                                                                   GetType                                           //0x0000(0x0229)
  *                                                                   AsString                                          //0x0000(0x0229)
  ReturnValue*                                                        AsObject                                          //0x0000(0x0229)
  *                                                                   AsNumber                                          //0x0000(0x0229)
  *                                                                   AsBool                                            //0x0000(0x0229)
  ReturnValue*                                                        AsArray                                           //0x0000(0x0229)
};


class VaRestLibrary : public BlueprintFunctionLibrary
{
  *                                                                   StringToSha1                                      //0x0000(0x0229)
  *                                                                   StringToMd5                                       //0x0000(0x0229)
  *                                                                   PercentEncode                                     //0x0000(0x0229)
  *                                                                   HTTPStatusIntToEnum                               //0x0000(0x0229)
  ReturnValue*                                                        GetVaRestSettings                                 //0x0000(0x0229)
  *                                                                   Base64EncodeData                                  //0x0000(0x0229)
  *                                                                   Base64Encode                                      //0x0000(0x0229)
  *                                                                   Base64DecodeData                                  //0x0000(0x0229)
  *                                                                   Base64Decode                                      //0x0000(0x0229)
};


class VaRestRequestJSON : public Object
{
  OnRequestComplete__DelegateSignature*                               OnRequestComplete                                 //0x0028(0x0010)
  OnRequestFail__DelegateSignature*                                   OnRequestFail                                     //0x0038(0x0010)
  *                                                                   ResponseSize                                      //0x0088(0x0004)
  *                                                                   ResponseContent                                   //0x0090(0x0010)
  *                                                                   bIsValidJsonResponse                              //0x00A0(0x0001)
  VaRestJsonObject*                                                   RequestJsonObj                                    //0x00B0(0x0008)
  VaRestJsonObject*                                                   ResponseJsonObj                                   //0x00E8(0x0008)
  *                                                                   SetVerb                                           //0x0000(0x0229)
  *                                                                   SetURL                                            //0x0000(0x0229)
  *                                                                   SetStringRequestContent                           //0x0000(0x0229)
  JsonObject*                                                         SetResponseObject                                 //0x0000(0x0229)
  JsonObject*                                                         SetRequestObject                                  //0x0000(0x0229)
  *                                                                   SetHeader                                         //0x0000(0x0229)
  *                                                                   SetCustomVerb                                     //0x0000(0x0229)
  *                                                                   SetContentType                                    //0x0000(0x0229)
  *                                                                   SetBinaryRequestContent                           //0x0000(0x0229)
  *                                                                   SetBinaryContentType                              //0x0000(0x0229)
  *                                                                   ResetResponseData                                 //0x0000(0x0229)
  *                                                                   ResetRequestData                                  //0x0000(0x0229)
  *                                                                   ResetData                                         //0x0000(0x0229)
  *                                                                   RemoveTag                                         //0x0000(0x0229)
  *                                                                   ProcessURL                                        //0x0000(0x0229)
  *                                                                   HasTag                                            //0x0000(0x0229)
  *                                                                   GetURL                                            //0x0000(0x0229)
  *                                                                   GetStatus                                         //0x0000(0x0229)
  ReturnValue*                                                        GetResponseObject                                 //0x0000(0x0229)
  *                                                                   GetResponseHeader                                 //0x0000(0x0229)
  *                                                                   GetResponseContentAsString                        //0x0000(0x0229)
  *                                                                   GetResponseCode                                   //0x0000(0x0229)
  ReturnValue*                                                        GetRequestObject                                  //0x0000(0x0229)
  *                                                                   GetAllResponseHeaders                             //0x0000(0x0229)
  *                                                                   ExecuteProcessRequest                             //0x0000(0x0229)
  *                                                                   Cancel                                            //0x0000(0x0229)
  Result*                                                             ApplyURL                                          //0x0000(0x0229)
  *                                                                   AddTag                                            //0x0000(0x0229)
};


class VaRestSettings : public Object
{
  *                                                                   bExtendedLog                                      //0x0028(0x0001)
  *                                                                   bUseChunkedParser                                 //0x0029(0x0001)
};


class DynamicSubsystem : public Subsystem
{
};


class EngineSubsystem : public DynamicSubsystem
{
};


class VaRestSubsystem : public EngineSubsystem
{
  RequestMap_Key*                                                     RequestMap                                        //0x0030(0x0050)
  ReturnValue*                                                        StaticConstructVaRestJsonObject                   //0x0000(0x0229)
  ReturnValue*                                                        LoadJsonFromFile                                  //0x0000(0x0229)
  ReturnValue*                                                        ConstructVaRestRequestExt                         //0x0000(0x0229)
  ReturnValue*                                                        ConstructVaRestRequest                            //0x0000(0x0229)
  ReturnValue*                                                        ConstructVaRestJsonObject                         //0x0000(0x0229)
  ReturnValue*                                                        ConstructJsonValueString                          //0x0000(0x0229)
  JsonObject*                                                         ConstructJsonValueObject                          //0x0000(0x0229)
  ReturnValue*                                                        ConstructJsonValueNumber                          //0x0000(0x0229)
  ReturnValue*                                                        ConstructJsonValueBool                            //0x0000(0x0229)
  inArray*                                                            ConstructJsonValueArray                           //0x0000(0x0229)
  VaRestJson*                                                         CallURL                                           //0x0000(0x0229)
};


class EditableMeshAdapter : public Object
{
};


class EditableGeometryCollectionAdapter : public EditableMeshAdapter
{
  GeometryCollection*                                                 GeometryCollection                                //0x0028(0x0008)
  GeometryCollection*                                                 OriginalGeometryCollection                        //0x0030(0x0008)
  *                                                                   GeometryCollectionLODIndex                        //0x0038(0x0004)
};


class EditableMesh : public Object
{
  Adapters*                                                           Adapters                                          //0x03B8(0x0010)
  *                                                                   TextureCoordinateCount                            //0x03D0(0x0004)
  *                                                                   PendingCompactCounter                             //0x051C(0x0004)
  *                                                                   SubdivisionCount                                  //0x0520(0x0004)
  *                                                                   WeldVertices                                      //0x0000(0x0229)
  *                                                                   TryToRemoveVertex                                 //0x0000(0x0229)
  *                                                                   TryToRemovePolygonEdge                            //0x0000(0x0229)
  *                                                                   TriangulatePolygons                               //0x0000(0x0229)
  *                                                                   TessellatePolygons                                //0x0000(0x0229)
  *                                                                   StartModification                                 //0x0000(0x0229)
  *                                                                   SplitPolygons                                     //0x0000(0x0229)
  *                                                                   SplitPolygonalMesh                                //0x0000(0x0229)
  *                                                                   SplitEdge                                         //0x0000(0x0229)
  *                                                                   SetVerticesCornerSharpness                        //0x0000(0x0229)
  *                                                                   SetVerticesAttributes                             //0x0000(0x0229)
  *                                                                   SetVertexInstancesAttributes                      //0x0000(0x0229)
  *                                                                   SetTextureCoordinateCount                         //0x0000(0x0229)
  *                                                                   SetSubdivisionCount                               //0x0000(0x0229)
  *                                                                   SetPolygonsVertexAttributes                       //0x0000(0x0229)
  *                                                                   SetEdgesHardnessAutomatically                     //0x0000(0x0229)
  *                                                                   SetEdgesHardness                                  //0x0000(0x0229)
  *                                                                   SetEdgesCreaseSharpness                           //0x0000(0x0229)
  *                                                                   SetEdgesAttributes                                //0x0000(0x0229)
  *                                                                   SetAllowUndo                                      //0x0000(0x0229)
  *                                                                   SetAllowSpatialDatabase                           //0x0000(0x0229)
  *                                                                   SetAllowCompact                                   //0x0000(0x0229)
  *                                                                   SearchSpatialDatabaseForPolygonsPotentiallyIntersectingPlane//0x0000(0x0229)
  *                                                                   SearchSpatialDatabaseForPolygonsPotentiallyIntersectingLineSegment//0x0000(0x0229)
  *                                                                   SearchSpatialDatabaseForPolygonsInVolume          //0x0000(0x0229)
  ReturnValue*                                                        RevertInstance                                    //0x0000(0x0229)
  *                                                                   Revert                                            //0x0000(0x0229)
  *                                                                   RebuildRenderMesh                                 //0x0000(0x0229)
  *                                                                   QuadrangulateMesh                                 //0x0000(0x0229)
  *                                                                   PropagateInstanceChanges                          //0x0000(0x0229)
  *                                                                   MoveVertices                                      //0x0000(0x0229)
  *                                                                   MakeVertexID                                      //0x0000(0x0229)
  *                                                                   MakePolygonID                                     //0x0000(0x0229)
  *                                                                   MakePolygonGroupID                                //0x0000(0x0229)
  *                                                                   MakeEdgeID                                        //0x0000(0x0229)
  *                                                                   IsValidVertex                                     //0x0000(0x0229)
  *                                                                   IsValidPolygonGroup                               //0x0000(0x0229)
  *                                                                   IsValidPolygon                                    //0x0000(0x0229)
  *                                                                   IsValidEdge                                       //0x0000(0x0229)
  *                                                                   IsUndoAllowed                                     //0x0000(0x0229)
  *                                                                   IsSpatialDatabaseAllowed                          //0x0000(0x0229)
  *                                                                   IsPreviewingSubdivisions                          //0x0000(0x0229)
  *                                                                   IsOrphanedVertex                                  //0x0000(0x0229)
  *                                                                   IsCompactAllowed                                  //0x0000(0x0229)
  *                                                                   IsCommittedAsInstance                             //0x0000(0x0229)
  *                                                                   IsCommitted                                       //0x0000(0x0229)
  *                                                                   IsBeingModified                                   //0x0000(0x0229)
  *                                                                   InvalidVertexID                                   //0x0000(0x0229)
  *                                                                   InvalidPolygonID                                  //0x0000(0x0229)
  *                                                                   InvalidPolygonGroupID                             //0x0000(0x0229)
  *                                                                   InvalidEdgeID                                     //0x0000(0x0229)
  *                                                                   InsetPolygons                                     //0x0000(0x0229)
  *                                                                   InsertEdgeLoop                                    //0x0000(0x0229)
  *                                                                   InitializeAdapters                                //0x0000(0x0229)
  *                                                                   GetVertexPairEdge                                 //0x0000(0x0229)
  *                                                                   GetVertexInstanceVertex                           //0x0000(0x0229)
  *                                                                   GetVertexInstanceCount                            //0x0000(0x0229)
  *                                                                   GetVertexInstanceConnectedPolygons                //0x0000(0x0229)
  *                                                                   GetVertexInstanceConnectedPolygonCount            //0x0000(0x0229)
  *                                                                   GetVertexInstanceConnectedPolygon                 //0x0000(0x0229)
  *                                                                   GetVertexCount                                    //0x0000(0x0229)
  *                                                                   GetVertexConnectedPolygons                        //0x0000(0x0229)
  *                                                                   GetVertexConnectedEdges                           //0x0000(0x0229)
  *                                                                   GetVertexConnectedEdgeCount                       //0x0000(0x0229)
  *                                                                   GetVertexConnectedEdge                            //0x0000(0x0229)
  *                                                                   GetVertexAdjacentVertices                         //0x0000(0x0229)
  *                                                                   GetTextureCoordinateCount                         //0x0000(0x0229)
  *                                                                   GetSubdivisionLimitData                           //0x0000(0x0229)
  *                                                                   GetSubdivisionCount                               //0x0000(0x0229)
  *                                                                   GetPolygonTriangulatedTriangleCount               //0x0000(0x0229)
  *                                                                   GetPolygonTriangulatedTriangle                    //0x0000(0x0229)
  *                                                                   GetPolygonPerimeterVertices                       //0x0000(0x0229)
  *                                                                   GetPolygonPerimeterVertexInstances                //0x0000(0x0229)
  *                                                                   GetPolygonPerimeterVertexInstance                 //0x0000(0x0229)
  *                                                                   GetPolygonPerimeterVertexCount                    //0x0000(0x0229)
  *                                                                   GetPolygonPerimeterVertex                         //0x0000(0x0229)
  *                                                                   GetPolygonPerimeterEdges                          //0x0000(0x0229)
  *                                                                   GetPolygonPerimeterEdgeCount                      //0x0000(0x0229)
  *                                                                   GetPolygonPerimeterEdge                           //0x0000(0x0229)
  *                                                                   GetPolygonInGroup                                 //0x0000(0x0229)
  *                                                                   GetPolygonGroupCount                              //0x0000(0x0229)
  *                                                                   GetPolygonCountInGroup                            //0x0000(0x0229)
  *                                                                   GetPolygonCount                                   //0x0000(0x0229)
  *                                                                   GetPolygonAdjacentPolygons                        //0x0000(0x0229)
  *                                                                   GetGroupForPolygon                                //0x0000(0x0229)
  *                                                                   GetFirstValidPolygonGroup                         //0x0000(0x0229)
  *                                                                   GetEdgeVertices                                   //0x0000(0x0229)
  *                                                                   GetEdgeVertex                                     //0x0000(0x0229)
  *                                                                   GetEdgeThatConnectsVertices                       //0x0000(0x0229)
  *                                                                   GetEdgeLoopElements                               //0x0000(0x0229)
  *                                                                   GetEdgeCount                                      //0x0000(0x0229)
  *                                                                   GetEdgeConnectedPolygons                          //0x0000(0x0229)
  *                                                                   GetEdgeConnectedPolygonCount                      //0x0000(0x0229)
  *                                                                   GetEdgeConnectedPolygon                           //0x0000(0x0229)
  *                                                                   GeneratePolygonTangentsAndNormals                 //0x0000(0x0229)
  *                                                                   FlipPolygons                                      //0x0000(0x0229)
  *                                                                   FindPolygonPerimeterVertexNumberForVertex         //0x0000(0x0229)
  *                                                                   FindPolygonPerimeterEdgeNumberForVertices         //0x0000(0x0229)
  *                                                                   FindPolygonLoop                                   //0x0000(0x0229)
  *                                                                   ExtrudePolygons                                   //0x0000(0x0229)
  *                                                                   ExtendVertices                                    //0x0000(0x0229)
  *                                                                   ExtendEdges                                       //0x0000(0x0229)
  *                                                                   EndModification                                   //0x0000(0x0229)
  *                                                                   DeleteVertexInstances                             //0x0000(0x0229)
  *                                                                   DeleteVertexAndConnectedEdgesAndPolygons          //0x0000(0x0229)
  *                                                                   DeletePolygons                                    //0x0000(0x0229)
  *                                                                   DeletePolygonGroups                               //0x0000(0x0229)
  *                                                                   DeleteOrphanVertices                              //0x0000(0x0229)
  *                                                                   DeleteEdges                                       //0x0000(0x0229)
  *                                                                   DeleteEdgeAndConnectedPolygons                    //0x0000(0x0229)
  *                                                                   CreateVertices                                    //0x0000(0x0229)
  *                                                                   CreateVertexInstances                             //0x0000(0x0229)
  *                                                                   CreatePolygons                                    //0x0000(0x0229)
  *                                                                   CreatePolygonGroups                               //0x0000(0x0229)
  *                                                                   CreateMissingPolygonPerimeterEdges                //0x0000(0x0229)
  *                                                                   CreateEmptyVertexRange                            //0x0000(0x0229)
  *                                                                   CreateEdges                                       //0x0000(0x0229)
  *                                                                   ComputePolygonsSharedEdges                        //0x0000(0x0229)
  *                                                                   ComputePolygonPlane                               //0x0000(0x0229)
  *                                                                   ComputePolygonNormal                              //0x0000(0x0229)
  *                                                                   ComputePolygonCenter                              //0x0000(0x0229)
  *                                                                   ComputeBoundingBoxAndSphere                       //0x0000(0x0229)
  *                                                                   ComputeBoundingBox                                //0x0000(0x0229)
  ComponentToInstanceTo*                                              CommitInstance                                    //0x0000(0x0229)
  *                                                                   Commit                                            //0x0000(0x0229)
  *                                                                   ChangePolygonsVertexInstances                     //0x0000(0x0229)
  *                                                                   BevelPolygons                                     //0x0000(0x0229)
  *                                                                   AssignPolygonsToPolygonGroups                     //0x0000(0x0229)
  *                                                                   AnyChangesToUndo                                  //0x0000(0x0229)
};


class EditableMeshFactory : public Object
{
  PrimitiveComponent*                                                 MakeEditableMesh                                  //0x0000(0x0229)
};


class EditableStaticMeshAdapter : public EditableMeshAdapter
{
  StaticMesh*                                                         StaticMesh                                        //0x0028(0x0008)
  StaticMesh*                                                         OriginalStaticMesh                                //0x0030(0x0008)
  *                                                                   StaticMeshLODIndex                                //0x0038(0x0004)
};


class MovieSceneSignedObject : public Object
{
  Guid*                                                               Signature                                         //0x0028(0x0010)
};


class MovieSceneSection : public MovieSceneSignedObject
{
  MovieSceneSectionEvalOptions*                                       EvalOptions                                       //0x0050(0x0002)
  MovieSceneEasingSettings*                                           Easing                                            //0x0058(0x0038)
  MovieSceneFrameRange*                                               SectionRange                                      //0x0090(0x0010)
  FrameNumber*                                                        PreRollFrames                                     //0x00A0(0x0004)
  FrameNumber*                                                        PostRollFrames                                    //0x00A4(0x0004)
  *                                                                   RowIndex                                          //0x00A8(0x0004)
  *                                                                   OverlapPriority                                   //0x00AC(0x0004)
  *                                                                   bIsActive                                         //0x00B0(0x0001)
  *                                                                   bIsLocked                                         //0x00B0(0x0001)
  *                                                                   StartTime                                         //0x00B4(0x0004)
  *                                                                   EndTime                                           //0x00B8(0x0004)
  *                                                                   PrerollTime                                       //0x00BC(0x0004)
  *                                                                   PostrollTime                                      //0x00C0(0x0004)
  *                                                                   bIsInfinite                                       //0x00C4(0x0001)
  *                                                                   bSupportsInfiniteRange                            //0x00C8(0x0001)
  OptionalMovieSceneBlendType*                                        BlendType                                         //0x00C9(0x0002)
  *                                                                   SetRowIndex                                       //0x0000(0x0229)
  *                                                                   SetPreRollFrames                                  //0x0000(0x0229)
  *                                                                   SetPostRollFrames                                 //0x0000(0x0229)
  *                                                                   SetOverlapPriority                                //0x0000(0x0229)
  *                                                                   SetIsLocked                                       //0x0000(0x0229)
  *                                                                   SetIsActive                                       //0x0000(0x0229)
  *                                                                   SetCompletionMode                                 //0x0000(0x0229)
  *                                                                   SetBlendType                                      //0x0000(0x0229)
  *                                                                   IsLocked                                          //0x0000(0x0229)
  *                                                                   IsActive                                          //0x0000(0x0229)
  *                                                                   GetRowIndex                                       //0x0000(0x0229)
  *                                                                   GetPreRollFrames                                  //0x0000(0x0229)
  *                                                                   GetPostRollFrames                                 //0x0000(0x0229)
  *                                                                   GetOverlapPriority                                //0x0000(0x0229)
  *                                                                   GetCompletionMode                                 //0x0000(0x0229)
  *                                                                   GetBlendType                                      //0x0000(0x0229)
};


class MovieSceneGeometryCollectionSection : public MovieSceneSection
{
  MovieSceneGeometryCollectionParams*                                 Params                                            //0x00E0(0x0030)
};


class MovieSceneTrack : public MovieSceneSignedObject
{
  MovieSceneTrackEvalOptions*                                         EvalOptions                                       //0x0050(0x0004)
  *                                                                   bIsEvalDisabled                                   //0x0055(0x0001)
};


class MovieSceneNameableTrack : public MovieSceneTrack
{
};


class MovieSceneGeometryCollectionTrack : public MovieSceneNameableTrack
{
  AnimationSections*                                                  AnimationSections                                 //0x0058(0x0010)
};


class KismetProceduralMeshLibrary : public BlueprintFunctionLibrary
{
  InProcMesh*                                                         SliceProceduralMesh                               //0x0000(0x0229)
  InMesh*                                                             GetSectionFromStaticMesh                          //0x0000(0x0229)
  InProcMesh*                                                         GetSectionFromProceduralMesh                      //0x0000(0x0229)
  *                                                                   GenerateBoxMesh                                   //0x0000(0x0229)
  *                                                                   CreateGridMeshWelded                              //0x0000(0x0229)
  *                                                                   CreateGridMeshTriangles                           //0x0000(0x0229)
  *                                                                   CreateGridMeshSplit                               //0x0000(0x0229)
  StaticMeshComponent*                                                CopyProceduralMeshFromStaticMeshComponent         //0x0000(0x0229)
  *                                                                   ConvertQuadToTriangles                            //0x0000(0x0229)
  *                                                                   CalculateTangentsForMesh                          //0x0000(0x0229)
};


class PrimitiveComponent : public SceneComponent
{
  *                                                                   MinDrawDistance                                   //0x01F8(0x0004)
  *                                                                   LDMaxDrawDistance                                 //0x01FC(0x0004)
  *                                                                   CachedMaxDrawDistance                             //0x0200(0x0004)
  ESceneDepthPriorityGroup*                                           DepthPriorityGroup                                //0x0204(0x0001)
  ESceneDepthPriorityGroup*                                           ViewOwnerDepthPriorityGroup                       //0x0205(0x0001)
  EIndirectLightingCacheQuality*                                      IndirectLightingCacheQuality                      //0x0206(0x0001)
  UnderlyingType*                                                     LightmapType                                      //0x0207(0x0001)
  *                                                                   bUseMaxLODAsImposter                              //0x0208(0x0001)
  *                                                                   bBatchImpostersAsInstances                        //0x0208(0x0001)
  *                                                                   bNeverDistanceCull                                //0x0208(0x0001)
  *                                                                   bAlwaysCreatePhysicsState                         //0x0208(0x0001)
  *                                                                   bGenerateOverlapEvents                            //0x0209(0x0001)
  *                                                                   bMultiBodyOverlap                                 //0x0209(0x0001)
  *                                                                   bTraceComplexOnMove                               //0x0209(0x0001)
  *                                                                   bReturnMaterialOnMove                             //0x0209(0x0001)
  *                                                                   bUseViewOwnerDepthPriorityGroup                   //0x0209(0x0001)
  *                                                                   bAllowCullDistanceVolume                          //0x0209(0x0001)
  *                                                                   bHasMotionBlurVelocityMeshes                      //0x0209(0x0001)
  *                                                                   bVisibleInReflectionCaptures                      //0x0209(0x0001)
  *                                                                   bVisibleInRayTracing                              //0x020A(0x0001)
  *                                                                   bRenderInMainPass                                 //0x020A(0x0001)
  *                                                                   bRenderInDepthPass                                //0x020A(0x0001)
  *                                                                   bReceivesDecals                                   //0x020A(0x0001)
  *                                                                   bOwnerNoSee                                       //0x020A(0x0001)
  *                                                                   bOnlyOwnerSee                                     //0x020A(0x0001)
  *                                                                   bTreatAsBackgroundForOcclusion                    //0x020A(0x0001)
  *                                                                   bUseAsOccluder                                    //0x020A(0x0001)
  *                                                                   bSelectable                                       //0x020B(0x0001)
  *                                                                   bForceMipStreaming                                //0x020B(0x0001)
  *                                                                   bHasPerInstanceHitProxies                         //0x020B(0x0001)
  *                                                                   CastShadow                                        //0x020B(0x0001)
  *                                                                   bAffectDynamicIndirectLighting                    //0x020B(0x0001)
  *                                                                   bAffectDistanceFieldLighting                      //0x020B(0x0001)
  *                                                                   bCastDynamicShadow                                //0x020B(0x0001)
  *                                                                   bCastStaticShadow                                 //0x020B(0x0001)
  *                                                                   bCastVolumetricTranslucentShadow                  //0x020C(0x0001)
  *                                                                   bSelfShadowOnly                                   //0x020C(0x0001)
  *                                                                   bCastFarShadow                                    //0x020C(0x0001)
  *                                                                   bCastInsetShadow                                  //0x020C(0x0001)
  *                                                                   bCastCinematicShadow                              //0x020C(0x0001)
  *                                                                   bCastHiddenShadow                                 //0x020C(0x0001)
  *                                                                   bCastShadowAsTwoSided                             //0x020C(0x0001)
  *                                                                   bLightAsIfStatic                                  //0x020C(0x0001)
  *                                                                   bLightAttachmentsAsGroup                          //0x020D(0x0001)
  *                                                                   bExcludeFromLightAttachmentGroup                  //0x020D(0x0001)
  *                                                                   bReceiveMobileCSMShadows                          //0x020D(0x0001)
  *                                                                   bSingleSampleShadowFromStationaryLights           //0x020D(0x0001)
  *                                                                   bIgnoreRadialImpulse                              //0x020D(0x0001)
  *                                                                   bIgnoreRadialForce                                //0x020D(0x0001)
  *                                                                   bApplyImpulseOnDamage                             //0x020D(0x0001)
  *                                                                   bReplicatePhysicsToAutonomousProxy                //0x020D(0x0001)
  *                                                                   AlwaysLoadOnClient                                //0x020E(0x0001)
  *                                                                   AlwaysLoadOnServer                                //0x020E(0x0001)
  *                                                                   bUseEditorCompositing                             //0x020E(0x0001)
  *                                                                   bRenderCustomDepth                                //0x020E(0x0001)
  EHasCustomNavigableGeometry*                                        bHasCustomNavigableGeometry                       //0x020F(0x0001)
  ECanBeCharacterBase*                                                CanCharacterStepUpOn                              //0x0211(0x0001)
  LightingChannels*                                                   LightingChannels                                  //0x0212(0x0001)
  UnderlyingType*                                                     CustomDepthStencilWriteMask                       //0x0213(0x0001)
  *                                                                   CustomDepthStencilValue                           //0x0214(0x0004)
  CustomPrimitiveData*                                                CustomPrimitiveData                               //0x0218(0x0010)
  *                                                                   TranslucencySortPriority                          //0x0228(0x0004)
  *                                                                   VisibilityId                                      //0x022C(0x0004)
  RuntimeVirtualTextures*                                             RuntimeVirtualTextures                            //0x0230(0x0010)
  *                                                                   VirtualTextureLodBias                             //0x0240(0x0001)
  *                                                                   VirtualTextureCullMips                            //0x0241(0x0001)
  *                                                                   VirtualTextureMinCoverage                         //0x0242(0x0001)
  UnderlyingType*                                                     VirtualTextureRenderPassType                      //0x0243(0x0001)
  *                                                                   LpvBiasMultiplier                                 //0x0248(0x0004)
  *                                                                   BoundsScale                                       //0x0254(0x0004)
  MoveIgnoreActors*                                                   MoveIgnoreActors                                  //0x0268(0x0010)
  MoveIgnoreComponents*                                               MoveIgnoreComponents                              //0x0278(0x0010)
  BodyInstance*                                                       BodyInstance                                      //0x0298(0x0110)
  ComponentHitSignature__DelegateSignature*                           OnComponentHit                                    //0x03A8(0x0001)
  ComponentBeginOverlapSignature__DelegateSignature*                  OnComponentBeginOverlap                           //0x03A9(0x0001)
  ComponentEndOverlapSignature__DelegateSignature*                    OnComponentEndOverlap                             //0x03AA(0x0001)
  ComponentWakeSignature__DelegateSignature*                          OnComponentWake                                   //0x03AB(0x0001)
  ComponentSleepSignature__DelegateSignature*                         OnComponentSleep                                  //0x03AC(0x0001)
  ComponentBeginCursorOverSignature__DelegateSignature*               OnBeginCursorOver                                 //0x03AE(0x0001)
  ComponentEndCursorOverSignature__DelegateSignature*                 OnEndCursorOver                                   //0x03AF(0x0001)
  ComponentOnClickedSignature__DelegateSignature*                     OnClicked                                         //0x03B0(0x0001)
  ComponentOnReleasedSignature__DelegateSignature*                    OnReleased                                        //0x03B1(0x0001)
  ComponentOnInputTouchBeginSignature__DelegateSignature*             OnInputTouchBegin                                 //0x03B2(0x0001)
  ComponentOnInputTouchEndSignature__DelegateSignature*               OnInputTouchEnd                                   //0x03B3(0x0001)
  ComponentBeginTouchOverSignature__DelegateSignature*                OnInputTouchEnter                                 //0x03B4(0x0001)
  ComponentEndTouchOverSignature__DelegateSignature*                  OnInputTouchLeave                                 //0x03B5(0x0001)
  PrimitiveComponent*                                                 LODParentPrimitive                                //0x03D0(0x0008)
  *                                                                   WakeRigidBody                                     //0x0000(0x0229)
  *                                                                   WakeAllRigidBodies                                //0x0000(0x0229)
  *                                                                   SetWalkableSlopeOverride                          //0x0000(0x0229)
  *                                                                   SetUseCCD                                         //0x0000(0x0229)
  *                                                                   SetTranslucentSortPriority                        //0x0000(0x0229)
  *                                                                   SetSingleSampleShadowFromStationaryLights         //0x0000(0x0229)
  *                                                                   SetSimulatePhysics                                //0x0000(0x0229)
  *                                                                   SetRenderInMainPass                               //0x0000(0x0229)
  *                                                                   SetRenderCustomDepth                              //0x0000(0x0229)
  *                                                                   SetReceivesDecals                                 //0x0000(0x0229)
  NewPhysMaterial*                                                    SetPhysMaterialOverride                           //0x0000(0x0229)
  *                                                                   SetPhysicsMaxAngularVelocityInRadians             //0x0000(0x0229)
  *                                                                   SetPhysicsMaxAngularVelocityInDegrees             //0x0000(0x0229)
  *                                                                   SetPhysicsMaxAngularVelocity                      //0x0000(0x0229)
  *                                                                   SetPhysicsLinearVelocity                          //0x0000(0x0229)
  *                                                                   SetPhysicsAngularVelocityInRadians                //0x0000(0x0229)
  *                                                                   SetPhysicsAngularVelocityInDegrees                //0x0000(0x0229)
  *                                                                   SetPhysicsAngularVelocity                         //0x0000(0x0229)
  *                                                                   SetOwnerNoSee                                     //0x0000(0x0229)
  *                                                                   SetOnlyOwnerSee                                   //0x0000(0x0229)
  *                                                                   SetNotifyRigidBodyCollision                       //0x0000(0x0229)
  Material*                                                           SetMaterialByName                                 //0x0000(0x0229)
  Material*                                                           SetMaterial                                       //0x0000(0x0229)
  *                                                                   SetMassScale                                      //0x0000(0x0229)
  *                                                                   SetMassOverrideInKg                               //0x0000(0x0229)
  *                                                                   SetLinearDamping                                  //0x0000(0x0229)
  *                                                                   SetLightAttachmentsAsGroup                        //0x0000(0x0229)
  *                                                                   SetGenerateOverlapEvents                          //0x0000(0x0229)
  *                                                                   SetExcludeFromLightAttachmentGroup                //0x0000(0x0229)
  *                                                                   SetEnableGravity                                  //0x0000(0x0229)
  *                                                                   SetCustomPrimitiveDataVector4                     //0x0000(0x0229)
  *                                                                   SetCustomPrimitiveDataVector3                     //0x0000(0x0229)
  *                                                                   SetCustomPrimitiveDataVector2                     //0x0000(0x0229)
  *                                                                   SetCustomPrimitiveDataFloat                       //0x0000(0x0229)
  *                                                                   SetCustomDepthStencilWriteMask                    //0x0000(0x0229)
  *                                                                   SetCustomDepthStencilValue                        //0x0000(0x0229)
  *                                                                   SetCullDistance                                   //0x0000(0x0229)
  *                                                                   SetConstraintMode                                 //0x0000(0x0229)
  *                                                                   SetCollisionResponseToChannel                     //0x0000(0x0229)
  *                                                                   SetCollisionResponseToAllChannels                 //0x0000(0x0229)
  *                                                                   SetCollisionProfileName                           //0x0000(0x0229)
  *                                                                   SetCollisionObjectType                            //0x0000(0x0229)
  *                                                                   SetCollisionEnabled                               //0x0000(0x0229)
  *                                                                   SetCenterOfMass                                   //0x0000(0x0229)
  *                                                                   SetCastShadow                                     //0x0000(0x0229)
  *                                                                   SetCastInsetShadow                                //0x0000(0x0229)
  *                                                                   SetBoundsScale                                    //0x0000(0x0229)
  *                                                                   SetAngularDamping                                 //0x0000(0x0229)
  *                                                                   SetAllUseCCD                                      //0x0000(0x0229)
  *                                                                   SetAllPhysicsLinearVelocity                       //0x0000(0x0229)
  *                                                                   SetAllPhysicsAngularVelocityInRadians             //0x0000(0x0229)
  *                                                                   SetAllPhysicsAngularVelocityInDegrees             //0x0000(0x0229)
  *                                                                   SetAllMassScale                                   //0x0000(0x0229)
  *                                                                   ScaleByMomentOfInertia                            //0x0000(0x0229)
  *                                                                   PutRigidBodyToSleep                               //0x0000(0x0229)
  OutHit*                                                             K2_SphereTraceComponent                           //0x0000(0x0229)
  OutHit*                                                             K2_SphereOverlapComponent                         //0x0000(0x0229)
  OutHit*                                                             K2_LineTraceComponent                             //0x0000(0x0229)
  *                                                                   K2_IsQueryCollisionEnabled                        //0x0000(0x0229)
  *                                                                   K2_IsPhysicsCollisionEnabled                      //0x0000(0x0229)
  *                                                                   K2_IsCollisionEnabled                             //0x0000(0x0229)
  OutHit*                                                             K2_BoxOverlapComponent                            //0x0000(0x0229)
  OtherComp*                                                          IsOverlappingComponent                            //0x0000(0x0229)
  Other*                                                              IsOverlappingActor                                //0x0000(0x0229)
  *                                                                   IsGravityEnabled                                  //0x0000(0x0229)
  *                                                                   IsAnyRigidBodyAwake                               //0x0000(0x0229)
  Component*                                                          IgnoreComponentWhenMoving                         //0x0000(0x0229)
  Actor*                                                              IgnoreActorWhenMoving                             //0x0000(0x0229)
  *                                                                   GetWalkableSlopeOverride                          //0x0000(0x0229)
  *                                                                   GetPhysicsLinearVelocityAtPoint                   //0x0000(0x0229)
  *                                                                   GetPhysicsLinearVelocity                          //0x0000(0x0229)
  *                                                                   GetPhysicsAngularVelocityInRadians                //0x0000(0x0229)
  *                                                                   GetPhysicsAngularVelocityInDegrees                //0x0000(0x0229)
  *                                                                   GetPhysicsAngularVelocity                         //0x0000(0x0229)
  OutOverlappingComponents*                                           GetOverlappingComponents                          //0x0000(0x0229)
  OverlappingActors*                                                  GetOverlappingActors                              //0x0000(0x0229)
  *                                                                   GetNumMaterials                                   //0x0000(0x0229)
  ReturnValue*                                                        GetMaterialFromCollisionFaceIndex                 //0x0000(0x0229)
  ReturnValue*                                                        GetMaterial                                       //0x0000(0x0229)
  *                                                                   GetMassScale                                      //0x0000(0x0229)
  *                                                                   GetMass                                           //0x0000(0x0229)
  *                                                                   GetLinearDamping                                  //0x0000(0x0229)
  *                                                                   GetInertiaTensor                                  //0x0000(0x0229)
  *                                                                   GetGenerateOverlapEvents                          //0x0000(0x0229)
  *                                                                   GetCollisionResponseToChannel                     //0x0000(0x0229)
  *                                                                   GetCollisionProfileName                           //0x0000(0x0229)
  *                                                                   GetCollisionObjectType                            //0x0000(0x0229)
  *                                                                   GetCollisionEnabled                               //0x0000(0x0229)
  *                                                                   GetClosestPointOnCollision                        //0x0000(0x0229)
  *                                                                   GetCenterOfMass                                   //0x0000(0x0229)
  *                                                                   GetAngularDamping                                 //0x0000(0x0229)
  SourceMaterial*                                                     CreateDynamicMaterialInstance                     //0x0000(0x0229)
  Parent*                                                             CreateAndSetMaterialInstanceDynamicFromMaterial   //0x0000(0x0229)
  ReturnValue*                                                        CreateAndSetMaterialInstanceDynamic               //0x0000(0x0229)
  ReturnValue*                                                        CopyArrayOfMoveIgnoreComponents                   //0x0000(0x0229)
  ReturnValue*                                                        CopyArrayOfMoveIgnoreActors                       //0x0000(0x0229)
  *                                                                   ClearMoveIgnoreComponents                         //0x0000(0x0229)
  *                                                                   ClearMoveIgnoreActors                             //0x0000(0x0229)
  Pawn*                                                               CanCharacterStepUp                                //0x0000(0x0229)
  *                                                                   AddTorqueInRadians                                //0x0000(0x0229)
  *                                                                   AddTorqueInDegrees                                //0x0000(0x0229)
  *                                                                   AddTorque                                         //0x0000(0x0229)
  *                                                                   AddRadialImpulse                                  //0x0000(0x0229)
  *                                                                   AddRadialForce                                    //0x0000(0x0229)
  *                                                                   AddImpulseAtLocation                              //0x0000(0x0229)
  *                                                                   AddImpulse                                        //0x0000(0x0229)
  *                                                                   AddForceAtLocationLocal                           //0x0000(0x0229)
  *                                                                   AddForceAtLocation                                //0x0000(0x0229)
  *                                                                   AddForce                                          //0x0000(0x0229)
  *                                                                   AddAngularImpulseInRadians                        //0x0000(0x0229)
  *                                                                   AddAngularImpulseInDegrees                        //0x0000(0x0229)
  *                                                                   AddAngularImpulse                                 //0x0000(0x0229)
};


class MeshComponent : public PrimitiveComponent
{
  OverrideMaterials*                                                  OverrideMaterials                                 //0x03D8(0x0010)
  *                                                                   bEnableMaterialParameterCaching                   //0x03F8(0x0001)
  *                                                                   SetVectorParameterValueOnMaterials                //0x0000(0x0229)
  *                                                                   SetScalarParameterValueOnMaterials                //0x0000(0x0229)
  *                                                                   PrestreamTextures                                 //0x0000(0x0229)
  *                                                                   IsMaterialSlotNameValid                           //0x0000(0x0229)
  *                                                                   GetMaterialSlotNames                              //0x0000(0x0229)
  ReturnValue*                                                        GetMaterials                                      //0x0000(0x0229)
  *                                                                   GetMaterialIndex                                  //0x0000(0x0229)
};


class ProceduralMeshComponent : public MeshComponent
{
  *                                                                   bUseComplexAsSimpleCollision                      //0x0408(0x0001)
  *                                                                   bUseAsyncCooking                                  //0x0409(0x0001)
  BodySetup*                                                          ProcMeshBodySetup                                 //0x0410(0x0008)
  ProcMeshSections*                                                   ProcMeshSections                                  //0x0418(0x0010)
  CollisionConvexElems*                                               CollisionConvexElems                              //0x0428(0x0010)
  BoxSphereBounds*                                                    LocalBounds                                       //0x0438(0x001C)
  AsyncBodySetupQueue*                                                AsyncBodySetupQueue                               //0x0458(0x0010)
  *                                                                   UpdateMeshSection_LinearColor                     //0x0000(0x0229)
  *                                                                   UpdateMeshSection                                 //0x0000(0x0229)
  *                                                                   SetMeshSectionVisible                             //0x0000(0x0229)
  *                                                                   IsMeshSectionVisible                              //0x0000(0x0229)
  *                                                                   GetNumSections                                    //0x0000(0x0229)
  *                                                                   CreateMeshSection_LinearColor                     //0x0000(0x0229)
  *                                                                   CreateMeshSection                                 //0x0000(0x0229)
  *                                                                   ClearMeshSection                                  //0x0000(0x0229)
  *                                                                   ClearCollisionConvexMeshes                        //0x0000(0x0229)
  *                                                                   ClearAllMeshSections                              //0x0000(0x0229)
  *                                                                   AddCollisionConvexMesh                            //0x0000(0x0229)
};


class LevelVariantSets : public Object
{
  BlueprintGeneratedClass*                                            DirectorClass                                     //0x0028(0x0008)
  VariantSets*                                                        VariantSets                                       //0x0030(0x0010)
  ReturnValue*                                                        GetVariantSetByName                               //0x0000(0x0229)
  ReturnValue*                                                        GetVariantSet                                     //0x0000(0x0229)
  *                                                                   GetNumVariantSets                                 //0x0000(0x0229)
};


class LevelVariantSetsActor : public Actor
{
  SoftObjectPath*                                                     LevelVariantSets                                  //0x0218(0x0018)
  *                                                                   SwitchOnVariantByName                             //0x0000(0x0229)
  *                                                                   SwitchOnVariantByIndex                            //0x0000(0x0229)
  InVariantSets*                                                      SetLevelVariantSets                               //0x0000(0x0229)
  ReturnValue*                                                        GetLevelVariantSets                               //0x0000(0x0229)
};


class LevelVariantSetsFunctionDirector : public Object
{
};


class PropertyValue : public Object
{
  Properties*                                                         Properties                                        //0x0080(0x0010)
  PropertyIndices*                                                    PropertyIndices                                   //0x0090(0x0010)
  CapturedPropSegments*                                               CapturedPropSegments                              //0x00A0(0x0010)
  *                                                                   FullDisplayString                                 //0x00B0(0x0010)
  *                                                                   PropertySetterName                                //0x00C0(0x0008)
  PropertySetterParameterDefaults_Key*                                PropertySetterParameterDefaults                   //0x00C8(0x0050)
  *                                                                   bHasRecordedData                                  //0x0118(0x0001)
  Class*                                                              LeafPropertyClass                                 //0x0120(0x0008)
  ValueBytes*                                                         ValueBytes                                        //0x0128(0x0010)
  UnderlyingType*                                                     PropCategory                                      //0x0138(0x0001)
  *                                                                   HasRecordedData                                   //0x0000(0x0229)
  *                                                                   GetPropertyTooltip                                //0x0000(0x0229)
  *                                                                   GetFullDisplayString                              //0x0000(0x0229)
};


class PropertyValueTransform : public PropertyValue
{
};


class PropertyValueVisibility : public PropertyValue
{
};


class PropertyValueColor : public PropertyValue
{
};


class PropertyValueMaterial : public PropertyValue
{
};


class PropertyValueOption : public PropertyValue
{
};


class SwitchActor : public Actor
{
  SceneComponent*                                                     SceneComponent                                    //0x0230(0x0008)
  *                                                                   SelectOption                                      //0x0000(0x0229)
  *                                                                   GetSelectedOption                                 //0x0000(0x0229)
  ReturnValue*                                                        GetOptions                                        //0x0000(0x0229)
};


class Variant : public Object
{
  *                                                                   DisplayText                                       //0x0028(0x0018)
  ObjectBindings*                                                     ObjectBindings                                    //0x0058(0x0010)
  *                                                                   SwitchOn                                          //0x0000(0x0229)
  *                                                                   SetDisplayText                                    //0x0000(0x0229)
  *                                                                   GetNumActors                                      //0x0000(0x0229)
  *                                                                   GetDisplayText                                    //0x0000(0x0229)
  ReturnValue*                                                        GetActor                                          //0x0000(0x0229)
};


class VariantObjectBinding : public Object
{
  SoftObjectPath*                                                     ObjectPtr                                         //0x0028(0x0018)
  Object*                                                             LazyObjectPtr                                     //0x0040(0x001C)
  CapturedProperties*                                                 CapturedProperties                                //0x0060(0x0010)
  FunctionCallers*                                                    FunctionCallers                                   //0x0070(0x0010)
};


class VariantSet : public Object
{
  *                                                                   DisplayText                                       //0x0028(0x0018)
  *                                                                   bExpanded                                         //0x0058(0x0001)
  Variants*                                                           Variants                                          //0x0060(0x0010)
  *                                                                   SetDisplayText                                    //0x0000(0x0229)
  ReturnValue*                                                        GetVariantByName                                  //0x0000(0x0229)
  ReturnValue*                                                        GetVariant                                        //0x0000(0x0229)
  *                                                                   GetNumVariants                                    //0x0000(0x0229)
  *                                                                   GetDisplayText                                    //0x0000(0x0229)
};


class BaseDynamicMeshComponent : public MeshComponent
{
};


class InteractiveGizmoBuilder : public Object
{
};


class BrushStampIndicatorBuilder : public InteractiveGizmoBuilder
{
};


class InteractiveGizmo : public Object
{
  InputBehaviorSet*                                                   InputBehaviors                                    //0x0030(0x0008)
};


class BrushStampIndicator : public InteractiveGizmo
{
  *                                                                   BrushRadius                                       //0x0038(0x0004)
  Vector*                                                             BrushPosition                                     //0x003C(0x000C)
  Vector*                                                             BrushNormal                                       //0x0048(0x000C)
  *                                                                   bDrawIndicatorLines                               //0x0054(0x0001)
  *                                                                   SampleStepCount                                   //0x0058(0x0004)
  LinearColor*                                                        LineColor                                         //0x005C(0x0010)
  *                                                                   LineThickness                                     //0x006C(0x0004)
  *                                                                   bDepthTested                                      //0x0070(0x0001)
  *                                                                   bDrawSecondaryLines                               //0x0071(0x0001)
  *                                                                   SecondaryLineThickness                            //0x0074(0x0004)
  LinearColor*                                                        SecondaryLineColor                                //0x0078(0x0010)
  PrimitiveComponent*                                                 AttachedComponent                                 //0x0088(0x0008)
};


class MeshCommandChangeTarget : public Interface
{
};


class MeshOpPreviewWithBackgroundCompute : public Object
{
  PreviewMesh*                                                        PreviewMesh                                       //0x0040(0x0008)
  MaterialInterface*                                                  StandardMaterial                                  //0x0048(0x0008)
  MaterialInterface*                                                  WorkingMaterial                                   //0x0050(0x0008)
};


class MeshVertexCommandChangeTarget : public Interface
{
};


class OctreeDynamicMeshComponent : public BaseDynamicMeshComponent
{
  *                                                                   bExplicitShowWireframe                            //0x0430(0x0001)
};


class InternalToolFrameworkActor : public Actor
{
};


class PreviewMeshActor : public InternalToolFrameworkActor
{
};


class PreviewMesh : public Object
{
  *                                                                   bBuildSpatialDataStructure                        //0x0038(0x0001)
  *                                                                   bDrawOnTop                                        //0x0039(0x0001)
  SimpleDynamicMeshComponent*                                         DynamicMeshComponent                              //0x0048(0x0008)
};


class SimpleDynamicMeshComponent : public BaseDynamicMeshComponent
{
  UnderlyingType*                                                     TangentsType                                      //0x0418(0x0001)
  *                                                                   bExplicitShowWireframe                            //0x0438(0x0001)
  *                                                                   bDrawOnTop                                        //0x0439(0x0001)
};


class InteractiveToolBuilder : public Object
{
};


class AddPrimitiveToolBuilder : public InteractiveToolBuilder
{
};


class InteractiveToolPropertySet : public Object
{
  Object*                                                             CachedProperties                                  //0x0040(0x0008)
};


class ProceduralShapeToolProperties : public InteractiveToolPropertySet
{
  UnderlyingType*                                                     Shape                                             //0x0048(0x0001)
  *                                                                   Width                                             //0x004C(0x0004)
  *                                                                   Height                                            //0x0050(0x0004)
  *                                                                   Rotation                                          //0x0054(0x0004)
  UnderlyingType*                                                     PlaceMode                                         //0x0058(0x0001)
  UnderlyingType*                                                     PivotLocation                                     //0x0059(0x0001)
  *                                                                   Slices                                            //0x005C(0x0004)
  *                                                                   Subdivisions                                      //0x0060(0x0004)
};


class InteractiveTool : public Object
{
  InputBehaviorSet*                                                   InputBehaviors                                    //0x0030(0x0008)
  ToolPropertyObjects*                                                ToolPropertyObjects                               //0x0038(0x0010)
};


class SingleClickTool : public InteractiveTool
{
};


class AddPrimitiveTool : public SingleClickTool
{
  ProceduralShapeToolProperties*                                      ShapeSettings                                     //0x0060(0x0008)
  NewMeshMaterialProperties*                                          MaterialProperties                                //0x0068(0x0008)
  PreviewMesh*                                                        PreviewMesh                                       //0x0070(0x0008)
};


class BrushBaseProperties : public InteractiveToolPropertySet
{
  *                                                                   BrushSize                                         //0x0048(0x0004)
  *                                                                   bSpecifyRadius                                    //0x004C(0x0001)
  *                                                                   BrushRadius                                       //0x0050(0x0004)
};


class SingleSelectionTool : public InteractiveTool
{
};


class MeshSurfacePointTool : public SingleSelectionTool
{
};


class BaseBrushTool : public MeshSurfacePointTool
{
  BrushBaseProperties*                                                BrushProperties                                   //0x0068(0x0008)
  *                                                                   bInBrushStroke                                    //0x0070(0x0001)
  BrushStampData*                                                     LastBrushStamp                                    //0x0074(0x00A4)
  BrushStampIndicator*                                                BrushStampIndicator                               //0x0130(0x0008)
};


class ConvertToPolygonsToolBuilder : public InteractiveToolBuilder
{
};


class ConvertToPolygonsToolProperties : public InteractiveToolPropertySet
{
  *                                                                   AngleTolerance                                    //0x0048(0x0004)
  *                                                                   bCalculateNormals                                 //0x004C(0x0001)
};


class ConvertToPolygonsTool : public SingleSelectionTool
{
  ConvertToPolygonsToolProperties*                                    Settings                                          //0x0058(0x0008)
  PreviewMesh*                                                        PreviewMesh                                       //0x0060(0x0008)
};


class DisplaceMeshToolBuilder : public InteractiveToolBuilder
{
};


class DisplaceMeshTool : public SingleSelectionTool
{
  UnderlyingType*                                                     DisplacementType                                  //0x0058(0x0001)
  *                                                                   DisplaceIntensity                                 //0x005C(0x0004)
  *                                                                   RandomSeed                                        //0x0060(0x0004)
  *                                                                   Subdivisions                                      //0x0064(0x0004)
  Texture2D*                                                          DisplacementMap                                   //0x0068(0x0008)
};


class DrawPolygonToolBuilder : public InteractiveToolBuilder
{
};


class DrawPolygonToolStandardProperties : public InteractiveToolPropertySet
{
  UnderlyingType*                                                     PolygonType                                       //0x0048(0x0001)
  UnderlyingType*                                                     OutputMode                                        //0x0049(0x0001)
  *                                                                   ExtrudeHeight                                     //0x004C(0x0004)
  *                                                                   Steps                                             //0x0050(0x0004)
  *                                                                   bAllowSelfIntersections                           //0x0054(0x0001)
  *                                                                   bShowGizmo                                        //0x0055(0x0001)
};


class DrawPolygonToolSnapProperties : public InteractiveToolPropertySet
{
  *                                                                   bEnableSnapping                                   //0x0048(0x0001)
  *                                                                   bSnapToVertices                                   //0x0049(0x0001)
  *                                                                   bSnapToEdges                                      //0x004A(0x0001)
  *                                                                   bSnapToAngles                                     //0x004B(0x0001)
  *                                                                   bSnapToLengths                                    //0x004C(0x0001)
  *                                                                   SegmentLength                                     //0x0050(0x0004)
  *                                                                   bHitSceneObjects                                  //0x0054(0x0001)
  *                                                                   HitNormalOffset                                   //0x0058(0x0004)
};


class DrawPolygonTool : public InteractiveTool
{
  DrawPolygonToolStandardProperties*                                  PolygonProperties                                 //0x0058(0x0008)
  DrawPolygonToolSnapProperties*                                      SnapProperties                                    //0x0060(0x0008)
  NewMeshMaterialProperties*                                          MaterialProperties                                //0x0068(0x0008)
  Vector*                                                             DrawPlaneOrigin                                   //0x0070(0x000C)
  Quat*                                                               DrawPlaneOrientation                              //0x0080(0x0010)
  PolygonVertices*                                                    PolygonVertices                                   //0x0090(0x0010)
  Vector*                                                             PreviewVertex                                     //0x00A0(0x000C)
  PreviewMesh*                                                        PreviewMesh                                       //0x00F0(0x0008)
  TransformGizmo*                                                     PlaneTransformGizmo                               //0x00F8(0x0008)
  TransformProxy*                                                     PlaneTransformProxy                               //0x0100(0x0008)
};


class DynamicMeshBrushTool : public BaseBrushTool
{
  PreviewMesh*                                                        PreviewMesh                                       //0x0138(0x0008)
};


class MeshSurfacePointToolBuilder : public InteractiveToolBuilder
{
};


class DynamicMeshSculptToolBuilder : public MeshSurfacePointToolBuilder
{
};


class BrushSculptProperties : public InteractiveToolPropertySet
{
  UnderlyingType*                                                     PrimaryBrushType                                  //0x0048(0x0001)
  *                                                                   BrushSpeed                                        //0x004C(0x0004)
  *                                                                   SmoothSpeed                                       //0x0050(0x0004)
  *                                                                   bPreserveUVFlow                                   //0x0054(0x0001)
  *                                                                   BrushDepth                                        //0x0058(0x0004)
  *                                                                   bFreezeTarget                                     //0x005C(0x0001)
};


class BrushRemeshProperties : public InteractiveToolPropertySet
{
  *                                                                   RelativeSize                                      //0x0048(0x0004)
  *                                                                   Smoothing                                         //0x004C(0x0004)
  *                                                                   bRemeshSmooth                                     //0x0050(0x0001)
  *                                                                   bFlips                                            //0x0051(0x0001)
  *                                                                   bSplits                                           //0x0052(0x0001)
  *                                                                   bCollapses                                        //0x0053(0x0001)
  *                                                                   bPreventNormalFlips                               //0x0054(0x0001)
};


class DynamicMeshSculptTool : public MeshSurfacePointTool
{
  BrushSculptProperties*                                              SculptProperties                                  //0x0068(0x0008)
  BrushBaseProperties*                                                BrushProperties                                   //0x0070(0x0008)
  BrushRemeshProperties*                                              RemeshProperties                                  //0x0078(0x0008)
  MeshEditingViewProperties*                                          ViewProperties                                    //0x0080(0x0008)
  BrushStampIndicator*                                                BrushIndicator                                    //0x0090(0x0008)
  PreviewMesh*                                                        BrushIndicatorMesh                                //0x0098(0x0008)
  OctreeDynamicMeshComponent*                                         DynamicMeshComponent                              //0x00A0(0x0008)
};


class EditMeshPolygonsToolBuilder : public MeshSurfacePointToolBuilder
{
};


class PolyEditTransformProperties : public InteractiveToolPropertySet
{
  UnderlyingType*                                                     DeformationStrategy                               //0x0048(0x0001)
  UnderlyingType*                                                     TransformMode                                     //0x0049(0x0001)
  *                                                                   bSelectFaces                                      //0x004A(0x0001)
  *                                                                   bSelectEdges                                      //0x004B(0x0001)
  *                                                                   bSelectVertices                                   //0x004C(0x0001)
  *                                                                   bWireframe                                        //0x004D(0x0001)
  UnderlyingType*                                                     PolygonMode                                       //0x004E(0x0001)
  *                                                                   PolygonGroupingAngleThreshold                     //0x0050(0x0004)
  UnderlyingType*                                                     SelectedWeightScheme                              //0x0054(0x0004)
  *                                                                   HandleWeight                                      //0x0058(0x0008)
  *                                                                   bPostFixHandles                                   //0x0060(0x0001)
};


class EditMeshPolygonsTool : public MeshSurfacePointTool
{
  SimpleDynamicMeshComponent*                                         DynamicMeshComponent                              //0x0070(0x0008)
  PolyEditTransformProperties*                                        TransformProps                                    //0x0078(0x0008)
};


class EditNormalsToolBuilder : public InteractiveToolBuilder
{
};


class EditNormalsToolProperties : public InteractiveToolPropertySet
{
  *                                                                   bRecomputeNormals                                 //0x0048(0x0001)
  UnderlyingType*                                                     NormalCalculationMethod                           //0x0049(0x0001)
  *                                                                   bFixInconsistentNormals                           //0x004A(0x0001)
  *                                                                   bInvertNormals                                    //0x004B(0x0001)
  *                                                                   bRecomputeNormalTopologyAndEdgeSharpness          //0x004C(0x0001)
  *                                                                   SharpEdgeAngleThreshold                           //0x0050(0x0004)
  *                                                                   bAllowSharpVertices                               //0x0054(0x0001)
};


class EditNormalsAdvancedProperties : public InteractiveToolPropertySet
{
};


class EditNormalsOperatorFactory : public Object
{
  EditNormalsTool*                                                    Tool                                              //0x0030(0x0008)
};


class MultiSelectionTool : public InteractiveTool
{
};


class EditNormalsTool : public MultiSelectionTool
{
  EditNormalsToolProperties*                                          BasicProperties                                   //0x0060(0x0008)
  EditNormalsAdvancedProperties*                                      AdvancedProperties                                //0x0068(0x0008)
  Previews*                                                           Previews                                          //0x0070(0x0010)
};


class MeshAnalysisProperties : public InteractiveToolPropertySet
{
  *                                                                   SurfaceArea                                       //0x0048(0x0010)
  *                                                                   Volume                                            //0x0058(0x0010)
};


class MeshInspectorToolBuilder : public InteractiveToolBuilder
{
};


class MeshInspectorProperties : public InteractiveToolPropertySet
{
  *                                                                   bWireframe                                        //0x0048(0x0001)
  *                                                                   bBoundaryEdges                                    //0x0049(0x0001)
  *                                                                   bPolygonBorders                                   //0x004A(0x0001)
  *                                                                   bUVSeams                                          //0x004B(0x0001)
  *                                                                   bNormalSeams                                      //0x004C(0x0001)
  *                                                                   bNormalVectors                                    //0x004D(0x0001)
  *                                                                   bTangentVectors                                   //0x004E(0x0001)
  *                                                                   NormalLength                                      //0x0050(0x0004)
  *                                                                   TangentLength                                     //0x0054(0x0004)
};


class MeshInspectorTool : public SingleSelectionTool
{
  MeshInspectorProperties*                                            Settings                                          //0x0058(0x0008)
  ExistingMeshMaterialProperties*                                     MaterialSettings                                  //0x0060(0x0008)
  SimpleDynamicMeshComponent*                                         DynamicMeshComponent                              //0x0070(0x0008)
  MaterialInterface*                                                  DefaultMaterial                                   //0x0078(0x0008)
};


class NewMeshMaterialProperties : public InteractiveToolPropertySet
{
  MaterialInterface*                                                  Material                                          //0x0048(0x0008)
  *                                                                   UVScale                                           //0x0050(0x0004)
  *                                                                   bWorldSpaceUVScale                                //0x0054(0x0001)
  *                                                                   bWireframe                                        //0x0055(0x0001)
};


class ExistingMeshMaterialProperties : public InteractiveToolPropertySet
{
  UnderlyingType*                                                     MaterialMode                                      //0x0048(0x0001)
  *                                                                   CheckerDensity                                    //0x004C(0x0004)
  MaterialInterface*                                                  OverrideMaterial                                  //0x0050(0x0008)
  MaterialInstanceDynamic*                                            CheckerMaterial                                   //0x0058(0x0008)
};


class MeshEditingViewProperties : public InteractiveToolPropertySet
{
  *                                                                   bShowWireframe                                    //0x0048(0x0001)
  UnderlyingType*                                                     MaterialMode                                      //0x004C(0x0004)
};


class MeshSelectionToolBuilder : public MeshSurfacePointToolBuilder
{
};


class MeshSelectionToolActionPropertySet : public InteractiveToolPropertySet
{
};


class MeshSelectionEditActions : public MeshSelectionToolActionPropertySet
{
  *                                                                   Shrink                                            //0x0000(0x0229)
  *                                                                   Invert                                            //0x0000(0x0229)
  *                                                                   Grow                                              //0x0000(0x0229)
  *                                                                   ExpandToConnected                                 //0x0000(0x0229)
  *                                                                   Clear                                             //0x0000(0x0229)
};


class MeshSelectionMeshEditActions : public MeshSelectionToolActionPropertySet
{
  *                                                                   SeparateTriangles                                 //0x0000(0x0229)
  *                                                                   DeleteTriangles                                   //0x0000(0x0229)
};


class MeshSelectionToolProperties : public InteractiveToolPropertySet
{
  UnderlyingType*                                                     SelectionMode                                     //0x0048(0x0004)
  *                                                                   AngleTolerance                                    //0x004C(0x0004)
  *                                                                   bVolumetricBrush                                  //0x0050(0x0001)
  *                                                                   bHitBackFaces                                     //0x0051(0x0001)
  *                                                                   bShowWireframe                                    //0x0052(0x0001)
};


class MeshSelectionTool : public DynamicMeshBrushTool
{
  MeshSelectionToolProperties*                                        SelectionProps                                    //0x0178(0x0008)
  MeshSelectionEditActions*                                           SelectionActions                                  //0x0180(0x0008)
  MeshSelectionMeshEditActions*                                       EditActions                                       //0x0188(0x0008)
  MeshSelectionSet*                                                   Selection                                         //0x0190(0x0008)
};


class MeshSpaceDeformerToolBuilder : public MeshSurfacePointToolBuilder
{
};


class MeshSpaceDeformerTool : public MeshSurfacePointTool
{
  UnderlyingType*                                                     SelectedOperationType                             //0x006C(0x0001)
  *                                                                   LowerBoundsInterval                               //0x0070(0x0008)
  *                                                                   UpperBoundsInterval                               //0x0078(0x0008)
  *                                                                   ModifierPercent                                   //0x0080(0x0008)
  SimpleDynamicMeshComponent*                                         DynamicMeshComponent                              //0x0088(0x0008)
  *                                                                   SwapSecondaryAxis                                 //0x0000(0x0229)
  *                                                                   AutoDetectAxes                                    //0x0000(0x0229)
};


class MeshStatisticsProperties : public InteractiveToolPropertySet
{
  *                                                                   Mesh                                              //0x0048(0x0010)
  *                                                                   UV                                                //0x0058(0x0010)
  *                                                                   Attributes                                        //0x0068(0x0010)
};


class PlaneCutToolBuilder : public InteractiveToolBuilder
{
};


class PlaneCutToolProperties : public InteractiveToolPropertySet
{
  *                                                                   bDiscardAttributes                                //0x0048(0x0001)
  *                                                                   bKeepBothHalves                                   //0x0049(0x0001)
  *                                                                   SpacingBetweenHalves                              //0x004C(0x0004)
  *                                                                   bFillCutHole                                      //0x0050(0x0001)
  *                                                                   bShowPreview                                      //0x0051(0x0001)
  *                                                                   bFillSpans                                        //0x0052(0x0001)
};


class PlaneCutOperatorFactory : public Object
{
  PlaneCutTool*                                                       CutTool                                           //0x0030(0x0008)
  *                                                                   bCutBackSide                                      //0x0038(0x0001)
};


class PlaneCutTool : public SingleSelectionTool
{
  PlaneCutToolProperties*                                             BasicProperties                                   //0x0058(0x0008)
  Vector*                                                             CutPlaneOrigin                                    //0x0060(0x000C)
  Quat*                                                               CutPlaneOrientation                               //0x0070(0x0010)
  Previews*                                                           Previews                                          //0x0080(0x0010)
  TransformGizmo*                                                     PlaneTransformGizmo                               //0x00E0(0x0008)
  TransformProxy*                                                     PlaneTransformProxy                               //0x00E8(0x0008)
};


class PositionPlaneGizmoBuilder : public InteractiveGizmoBuilder
{
};


class PositionPlaneGizmo : public InteractiveGizmo
{
  PreviewMesh*                                                        CenterBallShape                                   //0x0088(0x0008)
  MaterialInstance*                                                   CenterBallMaterial                                //0x0090(0x0008)
};


class InputBehavior : public Object
{
};


class AnyButtonInputBehavior : public InputBehavior
{
  *                                                                   ButtonNumber                                      //0x0030(0x0004)
};


class PositionPlaneOnSceneInputBehavior : public AnyButtonInputBehavior
{
};


class RemeshMeshToolBuilder : public InteractiveToolBuilder
{
};


class RemeshMeshToolProperties : public InteractiveToolPropertySet
{
  *                                                                   TargetTriangleCount                               //0x0048(0x0004)
  *                                                                   SmoothingSpeed                                    //0x004C(0x0004)
  UnderlyingType*                                                     SmoothingType                                     //0x0050(0x0001)
  *                                                                   RemeshIterations                                  //0x0054(0x0004)
  *                                                                   bDiscardAttributes                                //0x0058(0x0001)
  *                                                                   bPreserveSharpEdges                               //0x0059(0x0001)
  *                                                                   bUseTargetEdgeLength                              //0x005A(0x0001)
  *                                                                   TargetEdgeLength                                  //0x005C(0x0004)
  *                                                                   bFlips                                            //0x0060(0x0001)
  *                                                                   bSplits                                           //0x0061(0x0001)
  *                                                                   bCollapses                                        //0x0062(0x0001)
  *                                                                   bReproject                                        //0x0063(0x0001)
  *                                                                   bPreventNormalFlips                               //0x0064(0x0001)
};


class RemeshMeshTool : public SingleSelectionTool
{
  RemeshMeshToolProperties*                                           BasicProperties                                   //0x0060(0x0008)
  MeshStatisticsProperties*                                           MeshStatisticsProperties                          //0x0068(0x0008)
  MeshOpPreviewWithBackgroundCompute*                                 Preview                                           //0x0070(0x0008)
};


class SmoothMeshToolBuilder : public InteractiveToolBuilder
{
};


class SmoothMeshTool : public SingleSelectionTool
{
  UnderlyingType*                                                     SmoothType                                        //0x0060(0x0001)
  *                                                                   SmoothSpeed                                       //0x0064(0x0004)
  *                                                                   SmoothIterations                                  //0x0068(0x0004)
  MeshOpPreviewWithBackgroundCompute*                                 Preview                                           //0x0070(0x0008)
};


class TransformMeshesToolBuilder : public InteractiveToolBuilder
{
};


class TransformMeshesToolProperties : public InteractiveToolPropertySet
{
  UnderlyingType*                                                     TransformMode                                     //0x0048(0x0001)
  *                                                                   bSetPivot                                         //0x0049(0x0001)
  *                                                                   bEnableSnapDragging                               //0x004A(0x0001)
  UnderlyingType*                                                     SnapDragSource                                    //0x004B(0x0001)
  UnderlyingType*                                                     RotationMode                                      //0x004C(0x0001)
};


class TransformMeshesTool : public MultiSelectionTool
{
  TransformMeshesToolProperties*                                      TransformProps                                    //0x0068(0x0008)
  ActiveGizmos*                                                       ActiveGizmos                                      //0x0080(0x0010)
};


class UVProjectionToolBuilder : public InteractiveToolBuilder
{
};


class UVProjectionToolProperties : public InteractiveToolPropertySet
{
  UnderlyingType*                                                     UVProjectionMethod                                //0x0048(0x0001)
  Vector*                                                             ProjectionPrimitiveScale                          //0x004C(0x000C)
  *                                                                   CylinderProjectToTopOrBottomAngleThreshold        //0x0058(0x0004)
  Vector2D*                                                           UVScale                                           //0x005C(0x0008)
  Vector2D*                                                           UVOffset                                          //0x0064(0x0008)
  *                                                                   bWorldSpaceUVScale                                //0x006C(0x0001)
};


class UVProjectionAdvancedProperties : public InteractiveToolPropertySet
{
};


class UVProjectionOperatorFactory : public Object
{
  UVProjectionTool*                                                   Tool                                              //0x0030(0x0008)
};


class UVProjectionTool : public MultiSelectionTool
{
  UVProjectionToolProperties*                                         BasicProperties                                   //0x0060(0x0008)
  UVProjectionAdvancedProperties*                                     AdvancedProperties                                //0x0068(0x0008)
  ExistingMeshMaterialProperties*                                     MaterialSettings                                  //0x0070(0x0008)
  Previews*                                                           Previews                                          //0x0078(0x0010)
  MaterialInstanceDynamic*                                            CheckerMaterial                                   //0x0088(0x0008)
  TransformGizmos*                                                    TransformGizmos                                   //0x0090(0x0010)
  TransformProxies*                                                   TransformProxies                                  //0x00A0(0x0010)
};


class WeldMeshEdgesToolBuilder : public InteractiveToolBuilder
{
};


class WeldMeshEdgesTool : public SingleSelectionTool
{
  *                                                                   Tolerance                                         //0x0058(0x0004)
  *                                                                   bOnlyUnique                                       //0x005C(0x0001)
};


class ConfigBPPluginBPLibrary : public BlueprintFunctionLibrary
{
  File*                                                               SetVector3Parameter                               //0x0000(0x0229)
  File*                                                               SetVector2Parameter                               //0x0000(0x0229)
  File*                                                               SetTransformParameter                             //0x0000(0x0229)
  File*                                                               SetTextParameter                                  //0x0000(0x0229)
  File*                                                               SetStringParameter                                //0x0000(0x0229)
  File*                                                               SetStringArrayParameter                           //0x0000(0x0229)
  File*                                                               SetRotatorParameter                               //0x0000(0x0229)
  File*                                                               SetIntParameter                                   //0x0000(0x0229)
  File*                                                               SetFloatParameter                                 //0x0000(0x0229)
  File*                                                               SetDoubleParameter                                //0x0000(0x0229)
  File*                                                               SetColorParameter                                 //0x0000(0x0229)
  File*                                                               SetBoolParameter                                  //0x0000(0x0229)
  File*                                                               ReloadConfig                                      //0x0000(0x0229)
  ReturnValue*                                                        OpenFile                                          //0x0000(0x0229)
  File*                                                               GetSections                                       //0x0000(0x0229)
  File*                                                               GetSectionKeys                                    //0x0000(0x0229)
  *                                                                   GetScalabilityIniLocation                         //0x0000(0x0229)
  File*                                                               GetParameterAsVector3                             //0x0000(0x0229)
  File*                                                               GetParameterAsVector2                             //0x0000(0x0229)
  File*                                                               GetParameterAsTransform                           //0x0000(0x0229)
  File*                                                               GetParameterAsText                                //0x0000(0x0229)
  File*                                                               GetParameterAsStringArray                         //0x0000(0x0229)
  File*                                                               GetParameterAsString                              //0x0000(0x0229)
  File*                                                               GetParameterAsRotator                             //0x0000(0x0229)
  File*                                                               GetParameterAsInt                                 //0x0000(0x0229)
  File*                                                               GetParameterAsFloat                               //0x0000(0x0229)
  File*                                                               GetParameterAsDouble                              //0x0000(0x0229)
  File*                                                               GetParameterAsColor                               //0x0000(0x0229)
  File*                                                               GetParameterAsBool                                //0x0000(0x0229)
  *                                                                   GetInputIniLocation                               //0x0000(0x0229)
  *                                                                   GetGameUserSettingsIniLocation                    //0x0000(0x0229)
  *                                                                   GetGameIniLocation                                //0x0000(0x0229)
  *                                                                   GetEngineIniLocation                              //0x0000(0x0229)
};


class ConfigFile : public Object
{
};


class NiagaraMergeable : public Object
{
};


class NiagaraDataInterfaceBase : public NiagaraMergeable
{
};


class MovieSceneNiagaraTrack : public MovieSceneNameableTrack
{
  Sections*                                                           Sections                                          //0x0058(0x0010)
};


class MovieSceneNiagaraParameterTrack : public MovieSceneNiagaraTrack
{
  NiagaraVariable*                                                    Parameter                                         //0x0068(0x0030)
};


class MovieSceneNiagaraBoolParameterTrack : public MovieSceneNiagaraParameterTrack
{
};


class MovieSceneNiagaraColorParameterTrack : public MovieSceneNiagaraParameterTrack
{
};


class MovieSceneNiagaraFloatParameterTrack : public MovieSceneNiagaraParameterTrack
{
};


class MovieSceneNiagaraIntegerParameterTrack : public MovieSceneNiagaraParameterTrack
{
};


class MovieSceneNiagaraSystemSpawnSection : public MovieSceneSection
{
};


class MovieSceneNiagaraSystemTrack : public MovieSceneNiagaraTrack
{
};


class MovieSceneNiagaraVectorParameterTrack : public MovieSceneNiagaraParameterTrack
{
  *                                                                   ChannelsUsed                                      //0x0098(0x0004)
};


class NiagaraActor : public Actor
{
  NiagaraComponent*                                                   NiagaraComponent                                  //0x0218(0x0008)
};


class FXSystemComponent : public PrimitiveComponent
{
  *                                                                   SetVectorParameter                                //0x0000(0x0229)
  *                                                                   SetUseAutoManageAttachment                        //0x0000(0x0229)
  *                                                                   SetFloatParameter                                 //0x0000(0x0229)
  *                                                                   SetEmitterEnable                                  //0x0000(0x0229)
  *                                                                   SetColorParameter                                 //0x0000(0x0229)
  Parent*                                                             SetAutoAttachmentParameters                       //0x0000(0x0229)
  Param*                                                              SetActorParameter                                 //0x0000(0x0229)
  *                                                                   ReleaseToPool                                     //0x0000(0x0229)
  ReturnValue*                                                        GetFXSystemAsset                                  //0x0000(0x0229)
};


class NiagaraComponent : public FXSystemComponent
{
  NiagaraSystem*                                                      Asset                                             //0x03D8(0x0008)
  UnderlyingType*                                                     TickBehavior                                      //0x03E0(0x0001)
  NiagaraUserRedirectionParameterStore*                               OverrideParameters                                //0x03E8(0x0108)
  *                                                                   bForceSolo                                        //0x04F0(0x0001)
  *                                                                   bAutoDestroy                                      //0x0518(0x0001)
  *                                                                   bRenderingEnabled                                 //0x0518(0x0001)
  *                                                                   bAutoManageAttachment                             //0x0518(0x0001)
  *                                                                   MaxTimeBeforeForceUpdateTransform                 //0x051C(0x0004)
  OnNiagaraSystemFinished__DelegateSignature*                         OnSystemFinished                                  //0x0528(0x0010)
  SceneComponent*                                                     AutoAttachParent                                  //0x0538(0x0008)
  *                                                                   AutoAttachSocketName                              //0x0540(0x0008)
  UnderlyingType*                                                     AutoAttachLocationRule                            //0x0548(0x0001)
  UnderlyingType*                                                     AutoAttachRotationRule                            //0x0549(0x0001)
  UnderlyingType*                                                     AutoAttachScaleRule                               //0x054A(0x0001)
  *                                                                   PreviewDetailLevel                                //0x054C(0x0004)
  *                                                                   PreviewLODDistance                                //0x0550(0x0004)
  *                                                                   bEnablePreviewDetailLevel                         //0x0554(0x0001)
  *                                                                   bEnablePreviewLODDistance                         //0x0554(0x0001)
  *                                                                   SetVariableVec4                                   //0x0000(0x0229)
  *                                                                   SetVariableVec3                                   //0x0000(0x0229)
  *                                                                   SetVariableVec2                                   //0x0000(0x0229)
  *                                                                   SetVariableQuat                                   //0x0000(0x0229)
  Object*                                                             SetVariableObject                                 //0x0000(0x0229)
  Object*                                                             SetVariableMaterial                               //0x0000(0x0229)
  *                                                                   SetVariableLinearColor                            //0x0000(0x0229)
  *                                                                   SetVariableInt                                    //0x0000(0x0229)
  *                                                                   SetVariableFloat                                  //0x0000(0x0229)
  *                                                                   SetVariableBool                                   //0x0000(0x0229)
  Actor*                                                              SetVariableActor                                  //0x0000(0x0229)
  *                                                                   SetSeekDelta                                      //0x0000(0x0229)
  *                                                                   SetRenderingEnabled                               //0x0000(0x0229)
  *                                                                   SetPreviewLODDistance                             //0x0000(0x0229)
  *                                                                   SetPreviewDetailLevel                             //0x0000(0x0229)
  *                                                                   SetPaused                                         //0x0000(0x0229)
  *                                                                   SetNiagaraVariableVec4                            //0x0000(0x0229)
  *                                                                   SetNiagaraVariableVec3                            //0x0000(0x0229)
  *                                                                   SetNiagaraVariableVec2                            //0x0000(0x0229)
  *                                                                   SetNiagaraVariableQuat                            //0x0000(0x0229)
  Object*                                                             SetNiagaraVariableObject                          //0x0000(0x0229)
  *                                                                   SetNiagaraVariableLinearColor                     //0x0000(0x0229)
  *                                                                   SetNiagaraVariableInt                             //0x0000(0x0229)
  *                                                                   SetNiagaraVariableFloat                           //0x0000(0x0229)
  *                                                                   SetNiagaraVariableBool                            //0x0000(0x0229)
  Actor*                                                              SetNiagaraVariableActor                           //0x0000(0x0229)
  *                                                                   SetMaxSimTime                                     //0x0000(0x0229)
  *                                                                   SetForceSolo                                      //0x0000(0x0229)
  *                                                                   SetDesiredAge                                     //0x0000(0x0229)
  *                                                                   SetCanRenderWhileSeeking                          //0x0000(0x0229)
  *                                                                   SetAutoDestroy                                    //0x0000(0x0229)
  InAsset*                                                            SetAsset                                          //0x0000(0x0229)
  *                                                                   SetAgeUpdateMode                                  //0x0000(0x0229)
  *                                                                   SeekToDesiredAge                                  //0x0000(0x0229)
  *                                                                   ResetSystem                                       //0x0000(0x0229)
  *                                                                   ReinitializeSystem                                //0x0000(0x0229)
  *                                                                   IsPaused                                          //0x0000(0x0229)
  *                                                                   GetSeekDelta                                      //0x0000(0x0229)
  *                                                                   GetNiagaraParticleValueVec3_DebugOnly             //0x0000(0x0229)
  *                                                                   GetNiagaraParticleValues_DebugOnly                //0x0000(0x0229)
  *                                                                   GetNiagaraParticlePositions_DebugOnly             //0x0000(0x0229)
  *                                                                   GetMaxSimTime                                     //0x0000(0x0229)
  *                                                                   GetForceSolo                                      //0x0000(0x0229)
  *                                                                   GetDesiredAge                                     //0x0000(0x0229)
  ReturnValue*                                                        GetDataInterface                                  //0x0000(0x0229)
  ReturnValue*                                                        GetAsset                                          //0x0000(0x0229)
  *                                                                   GetAgeUpdateMode                                  //0x0000(0x0229)
  *                                                                   AdvanceSimulationByTime                           //0x0000(0x0229)
  *                                                                   AdvanceSimulation                                 //0x0000(0x0229)
};


class NiagaraComponentPool : public Object
{
  WorldParticleSystemPools_Key*                                       WorldParticleSystemPools                          //0x0028(0x0050)
};


class NiagaraDataInterface : public NiagaraDataInterfaceBase
{
};


class NiagaraDataInterfaceCurveBase : public NiagaraDataInterface
{
  ShaderLUT*                                                          ShaderLUT                                         //0x0038(0x0010)
  *                                                                   LUTMinTime                                        //0x0048(0x0004)
  *                                                                   LUTMaxTime                                        //0x004C(0x0004)
  *                                                                   LUTInvTimeRange                                   //0x0050(0x0004)
  *                                                                   bUseLUT                                           //0x0054(0x0001)
};


class NiagaraDataInterfaceCollisionQuery : public NiagaraDataInterface
{
};


class NiagaraDataInterfaceColorCurve : public NiagaraDataInterfaceCurveBase
{
  RichCurve*                                                          RedCurve                                          //0x0058(0x0080)
  RichCurve*                                                          GreenCurve                                        //0x00D8(0x0080)
  RichCurve*                                                          BlueCurve                                         //0x0158(0x0080)
  RichCurve*                                                          AlphaCurve                                        //0x01D8(0x0080)
};


class NiagaraDataInterfaceCurlNoise : public NiagaraDataInterface
{
  *                                                                   Seed                                              //0x0038(0x0004)
};


class NiagaraDataInterfaceCurve : public NiagaraDataInterfaceCurveBase
{
  RichCurve*                                                          Curve                                             //0x0058(0x0080)
};


class NiagaraParticleCallbackHandler : public Interface
{
  NiagaraSystem*                                                      ReceiveParticleData                               //0x0000(0x0229)
};


class NiagaraDataInterfaceExport : public NiagaraDataInterface
{
  NiagaraUserParameterBinding*                                        CallbackHandlerParameter                          //0x0038(0x0030)
};


class NiagaraDataInterfaceRWBase : public NiagaraDataInterface
{
  OutputShaderStages*                                                 OutputShaderStages                                //0x0038(0x0050)
  IterationShaderStages*                                              IterationShaderStages                             //0x0088(0x0050)
};


class NiagaraDataInterfaceGrid2D : public NiagaraDataInterfaceRWBase
{
  *                                                                   NumCellsX                                         //0x00E0(0x0004)
  *                                                                   NumCellsY                                         //0x00E4(0x0004)
  *                                                                   CellSize                                          //0x00E8(0x0004)
  *                                                                   NumAttributes                                     //0x00EC(0x0004)
  *                                                                   SetGridFromCellSize                               //0x00F0(0x0001)
  Vector*                                                             WorldBBoxMin                                      //0x00F4(0x000C)
  Vector2D*                                                           WorldBBoxSize                                     //0x0100(0x0008)
};


class NiagaraDataInterfaceGrid2DCollection : public NiagaraDataInterfaceGrid2D
{
  Component*                                                          FillTexture2D                                     //0x0000(0x0229)
};


class NiagaraDataInterfaceGrid3D : public NiagaraDataInterfaceRWBase
{
  IntVector*                                                          NumVoxels                                         //0x00E0(0x000C)
  *                                                                   VoxelSize                                         //0x00EC(0x0004)
  *                                                                   SetGridFromVoxelSize                              //0x00F0(0x0001)
  Vector*                                                             WorldBBoxMin                                      //0x00F4(0x000C)
  Vector*                                                             WorldBBoxSize                                     //0x0100(0x000C)
};


class NiagaraDataInterfaceNeighborGrid3D : public NiagaraDataInterfaceGrid3D
{
  *                                                                   MaxNeighborsPerVoxel                              //0x0110(0x0004)
};


class NiagaraDataInterfaceParticleRead : public NiagaraDataInterface
{
  *                                                                   EmitterName                                       //0x0038(0x0010)
};


class NiagaraDataInterfaceSimpleCounter : public NiagaraDataInterface
{
};


class NiagaraDataInterfaceSkeletalMesh : public NiagaraDataInterface
{
  Actor*                                                              Source                                            //0x0038(0x0008)
  NiagaraUserParameterBinding*                                        MeshUserParameter                                 //0x0040(0x0030)
  SkeletalMeshComponent*                                              SourceComponent                                   //0x0070(0x0008)
  UnderlyingType*                                                     SkinningMode                                      //0x0078(0x0001)
  SamplingRegions*                                                    SamplingRegions                                   //0x0080(0x0010)
  *                                                                   WholeMeshLOD                                      //0x0090(0x0004)
  SpecificBones*                                                      SpecificBones                                     //0x0098(0x0010)
  SpecificSockets*                                                    SpecificSockets                                   //0x00A8(0x0010)
};


class NiagaraDataInterfaceSpline : public NiagaraDataInterface
{
  Actor*                                                              Source                                            //0x0038(0x0008)
};


class NiagaraDataInterfaceStaticMesh : public NiagaraDataInterface
{
  StaticMesh*                                                         DefaultMesh                                       //0x0038(0x0008)
  Actor*                                                              Source                                            //0x0040(0x0008)
  StaticMeshComponent*                                                SourceComponent                                   //0x0048(0x0008)
  NDIStaticMeshSectionFilter*                                         SectionFilter                                     //0x0050(0x0010)
};


class NiagaraDataInterfaceTexture : public NiagaraDataInterface
{
  Texture*                                                            Texture                                           //0x0038(0x0008)
};


class NiagaraDataInterfaceVector2DCurve : public NiagaraDataInterfaceCurveBase
{
  RichCurve*                                                          XCurve                                            //0x0058(0x0080)
  RichCurve*                                                          YCurve                                            //0x00D8(0x0080)
};


class NiagaraDataInterfaceVector4Curve : public NiagaraDataInterfaceCurveBase
{
  RichCurve*                                                          XCurve                                            //0x0058(0x0080)
  RichCurve*                                                          YCurve                                            //0x00D8(0x0080)
  RichCurve*                                                          ZCurve                                            //0x0158(0x0080)
  RichCurve*                                                          WCurve                                            //0x01D8(0x0080)
};


class NiagaraDataInterfaceVectorCurve : public NiagaraDataInterfaceCurveBase
{
  RichCurve*                                                          XCurve                                            //0x0058(0x0080)
  RichCurve*                                                          YCurve                                            //0x00D8(0x0080)
  RichCurve*                                                          ZCurve                                            //0x0158(0x0080)
};


class NiagaraDataInterfaceVectorField : public NiagaraDataInterface
{
  VectorField*                                                        Field                                             //0x0038(0x0008)
  *                                                                   bTileX                                            //0x0040(0x0001)
  *                                                                   bTileY                                            //0x0041(0x0001)
  *                                                                   bTileZ                                            //0x0042(0x0001)
};


class NiagaraEditorDataBase : public Object
{
};


class NiagaraEmitter : public Object
{
  *                                                                   bLocalSpace                                       //0x0028(0x0001)
  *                                                                   bDeterminism                                      //0x0029(0x0001)
  *                                                                   RandomSeed                                        //0x002C(0x0004)
  *                                                                   PreAllocationCount                                //0x0030(0x0004)
  NiagaraEmitterScriptProperties*                                     UpdateScriptProps                                 //0x0038(0x0028)
  NiagaraEmitterScriptProperties*                                     SpawnScriptProps                                  //0x0060(0x0028)
  NiagaraEmitterScriptProperties*                                     EmitterSpawnScriptProps                           //0x0088(0x0028)
  NiagaraEmitterScriptProperties*                                     EmitterUpdateScriptProps                          //0x00B0(0x0028)
  UnderlyingType*                                                     SimTarget                                         //0x00D8(0x0001)
  Box*                                                                FixedBounds                                       //0x00DC(0x001C)
  *                                                                   MinDetailLevel                                    //0x00F8(0x0004)
  *                                                                   MaxDetailLevel                                    //0x00FC(0x0004)
  NiagaraDetailsLevelScaleOverrides*                                  GlobalSpawnCountScaleOverrides                    //0x0100(0x0014)
  *                                                                   bInterpolatedSpawning                             //0x0114(0x0001)
  *                                                                   bFixedBounds                                      //0x0114(0x0001)
  *                                                                   bUseMinDetailLevel                                //0x0114(0x0001)
  *                                                                   bUseMaxDetailLevel                                //0x0114(0x0001)
  *                                                                   bOverrideGlobalSpawnCountScale                    //0x0114(0x0001)
  *                                                                   bRequiresPersistentIDs                            //0x0114(0x0001)
  *                                                                   MaxDeltaTimePerTick                               //0x0118(0x0004)
  *                                                                   MaxUpdateIterations                               //0x011C(0x0004)
  SpawnStages*                                                        SpawnStages                                       //0x0120(0x0050)
  *                                                                   bLimitDeltaTime                                   //0x0170(0x0001)
  NiagaraFastPath_Module_EmitterScalability*                          EmitterScalability                                //0x0174(0x002C)
  NiagaraFastPath_Module_EmitterLifeCycle*                            EmitterLifeCycle                                  //0x01A0(0x0010)
  SpawnRate*                                                          SpawnRate                                         //0x01B0(0x0010)
  SpawnPerUnit*                                                       SpawnPerUnit                                      //0x01C0(0x0010)
  SpawnBurstInstantaneous*                                            SpawnBurstInstantaneous                           //0x01D0(0x0010)
  NiagaraFastPathAttributeNames*                                      SpawnFastPathAttributeNames                       //0x01E0(0x0040)
  NiagaraFastPathAttributeNames*                                      UpdateFastPathAttributeNames                      //0x0220(0x0040)
  *                                                                   UniqueEmitterName                                 //0x0260(0x0010)
  RendererProperties*                                                 RendererProperties                                //0x0270(0x0010)
  EventHandlerScriptProps*                                            EventHandlerScriptProps                           //0x0280(0x0010)
  NiagaraScript*                                                      GPUComputeScript                                  //0x0290(0x0008)
  SharedEventGeneratorIds*                                            SharedEventGeneratorIds                           //0x0298(0x0010)
};


class NiagaraEventReceiverEmitterAction : public Object
{
};


class NiagaraEventReceiverEmitterAction_SpawnParticles : public NiagaraEventReceiverEmitterAction
{
  *                                                                   NumParticles                                      //0x0028(0x0004)
};


class NiagaraFunctionLibrary : public BlueprintFunctionLibrary
{
  SystemTemplate*                                                     SpawnSystemAttached                               //0x0000(0x0229)
  WorldContextObject*                                                 SpawnSystemAtLocation                             //0x0000(0x0229)
  NiagaraSystem*                                                      OverrideSystemUserVariableStaticMeshComponent     //0x0000(0x0229)
  NiagaraSystem*                                                      OverrideSystemUserVariableStaticMesh              //0x0000(0x0229)
  NiagaraSystem*                                                      OverrideSystemUserVariableSkeletalMeshComponent   //0x0000(0x0229)
  WorldContextObject*                                                 GetNiagaraParameterCollection                     //0x0000(0x0229)
};


class NiagaraRendererProperties : public NiagaraMergeable
{
  *                                                                   SortOrderHint                                     //0x0028(0x0004)
  *                                                                   bIsEnabled                                        //0x002C(0x0001)
};


class NiagaraLightRendererProperties : public NiagaraRendererProperties
{
  *                                                                   bUseInverseSquaredFalloff                         //0x0030(0x0001)
  *                                                                   bAffectsTranslucency                              //0x0030(0x0001)
  *                                                                   bOverrideRenderingEnabled                         //0x0030(0x0001)
  *                                                                   RadiusScale                                       //0x0034(0x0004)
  Vector*                                                             ColorAdd                                          //0x0038(0x000C)
  NiagaraVariableAttributeBinding*                                    LightRenderingEnabledBinding                      //0x0048(0x0090)
  NiagaraVariableAttributeBinding*                                    LightExponentBinding                              //0x00D8(0x0090)
  NiagaraVariableAttributeBinding*                                    PositionBinding                                   //0x0168(0x0090)
  NiagaraVariableAttributeBinding*                                    ColorBinding                                      //0x01F8(0x0090)
  NiagaraVariableAttributeBinding*                                    RadiusBinding                                     //0x0288(0x0090)
  NiagaraVariableAttributeBinding*                                    VolumetricScatteringBinding                       //0x0318(0x0090)
};


class NiagaraMeshRendererProperties : public NiagaraRendererProperties
{
  StaticMesh*                                                         ParticleMesh                                      //0x0030(0x0008)
  UnderlyingType*                                                     SortMode                                          //0x0038(0x0001)
  *                                                                   bOverrideMaterials                                //0x003C(0x0001)
  *                                                                   bSortOnlyWhenTranslucent                          //0x003C(0x0001)
  OverrideMaterials*                                                  OverrideMaterials                                 //0x0040(0x0010)
  UnderlyingType*                                                     FacingMode                                        //0x0050(0x0001)
  NiagaraVariableAttributeBinding*                                    PositionBinding                                   //0x0058(0x0090)
  NiagaraVariableAttributeBinding*                                    ColorBinding                                      //0x00E8(0x0090)
  NiagaraVariableAttributeBinding*                                    VelocityBinding                                   //0x0178(0x0090)
  NiagaraVariableAttributeBinding*                                    MeshOrientationBinding                            //0x0208(0x0090)
  NiagaraVariableAttributeBinding*                                    ScaleBinding                                      //0x0298(0x0090)
  NiagaraVariableAttributeBinding*                                    DynamicMaterialBinding                            //0x0328(0x0090)
  NiagaraVariableAttributeBinding*                                    DynamicMaterial1Binding                           //0x03B8(0x0090)
  NiagaraVariableAttributeBinding*                                    DynamicMaterial2Binding                           //0x0448(0x0090)
  NiagaraVariableAttributeBinding*                                    DynamicMaterial3Binding                           //0x04D8(0x0090)
  NiagaraVariableAttributeBinding*                                    MaterialRandomBinding                             //0x0568(0x0090)
  NiagaraVariableAttributeBinding*                                    CustomSortingBinding                              //0x05F8(0x0090)
  NiagaraVariableAttributeBinding*                                    NormalizedAgeBinding                              //0x0688(0x0090)
};


class NiagaraParameterCollectionInstance : public Object
{
  NiagaraParameterCollection*                                         Collection                                        //0x0028(0x0008)
  OverridenParameters*                                                OverridenParameters                               //0x0030(0x0010)
  NiagaraParameterStore*                                              ParameterStorage                                  //0x0040(0x00B8)
  *                                                                   SetVectorParameter                                //0x0000(0x0229)
  *                                                                   SetVector4Parameter                               //0x0000(0x0229)
  *                                                                   SetVector2DParameter                              //0x0000(0x0229)
  *                                                                   SetQuatParameter                                  //0x0000(0x0229)
  *                                                                   SetIntParameter                                   //0x0000(0x0229)
  *                                                                   SetFloatParameter                                 //0x0000(0x0229)
  *                                                                   SetColorParameter                                 //0x0000(0x0229)
  *                                                                   SetBoolParameter                                  //0x0000(0x0229)
  *                                                                   GetVectorParameter                                //0x0000(0x0229)
  *                                                                   GetVector4Parameter                               //0x0000(0x0229)
  *                                                                   GetVector2DParameter                              //0x0000(0x0229)
  *                                                                   GetQuatParameter                                  //0x0000(0x0229)
  *                                                                   GetIntParameter                                   //0x0000(0x0229)
  *                                                                   GetFloatParameter                                 //0x0000(0x0229)
  *                                                                   GetColorParameter                                 //0x0000(0x0229)
  *                                                                   GetBoolParameter                                  //0x0000(0x0229)
};


class NiagaraParameterCollection : public Object
{
  *                                                                   Namespace                                         //0x0028(0x0008)
  Parameters*                                                         Parameters                                        //0x0030(0x0010)
  NiagaraParameterCollectionInstance*                                 DefaultInstance                                   //0x0040(0x0008)
  Guid*                                                               CompileId                                         //0x0048(0x0010)
};


class NiagaraPreviewBase : public Actor
{
  InSystem*                                                           SetSystem                                         //0x0000(0x0229)
  *                                                                   SetLabelText                                      //0x0000(0x0229)
};


class NiagaraPreviewAxis : public Object
{
  *                                                                   Num                                               //0x0000(0x0229)
  PreviewComponent*                                                   ApplyToPreview                                    //0x0000(0x0229)
};


class NiagaraPreviewAxis_InterpParamBase : public NiagaraPreviewAxis
{
  *                                                                   Param                                             //0x0028(0x0008)
  *                                                                   Count                                             //0x0030(0x0004)
};


class NiagaraPreviewAxis_InterpParamInt32 : public NiagaraPreviewAxis_InterpParamBase
{
  *                                                                   Min                                               //0x0038(0x0004)
  *                                                                   Max                                               //0x003C(0x0004)
};


class NiagaraPreviewAxis_InterpParamFloat : public NiagaraPreviewAxis_InterpParamBase
{
  *                                                                   Min                                               //0x0038(0x0004)
  *                                                                   Max                                               //0x003C(0x0004)
};


class NiagaraPreviewAxis_InterpParamVector2D : public NiagaraPreviewAxis_InterpParamBase
{
  Vector2D*                                                           Min                                               //0x0038(0x0008)
  Vector2D*                                                           Max                                               //0x0040(0x0008)
};


class NiagaraPreviewAxis_InterpParamVector : public NiagaraPreviewAxis_InterpParamBase
{
  Vector*                                                             Min                                               //0x0038(0x000C)
  Vector*                                                             Max                                               //0x0044(0x000C)
};


class NiagaraPreviewAxis_InterpParamVector4 : public NiagaraPreviewAxis_InterpParamBase
{
  Vector4*                                                            Min                                               //0x0040(0x0010)
  Vector4*                                                            Max                                               //0x0050(0x0010)
};


class NiagaraPreviewAxis_InterpParamLinearColor : public NiagaraPreviewAxis_InterpParamBase
{
  LinearColor*                                                        Min                                               //0x0038(0x0010)
  LinearColor*                                                        Max                                               //0x0048(0x0010)
};


class NiagaraPreviewGrid : public Actor
{
  NiagaraSystem*                                                      System                                            //0x0218(0x0008)
  UnderlyingType*                                                     ResetMode                                         //0x0220(0x0001)
  NiagaraPreviewAxis*                                                 PreviewAxisX                                      //0x0228(0x0008)
  NiagaraPreviewAxis*                                                 PreviewAxisY                                      //0x0230(0x0008)
  Class*                                                              PreviewClass                                      //0x0238(0x0008)
  *                                                                   SpacingX                                          //0x0240(0x0004)
  *                                                                   SpacingY                                          //0x0244(0x0004)
  *                                                                   NumX                                              //0x0248(0x0004)
  *                                                                   NumY                                              //0x024C(0x0004)
  PreviewComponents*                                                  PreviewComponents                                 //0x0250(0x0010)
  *                                                                   DeactivatePreviews                                //0x0000(0x0229)
  *                                                                   ActivatePreviews                                  //0x0000(0x0229)
};


class NiagaraRibbonRendererProperties : public NiagaraRendererProperties
{
  MaterialInterface*                                                  Material                                          //0x0030(0x0008)
  UnderlyingType*                                                     FacingMode                                        //0x0038(0x0001)
  *                                                                   UV0TilingDistance                                 //0x003C(0x0004)
  Vector2D*                                                           UV0Scale                                          //0x0040(0x0008)
  Vector2D*                                                           UV0Offset                                         //0x0048(0x0008)
  UnderlyingType*                                                     UV0AgeOffsetMode                                  //0x0050(0x0001)
  *                                                                   UV1TilingDistance                                 //0x0054(0x0004)
  Vector2D*                                                           UV1Scale                                          //0x0058(0x0008)
  Vector2D*                                                           UV1Offset                                         //0x0060(0x0008)
  UnderlyingType*                                                     UV1AgeOffsetMode                                  //0x0068(0x0001)
  UnderlyingType*                                                     DrawDirection                                     //0x0069(0x0001)
  *                                                                   CurveTension                                      //0x006C(0x0004)
  UnderlyingType*                                                     TessellationMode                                  //0x0070(0x0001)
  *                                                                   TessellationFactor                                //0x0074(0x0004)
  *                                                                   bUseConstantFactor                                //0x0078(0x0001)
  *                                                                   TessellationAngle                                 //0x007C(0x0004)
  *                                                                   bScreenSpaceTessellation                          //0x0080(0x0001)
  NiagaraVariableAttributeBinding*                                    PositionBinding                                   //0x0088(0x0090)
  NiagaraVariableAttributeBinding*                                    ColorBinding                                      //0x0118(0x0090)
  NiagaraVariableAttributeBinding*                                    VelocityBinding                                   //0x01A8(0x0090)
  NiagaraVariableAttributeBinding*                                    NormalizedAgeBinding                              //0x0238(0x0090)
  NiagaraVariableAttributeBinding*                                    RibbonTwistBinding                                //0x02C8(0x0090)
  NiagaraVariableAttributeBinding*                                    RibbonWidthBinding                                //0x0358(0x0090)
  NiagaraVariableAttributeBinding*                                    RibbonFacingBinding                               //0x03E8(0x0090)
  NiagaraVariableAttributeBinding*                                    RibbonIdBinding                                   //0x0478(0x0090)
  NiagaraVariableAttributeBinding*                                    RibbonLinkOrderBinding                            //0x0508(0x0090)
  NiagaraVariableAttributeBinding*                                    MaterialRandomBinding                             //0x0598(0x0090)
  NiagaraVariableAttributeBinding*                                    DynamicMaterialBinding                            //0x0628(0x0090)
  NiagaraVariableAttributeBinding*                                    DynamicMaterial1Binding                           //0x06B8(0x0090)
  NiagaraVariableAttributeBinding*                                    DynamicMaterial2Binding                           //0x0748(0x0090)
  NiagaraVariableAttributeBinding*                                    DynamicMaterial3Binding                           //0x07D8(0x0090)
};


class NiagaraScript : public Object
{
  UnderlyingType*                                                     Usage                                             //0x0028(0x0001)
  *                                                                   UsageIndex                                        //0x002C(0x0004)
  Guid*                                                               UsageId                                           //0x0030(0x0010)
  NiagaraParameterStore*                                              RapidIterationParameters                          //0x0040(0x00B8)
  NiagaraScriptExecutionParameterStore*                               ScriptExecutionParamStore                         //0x00F8(0x00D8)
  ScriptExecutionBoundParameters*                                     ScriptExecutionBoundParameters                    //0x01D0(0x0010)
  NiagaraVMExecutableDataId*                                          CachedScriptVMId                                  //0x01E0(0x0050)
  NiagaraVMExecutableDataId*                                          LastGeneratedVMId                                 //0x0230(0x0050)
  NiagaraVMExecutableData*                                            CachedScriptVM                                    //0x0418(0x0118)
  CachedParameterCollectionReferences*                                CachedParameterCollectionReferences               //0x0530(0x0010)
  CachedDefaultDataInterfaces*                                        CachedDefaultDataInterfaces                       //0x0540(0x0010)
  *                                                                   OnCompilationComplete                             //0x0000(0x0229)
};


class NiagaraScriptSourceBase : public Object
{
};


class NiagaraSettings : public DeveloperSettings
{
  AdditionalParameterTypes*                                           AdditionalParameterTypes                          //0x0038(0x0010)
  AdditionalPayloadTypes*                                             AdditionalPayloadTypes                            //0x0048(0x0010)
  AdditionalParameterEnums*                                           AdditionalParameterEnums                          //0x0058(0x0010)
};


class NiagaraSpriteRendererProperties : public NiagaraRendererProperties
{
  MaterialInterface*                                                  Material                                          //0x0030(0x0008)
  UnderlyingType*                                                     Alignment                                         //0x0038(0x0001)
  UnderlyingType*                                                     FacingMode                                        //0x0039(0x0001)
  Vector*                                                             CustomFacingVectorMask                            //0x003C(0x000C)
  Vector2D*                                                           PivotInUVSpace                                    //0x0048(0x0008)
  UnderlyingType*                                                     SortMode                                          //0x0050(0x0001)
  Vector2D*                                                           SubImageSize                                      //0x0054(0x0008)
  *                                                                   bSubImageBlend                                    //0x005C(0x0001)
  *                                                                   bRemoveHMDRollInVR                                //0x005C(0x0001)
  *                                                                   bSortOnlyWhenTranslucent                          //0x005C(0x0001)
  *                                                                   MinFacingCameraBlendDistance                      //0x0060(0x0004)
  *                                                                   MaxFacingCameraBlendDistance                      //0x0064(0x0004)
  NiagaraVariableAttributeBinding*                                    PositionBinding                                   //0x0068(0x0090)
  NiagaraVariableAttributeBinding*                                    ColorBinding                                      //0x00F8(0x0090)
  NiagaraVariableAttributeBinding*                                    VelocityBinding                                   //0x0188(0x0090)
  NiagaraVariableAttributeBinding*                                    SpriteRotationBinding                             //0x0218(0x0090)
  NiagaraVariableAttributeBinding*                                    SpriteSizeBinding                                 //0x02A8(0x0090)
  NiagaraVariableAttributeBinding*                                    SpriteFacingBinding                               //0x0338(0x0090)
  NiagaraVariableAttributeBinding*                                    SpriteAlignmentBinding                            //0x03C8(0x0090)
  NiagaraVariableAttributeBinding*                                    SubImageIndexBinding                              //0x0458(0x0090)
  NiagaraVariableAttributeBinding*                                    DynamicMaterialBinding                            //0x04E8(0x0090)
  NiagaraVariableAttributeBinding*                                    DynamicMaterial1Binding                           //0x0578(0x0090)
  NiagaraVariableAttributeBinding*                                    DynamicMaterial2Binding                           //0x0608(0x0090)
  NiagaraVariableAttributeBinding*                                    DynamicMaterial3Binding                           //0x0698(0x0090)
  NiagaraVariableAttributeBinding*                                    CameraOffsetBinding                               //0x0728(0x0090)
  NiagaraVariableAttributeBinding*                                    UVScaleBinding                                    //0x07B8(0x0090)
  NiagaraVariableAttributeBinding*                                    MaterialRandomBinding                             //0x0848(0x0090)
  NiagaraVariableAttributeBinding*                                    CustomSortingBinding                              //0x08D8(0x0090)
  NiagaraVariableAttributeBinding*                                    NormalizedAgeBinding                              //0x0968(0x0090)
};


class FXSystemAsset : public Object
{
  *                                                                   MaxPoolSize                                       //0x0028(0x0004)
};


class NiagaraSystem : public FXSystemAsset
{
  *                                                                   bDumpDebugSystemInfo                              //0x0031(0x0001)
  *                                                                   bDumpDebugEmitterInfo                             //0x0032(0x0001)
  *                                                                   bFixedBounds                                      //0x0034(0x0001)
  UnderlyingType*                                                     FastPathMode                                      //0x0038(0x0004)
  NiagaraFastPath_Module_SystemScalability*                           SystemScalability                                 //0x003C(0x0010)
  NiagaraFastPath_Module_SystemLifeCycle*                             SystemLifeCycle                                   //0x004C(0x0001)
  EmitterHandles*                                                     EmitterHandles                                    //0x0050(0x0010)
  ParameterCollectionOverrides*                                       ParameterCollectionOverrides                      //0x0060(0x0010)
  NiagaraScript*                                                      SystemSpawnScript                                 //0x0070(0x0008)
  NiagaraScript*                                                      SystemUpdateScript                                //0x0078(0x0008)
  NiagaraSystemCompiledData*                                          SystemCompiledData                                //0x0090(0x01A8)
  NiagaraUserRedirectionParameterStore*                               ExposedParameters                                 //0x0238(0x0108)
  Box*                                                                FixedBounds                                       //0x0340(0x001C)
  *                                                                   bAutoDeactivate                                   //0x035C(0x0001)
  *                                                                   WarmupTime                                        //0x0360(0x0004)
  *                                                                   WarmupTickCount                                   //0x0364(0x0004)
  *                                                                   WarmupTickDelta                                   //0x0368(0x0004)
  *                                                                   bHasSystemScriptDIsWithPerInstanceData            //0x036C(0x0001)
  UserDINamesReadInSystemScripts*                                     UserDINamesReadInSystemScripts                    //0x0370(0x0010)
};


class AnimNotify : public Object
{
  MeshComp*                                                           Received_Notify                                   //0x0000(0x0229)
  *                                                                   GetNotifyName                                     //0x0000(0x0229)
};


class AnimNotify_PlayNiagaraEffect : public AnimNotify
{
  NiagaraSystem*                                                      Template                                          //0x0038(0x0008)
  Vector*                                                             LocationOffset                                    //0x0040(0x000C)
  Rotator*                                                            RotationOffset                                    //0x004C(0x000C)
  Vector*                                                             Scale                                             //0x0058(0x000C)
  *                                                                   Attached                                          //0x0080(0x0001)
  *                                                                   SocketName                                        //0x0084(0x0008)
};


class AnimNotifyState : public Object
{
  MeshComp*                                                           Received_NotifyTick                               //0x0000(0x0229)
  MeshComp*                                                           Received_NotifyEnd                                //0x0000(0x0229)
  MeshComp*                                                           Received_NotifyBegin                              //0x0000(0x0229)
  *                                                                   GetNotifyName                                     //0x0000(0x0229)
};


class AnimNotifyState_TimedNiagaraEffect : public AnimNotifyState
{
  NiagaraSystem*                                                      Template                                          //0x0030(0x0008)
  *                                                                   SocketName                                        //0x0038(0x0008)
  Vector*                                                             LocationOffset                                    //0x0040(0x000C)
  Rotator*                                                            RotationOffset                                    //0x004C(0x000C)
  *                                                                   bDestroyAtEnd                                     //0x0058(0x0001)
};


class BlockoutToolsParent : public Actor
{
  SceneComponent*                                                     Root                                              //0x0218(0x0008)
  BillboardComponent*                                                 Billboard                                         //0x0220(0x0008)
  MaterialInterface*                                                  BlockoutGridParent                                //0x0228(0x0008)
  MaterialInstanceDynamic*                                            BlockoutGridMID                                   //0x0230(0x0008)
  MaterialInterface*                                                  BlockoutCurrentMaterial                           //0x0238(0x0008)
  BlockoutMeshComponents*                                             BlockoutMeshComponents                            //0x0240(0x0010)
  EBlockoutMaterialType*                                              BlockoutMaterialType                              //0x0250(0x0001)
  LinearColor*                                                        BlockoutMaterialColor                             //0x0254(0x0010)
  *                                                                   bBlockoutMaterialUseGrid                          //0x0264(0x0001)
  *                                                                   BlockoutMaterialGridSize                          //0x0268(0x0004)
  *                                                                   BlockoutMaterialCheckerLuminance                  //0x026C(0x0004)
  *                                                                   bBlockoutMaterialUseTopColor                      //0x0270(0x0001)
  LinearColor*                                                        BlockoutMaterialTopColor                          //0x0274(0x0010)
  *                                                                   bUseCustomMaterial                                //0x0284(0x0001)
  MaterialInterface*                                                  CustomMaterial                                    //0x0288(0x0008)
  MaterialInterface*                                                  BlockoutCustomMaterial                            //0x0290(0x0008)
  *                                                                   bBlockoutEnableCollisions                         //0x0298(0x0001)
  *                                                                   bBlockoutCastShadows                              //0x0299(0x0001)
  *                                                                   RerunConstructionScript                           //0x0000(0x0229)
  *                                                                   BlockoutSetMaterial                               //0x0000(0x0229)
};


class AsyncLoadingScreenLibrary : public BlueprintFunctionLibrary
{
  *                                                                   StopLoadingScreen                                 //0x0000(0x0229)
  *                                                                   SetDisplayTipTextIndex                            //0x0000(0x0229)
  *                                                                   SetDisplayMovieIndex                              //0x0000(0x0229)
  *                                                                   SetDisplayBackgroundIndex                         //0x0000(0x0229)
};


class LoadingScreenSettings : public DeveloperSettings
{
  ALoadingScreenSettings*                                             StartupLoadingScreen                              //0x0038(0x0410)
  ALoadingScreenSettings*                                             DefaultLoadingScreen                              //0x0448(0x0410)
  ClassicLayoutSettings*                                              Classic                                           //0x0858(0x00A8)
  CenterLayoutSettings*                                               Center                                            //0x0900(0x00A0)
  LetterboxLayoutSettings*                                            Letterbox                                         //0x09A0(0x0138)
  SidebarLayoutSettings*                                              Sidebar                                           //0x0AD8(0x00B0)
  DualSidebarLayoutSettings*                                          DualSidebar                                       //0x0B88(0x0138)
};


class DatasmithObjectTemplate : public Object
{
};


class DatasmithActorTemplate : public DatasmithObjectTemplate
{
  Layers*                                                             Layers                                            //0x0030(0x0050)
  Tags*                                                               Tags                                              //0x0080(0x0050)
};


class DatasmithAdditionalData : public Object
{
};


class DatasmithAreaLightActor : public Actor
{
  UnderlyingType*                                                     LightType                                         //0x0218(0x0001)
  UnderlyingType*                                                     LightShape                                        //0x0219(0x0001)
  Vector2D*                                                           Dimensions                                        //0x021C(0x0008)
  *                                                                   Intensity                                         //0x0224(0x0004)
  UnderlyingType*                                                     IntensityUnits                                    //0x0228(0x0001)
  LinearColor*                                                        Color                                             //0x022C(0x0010)
  *                                                                   Temperature                                       //0x023C(0x0004)
  TextureLightProfile*                                                IESTexture                                        //0x0240(0x0008)
  *                                                                   bUseIESBrightness                                 //0x0248(0x0001)
  *                                                                   IESBrightnessScale                                //0x024C(0x0004)
  Rotator*                                                            Rotation                                          //0x0250(0x000C)
  *                                                                   SourceRadius                                      //0x025C(0x0004)
  *                                                                   SourceLength                                      //0x0260(0x0004)
  *                                                                   AttenuationRadius                                 //0x0264(0x0004)
  *                                                                   SpotlightInnerAngle                               //0x0268(0x0004)
  *                                                                   SpotlightOuterAngle                               //0x026C(0x0004)
};


class DatasmithAreaLightActorTemplate : public DatasmithObjectTemplate
{
  UnderlyingType*                                                     LightType                                         //0x0030(0x0001)
  UnderlyingType*                                                     LightShape                                        //0x0031(0x0001)
  Vector2D*                                                           Dimensions                                        //0x0034(0x0008)
  LinearColor*                                                        Color                                             //0x003C(0x0010)
  *                                                                   Intensity                                         //0x004C(0x0004)
  UnderlyingType*                                                     IntensityUnits                                    //0x0050(0x0001)
  *                                                                   Temperature                                       //0x0054(0x0004)
  TextureLightProfile*                                                IESTexture                                        //0x0058(0x0028)
  *                                                                   bUseIESBrightness                                 //0x0080(0x0001)
  *                                                                   IESBrightnessScale                                //0x0084(0x0004)
  Rotator*                                                            Rotation                                          //0x0088(0x000C)
  *                                                                   SourceRadius                                      //0x0094(0x0004)
  *                                                                   SourceLength                                      //0x0098(0x0004)
  *                                                                   AttenuationRadius                                 //0x009C(0x0004)
};


class AssetImportData : public Object
{
};


class DatasmithAssetImportData : public AssetImportData
{
};


class DatasmithStaticMeshImportData : public DatasmithAssetImportData
{
};


class DatasmithStaticMeshCADImportData : public DatasmithStaticMeshImportData
{
};


class DatasmithSceneImportData : public AssetImportData
{
};


class DatasmithTranslatedSceneImportData : public DatasmithSceneImportData
{
};


class DatasmithCADImportSceneData : public DatasmithSceneImportData
{
};


class DatasmithMDLSceneImportData : public DatasmithSceneImportData
{
};


class DatasmithGLTFSceneImportData : public DatasmithSceneImportData
{
  *                                                                   Generator                                         //0x0028(0x0010)
  *                                                                   version                                           //0x0038(0x0004)
  *                                                                   Author                                            //0x0040(0x0010)
  *                                                                   License                                           //0x0050(0x0010)
  *                                                                   Source                                            //0x0060(0x0010)
};


class DatasmithStaticMeshGLTFImportData : public DatasmithStaticMeshImportData
{
  *                                                                   SourceMeshName                                    //0x0028(0x0010)
};


class DatasmithFBXSceneImportData : public DatasmithSceneImportData
{
  *                                                                   bGenerateLightmapUVs                              //0x0028(0x0001)
  *                                                                   TexturesDir                                       //0x0030(0x0010)
  *                                                                   IntermediateSerialization                         //0x0040(0x0001)
  *                                                                   bColorizeMaterials                                //0x0041(0x0001)
};


class DatasmithDeltaGenAssetImportData : public DatasmithAssetImportData
{
};


class DatasmithDeltaGenSceneImportData : public DatasmithFBXSceneImportData
{
  *                                                                   bMergeNodes                                       //0x0048(0x0001)
  *                                                                   bOptimizeDuplicatedNodes                          //0x0049(0x0001)
  *                                                                   bRemoveInvisibleNodes                             //0x004A(0x0001)
  *                                                                   bSimplifyNodeHierarchy                            //0x004B(0x0001)
  *                                                                   bImportVar                                        //0x004C(0x0001)
  *                                                                   VarPath                                           //0x0050(0x0010)
  *                                                                   bImportPos                                        //0x0060(0x0001)
  *                                                                   PosPath                                           //0x0068(0x0010)
  *                                                                   bImportTml                                        //0x0078(0x0001)
  *                                                                   TmlPath                                           //0x0080(0x0010)
};


class DatasmithVREDAssetImportData : public DatasmithAssetImportData
{
};


class DatasmithVREDSceneImportData : public DatasmithFBXSceneImportData
{
  *                                                                   bMergeNodes                                       //0x0048(0x0001)
  *                                                                   bOptimizeDuplicatedNodes                          //0x0049(0x0001)
  *                                                                   bImportMats                                       //0x004A(0x0001)
  *                                                                   MatsPath                                          //0x0050(0x0010)
  *                                                                   bImportVar                                        //0x0060(0x0001)
  *                                                                   bCleanVar                                         //0x0061(0x0001)
  *                                                                   VarPath                                           //0x0068(0x0010)
  *                                                                   bImportLightInfo                                  //0x0078(0x0001)
  *                                                                   LightInfoPath                                     //0x0080(0x0010)
  *                                                                   bImportClipInfo                                   //0x0090(0x0001)
  *                                                                   ClipInfoPath                                      //0x0098(0x0010)
};


class DatasmithIFCSceneImportData : public DatasmithSceneImportData
{
};


class DatasmithStaticMeshIFCImportData : public DatasmithStaticMeshImportData
{
  *                                                                   SourceGlobalId                                    //0x0028(0x0010)
};


class AssetUserData : public Object
{
};


class DatasmithAssetUserData : public AssetUserData
{
  MetaData_Key*                                                       MetaData                                          //0x0028(0x0050)
};


class DatasmithCineCameraActorTemplate : public DatasmithObjectTemplate
{
  DatasmithCameraLookatTrackingSettingsTemplate*                      LookatTrackingSettings                            //0x0030(0x0030)
};


class DatasmithCineCameraComponentTemplate : public DatasmithObjectTemplate
{
  DatasmithCameraFilmbackSettingsTemplate*                            FilmbackSettings                                  //0x0030(0x0008)
  DatasmithCameraLensSettingsTemplate*                                LensSettings                                      //0x0038(0x0004)
  DatasmithCameraFocusSettingsTemplate*                               FocusSettings                                     //0x003C(0x0008)
  *                                                                   CurrentFocalLength                                //0x0044(0x0004)
  *                                                                   CurrentAperture                                   //0x0048(0x0004)
  DatasmithPostProcessSettingsTemplate*                               PostProcessSettings                               //0x0050(0x0040)
};


class DatasmithContentBlueprintLibrary : public BlueprintFunctionLibrary
{
  Object*                                                             GetDatasmithUserDataValueForKey                   //0x0000(0x0229)
  Object*                                                             GetDatasmithUserDataKeysAndValuesForValue         //0x0000(0x0229)
  Object*                                                             GetDatasmithUserData                              //0x0000(0x0229)
};


class DatasmithCustomActionBase : public Object
{
};


class DatasmithImportedSequencesActor : public Actor
{
  ImportedSequences*                                                  ImportedSequences                                 //0x0218(0x0010)
  SequenceToPlay*                                                     PlayLevelSequence                                 //0x0000(0x0229)
};


class DatasmithCommonTessellationOptions : public Object
{
  DatasmithTessellationOptions*                                       Options                                           //0x0028(0x0010)
};


class DatasmithImportOptions : public Object
{
  UnderlyingType*                                                     SearchPackagePolicy                               //0x0028(0x0001)
  UnderlyingType*                                                     MaterialConflictPolicy                            //0x0029(0x0001)
  UnderlyingType*                                                     TextureConflictPolicy                             //0x002A(0x0001)
  UnderlyingType*                                                     StaticMeshActorImportPolicy                       //0x002B(0x0001)
  UnderlyingType*                                                     LightImportPolicy                                 //0x002C(0x0001)
  UnderlyingType*                                                     CameraImportPolicy                                //0x002D(0x0001)
  UnderlyingType*                                                     OtherActorImportPolicy                            //0x002E(0x0001)
  UnderlyingType*                                                     MaterialQuality                                   //0x002F(0x0001)
  DatasmithImportBaseOptions*                                         BaseOptions                                       //0x0034(0x0014)
  DatasmithReimportOptions*                                           ReimportOptions                                   //0x0048(0x0002)
  *                                                                   Filename                                          //0x0050(0x0010)
  *                                                                   FilePath                                          //0x0060(0x0010)
};


class DatasmithLandscapeTemplate : public DatasmithObjectTemplate
{
  MaterialInterface*                                                  LandscapeMaterial                                 //0x0030(0x0008)
  *                                                                   StaticLightingLOD                                 //0x0038(0x0004)
};


class DatasmithLightComponentTemplate : public DatasmithObjectTemplate
{
  *                                                                   bVisible                                          //0x0030(0x0001)
  *                                                                   CastShadows                                       //0x0034(0x0001)
  *                                                                   bUseTemperature                                   //0x0034(0x0001)
  *                                                                   bUseIESBrightness                                 //0x0034(0x0001)
  *                                                                   Intensity                                         //0x0038(0x0004)
  *                                                                   Temperature                                       //0x003C(0x0004)
  *                                                                   IESBrightnessScale                                //0x0040(0x0004)
  LinearColor*                                                        LightColor                                        //0x0044(0x0010)
  MaterialInterface*                                                  LightFunctionMaterial                             //0x0058(0x0008)
  TextureLightProfile*                                                IESTexture                                        //0x0060(0x0008)
};


class DatasmithMaterialInstanceTemplate : public DatasmithObjectTemplate
{
  ScalarParameterValues_Key*                                          ScalarParameterValues                             //0x0030(0x0050)
  VectorParameterValues_Key*                                          VectorParameterValues                             //0x0080(0x0050)
  TextureParameterValues_Key*                                         TextureParameterValues                            //0x00D0(0x0050)
  DatasmithStaticParameterSetTemplate*                                StaticParameters                                  //0x0120(0x0050)
};


class DatasmithPointLightComponentTemplate : public DatasmithObjectTemplate
{
  UnderlyingType*                                                     IntensityUnits                                    //0x0030(0x0001)
  *                                                                   SourceRadius                                      //0x0034(0x0004)
  *                                                                   SourceLength                                      //0x0038(0x0004)
  *                                                                   AttenuationRadius                                 //0x003C(0x0004)
};


class DatasmithPostProcessVolumeTemplate : public DatasmithObjectTemplate
{
  DatasmithPostProcessSettingsTemplate*                               Settings                                          //0x0030(0x0040)
  *                                                                   bEnabled                                          //0x0070(0x0001)
  *                                                                   bUnbound                                          //0x0070(0x0001)
};


class DatasmithScene : public Object
{
};


class DatasmithSceneActor : public Actor
{
  DatasmithScene*                                                     Scene                                             //0x0218(0x0008)
  RelatedActors_Key*                                                  RelatedActors                                     //0x0220(0x0050)
};


class DatasmithSceneComponentTemplate : public DatasmithObjectTemplate
{
  Transform*                                                          RelativeTransform                                 //0x0030(0x0030)
  EComponentMobility*                                                 Mobility                                          //0x0060(0x0001)
  SceneComponent*                                                     AttachParent                                      //0x0068(0x0028)
  Tags*                                                               Tags                                              //0x0090(0x0050)
};


class DatasmithSkyLightComponentTemplate : public DatasmithObjectTemplate
{
  ESkyLightSourceType*                                                SourceType                                        //0x0030(0x0001)
  *                                                                   CubemapResolution                                 //0x0034(0x0004)
  TextureCube*                                                        Cubemap                                           //0x0038(0x0008)
};


class DatasmithSpotLightComponentTemplate : public DatasmithObjectTemplate
{
  *                                                                   InnerConeAngle                                    //0x0030(0x0004)
  *                                                                   OuterConeAngle                                    //0x0034(0x0004)
};


class DatasmithStaticMeshComponentTemplate : public DatasmithObjectTemplate
{
  StaticMesh*                                                         StaticMesh                                        //0x0030(0x0008)
  OverrideMaterials*                                                  OverrideMaterials                                 //0x0038(0x0010)
};


class DatasmithStaticMeshTemplate : public DatasmithObjectTemplate
{
  DatasmithMeshSectionInfoMapTemplate*                                SectionInfoMap                                    //0x0030(0x0050)
  *                                                                   LightMapCoordinateIndex                           //0x0080(0x0004)
  *                                                                   LightMapResolution                                //0x0084(0x0004)
  BuildSettings*                                                      BuildSettings                                     //0x0088(0x0010)
  StaticMaterials*                                                    StaticMaterials                                   //0x0098(0x0010)
};


class GamepadCursorSettings : public DeveloperSettings
{
  RuntimeFloatCurve*                                                  AnalogCursorAccelerationCurve                     //0x0038(0x0088)
  *                                                                   MaxAnalogCursorSpeed                              //0x00C0(0x0004)
  *                                                                   MaxAnalogCursorSpeedWhenHovered                   //0x00C4(0x0004)
  *                                                                   AnalogCursorDragCoefficient                       //0x00C8(0x0004)
  *                                                                   AnalogCursorDragCoefficientWhenHovered            //0x00CC(0x0004)
  *                                                                   MinAnalogCursorSpeed                              //0x00D0(0x0004)
  *                                                                   AnalogCursorDeadZone                              //0x00D4(0x0004)
  *                                                                   AnalogCursorAccelerationMultiplier                //0x00D8(0x0004)
  *                                                                   AnalogCursorSize                                  //0x00DC(0x0004)
  *                                                                   bUseEngineAnalogCursor                            //0x00E0(0x0001)
  *                                                                   bAnalogCursorNoAcceleration                       //0x00E1(0x0001)
};


class VirtualCursorFunctionLibrary : public BlueprintFunctionLibrary
{
  *                                                                   IsCursorOverInteractableWidget                    //0x0000(0x0229)
  PC*                                                                 EnableVirtualCursor                               //0x0000(0x0229)
  PC*                                                                 DisableVirtualCursor                              //0x0000(0x0229)
};


class RawInputFunctionLibrary : public BlueprintFunctionLibrary
{
  *                                                                   GetRegisteredDevices                              //0x0000(0x0229)
};


class RawInputSettings : public DeveloperSettings
{
  DeviceConfigurations*                                               DeviceConfigurations                              //0x0038(0x0010)
  *                                                                   bRegisterDefaultDevice                            //0x0048(0x0001)
};


class DownloadSteamLeaderboardEntries : public BlueprintAsyncActionBase
{
  ResponseDelegatge__DelegateSignature*                               OnSuccess                                         //0x0030(0x0010)
  ResponseDelegatge__DelegateSignature*                               OnFailure                                         //0x0040(0x0010)
  *                                                                   SteamLeaderboardName                              //0x0050(0x0010)
  UnderlyingType*                                                     DataRequestType                                   //0x0060(0x0001)
  *                                                                   MaxAmountOfEntries                                //0x0064(0x0004)
  *                                                                   RangeStart                                        //0x0068(0x0004)
  *                                                                   RangeEnd                                          //0x006C(0x0004)
  ReturnValue*                                                        DownloadLeaderboardEntries                        //0x0000(0x0229)
};


class UploadScoreToSteamLeaderboard : public BlueprintAsyncActionBase
{
  ResponseDelegate__DelegateSignature*                                OnSuccess                                         //0x0030(0x0010)
  ResponseDelegate__DelegateSignature*                                OnFailure                                         //0x0040(0x0010)
  *                                                                   SteamLeaderboardName                              //0x0050(0x0010)
  *                                                                   Score                                             //0x0060(0x0004)
  UnderlyingType*                                                     UploadMethod                                      //0x0064(0x0001)
  UnderlyingType*                                                     EasyUploadScoreMethod                             //0x0065(0x0001)
  ReturnValue*                                                        UploadScoreToSteamLeaderboard                     //0x0000(0x0229)
};


class MaterialExpression : public Object
{
  Material*                                                           Material                                          //0x0028(0x0008)
  MaterialFunction*                                                   Function                                          //0x0030(0x0008)
  *                                                                   bIsParameterExpression                            //0x0038(0x0001)
};


class MaterialExpressionTextureBase : public MaterialExpression
{
  Texture*                                                            Texture                                           //0x0040(0x0008)
  EMaterialSamplerType*                                               SamplerType                                       //0x0048(0x0001)
  *                                                                   IsDefaultMeshpaintTexture                         //0x0049(0x0001)
};


class MaterialExpressionTextureSample : public MaterialExpressionTextureBase
{
  ExpressionInput*                                                    Coordinates                                       //0x0050(0x000C)
  ExpressionInput*                                                    TextureObject                                     //0x0064(0x000C)
  ExpressionInput*                                                    MipValue                                          //0x0078(0x000C)
  ExpressionInput*                                                    CoordinatesDX                                     //0x008C(0x000C)
  ExpressionInput*                                                    CoordinatesDY                                     //0x00A0(0x000C)
  ExpressionInput*                                                    AutomaticViewMipBiasValue                         //0x00B4(0x000C)
  ETextureMipValueMode*                                               MipValueMode                                      //0x00C8(0x0001)
  ESamplerSourceMode*                                                 SamplerSource                                     //0x00C9(0x0001)
  *                                                                   AutomaticViewMipBias                              //0x00CA(0x0001)
  *                                                                   ConstCoordinate                                   //0x00CB(0x0001)
  *                                                                   ConstMipValue                                     //0x00CC(0x0004)
};


class MaterialExpressionTextureSampleParameter : public MaterialExpressionTextureSample
{
  *                                                                   ParameterName                                     //0x00D0(0x0008)
  Guid*                                                               ExpressionGUID                                    //0x00D8(0x0010)
  *                                                                   Group                                             //0x00E8(0x0008)
};


class MaterialExpressionTextureSampleParameter2D : public MaterialExpressionTextureSampleParameter
{
};


class MaterialExpressionSpriteTextureSampler : public MaterialExpressionTextureSampleParameter2D
{
  *                                                                   bSampleAdditionalTextures                         //0x00F0(0x0001)
  *                                                                   AdditionalSlotIndex                               //0x00F4(0x0004)
  *                                                                   SlotDisplayName                                   //0x00F8(0x0018)
};


class Pawn : public Actor
{
  *                                                                   bUseControllerRotationPitch                       //0x0220(0x0001)
  *                                                                   bUseControllerRotationYaw                         //0x0220(0x0001)
  *                                                                   bUseControllerRotationRoll                        //0x0220(0x0001)
  *                                                                   bCanAffectNavigationGeneration                    //0x0220(0x0001)
  *                                                                   BaseEyeHeight                                     //0x0224(0x0004)
  EAutoReceiveInput*                                                  AutoPossessPlayer                                 //0x0228(0x0001)
  UnderlyingType*                                                     AutoPossessAI                                     //0x0229(0x0001)
  *                                                                   RemoteViewPitch                                   //0x022A(0x0001)
  Class*                                                              AIControllerClass                                 //0x0230(0x0008)
  PlayerState*                                                        PlayerState                                       //0x0238(0x0008)
  Controller*                                                         LastHitBy                                         //0x0248(0x0008)
  Controller*                                                         Controller                                        //0x0250(0x0008)
  Vector*                                                             ControlInputVector                                //0x025C(0x000C)
  Vector*                                                             LastControlInputVector                            //0x0268(0x000C)
  *                                                                   SpawnDefaultController                            //0x0000(0x0229)
  *                                                                   SetCanAffectNavigationGeneration                  //0x0000(0x0229)
  OldController*                                                      ReceiveUnpossessed                                //0x0000(0x0229)
  NewController*                                                      ReceivePossessed                                  //0x0000(0x0229)
  NoiseMaker*                                                         PawnMakeNoise                                     //0x0000(0x0229)
  *                                                                   OnRep_PlayerState                                 //0x0000(0x0229)
  *                                                                   OnRep_Controller                                  //0x0000(0x0229)
  *                                                                   LaunchPawn                                        //0x0000(0x0229)
  *                                                                   K2_GetMovementInputVector                         //0x0000(0x0229)
  *                                                                   IsPlayerControlled                                //0x0000(0x0229)
  *                                                                   IsPawnControlled                                  //0x0000(0x0229)
  *                                                                   IsMoveInputIgnored                                //0x0000(0x0229)
  *                                                                   IsLocallyControlled                               //0x0000(0x0229)
  *                                                                   IsControlled                                      //0x0000(0x0229)
  *                                                                   IsBotControlled                                   //0x0000(0x0229)
  *                                                                   GetPendingMovementInputVector                     //0x0000(0x0229)
  *                                                                   GetNavAgentLocation                               //0x0000(0x0229)
  ReturnValue*                                                        GetMovementComponent                              //0x0000(0x0229)
  Pawn*                                                               GetMovementBaseActor                              //0x0000(0x0229)
  *                                                                   GetLastMovementInputVector                        //0x0000(0x0229)
  *                                                                   GetControlRotation                                //0x0000(0x0229)
  ReturnValue*                                                        GetController                                     //0x0000(0x0229)
  *                                                                   GetBaseAimRotation                                //0x0000(0x0229)
  *                                                                   DetachFromControllerPendingDestroy                //0x0000(0x0229)
  *                                                                   ConsumeMovementInputVector                        //0x0000(0x0229)
  *                                                                   AddMovementInput                                  //0x0000(0x0229)
  *                                                                   AddControllerYawInput                             //0x0000(0x0229)
  *                                                                   AddControllerRollInput                            //0x0000(0x0229)
  *                                                                   AddControllerPitchInput                           //0x0000(0x0229)
};


class Character : public Pawn
{
  SkeletalMeshComponent*                                              Mesh                                              //0x0278(0x0008)
  CharacterMovementComponent*                                         CharacterMovement                                 //0x0280(0x0008)
  CapsuleComponent*                                                   CapsuleComponent                                  //0x0288(0x0008)
  BasedMovementInfo*                                                  BasedMovement                                     //0x0290(0x0030)
  BasedMovementInfo*                                                  ReplicatedBasedMovement                           //0x02C0(0x0030)
  *                                                                   AnimRootMotionTranslationScale                    //0x02F0(0x0004)
  Vector*                                                             BaseTranslationOffset                             //0x02F4(0x000C)
  Quat*                                                               BaseRotationOffset                                //0x0300(0x0010)
  *                                                                   ReplicatedServerLastTransformUpdateTimeStamp      //0x0310(0x0004)
  *                                                                   ReplayLastTransformUpdateTimeStamp                //0x0314(0x0004)
  *                                                                   ReplicatedMovementMode                            //0x0318(0x0001)
  *                                                                   bInBaseReplication                                //0x0319(0x0001)
  *                                                                   CrouchedEyeHeight                                 //0x031C(0x0004)
  *                                                                   bIsCrouched                                       //0x0320(0x0001)
  *                                                                   bProxyIsJumpForceApplied                          //0x0320(0x0001)
  *                                                                   bPressedJump                                      //0x0320(0x0001)
  *                                                                   bClientUpdating                                   //0x0320(0x0001)
  *                                                                   bClientWasFalling                                 //0x0320(0x0001)
  *                                                                   bClientResimulateRootMotion                       //0x0320(0x0001)
  *                                                                   bClientResimulateRootMotionSources                //0x0320(0x0001)
  *                                                                   bSimGravityDisabled                               //0x0320(0x0001)
  *                                                                   bClientCheckEncroachmentOnNetUpdate               //0x0321(0x0001)
  *                                                                   bServerMoveIgnoreRootMotion                       //0x0321(0x0001)
  *                                                                   bWasJumping                                       //0x0321(0x0001)
  *                                                                   JumpKeyHoldTime                                   //0x0324(0x0004)
  *                                                                   JumpForceTimeRemaining                            //0x0328(0x0004)
  *                                                                   ProxyJumpForceStartedTime                         //0x032C(0x0004)
  *                                                                   JumpMaxHoldTime                                   //0x0330(0x0004)
  *                                                                   JumpMaxCount                                      //0x0334(0x0004)
  *                                                                   JumpCurrentCount                                  //0x0338(0x0004)
  CharacterReachedApexSignature__DelegateSignature*                   OnReachedJumpApex                                 //0x0340(0x0010)
  MovementModeChangedSignature__DelegateSignature*                    MovementModeChangedDelegate                       //0x0360(0x0010)
  CharacterMovementUpdatedSignature__DelegateSignature*               OnCharacterMovementUpdated                        //0x0370(0x0010)
  RootMotionSourceGroup*                                              SavedRootMotion                                   //0x0380(0x00F8)
  RootMotionMovementParams*                                           ClientRootMotionParams                            //0x0480(0x0040)
  RootMotionRepMoves*                                                 RootMotionRepMoves                                //0x04C0(0x0010)
  RepRootMotionMontage*                                               RepRootMotion                                     //0x04D0(0x0158)
  *                                                                   UnCrouch                                          //0x0000(0x0229)
  *                                                                   StopJumping                                       //0x0000(0x0229)
  AnimMontage*                                                        StopAnimMontage                                   //0x0000(0x0229)
  *                                                                   ServerMoveOld                                     //0x0000(0x0229)
  *                                                                   ServerMoveNoBase                                  //0x0000(0x0229)
  *                                                                   ServerMoveDualNoBase                              //0x0000(0x0229)
  ClientMovementBase*                                                 ServerMoveDualHybridRootMotion                    //0x0000(0x0229)
  ClientMovementBase*                                                 ServerMoveDual                                    //0x0000(0x0229)
  ClientMovementBase*                                                 ServerMove                                        //0x0000(0x0229)
  *                                                                   RootMotionDebugClientPrintOnScreen                //0x0000(0x0229)
  AnimMontage*                                                        PlayAnimMontage                                   //0x0000(0x0229)
  *                                                                   OnWalkingOffLedge                                 //0x0000(0x0229)
  *                                                                   OnRep_RootMotion                                  //0x0000(0x0229)
  *                                                                   OnRep_ReplicatedBasedMovement                     //0x0000(0x0229)
  *                                                                   OnRep_ReplayLastTransformUpdateTimeStamp          //0x0000(0x0229)
  *                                                                   OnRep_IsCrouched                                  //0x0000(0x0229)
  *                                                                   OnLaunched                                        //0x0000(0x0229)
  Hit*                                                                OnLanded                                          //0x0000(0x0229)
  *                                                                   OnJumped                                          //0x0000(0x0229)
  *                                                                   LaunchCharacter                                   //0x0000(0x0229)
  *                                                                   K2_UpdateCustomMovement                           //0x0000(0x0229)
  *                                                                   K2_OnStartCrouch                                  //0x0000(0x0229)
  *                                                                   K2_OnMovementModeChanged                          //0x0000(0x0229)
  *                                                                   K2_OnEndCrouch                                    //0x0000(0x0229)
  *                                                                   Jump                                              //0x0000(0x0229)
  *                                                                   IsPlayingRootMotion                               //0x0000(0x0229)
  *                                                                   IsPlayingNetworkedRootMotionMontage               //0x0000(0x0229)
  *                                                                   IsJumpProvidingForce                              //0x0000(0x0229)
  *                                                                   HasAnyRootMotion                                  //0x0000(0x0229)
  ReturnValue*                                                        GetCurrentMontage                                 //0x0000(0x0229)
  *                                                                   GetBaseTranslationOffset                          //0x0000(0x0229)
  *                                                                   GetBaseRotationOffsetRotator                      //0x0000(0x0229)
  *                                                                   GetAnimRootMotionTranslationScale                 //0x0000(0x0229)
  *                                                                   Crouch                                            //0x0000(0x0229)
  NewBase*                                                            ClientVeryShortAdjustPosition                     //0x0000(0x0229)
  *                                                                   ClientCheatWalk                                   //0x0000(0x0229)
  *                                                                   ClientCheatGhost                                  //0x0000(0x0229)
  *                                                                   ClientCheatFly                                    //0x0000(0x0229)
  ServerBase*                                                         ClientAdjustRootMotionSourcePosition              //0x0000(0x0229)
  ServerBase*                                                         ClientAdjustRootMotionPosition                    //0x0000(0x0229)
  NewBase*                                                            ClientAdjustPosition                              //0x0000(0x0229)
  *                                                                   ClientAckGoodMove                                 //0x0000(0x0229)
  *                                                                   CanJumpInternal                                   //0x0000(0x0229)
  *                                                                   CanJump                                           //0x0000(0x0229)
  *                                                                   CanCrouch                                         //0x0000(0x0229)
  *                                                                   CacheInitialMeshOffset                            //0x0000(0x0229)
};


class PaperCharacter : public Character
{
  PaperFlipbookComponent*                                             Sprite                                            //0x0628(0x0008)
};


class PaperFlipbook : public Object
{
  *                                                                   FramesPerSecond                                   //0x0028(0x0004)
  KeyFrames*                                                          KeyFrames                                         //0x0030(0x0010)
  MaterialInterface*                                                  DefaultMaterial                                   //0x0040(0x0008)
  EFlipbookCollisionMode*                                             CollisionSource                                   //0x0048(0x0001)
  *                                                                   IsValidKeyFrameIndex                              //0x0000(0x0229)
  *                                                                   GetTotalDuration                                  //0x0000(0x0229)
  ReturnValue*                                                        GetSpriteAtTime                                   //0x0000(0x0229)
  ReturnValue*                                                        GetSpriteAtFrame                                  //0x0000(0x0229)
  *                                                                   GetNumKeyFrames                                   //0x0000(0x0229)
  *                                                                   GetNumFrames                                      //0x0000(0x0229)
  *                                                                   GetKeyFrameIndexAtTime                            //0x0000(0x0229)
};


class PaperFlipbookActor : public Actor
{
  PaperFlipbookComponent*                                             RenderComponent                                   //0x0218(0x0008)
};


class PaperFlipbookComponent : public MeshComponent
{
  PaperFlipbook*                                                      SourceFlipbook                                    //0x0400(0x0008)
  MaterialInterface*                                                  Material                                          //0x0408(0x0008)
  *                                                                   PlayRate                                          //0x0410(0x0004)
  *                                                                   bLooping                                          //0x0414(0x0001)
  *                                                                   bReversePlayback                                  //0x0414(0x0001)
  *                                                                   bPlaying                                          //0x0414(0x0001)
  *                                                                   AccumulatedTime                                   //0x0418(0x0004)
  *                                                                   CachedFrameIndex                                  //0x041C(0x0004)
  LinearColor*                                                        SpriteColor                                       //0x0420(0x0010)
  BodySetup*                                                          CachedBodySetup                                   //0x0430(0x0008)
  FlipbookFinishedPlaySignature__DelegateSignature*                   OnFinishedPlaying                                 //0x0438(0x0010)
  *                                                                   Stop                                              //0x0000(0x0229)
  *                                                                   SetSpriteColor                                    //0x0000(0x0229)
  *                                                                   SetPlayRate                                       //0x0000(0x0229)
  *                                                                   SetPlaybackPositionInFrames                       //0x0000(0x0229)
  *                                                                   SetPlaybackPosition                               //0x0000(0x0229)
  *                                                                   SetNewTime                                        //0x0000(0x0229)
  *                                                                   SetLooping                                        //0x0000(0x0229)
  NewFlipbook*                                                        SetFlipbook                                       //0x0000(0x0229)
  *                                                                   ReverseFromEnd                                    //0x0000(0x0229)
  *                                                                   Reverse                                           //0x0000(0x0229)
  *                                                                   PlayFromStart                                     //0x0000(0x0229)
  *                                                                   Play                                              //0x0000(0x0229)
  OldFlipbook*                                                        OnRep_SourceFlipbook                              //0x0000(0x0229)
  *                                                                   IsReversing                                       //0x0000(0x0229)
  *                                                                   IsPlaying                                         //0x0000(0x0229)
  *                                                                   IsLooping                                         //0x0000(0x0229)
  *                                                                   GetPlayRate                                       //0x0000(0x0229)
  *                                                                   GetPlaybackPositionInFrames                       //0x0000(0x0229)
  *                                                                   GetPlaybackPosition                               //0x0000(0x0229)
  *                                                                   GetFlipbookLengthInFrames                         //0x0000(0x0229)
  *                                                                   GetFlipbookLength                                 //0x0000(0x0229)
  *                                                                   GetFlipbookFramerate                              //0x0000(0x0229)
  ReturnValue*                                                        GetFlipbook                                       //0x0000(0x0229)
};


class PaperGroupedSpriteActor : public Actor
{
  PaperGroupedSpriteComponent*                                        RenderComponent                                   //0x0218(0x0008)
};


class PaperGroupedSpriteComponent : public MeshComponent
{
  InstanceMaterials*                                                  InstanceMaterials                                 //0x0400(0x0010)
  PerInstanceSpriteData*                                              PerInstanceSpriteData                             //0x0410(0x0010)
  *                                                                   UpdateInstanceTransform                           //0x0000(0x0229)
  *                                                                   UpdateInstanceColor                               //0x0000(0x0229)
  *                                                                   SortInstancesAlongAxis                            //0x0000(0x0229)
  *                                                                   RemoveInstance                                    //0x0000(0x0229)
  *                                                                   GetInstanceTransform                              //0x0000(0x0229)
  *                                                                   GetInstanceCount                                  //0x0000(0x0229)
  *                                                                   ClearInstances                                    //0x0000(0x0229)
  Sprite*                                                             AddInstance                                       //0x0000(0x0229)
};


class PaperRuntimeSettings : public Object
{
  *                                                                   bEnableSpriteAtlasGroups                          //0x0028(0x0001)
  *                                                                   bEnableTerrainSplineEditing                       //0x0029(0x0001)
  *                                                                   bResizeSpriteDataToMatchTextures                  //0x002A(0x0001)
};


class PaperSprite : public Object
{
  AdditionalSourceTextures*                                           AdditionalSourceTextures                          //0x0038(0x0010)
  Vector2D*                                                           BakedSourceUV                                     //0x0048(0x0008)
  Vector2D*                                                           BakedSourceDimension                              //0x0050(0x0008)
  Texture2D*                                                          BakedSourceTexture                                //0x0058(0x0008)
  MaterialInterface*                                                  DefaultMaterial                                   //0x0060(0x0008)
  MaterialInterface*                                                  AlternateMaterial                                 //0x0068(0x0008)
  Sockets*                                                            Sockets                                           //0x0070(0x0010)
  ESpriteCollisionMode*                                               SpriteCollisionDomain                             //0x0080(0x0001)
  *                                                                   PixelsPerUnrealUnit                               //0x0084(0x0004)
  BodySetup*                                                          BodySetup                                         //0x0088(0x0008)
  *                                                                   AlternateMaterialSplitIndex                       //0x0090(0x0004)
  BakedRenderData*                                                    BakedRenderData                                   //0x0098(0x0010)
};


class PaperSpriteActor : public Actor
{
  PaperSpriteComponent*                                               RenderComponent                                   //0x0218(0x0008)
};


class PaperSpriteAtlas : public Object
{
};


class PaperSpriteBlueprintLibrary : public BlueprintFunctionLibrary
{
  Sprite*                                                             MakeBrushFromSprite                               //0x0000(0x0229)
};


class PaperSpriteComponent : public MeshComponent
{
  PaperSprite*                                                        SourceSprite                                      //0x0400(0x0008)
  MaterialInterface*                                                  MaterialOverride                                  //0x0408(0x0008)
  LinearColor*                                                        SpriteColor                                       //0x0410(0x0010)
  *                                                                   SetSpriteColor                                    //0x0000(0x0229)
  NewSprite*                                                          SetSprite                                         //0x0000(0x0229)
  ReturnValue*                                                        GetSprite                                         //0x0000(0x0229)
};


class PaperTerrainActor : public Actor
{
  SceneComponent*                                                     DummyRoot                                         //0x0218(0x0008)
  PaperTerrainSplineComponent*                                        SplineComponent                                   //0x0220(0x0008)
  PaperTerrainComponent*                                              RenderComponent                                   //0x0228(0x0008)
};


class PaperTerrainComponent : public PrimitiveComponent
{
  PaperTerrainMaterial*                                               TerrainMaterial                                   //0x03D8(0x0008)
  *                                                                   bClosedSpline                                     //0x03E0(0x0001)
  *                                                                   bFilledSpline                                     //0x03E1(0x0001)
  PaperTerrainSplineComponent*                                        AssociatedSpline                                  //0x03E8(0x0008)
  *                                                                   RandomSeed                                        //0x03F0(0x0004)
  *                                                                   SegmentOverlapAmount                              //0x03F4(0x0004)
  LinearColor*                                                        TerrainColor                                      //0x03F8(0x0010)
  *                                                                   ReparamStepsPerSegment                            //0x0408(0x0004)
  ESpriteCollisionMode*                                               SpriteCollisionDomain                             //0x040C(0x0001)
  *                                                                   CollisionThickness                                //0x0410(0x0004)
  BodySetup*                                                          CachedBodySetup                                   //0x0418(0x0008)
  *                                                                   SetTerrainColor                                   //0x0000(0x0229)
};


class DataAsset : public Object
{
  Class*                                                              NativeClass                                       //0x0028(0x0008)
};


class PaperTerrainMaterial : public DataAsset
{
  Rules*                                                              Rules                                             //0x0030(0x0010)
  PaperSprite*                                                        InteriorFill                                      //0x0040(0x0008)
};


class SplineComponent : public PrimitiveComponent
{
  SplineCurves*                                                       SplineCurves                                      //0x03D8(0x0068)
  InterpCurveVector*                                                  SplineInfo                                        //0x0440(0x0018)
  InterpCurveQuat*                                                    SplineRotInfo                                     //0x0458(0x0018)
  InterpCurveVector*                                                  SplineScaleInfo                                   //0x0470(0x0018)
  InterpCurveFloat*                                                   SplineReparamTable                                //0x0488(0x0018)
  *                                                                   bAllowSplineEditingPerInstance                    //0x04A0(0x0001)
  *                                                                   ReparamStepsPerSegment                            //0x04A4(0x0004)
  *                                                                   Duration                                          //0x04A8(0x0004)
  *                                                                   bStationaryEndpoints                              //0x04AC(0x0001)
  *                                                                   bSplineHasBeenEdited                              //0x04AD(0x0001)
  *                                                                   bModifiedByConstructionScript                     //0x04AE(0x0001)
  *                                                                   bInputSplinePointsToConstructionScript            //0x04AF(0x0001)
  *                                                                   bDrawDebug                                        //0x04B0(0x0001)
  *                                                                   bClosedLoop                                       //0x04B1(0x0001)
  *                                                                   bLoopPositionOverride                             //0x04B2(0x0001)
  *                                                                   LoopPosition                                      //0x04B4(0x0004)
  Vector*                                                             DefaultUpVector                                   //0x04B8(0x000C)
  *                                                                   UpdateSpline                                      //0x0000(0x0229)
  *                                                                   SetWorldLocationAtSplinePoint                     //0x0000(0x0229)
  *                                                                   SetUpVectorAtSplinePoint                          //0x0000(0x0229)
  *                                                                   SetUnselectedSplineSegmentColor                   //0x0000(0x0229)
  *                                                                   SetTangentsAtSplinePoint                          //0x0000(0x0229)
  *                                                                   SetTangentAtSplinePoint                           //0x0000(0x0229)
  *                                                                   SetSplineWorldPoints                              //0x0000(0x0229)
  *                                                                   SetSplinePointType                                //0x0000(0x0229)
  *                                                                   SetSplinePoints                                   //0x0000(0x0229)
  *                                                                   SetSplineLocalPoints                              //0x0000(0x0229)
  *                                                                   SetSelectedSplineSegmentColor                     //0x0000(0x0229)
  *                                                                   SetLocationAtSplinePoint                          //0x0000(0x0229)
  *                                                                   SetDrawDebug                                      //0x0000(0x0229)
  *                                                                   SetDefaultUpVector                                //0x0000(0x0229)
  *                                                                   SetClosedLoopAtPosition                           //0x0000(0x0229)
  *                                                                   SetClosedLoop                                     //0x0000(0x0229)
  *                                                                   RemoveSplinePoint                                 //0x0000(0x0229)
  *                                                                   IsClosedLoop                                      //0x0000(0x0229)
  *                                                                   GetWorldTangentAtDistanceAlongSpline              //0x0000(0x0229)
  *                                                                   GetWorldRotationAtTime                            //0x0000(0x0229)
  *                                                                   GetWorldRotationAtDistanceAlongSpline             //0x0000(0x0229)
  *                                                                   GetWorldLocationAtTime                            //0x0000(0x0229)
  *                                                                   GetWorldLocationAtSplinePoint                     //0x0000(0x0229)
  *                                                                   GetWorldLocationAtDistanceAlongSpline             //0x0000(0x0229)
  *                                                                   GetWorldDirectionAtTime                           //0x0000(0x0229)
  *                                                                   GetWorldDirectionAtDistanceAlongSpline            //0x0000(0x0229)
  *                                                                   GetVectorPropertyAtSplinePoint                    //0x0000(0x0229)
  *                                                                   GetVectorPropertyAtSplineInputKey                 //0x0000(0x0229)
  *                                                                   GetUpVectorAtTime                                 //0x0000(0x0229)
  *                                                                   GetUpVectorAtSplinePoint                          //0x0000(0x0229)
  *                                                                   GetUpVectorAtSplineInputKey                       //0x0000(0x0229)
  *                                                                   GetUpVectorAtDistanceAlongSpline                  //0x0000(0x0229)
  *                                                                   GetTransformAtTime                                //0x0000(0x0229)
  *                                                                   GetTransformAtSplinePoint                         //0x0000(0x0229)
  *                                                                   GetTransformAtSplineInputKey                      //0x0000(0x0229)
  *                                                                   GetTransformAtDistanceAlongSpline                 //0x0000(0x0229)
  *                                                                   GetTangentAtTime                                  //0x0000(0x0229)
  *                                                                   GetTangentAtSplinePoint                           //0x0000(0x0229)
  *                                                                   GetTangentAtSplineInputKey                        //0x0000(0x0229)
  *                                                                   GetTangentAtDistanceAlongSpline                   //0x0000(0x0229)
  *                                                                   GetSplinePointType                                //0x0000(0x0229)
  *                                                                   GetSplineLength                                   //0x0000(0x0229)
  *                                                                   GetScaleAtTime                                    //0x0000(0x0229)
  *                                                                   GetScaleAtSplinePoint                             //0x0000(0x0229)
  *                                                                   GetScaleAtSplineInputKey                          //0x0000(0x0229)
  *                                                                   GetScaleAtDistanceAlongSpline                     //0x0000(0x0229)
  *                                                                   GetRotationAtTime                                 //0x0000(0x0229)
  *                                                                   GetRotationAtSplinePoint                          //0x0000(0x0229)
  *                                                                   GetRotationAtSplineInputKey                       //0x0000(0x0229)
  *                                                                   GetRotationAtDistanceAlongSpline                  //0x0000(0x0229)
  *                                                                   GetRollAtTime                                     //0x0000(0x0229)
  *                                                                   GetRollAtSplinePoint                              //0x0000(0x0229)
  *                                                                   GetRollAtSplineInputKey                           //0x0000(0x0229)
  *                                                                   GetRollAtDistanceAlongSpline                      //0x0000(0x0229)
  *                                                                   GetRightVectorAtTime                              //0x0000(0x0229)
  *                                                                   GetRightVectorAtSplinePoint                       //0x0000(0x0229)
  *                                                                   GetRightVectorAtSplineInputKey                    //0x0000(0x0229)
  *                                                                   GetRightVectorAtDistanceAlongSpline               //0x0000(0x0229)
  *                                                                   GetNumberOfSplineSegments                         //0x0000(0x0229)
  *                                                                   GetNumberOfSplinePoints                           //0x0000(0x0229)
  *                                                                   GetLocationAtTime                                 //0x0000(0x0229)
  *                                                                   GetLocationAtSplinePoint                          //0x0000(0x0229)
  *                                                                   GetLocationAtSplineInputKey                       //0x0000(0x0229)
  *                                                                   GetLocationAtDistanceAlongSpline                  //0x0000(0x0229)
  *                                                                   GetLocationAndTangentAtSplinePoint                //0x0000(0x0229)
  *                                                                   GetLocalLocationAndTangentAtSplinePoint           //0x0000(0x0229)
  *                                                                   GetLeaveTangentAtSplinePoint                      //0x0000(0x0229)
  *                                                                   GetInputKeyAtDistanceAlongSpline                  //0x0000(0x0229)
  *                                                                   GetFloatPropertyAtSplinePoint                     //0x0000(0x0229)
  *                                                                   GetFloatPropertyAtSplineInputKey                  //0x0000(0x0229)
  *                                                                   GetDistanceAlongSplineAtSplinePoint               //0x0000(0x0229)
  *                                                                   GetDirectionAtTime                                //0x0000(0x0229)
  *                                                                   GetDirectionAtSplinePoint                         //0x0000(0x0229)
  *                                                                   GetDirectionAtSplineInputKey                      //0x0000(0x0229)
  *                                                                   GetDirectionAtDistanceAlongSpline                 //0x0000(0x0229)
  *                                                                   GetDefaultUpVector                                //0x0000(0x0229)
  *                                                                   GetArriveTangentAtSplinePoint                     //0x0000(0x0229)
  *                                                                   FindUpVectorClosestToWorldLocation                //0x0000(0x0229)
  *                                                                   FindTransformClosestToWorldLocation               //0x0000(0x0229)
  *                                                                   FindTangentClosestToWorldLocation                 //0x0000(0x0229)
  *                                                                   FindScaleClosestToWorldLocation                   //0x0000(0x0229)
  *                                                                   FindRotationClosestToWorldLocation                //0x0000(0x0229)
  *                                                                   FindRollClosestToWorldLocation                    //0x0000(0x0229)
  *                                                                   FindRightVectorClosestToWorldLocation             //0x0000(0x0229)
  *                                                                   FindLocationClosestToWorldLocation                //0x0000(0x0229)
  *                                                                   FindInputKeyClosestToWorldLocation                //0x0000(0x0229)
  *                                                                   FindDirectionClosestToWorldLocation               //0x0000(0x0229)
  *                                                                   ClearSplinePoints                                 //0x0000(0x0229)
  *                                                                   AddSplineWorldPoint                               //0x0000(0x0229)
  *                                                                   AddSplinePointAtIndex                             //0x0000(0x0229)
  *                                                                   AddSplinePoint                                    //0x0000(0x0229)
  *                                                                   AddSplineLocalPoint                               //0x0000(0x0229)
  *                                                                   AddPoints                                         //0x0000(0x0229)
  *                                                                   AddPoint                                          //0x0000(0x0229)
};


class PaperTerrainSplineComponent : public SplineComponent
{
};


class PaperTileLayer : public Object
{
  *                                                                   LayerName                                         //0x0028(0x0018)
  *                                                                   LayerWidth                                        //0x0040(0x0004)
  *                                                                   LayerHeight                                       //0x0044(0x0004)
  *                                                                   bHiddenInGame                                     //0x0048(0x0001)
  *                                                                   bLayerCollides                                    //0x0048(0x0001)
  *                                                                   bOverrideCollisionThickness                       //0x0048(0x0001)
  *                                                                   bOverrideCollisionOffset                          //0x0048(0x0001)
  *                                                                   CollisionThicknessOverride                        //0x004C(0x0004)
  *                                                                   CollisionOffsetOverride                           //0x0050(0x0004)
  LinearColor*                                                        LayerColor                                        //0x0054(0x0010)
  *                                                                   AllocatedWidth                                    //0x0064(0x0004)
  *                                                                   AllocatedHeight                                   //0x0068(0x0004)
  AllocatedCells*                                                     AllocatedCells                                    //0x0070(0x0010)
  PaperTileSet*                                                       TileSet                                           //0x0080(0x0008)
  AllocatedGrid*                                                      AllocatedGrid                                     //0x0088(0x0010)
};


class PaperTileMap : public Object
{
  *                                                                   MapWidth                                          //0x0028(0x0004)
  *                                                                   MapHeight                                         //0x002C(0x0004)
  *                                                                   TileWidth                                         //0x0030(0x0004)
  *                                                                   TileHeight                                        //0x0034(0x0004)
  *                                                                   PixelsPerUnrealUnit                               //0x0038(0x0004)
  *                                                                   SeparationPerTileX                                //0x003C(0x0004)
  *                                                                   SeparationPerTileY                                //0x0040(0x0004)
  *                                                                   SeparationPerLayer                                //0x0044(0x0004)
  PaperTileSet*                                                       SelectedTileSet                                   //0x0048(0x0028)
  MaterialInterface*                                                  Material                                          //0x0070(0x0008)
  TileLayers*                                                         TileLayers                                        //0x0078(0x0010)
  *                                                                   CollisionThickness                                //0x0088(0x0004)
  ESpriteCollisionMode*                                               SpriteCollisionDomain                             //0x008C(0x0001)
  ETileMapProjectionMode*                                             ProjectionMode                                    //0x008D(0x0001)
  *                                                                   HexSideLength                                     //0x0090(0x0004)
  BodySetup*                                                          BodySetup                                         //0x0098(0x0008)
  *                                                                   LayerNameIndex                                    //0x00A0(0x0004)
};


class PaperTileMapActor : public Actor
{
  PaperTileMapComponent*                                              RenderComponent                                   //0x0218(0x0008)
};


class PaperTileMapComponent : public MeshComponent
{
  *                                                                   MapWidth                                          //0x0400(0x0004)
  *                                                                   MapHeight                                         //0x0404(0x0004)
  *                                                                   TileWidth                                         //0x0408(0x0004)
  *                                                                   TileHeight                                        //0x040C(0x0004)
  PaperTileSet*                                                       DefaultLayerTileSet                               //0x0410(0x0008)
  MaterialInterface*                                                  Material                                          //0x0418(0x0008)
  TileLayers*                                                         TileLayers                                        //0x0420(0x0010)
  LinearColor*                                                        TileMapColor                                      //0x0430(0x0010)
  *                                                                   UseSingleLayerIndex                               //0x0440(0x0004)
  *                                                                   bUseSingleLayer                                   //0x0444(0x0001)
  PaperTileMap*                                                       TileMap                                           //0x0448(0x0008)
  *                                                                   SetTileMapColor                                   //0x0000(0x0229)
  NewTileMap*                                                         SetTileMap                                        //0x0000(0x0229)
  NewValue*                                                           SetTile                                           //0x0000(0x0229)
  *                                                                   SetLayerColor                                     //0x0000(0x0229)
  *                                                                   SetLayerCollision                                 //0x0000(0x0229)
  *                                                                   SetDefaultCollisionThickness                      //0x0000(0x0229)
  *                                                                   ResizeMap                                         //0x0000(0x0229)
  *                                                                   RebuildCollision                                  //0x0000(0x0229)
  *                                                                   OwnsTileMap                                       //0x0000(0x0229)
  *                                                                   MakeTileMapEditable                               //0x0000(0x0229)
  *                                                                   GetTilePolygon                                    //0x0000(0x0229)
  *                                                                   GetTileMapColor                                   //0x0000(0x0229)
  *                                                                   GetTileCornerPosition                             //0x0000(0x0229)
  *                                                                   GetTileCenterPosition                             //0x0000(0x0229)
  ReturnValue*                                                        GetTile                                           //0x0000(0x0229)
  *                                                                   GetMapSize                                        //0x0000(0x0229)
  *                                                                   GetLayerColor                                     //0x0000(0x0229)
  *                                                                   CreateNewTileMap                                  //0x0000(0x0229)
  ReturnValue*                                                        AddNewLayer                                       //0x0000(0x0229)
};


class PaperTileSet : public Object
{
  IntPoint*                                                           TileSize                                          //0x0028(0x0008)
  Texture2D*                                                          TileSheet                                         //0x0030(0x0008)
  AdditionalSourceTextures*                                           AdditionalSourceTextures                          //0x0038(0x0010)
  IntMargin*                                                          BorderMargin                                      //0x0048(0x0010)
  IntPoint*                                                           PerTileSpacing                                    //0x0058(0x0008)
  IntPoint*                                                           DrawingOffset                                     //0x0060(0x0008)
  *                                                                   WidthInTiles                                      //0x0068(0x0004)
  *                                                                   HeightInTiles                                     //0x006C(0x0004)
  *                                                                   AllocatedWidth                                    //0x0070(0x0004)
  *                                                                   AllocatedHeight                                   //0x0074(0x0004)
  PerTileData*                                                        PerTileData                                       //0x0078(0x0010)
  Terrains*                                                           Terrains                                          //0x0088(0x0010)
  *                                                                   TileWidth                                         //0x0098(0x0004)
  *                                                                   TileHeight                                        //0x009C(0x0004)
  *                                                                   Margin                                            //0x00A0(0x0004)
  *                                                                   Spacing                                           //0x00A4(0x0004)
};


class TileMapBlueprintLibrary : public BlueprintFunctionLibrary
{
  TileSet*                                                            MakeTile                                          //0x0000(0x0229)
  Tile*                                                               GetTileUserData                                   //0x0000(0x0229)
  Tile*                                                               GetTileTransform                                  //0x0000(0x0229)
  Tile*                                                               BreakTile                                         //0x0000(0x0229)
};


class LightPropagationVolumeBlendable : public Object
{
  LightPropagationVolumeSettings*                                     Settings                                          //0x0030(0x0040)
  *                                                                   BlendWeight                                       //0x0070(0x0004)
};


class SkinnedMeshComponent : public MeshComponent
{
  SkeletalMesh*                                                       SkeletalMesh                                      //0x0400(0x0008)
  SkinnedMeshComponent*                                               MasterPoseComponent                               //0x0408(0x0008)
  PhysicsAsset*                                                       PhysicsAssetOverride                              //0x0508(0x0008)
  *                                                                   ForcedLodModel                                    //0x0510(0x0004)
  *                                                                   MinLodModel                                       //0x0514(0x0004)
  *                                                                   StreamingDistanceMultiplier                       //0x0520(0x0004)
  LODInfo*                                                            LODInfo                                           //0x0530(0x0010)
  UnderlyingType*                                                     VisibilityBasedAnimTickOption                     //0x0564(0x0001)
  *                                                                   bOverrideMinLOD                                   //0x0566(0x0001)
  *                                                                   bUseBoundsFromMasterPoseComponent                 //0x0566(0x0001)
  *                                                                   bForceWireframe                                   //0x0566(0x0001)
  *                                                                   bDisplayBones                                     //0x0566(0x0001)
  *                                                                   bDisableMorphTarget                               //0x0566(0x0001)
  *                                                                   bHideSkin                                         //0x0566(0x0001)
  *                                                                   bPerBoneMotionBlur                                //0x0567(0x0001)
  *                                                                   bComponentUseFixedSkelBounds                      //0x0567(0x0001)
  *                                                                   bConsiderAllBodiesForBounds                       //0x0567(0x0001)
  *                                                                   bSyncAttachParentLOD                              //0x0567(0x0001)
  *                                                                   bCanHighlightSelectedSections                     //0x0567(0x0001)
  *                                                                   bRecentlyRendered                                 //0x0567(0x0001)
  *                                                                   bCastCapsuleDirectShadow                          //0x0567(0x0001)
  *                                                                   bCastCapsuleIndirectShadow                        //0x0567(0x0001)
  *                                                                   bCPUSkinning                                      //0x0568(0x0001)
  *                                                                   bEnableUpdateRateOptimizations                    //0x0568(0x0001)
  *                                                                   bDisplayDebugUpdateRateOptimizations              //0x0568(0x0001)
  *                                                                   bRenderStatic                                     //0x0568(0x0001)
  *                                                                   bIgnoreMasterPoseComponentLOD                     //0x0568(0x0001)
  *                                                                   bCachedLocalBoundsUpToDate                        //0x0568(0x0001)
  *                                                                   bForceMeshObjectUpdate                            //0x0569(0x0001)
  *                                                                   CapsuleIndirectShadowMinVisibility                //0x056C(0x0004)
  BoxSphereBounds*                                                    CachedWorldSpaceBounds                            //0x0590(0x001C)
  Matrix*                                                             CachedWorldToLocalTransform                       //0x05B0(0x0040)
  *                                                                   UnloadSkinWeightProfile                           //0x0000(0x0229)
  *                                                                   UnHideBoneByName                                  //0x0000(0x0229)
  *                                                                   TransformToBoneSpace                              //0x0000(0x0229)
  *                                                                   TransformFromBoneSpace                            //0x0000(0x0229)
  *                                                                   ShowMaterialSection                               //0x0000(0x0229)
  *                                                                   ShowAllMaterialSections                           //0x0000(0x0229)
  *                                                                   SetVertexColorOverride_LinearColor                //0x0000(0x0229)
  *                                                                   SetSkinWeightProfile                              //0x0000(0x0229)
  *                                                                   SetSkinWeightOverride                             //0x0000(0x0229)
  NewMesh*                                                            SetSkeletalMesh                                   //0x0000(0x0229)
  *                                                                   SetRenderStatic                                   //0x0000(0x0229)
  NewPhysicsAsset*                                                    SetPhysicsAsset                                   //0x0000(0x0229)
  *                                                                   SetMinLOD                                         //0x0000(0x0229)
  NewMasterBoneComponent*                                             SetMasterPoseComponent                            //0x0000(0x0229)
  *                                                                   SetForcedLOD                                      //0x0000(0x0229)
  *                                                                   SetCastCapsuleIndirectShadow                      //0x0000(0x0229)
  *                                                                   SetCastCapsuleDirectShadow                        //0x0000(0x0229)
  *                                                                   SetCapsuleIndirectShadowMinVisibility             //0x0000(0x0229)
  *                                                                   IsUsingSkinWeightProfile                          //0x0000(0x0229)
  *                                                                   IsMaterialSectionShown                            //0x0000(0x0229)
  *                                                                   IsBoneHiddenByName                                //0x0000(0x0229)
  *                                                                   HideBoneByName                                    //0x0000(0x0229)
  *                                                                   GetTwistAndSwingAngleOfDeltaRotationFromRefPose   //0x0000(0x0229)
  *                                                                   GetSocketBoneName                                 //0x0000(0x0229)
  *                                                                   GetRefPosePosition                                //0x0000(0x0229)
  *                                                                   GetParentBone                                     //0x0000(0x0229)
  *                                                                   GetNumLODs                                        //0x0000(0x0229)
  *                                                                   GetNumBones                                       //0x0000(0x0229)
  *                                                                   GetForcedLOD                                      //0x0000(0x0229)
  *                                                                   GetDeltaTransformFromRefPose                      //0x0000(0x0229)
  *                                                                   GetCurrentSkinWeightProfileName                   //0x0000(0x0229)
  *                                                                   GetBoneName                                       //0x0000(0x0229)
  *                                                                   GetBoneIndex                                      //0x0000(0x0229)
  *                                                                   FindClosestBone_K2                                //0x0000(0x0229)
  *                                                                   ClearVertexColorOverride                          //0x0000(0x0229)
  *                                                                   ClearSkinWeightProfile                            //0x0000(0x0229)
  *                                                                   ClearSkinWeightOverride                           //0x0000(0x0229)
  *                                                                   BoneIsChildOf                                     //0x0000(0x0229)
};


class SkeletalMeshComponent : public SkinnedMeshComponent
{
  AnimBlueprintGeneratedClass*                                        AnimBlueprintGeneratedClass                       //0x0610(0x0008)
  Class*                                                              AnimClass                                         //0x0618(0x0008)
  AnimInstance*                                                       AnimScriptInstance                                //0x0620(0x0008)
  AnimInstance*                                                       PostProcessAnimInstance                           //0x0628(0x0008)
  SingleAnimationPlayData*                                            AnimationData                                     //0x0630(0x0018)
  Vector*                                                             RootBoneTranslation                               //0x0658(0x000C)
  Vector*                                                             LineCheckBoundsScale                              //0x0664(0x000C)
  LinkedInstances*                                                    LinkedInstances                                   //0x0690(0x0010)
  CachedBoneSpaceTransforms*                                          CachedBoneSpaceTransforms                         //0x06A0(0x0010)
  CachedComponentSpaceTransforms*                                     CachedComponentSpaceTransforms                    //0x06B0(0x0010)
  *                                                                   GlobalAnimRateScale                               //0x06E0(0x0004)
  EKinematicBonesUpdateToPhysics*                                     KinematicBonesUpdateType                          //0x06E4(0x0001)
  EPhysicsTransformUpdateMode*                                        PhysicsTransformUpdateMode                        //0x06E5(0x0001)
  EAnimationMode*                                                     AnimationMode                                     //0x06E7(0x0001)
  *                                                                   bDisablePostProcessBlueprint                      //0x06E9(0x0001)
  *                                                                   bUpdateOverlapsOnAnimationFinalize                //0x06E9(0x0001)
  *                                                                   bHasValidBodies                                   //0x06E9(0x0001)
  *                                                                   bBlendPhysics                                     //0x06E9(0x0001)
  *                                                                   bEnablePhysicsOnDedicatedServer                   //0x06E9(0x0001)
  *                                                                   bUpdateJointsFromAnimation                        //0x06EA(0x0001)
  *                                                                   bDisableClothSimulation                           //0x06EA(0x0001)
  *                                                                   bAllowAnimCurveEvaluation                         //0x06EA(0x0001)
  *                                                                   bDisableAnimCurves                                //0x06EA(0x0001)
  *                                                                   bCollideWithEnvironment                           //0x06EA(0x0001)
  *                                                                   bCollideWithAttachedChildren                      //0x06EB(0x0001)
  *                                                                   bLocalSpaceSimulation                             //0x06EB(0x0001)
  *                                                                   bResetAfterTeleport                               //0x06EB(0x0001)
  *                                                                   bDeferKinematicBoneUpdate                         //0x06EB(0x0001)
  *                                                                   bNoSkeletonUpdate                                 //0x06EB(0x0001)
  *                                                                   bPauseAnims                                       //0x06EB(0x0001)
  *                                                                   bUseRefPoseOnInitAnim                             //0x06EB(0x0001)
  *                                                                   bEnablePerPolyCollision                           //0x06EC(0x0001)
  *                                                                   bForceRefpose                                     //0x06EC(0x0001)
  *                                                                   bOnlyAllowAutonomousTickPose                      //0x06EC(0x0001)
  *                                                                   bIsAutonomousTickPose                             //0x06EC(0x0001)
  *                                                                   bOldForceRefPose                                  //0x06EC(0x0001)
  *                                                                   bShowPrePhysBones                                 //0x06EC(0x0001)
  *                                                                   bRequiredBonesUpToDate                            //0x06EC(0x0001)
  *                                                                   bAnimTreeInitialised                              //0x06EC(0x0001)
  *                                                                   bIncludeComponentLocationIntoBounds               //0x06ED(0x0001)
  *                                                                   bEnableLineCheckWithBounds                        //0x06ED(0x0001)
  *                                                                   bUseBendingElements                               //0x06ED(0x0001)
  *                                                                   bUseTetrahedralConstraints                        //0x06ED(0x0001)
  *                                                                   bUseThinShellVolumeConstraints                    //0x06ED(0x0001)
  *                                                                   bUseSelfCollisions                                //0x06ED(0x0001)
  *                                                                   bUseContinuousCollisionDetection                  //0x06ED(0x0001)
  *                                                                   bPropagateCurvesToSlaves                          //0x06ED(0x0001)
  *                                                                   bSkipKinematicUpdateWhenInterpolating             //0x06EE(0x0001)
  *                                                                   bSkipBoundsUpdateWhenInterpolating                //0x06EE(0x0001)
  *                                                                   bNeedsQueuedAnimEventsDispatched                  //0x06EE(0x0001)
  *                                                                   CachedAnimCurveUidVersion                         //0x06F0(0x0002)
  UnderlyingType*                                                     MassMode                                          //0x06F2(0x0001)
  *                                                                   UniformMass                                       //0x06F4(0x0004)
  *                                                                   TotalMass                                         //0x06F8(0x0004)
  *                                                                   Density                                           //0x06FC(0x0004)
  *                                                                   MinPerParticleMass                                //0x0700(0x0004)
  *                                                                   ClothBlendWeight                                  //0x0704(0x0004)
  *                                                                   EdgeStiffness                                     //0x0708(0x0004)
  *                                                                   BendingStiffness                                  //0x070C(0x0004)
  *                                                                   AreaStiffness                                     //0x0710(0x0004)
  *                                                                   VolumeStiffness                                   //0x0714(0x0004)
  *                                                                   StrainLimitingStiffness                           //0x0718(0x0004)
  *                                                                   ShapeTargetStiffness                              //0x071C(0x0004)
  DisallowedAnimCurves*                                               DisallowedAnimCurves                              //0x0720(0x0010)
  BodySetup*                                                          BodySetup                                         //0x0730(0x0008)
  ConstraintBrokenSignature__DelegateSignature*                       OnConstraintBroken                                //0x0740(0x0010)
  Class*                                                              ClothingSimulationFactory                         //0x0750(0x0008)
  *                                                                   TeleportDistanceThreshold                         //0x0828(0x0004)
  *                                                                   TeleportRotationThreshold                         //0x082C(0x0004)
  *                                                                   LastPoseTickFrame                                 //0x0838(0x0004)
  ClothingSimulationInteractor*                                       ClothingInteractor                                //0x0890(0x0008)
  OnAnimInitialized__DelegateSignature*                               OnAnimInitialized                                 //0x0960(0x0010)
  InClass*                                                            UnlinkAnimClassLayers                             //0x0000(0x0229)
  *                                                                   UnbindClothFromMasterPoseComponent                //0x0000(0x0229)
  *                                                                   ToggleDisablePostProcessBlueprint                 //0x0000(0x0229)
  *                                                                   TermBodiesBelow                                   //0x0000(0x0229)
  *                                                                   SuspendClothingSimulation                         //0x0000(0x0229)
  *                                                                   Stop                                              //0x0000(0x0229)
  *                                                                   SnapshotPose                                      //0x0000(0x0229)
  *                                                                   SetUpdateAnimationInEditor                        //0x0000(0x0229)
  *                                                                   SetTeleportRotationThreshold                      //0x0000(0x0229)
  *                                                                   SetTeleportDistanceThreshold                      //0x0000(0x0229)
  *                                                                   SetPosition                                       //0x0000(0x0229)
  *                                                                   SetPlayRate                                       //0x0000(0x0229)
  *                                                                   SetPhysicsBlendWeight                             //0x0000(0x0229)
  *                                                                   SetNotifyRigidBodyCollisionBelow                  //0x0000(0x0229)
  *                                                                   SetMorphTarget                                    //0x0000(0x0229)
  *                                                                   SetEnablePhysicsBlending                          //0x0000(0x0229)
  *                                                                   SetEnableGravityOnAllBodiesBelow                  //0x0000(0x0229)
  *                                                                   SetEnableBodyGravity                              //0x0000(0x0229)
  *                                                                   SetDisablePostProcessBlueprint                    //0x0000(0x0229)
  *                                                                   SetDisableAnimCurves                              //0x0000(0x0229)
  *                                                                   SetConstraintProfileForAll                        //0x0000(0x0229)
  *                                                                   SetConstraintProfile                              //0x0000(0x0229)
  *                                                                   SetClothMaxDistanceScale                          //0x0000(0x0229)
  *                                                                   SetBodyNotifyRigidBodyCollision                   //0x0000(0x0229)
  NewClass*                                                           SetAnimClass                                      //0x0000(0x0229)
  *                                                                   SetAnimationMode                                  //0x0000(0x0229)
  NewAnimToPlay*                                                      SetAnimation                                      //0x0000(0x0229)
  *                                                                   SetAngularLimits                                  //0x0000(0x0229)
  *                                                                   SetAllowedAnimCurvesEvaluation                    //0x0000(0x0229)
  *                                                                   SetAllowAnimCurveEvaluation                       //0x0000(0x0229)
  *                                                                   SetAllMotorsAngularVelocityDrive                  //0x0000(0x0229)
  *                                                                   SetAllMotorsAngularPositionDrive                  //0x0000(0x0229)
  *                                                                   SetAllMotorsAngularDriveParams                    //0x0000(0x0229)
  *                                                                   SetAllBodiesSimulatePhysics                       //0x0000(0x0229)
  *                                                                   SetAllBodiesPhysicsBlendWeight                    //0x0000(0x0229)
  *                                                                   SetAllBodiesBelowSimulatePhysics                  //0x0000(0x0229)
  *                                                                   SetAllBodiesBelowPhysicsBlendWeight               //0x0000(0x0229)
  *                                                                   ResumeClothingSimulation                          //0x0000(0x0229)
  *                                                                   ResetClothTeleportMode                            //0x0000(0x0229)
  *                                                                   ResetAnimInstanceDynamics                         //0x0000(0x0229)
  *                                                                   ResetAllowedAnimCurveEvaluation                   //0x0000(0x0229)
  *                                                                   ResetAllBodiesSimulatePhysics                     //0x0000(0x0229)
  NewAnimToPlay*                                                      PlayAnimation                                     //0x0000(0x0229)
  *                                                                   Play                                              //0x0000(0x0229)
  InAnimToPlay*                                                       OverrideAnimationData                             //0x0000(0x0229)
  InClass*                                                            LinkAnimGraphByTag                                //0x0000(0x0229)
  InClass*                                                            LinkAnimClassLayers                               //0x0000(0x0229)
  *                                                                   K2_GetClosestPointOnPhysicsAsset                  //0x0000(0x0229)
  *                                                                   IsPlaying                                         //0x0000(0x0229)
  *                                                                   IsClothingSimulationSuspended                     //0x0000(0x0229)
  *                                                                   IsBodyGravityEnabled                              //0x0000(0x0229)
  *                                                                   HasValidAnimationInstance                         //0x0000(0x0229)
  *                                                                   GetTeleportRotationThreshold                      //0x0000(0x0229)
  *                                                                   GetTeleportDistanceThreshold                      //0x0000(0x0229)
  *                                                                   GetSkeletalCenterOfMass                           //0x0000(0x0229)
  ReturnValue*                                                        GetPostProcessInstance                            //0x0000(0x0229)
  *                                                                   GetPosition                                       //0x0000(0x0229)
  *                                                                   GetPlayRate                                       //0x0000(0x0229)
  *                                                                   GetMorphTarget                                    //0x0000(0x0229)
  ReturnValue*                                                        GetLinkedAnimLayerInstanceByGroup                 //0x0000(0x0229)
  InClass*                                                            GetLinkedAnimLayerInstanceByClass                 //0x0000(0x0229)
  OutLinkedInstances*                                                 GetLinkedAnimGraphInstancesByTag                  //0x0000(0x0229)
  ReturnValue*                                                        GetLinkedAnimGraphInstanceByTag                   //0x0000(0x0229)
  *                                                                   GetDisablePostProcessBlueprint                    //0x0000(0x0229)
  *                                                                   GetDisableAnimCurves                              //0x0000(0x0229)
  *                                                                   GetCurrentJointAngles                             //0x0000(0x0229)
  *                                                                   GetClothMaxDistanceScale                          //0x0000(0x0229)
  ReturnValue*                                                        GetClothingSimulationInteractor                   //0x0000(0x0229)
  *                                                                   GetBoneMass                                       //0x0000(0x0229)
  ReturnValue*                                                        GetAnimInstance                                   //0x0000(0x0229)
  ReturnValue*                                                        GetAnimClass                                      //0x0000(0x0229)
  *                                                                   GetAnimationMode                                  //0x0000(0x0229)
  *                                                                   GetAllowedAnimCurveEvaluate                       //0x0000(0x0229)
  *                                                                   ForceClothNextUpdateTeleportAndReset              //0x0000(0x0229)
  *                                                                   ForceClothNextUpdateTeleport                      //0x0000(0x0229)
  *                                                                   FindConstraintBoneName                            //0x0000(0x0229)
  *                                                                   ClearMorphTargets                                 //0x0000(0x0229)
  *                                                                   BreakConstraint                                   //0x0000(0x0229)
  *                                                                   BindClothToMasterPoseComponent                    //0x0000(0x0229)
  *                                                                   AllowAnimCurveEvaluation                          //0x0000(0x0229)
  *                                                                   AddImpulseToAllBodiesBelow                        //0x0000(0x0229)
  *                                                                   AddForceToAllBodiesBelow                          //0x0000(0x0229)
  *                                                                   AccumulateAllBodiesBelowPhysicsBlendWeight        //0x0000(0x0229)
};


class AnimInstance : public Object
{
  Skeleton*                                                           CurrentSkeleton                                   //0x0028(0x0008)
  ERootMotionMode*                                                    RootMotionMode                                    //0x0030(0x0001)
  *                                                                   bUseMultiThreadedAnimationUpdate                  //0x0031(0x0001)
  *                                                                   bUsingCopyPoseFromMesh                            //0x0031(0x0001)
  *                                                                   bQueueMontageEvents                               //0x0031(0x0001)
  OnMontageBlendingOutStartedMCDelegate__DelegateSignature*           OnMontageBlendingOut                              //0x0038(0x0010)
  OnMontageStartedMCDelegate__DelegateSignature*                      OnMontageStarted                                  //0x0048(0x0010)
  OnMontageEndedMCDelegate__DelegateSignature*                        OnMontageEnded                                    //0x0058(0x0010)
  OnAllMontageInstancesEndedMCDelegate__DelegateSignature*            OnAllMontageInstancesEnded                        //0x0068(0x0010)
  AnimNotifyQueue*                                                    NotifyQueue                                       //0x0100(0x0070)
  ActiveAnimNotifyState*                                              ActiveAnimNotifyState                             //0x0170(0x0010)
  *                                                                   UnlockAIResources                                 //0x0000(0x0229)
  InClass*                                                            UnlinkAnimClassLayers                             //0x0000(0x0229)
  ReturnValue*                                                        TryGetPawnOwner                                   //0x0000(0x0229)
  *                                                                   StopSlotAnimation                                 //0x0000(0x0229)
  *                                                                   SnapshotPose                                      //0x0000(0x0229)
  *                                                                   SetRootMotionMode                                 //0x0000(0x0229)
  *                                                                   SetMorphTarget                                    //0x0000(0x0229)
  *                                                                   SavePoseSnapshot                                  //0x0000(0x0229)
  *                                                                   ResetDynamics                                     //0x0000(0x0229)
  Asset*                                                              PlaySlotAnimationAsDynamicMontage                 //0x0000(0x0229)
  Asset*                                                              PlaySlotAnimation                                 //0x0000(0x0229)
  Montage*                                                            Montage_Stop                                      //0x0000(0x0229)
  Montage*                                                            Montage_SetPosition                               //0x0000(0x0229)
  Montage*                                                            Montage_SetPlayRate                               //0x0000(0x0229)
  Montage*                                                            Montage_SetNextSection                            //0x0000(0x0229)
  Montage*                                                            Montage_Resume                                    //0x0000(0x0229)
  MontageToPlay*                                                      Montage_Play                                      //0x0000(0x0229)
  Montage*                                                            Montage_Pause                                     //0x0000(0x0229)
  Montage*                                                            Montage_JumpToSectionsEnd                         //0x0000(0x0229)
  Montage*                                                            Montage_JumpToSection                             //0x0000(0x0229)
  Montage*                                                            Montage_IsPlaying                                 //0x0000(0x0229)
  Montage*                                                            Montage_IsActive                                  //0x0000(0x0229)
  Montage*                                                            Montage_GetPosition                               //0x0000(0x0229)
  Montage*                                                            Montage_GetPlayRate                               //0x0000(0x0229)
  Montage*                                                            Montage_GetIsStopped                              //0x0000(0x0229)
  Montage*                                                            Montage_GetCurrentSection                         //0x0000(0x0229)
  Montage*                                                            Montage_GetBlendTime                              //0x0000(0x0229)
  *                                                                   LockAIResources                                   //0x0000(0x0229)
  InClass*                                                            LinkAnimGraphByTag                                //0x0000(0x0229)
  InClass*                                                            LinkAnimClassLayers                               //0x0000(0x0229)
  *                                                                   IsSyncGroupBetweenMarkers                         //0x0000(0x0229)
  Asset*                                                              IsPlayingSlotAnimation                            //0x0000(0x0229)
  *                                                                   IsAnyMontagePlaying                               //0x0000(0x0229)
  *                                                                   HasMarkerBeenHitThisFrame                         //0x0000(0x0229)
  *                                                                   GetTimeToClosestMarker                            //0x0000(0x0229)
  *                                                                   GetSyncGroupPosition                              //0x0000(0x0229)
  *                                                                   GetRelevantAnimTimeRemainingFraction              //0x0000(0x0229)
  *                                                                   GetRelevantAnimTimeRemaining                      //0x0000(0x0229)
  *                                                                   GetRelevantAnimTimeFraction                       //0x0000(0x0229)
  *                                                                   GetRelevantAnimTime                               //0x0000(0x0229)
  *                                                                   GetRelevantAnimLength                             //0x0000(0x0229)
  ReturnValue*                                                        GetOwningComponent                                //0x0000(0x0229)
  ReturnValue*                                                        GetOwningActor                                    //0x0000(0x0229)
  ReturnValue*                                                        GetLinkedAnimLayerInstanceByGroup                 //0x0000(0x0229)
  InClass*                                                            GetLinkedAnimLayerInstanceByClass                 //0x0000(0x0229)
  OutLinkedInstances*                                                 GetLinkedAnimGraphInstancesByTag                  //0x0000(0x0229)
  ReturnValue*                                                        GetLinkedAnimGraphInstanceByTag                   //0x0000(0x0229)
  *                                                                   GetInstanceTransitionTimeElapsedFraction          //0x0000(0x0229)
  *                                                                   GetInstanceTransitionTimeElapsed                  //0x0000(0x0229)
  *                                                                   GetInstanceTransitionCrossfadeDuration            //0x0000(0x0229)
  *                                                                   GetInstanceStateWeight                            //0x0000(0x0229)
  *                                                                   GetInstanceMachineWeight                          //0x0000(0x0229)
  *                                                                   GetInstanceCurrentStateElapsedTime                //0x0000(0x0229)
  *                                                                   GetInstanceAssetPlayerTimeFromEndFraction         //0x0000(0x0229)
  *                                                                   GetInstanceAssetPlayerTimeFromEnd                 //0x0000(0x0229)
  *                                                                   GetInstanceAssetPlayerTimeFraction                //0x0000(0x0229)
  *                                                                   GetInstanceAssetPlayerTime                        //0x0000(0x0229)
  *                                                                   GetInstanceAssetPlayerLength                      //0x0000(0x0229)
  *                                                                   GetCurveValue                                     //0x0000(0x0229)
  *                                                                   GetCurrentStateName                               //0x0000(0x0229)
  ReturnValue*                                                        GetCurrentActiveMontage                           //0x0000(0x0229)
  *                                                                   GetAllCurveNames                                  //0x0000(0x0229)
  *                                                                   GetActiveCurveNames                               //0x0000(0x0229)
  *                                                                   ClearMorphTargets                                 //0x0000(0x0229)
  *                                                                   CalculateDirection                                //0x0000(0x0229)
  *                                                                   BlueprintUpdateAnimation                          //0x0000(0x0229)
  *                                                                   BlueprintPostEvaluateAnimation                    //0x0000(0x0229)
  *                                                                   BlueprintInitializeAnimation                      //0x0000(0x0229)
  *                                                                   BlueprintBeginPlay                                //0x0000(0x0229)
};


class AnimSharingStateInstance : public AnimInstance
{
  AnimSequence*                                                       AnimationToPlay                                   //0x0268(0x0008)
  *                                                                   PermutationTimeOffset                             //0x0270(0x0004)
  *                                                                   PlayRate                                          //0x0274(0x0004)
  *                                                                   bStateBool                                        //0x0278(0x0001)
  AnimSharingInstance*                                                Instance                                          //0x0280(0x0008)
  Actors*                                                             GetInstancedActors                                //0x0000(0x0229)
};


class AnimSharingTransitionInstance : public AnimInstance
{
  SkeletalMeshComponent*                                              FromComponent                                     //0x0268(0x0008)
  SkeletalMeshComponent*                                              ToComponent                                       //0x0270(0x0008)
  *                                                                   BlendTime                                         //0x0278(0x0004)
  *                                                                   bBlendBool                                        //0x027C(0x0001)
};


class AnimSharingAdditiveInstance : public AnimInstance
{
  SkeletalMeshComponent*                                              BaseComponent                                     //0x0268(0x0008)
  AnimSequence*                                                       AdditiveAnimation                                 //0x0270(0x0008)
  *                                                                   Alpha                                             //0x0278(0x0004)
  *                                                                   bStateBool                                        //0x027C(0x0001)
};


class AnimSharingInstance : public Object
{
  RegisteredActors*                                                   RegisteredActors                                  //0x0028(0x0010)
  AnimationSharingStateProcessor*                                     StateProcessor                                    //0x00A8(0x0008)
  UsedAnimationSequences*                                             UsedAnimationSequences                            //0x00E8(0x0010)
  Enum*                                                               StateEnum                                         //0x0108(0x0008)
  Actor*                                                              SharingActor                                      //0x0110(0x0008)
};


class AnimationSharingManager : public Object
{
  Skeletons*                                                          Skeletons                                         //0x0028(0x0010)
  PerSkeletonData*                                                    PerSkeletonData                                   //0x0038(0x0010)
  InActor*                                                            RegisterActorWithSkeletonBP                       //0x0000(0x0229)
  WorldContextObject*                                                 GetAnimationSharingManager                        //0x0000(0x0229)
  WorldContextObject*                                                 CreateAnimationSharingManager                     //0x0000(0x0229)
  *                                                                   AnimationSharingEnabled                           //0x0000(0x0229)
};


class AnimationSharingSetup : public Object
{
  SkeletonSetups*                                                     SkeletonSetups                                    //0x0028(0x0010)
  AnimationSharingScalability*                                        ScalabilitySettings                               //0x0038(0x0010)
};


class AnimationSharingStateProcessor : public Object
{
  Enum*                                                               AnimationStateEnum                                //0x0028(0x0028)
  InActor*                                                            ProcessActorState                                 //0x0000(0x0229)
  ReturnValue*                                                        GetAnimationStateEnum                             //0x0000(0x0229)
};


class SignificanceManager : public Object
{
  SoftClassPath*                                                      SignificanceManagerClassName                      //0x0100(0x0018)
};


class MyPluginObject : public Object
{
  MyPluginStruct*                                                     MyStruct                                          //0x0028(0x0010)
};


class AudioComponent : public SceneComponent
{
  SoundBase*                                                          Sound                                             //0x01F0(0x0008)
  InstanceParameters*                                                 InstanceParameters                                //0x01F8(0x0010)
  SoundClass*                                                         SoundClassOverride                                //0x0208(0x0008)
  *                                                                   bAutoDestroy                                      //0x0210(0x0001)
  *                                                                   bStopWhenOwnerDestroyed                           //0x0210(0x0001)
  *                                                                   bShouldRemainActiveIfDropped                      //0x0210(0x0001)
  *                                                                   bAllowSpatialization                              //0x0210(0x0001)
  *                                                                   bOverrideAttenuation                              //0x0210(0x0001)
  *                                                                   bOverrideSubtitlePriority                         //0x0210(0x0001)
  *                                                                   bIsUISound                                        //0x0210(0x0001)
  *                                                                   bEnableLowPassFilter                              //0x0210(0x0001)
  *                                                                   bOverridePriority                                 //0x0211(0x0001)
  *                                                                   bSuppressSubtitles                                //0x0211(0x0001)
  *                                                                   bAutoManageAttachment                             //0x0212(0x0001)
  *                                                                   AudioComponentUserID                              //0x0218(0x0008)
  *                                                                   PitchModulationMin                                //0x0220(0x0004)
  *                                                                   PitchModulationMax                                //0x0224(0x0004)
  *                                                                   VolumeModulationMin                               //0x0228(0x0004)
  *                                                                   VolumeModulationMax                               //0x022C(0x0004)
  *                                                                   VolumeMultiplier                                  //0x0230(0x0004)
  *                                                                   EnvelopeFollowerAttackTime                        //0x0234(0x0004)
  *                                                                   EnvelopeFollowerReleaseTime                       //0x0238(0x0004)
  *                                                                   Priority                                          //0x023C(0x0004)
  *                                                                   SubtitlePriority                                  //0x0240(0x0004)
  SoundEffectSourcePresetChain*                                       SourceEffectChain                                 //0x0248(0x0008)
  *                                                                   PitchMultiplier                                   //0x0250(0x0004)
  *                                                                   LowPassFilterFrequency                            //0x0254(0x0004)
  SoundAttenuation*                                                   AttenuationSettings                               //0x0260(0x0008)
  SoundAttenuationSettings*                                           AttenuationOverrides                              //0x0268(0x02F0)
  SoundConcurrency*                                                   ConcurrencySettings                               //0x0558(0x0008)
  ConcurrencySet*                                                     ConcurrencySet                                    //0x0560(0x0050)
  UnderlyingType*                                                     AutoAttachLocationRule                            //0x05BC(0x0001)
  UnderlyingType*                                                     AutoAttachRotationRule                            //0x05BD(0x0001)
  UnderlyingType*                                                     AutoAttachScaleRule                               //0x05BE(0x0001)
  OnAudioFinished__DelegateSignature*                                 OnAudioFinished                                   //0x05C0(0x0010)
  OnAudioPlaybackPercent__DelegateSignature*                          OnAudioPlaybackPercent                            //0x05E8(0x0010)
  OnAudioSingleEnvelopeValue__DelegateSignature*                      OnAudioSingleEnvelopeValue                        //0x0610(0x0010)
  OnAudioMultiEnvelopeValue__DelegateSignature*                       OnAudioMultiEnvelopeValue                         //0x0638(0x0010)
  SoundModulation*                                                    Modulation                                        //0x0660(0x0010)
  OnQueueSubtitles__DelegateSignature*                                OnQueueSubtitles                                  //0x0670(0x0010)
  SceneComponent*                                                     AutoAttachParent                                  //0x0680(0x0008)
  *                                                                   AutoAttachSocketName                              //0x0688(0x0008)
  *                                                                   StopDelayed                                       //0x0000(0x0229)
  *                                                                   Stop                                              //0x0000(0x0229)
  InWave*                                                             SetWaveParameter                                  //0x0000(0x0229)
  *                                                                   SetVolumeMultiplier                               //0x0000(0x0229)
  *                                                                   SetUISound                                        //0x0000(0x0229)
  Submix*                                                             SetSubmixSend                                     //0x0000(0x0229)
  SoundSourceBus*                                                     SetSourceBusSendPreEffect                         //0x0000(0x0229)
  SoundSourceBus*                                                     SetSourceBusSendPostEffect                        //0x0000(0x0229)
  NewSound*                                                           SetSound                                          //0x0000(0x0229)
  *                                                                   SetPitchMultiplier                                //0x0000(0x0229)
  *                                                                   SetPaused                                         //0x0000(0x0229)
  *                                                                   SetLowPassFilterFrequency                         //0x0000(0x0229)
  *                                                                   SetLowPassFilterEnabled                           //0x0000(0x0229)
  *                                                                   SetIntParameter                                   //0x0000(0x0229)
  *                                                                   SetFloatParameter                                 //0x0000(0x0229)
  *                                                                   SetBoolParameter                                  //0x0000(0x0229)
  *                                                                   Play                                              //0x0000(0x0229)
  *                                                                   IsPlaying                                         //0x0000(0x0229)
  *                                                                   HasCookedFFTData                                  //0x0000(0x0229)
  *                                                                   HasCookedAmplitudeEnvelopeData                    //0x0000(0x0229)
  *                                                                   GetPlayState                                      //0x0000(0x0229)
  OutSoundWaveSpectralData*                                           GetCookedFFTDataForAllPlayingSounds               //0x0000(0x0229)
  *                                                                   GetCookedFFTData                                  //0x0000(0x0229)
  OutEnvelopeData*                                                    GetCookedEnvelopeDataForAllPlayingSounds          //0x0000(0x0229)
  *                                                                   GetCookedEnvelopeData                             //0x0000(0x0229)
  *                                                                   FadeOut                                           //0x0000(0x0229)
  *                                                                   FadeIn                                            //0x0000(0x0229)
  OutAttenuationSettings*                                             BP_GetAttenuationSettingsToApply                  //0x0000(0x0229)
  *                                                                   AdjustVolume                                      //0x0000(0x0229)
  InAttenuationSettings*                                              AdjustAttenuation                                 //0x0000(0x0229)
};


class AudioCurveSourceComponent : public AudioComponent
{
  *                                                                   CurveSourceBindingName                            //0x0728(0x0008)
  *                                                                   CurveSyncOffset                                   //0x0730(0x0004)
};


class GeometryCache : public Object
{
  Materials*                                                          Materials                                         //0x0030(0x0010)
  Tracks*                                                             Tracks                                            //0x0040(0x0010)
  *                                                                   StartFrame                                        //0x0060(0x0004)
  *                                                                   EndFrame                                          //0x0064(0x0004)
};


class GeometryCacheActor : public Actor
{
  GeometryCacheComponent*                                             GeometryCacheComponent                            //0x0218(0x0008)
  ReturnValue*                                                        GetGeometryCacheComponent                         //0x0000(0x0229)
};


class GeometryCacheCodecBase : public Object
{
  TopologyRanges*                                                     TopologyRanges                                    //0x0028(0x0010)
};


class GeometryCacheCodecRaw : public GeometryCacheCodecBase
{
  *                                                                   DummyProperty                                     //0x0038(0x0004)
};


class GeometryCacheCodecV1 : public GeometryCacheCodecBase
{
};


class GeometryCacheComponent : public MeshComponent
{
  GeometryCache*                                                      GeometryCache                                     //0x0400(0x0008)
  *                                                                   bRunning                                          //0x0408(0x0001)
  *                                                                   bLooping                                          //0x0409(0x0001)
  *                                                                   StartTimeOffset                                   //0x040C(0x0004)
  *                                                                   PlaybackSpeed                                     //0x0410(0x0004)
  *                                                                   NumTracks                                         //0x0414(0x0004)
  *                                                                   ElapsedTime                                       //0x0418(0x0004)
  *                                                                   Duration                                          //0x044C(0x0004)
  *                                                                   bManualTick                                       //0x0450(0x0001)
  *                                                                   TickAtThisTime                                    //0x0000(0x0229)
  *                                                                   Stop                                              //0x0000(0x0229)
  *                                                                   SetStartTimeOffset                                //0x0000(0x0229)
  *                                                                   SetPlaybackSpeed                                  //0x0000(0x0229)
  *                                                                   SetLooping                                        //0x0000(0x0229)
  NewGeomCache*                                                       SetGeometryCache                                  //0x0000(0x0229)
  *                                                                   PlayReversedFromEnd                               //0x0000(0x0229)
  *                                                                   PlayReversed                                      //0x0000(0x0229)
  *                                                                   PlayFromStart                                     //0x0000(0x0229)
  *                                                                   Play                                              //0x0000(0x0229)
  *                                                                   Pause                                             //0x0000(0x0229)
  *                                                                   IsPlayingReversed                                 //0x0000(0x0229)
  *                                                                   IsPlaying                                         //0x0000(0x0229)
  *                                                                   IsLooping                                         //0x0000(0x0229)
  *                                                                   GetStartTimeOffset                                //0x0000(0x0229)
  *                                                                   GetPlaybackSpeed                                  //0x0000(0x0229)
  *                                                                   GetPlaybackDirection                              //0x0000(0x0229)
  *                                                                   GetNumberOfFrames                                 //0x0000(0x0229)
  *                                                                   GetDuration                                       //0x0000(0x0229)
  *                                                                   GetAnimationTime                                  //0x0000(0x0229)
};


class GeometryCacheTrack : public Object
{
  *                                                                   Duration                                          //0x0028(0x0004)
};


class GeometryCacheTrack_FlipbookAnimation : public GeometryCacheTrack
{
  *                                                                   NumMeshSamples                                    //0x0058(0x0004)
  *                                                                   AddMeshSample                                     //0x0000(0x0229)
};


class GeometryCacheTrackStreamable : public GeometryCacheTrack
{
  GeometryCacheCodecBase*                                             Codec                                             //0x0058(0x0008)
  *                                                                   StartSampleTime                                   //0x0188(0x0004)
};


class GeometryCacheTrack_TransformAnimation : public GeometryCacheTrack
{
  *                                                                   SetMesh                                           //0x0000(0x0229)
};


class GeometryCacheTrack_TransformGroupAnimation : public GeometryCacheTrack
{
  *                                                                   SetMesh                                           //0x0000(0x0229)
};


class MovieSceneGeometryCacheSection : public MovieSceneSection
{
  MovieSceneGeometryCacheParams*                                      Params                                            //0x00E0(0x0040)
};


class MovieSceneGeometryCacheTrack : public MovieSceneNameableTrack
{
  AnimationSections*                                                  AnimationSections                                 //0x0058(0x0010)
};


class AutomationUtilsBlueprintLibrary : public BlueprintFunctionLibrary
{
  *                                                                   TakeGameplayAutomationScreenshot                  //0x0000(0x0229)
};


class InAppPurchaseComponent : public ActorComponent
{
  InAppPurchaseLogMessage__DelegateSignature*                         InAppPurchaseLogMessage                           //0x00B0(0x0010)
  GetItemsDetailsSuccess__DelegateSignature*                          GetItemsDetailsSuccess                            //0x00C0(0x0010)
  GetItemsDetailsFailure__DelegateSignature*                          GetItemsDetailsFailure                            //0x00D0(0x0010)
  PurchaseConfirmationSuccess__DelegateSignature*                     PurchaseConfirmationSuccess                       //0x00E0(0x0010)
  PurchaseConfirmationFailure__DelegateSignature*                     PurchaseConfirmationFailure                       //0x00F0(0x0010)
  GetPurchaseHistorySuccess__DelegateSignature*                       GetPurchaseHistorySuccess                         //0x0100(0x0010)
  GetPurchaseHistoryFailure__DelegateSignature*                       GetPurchaseHistoryFailure                         //0x0110(0x0010)
  *                                                                   TryPurchaseItemAsync                              //0x0000(0x0229)
  *                                                                   TryGetPurchaseHistoryAsync                        //0x0000(0x0229)
  *                                                                   TryGetItemsDetailsAsync                           //0x0000(0x0229)
  *                                                                   PurchaseConfirmationSuccess__DelegateSignature    //0x0000(0x0229)
  *                                                                   PurchaseConfirmationFailure__DelegateSignature    //0x0000(0x0229)
  *                                                                   InAppPurchaseLogMessage__DelegateSignature        //0x0000(0x0229)
  *                                                                   GetPurchaseHistorySuccess__DelegateSignature      //0x0000(0x0229)
  *                                                                   GetPurchaseHistoryFailure__DelegateSignature      //0x0000(0x0229)
  *                                                                   GetItemsDetailsSuccess__DelegateSignature         //0x0000(0x0229)
  *                                                                   GetItemsDetailsFailure__DelegateSignature         //0x0000(0x0229)
};


class ApplicationLifecycleComponent : public ActorComponent
{
  ApplicationLifetimeDelegate__DelegateSignature*                     ApplicationWillDeactivateDelegate                 //0x00B0(0x0010)
  ApplicationLifetimeDelegate__DelegateSignature*                     ApplicationHasReactivatedDelegate                 //0x00C0(0x0010)
  ApplicationLifetimeDelegate__DelegateSignature*                     ApplicationWillEnterBackgroundDelegate            //0x00D0(0x0010)
  ApplicationLifetimeDelegate__DelegateSignature*                     ApplicationHasEnteredForegroundDelegate           //0x00E0(0x0010)
  ApplicationLifetimeDelegate__DelegateSignature*                     ApplicationWillTerminateDelegate                  //0x00F0(0x0010)
  ApplicationLifetimeDelegate__DelegateSignature*                     ApplicationShouldUnloadResourcesDelegate          //0x0100(0x0010)
  ApplicationStartupArgumentsDelegate__DelegateSignature*             ApplicationReceivedStartupArgumentsDelegate       //0x0110(0x0010)
  OnTemperatureChangeDelegate__DelegateSignature*                     OnTemperatureChangeDelegate                       //0x0120(0x0010)
  OnLowPowerModeDelegate__DelegateSignature*                          OnLowPowerModeDelegate                            //0x0130(0x0010)
};


class LuminApplicationLifecycleComponent : public ApplicationLifecycleComponent
{
  LuminApplicationLifetimeDelegate__DelegateSignature*                DeviceHasReactivatedDelegate                      //0x0140(0x0010)
  LuminApplicationLifetimeDelegate__DelegateSignature*                DeviceWillEnterRealityModeDelegate                //0x0150(0x0010)
  LuminApplicationLifetimeDelegate__DelegateSignature*                DeviceWillGoInStandbyDelegate                     //0x0160(0x0010)
};


class VRNotificationsComponent : public ActorComponent
{
  VRNotificationsDelegate__DelegateSignature*                         HMDTrackingInitializingAndNeedsHMDToBeTrackedDelegate//0x00B0(0x0010)
  VRNotificationsDelegate__DelegateSignature*                         HMDTrackingInitializedDelegate                    //0x00C0(0x0010)
  VRNotificationsDelegate__DelegateSignature*                         HMDRecenteredDelegate                             //0x00D0(0x0010)
  VRNotificationsDelegate__DelegateSignature*                         HMDLostDelegate                                   //0x00E0(0x0010)
  VRNotificationsDelegate__DelegateSignature*                         HMDReconnectedDelegate                            //0x00F0(0x0010)
  VRNotificationsDelegate__DelegateSignature*                         HMDConnectCanceledDelegate                        //0x0100(0x0010)
  VRNotificationsDelegate__DelegateSignature*                         HMDPutOnHeadDelegate                              //0x0110(0x0010)
  VRNotificationsDelegate__DelegateSignature*                         HMDRemovedFromHeadDelegate                        //0x0120(0x0010)
  VRNotificationsDelegate__DelegateSignature*                         VRControllerRecenteredDelegate                    //0x0130(0x0010)
};


class MagicLeapHeadTrackingNotificationsComponent : public VRNotificationsComponent
{
  VRNotificationsDelegate__DelegateSignature*                         OnHeadTrackingLost                                //0x0140(0x0010)
  VRNotificationsDelegate__DelegateSignature*                         OnHeadTrackingRecovered                           //0x0150(0x0010)
  VRNotificationsDelegate__DelegateSignature*                         OnHeadTrackingRecoveryFailed                      //0x0160(0x0010)
  VRNotificationsDelegate__DelegateSignature*                         OnHeadTrackingNewSessionStarted                   //0x0170(0x0010)
};


class MagicLeapHMDFunctionLibrary : public BlueprintFunctionLibrary
{
  InStabilizationDepthActor*                                          SetStabilizationDepthActor                        //0x0000(0x0229)
  InFocusActor*                                                       SetFocusActor                                     //0x0000(0x0229)
  *                                                                   SetBaseRotation                                   //0x0000(0x0229)
  *                                                                   SetBasePosition                                   //0x0000(0x0229)
  *                                                                   SetBaseOrientation                                //0x0000(0x0229)
  *                                                                   SetAppReady                                       //0x0000(0x0229)
  *                                                                   IsRunningOnMagicLeapHMD                           //0x0000(0x0229)
  *                                                                   GetMLSDKVersionRevision                           //0x0000(0x0229)
  *                                                                   GetMLSDKVersionMinor                              //0x0000(0x0229)
  *                                                                   GetMLSDKVersionMajor                              //0x0000(0x0229)
  *                                                                   GetMLSDKVersion                                   //0x0000(0x0229)
  *                                                                   GetHeadTrackingState                              //0x0000(0x0229)
  *                                                                   GetHeadTrackingMapEvents                          //0x0000(0x0229)
};


class MagicLeapSettings : public Object
{
  *                                                                   bEnableZI                                         //0x0028(0x0001)
  *                                                                   bUseVulkanForZI                                   //0x0029(0x0001)
  *                                                                   bUseMLAudioForZI                                  //0x002A(0x0001)
};


class MagicLeapMeshBlockSelectorInterface : public Interface
{
  *                                                                   SelectMeshBlocks                                  //0x0000(0x0229)
};


class MeshTrackerComponent : public SceneComponent
{
  OnMeshTrackerUpdated__DelegateSignature*                            OnMeshTrackerUpdated                              //0x01F8(0x0010)
  *                                                                   ScanWorld                                         //0x0208(0x0001)
  UnderlyingType*                                                     MeshType                                          //0x0209(0x0001)
  BoxComponent*                                                       BoundingVolume                                    //0x0210(0x0008)
  UnderlyingType*                                                     LevelOfDetail                                     //0x0218(0x0001)
  *                                                                   PerimeterOfGapsToFill                             //0x021C(0x0004)
  *                                                                   Planarize                                         //0x0220(0x0001)
  *                                                                   DisconnectedSectionArea                           //0x0224(0x0004)
  *                                                                   RequestNormals                                    //0x0228(0x0001)
  *                                                                   RequestVertexConfidence                           //0x0229(0x0001)
  UnderlyingType*                                                     VertexColorMode                                   //0x022A(0x0001)
  BlockVertexColors*                                                  BlockVertexColors                                 //0x0230(0x0010)
  LinearColor*                                                        VertexColorFromConfidenceZero                     //0x0240(0x0010)
  LinearColor*                                                        VertexColorFromConfidenceOne                      //0x0250(0x0010)
  *                                                                   RemoveOverlappingTriangles                        //0x0260(0x0001)
  MRMeshComponent*                                                    MRMesh                                            //0x0268(0x0008)
  *                                                                   BricksPerFrame                                    //0x0270(0x0004)
  *                                                                   SelectMeshBlocks                                  //0x0000(0x0229)
  *                                                                   OnMeshTrackerUpdated__DelegateSignature           //0x0000(0x0229)
  *                                                                   GetNumQueuedBlockUpdates                          //0x0000(0x0229)
  InMRMeshPtr*                                                        DisconnectMRMesh                                  //0x0000(0x0229)
  *                                                                   DisconnectBlockSelector                           //0x0000(0x0229)
  InMRMeshPtr*                                                        ConnectMRMesh                                     //0x0000(0x0229)
  Selector*                                                           ConnectBlockSelector                              //0x0000(0x0229)
};


class MagicLeapRaycastComponent : public ActorComponent
{
  ResultDelegate*                                                     RequestRaycast                                    //0x0000(0x0229)
  *                                                                   RaycastResultDelegate__DelegateSignature          //0x0000(0x0229)
};


class MagicLeapRaycastFunctionLibrary : public BlueprintFunctionLibrary
{
  *                                                                   MakeRaycastQueryParams                            //0x0000(0x0229)
};


class LuminARUObjectManager : public Object
{
  AllAnchors*                                                         AllAnchors                                        //0x0028(0x0010)
};


class LuminARSessionFunctionLibrary : public BlueprintFunctionLibrary
{
  WorldContextObject*                                                 StartLuminARSession                               //0x0000(0x0229)
};


class LuminARFrameFunctionLibrary : public BlueprintFunctionLibrary
{
  WorldContextObject*                                                 LuminARLineTrace                                  //0x0000(0x0229)
  *                                                                   GetTrackingState                                  //0x0000(0x0229)
  *                                                                   GetLightEstimation                                //0x0000(0x0229)
};


class ARSessionConfig : public DataAsset
{
  *                                                                   bGenerateMeshDataFromTrackedGeometry              //0x0030(0x0001)
  *                                                                   bGenerateCollisionForMeshData                     //0x0031(0x0001)
  *                                                                   bGenerateNavMeshForMeshData                       //0x0032(0x0001)
  *                                                                   bUseMeshDataForOcclusion                          //0x0033(0x0001)
  *                                                                   bRenderMeshDataInWireframe                        //0x0034(0x0001)
  *                                                                   bTrackSceneObjects                                //0x0035(0x0001)
  *                                                                   bUsePersonSegmentationForOcclusion                //0x0036(0x0001)
  UnderlyingType*                                                     WorldAlignment                                    //0x0037(0x0001)
  UnderlyingType*                                                     SessionType                                       //0x0038(0x0001)
  UnderlyingType*                                                     PlaneDetectionMode                                //0x0039(0x0001)
  *                                                                   bHorizontalPlaneDetection                         //0x003A(0x0001)
  *                                                                   bVerticalPlaneDetection                           //0x003B(0x0001)
  *                                                                   bEnableAutoFocus                                  //0x003C(0x0001)
  UnderlyingType*                                                     LightEstimationMode                               //0x003D(0x0001)
  UnderlyingType*                                                     FrameSyncMode                                     //0x003E(0x0001)
  *                                                                   bEnableAutomaticCameraOverlay                     //0x003F(0x0001)
  *                                                                   bEnableAutomaticCameraTracking                    //0x0040(0x0001)
  *                                                                   bResetCameraTracking                              //0x0041(0x0001)
  *                                                                   bResetTrackedObjects                              //0x0042(0x0001)
  CandidateImages*                                                    CandidateImages                                   //0x0048(0x0010)
  *                                                                   MaxNumSimultaneousImagesTracked                   //0x0058(0x0004)
  UnderlyingType*                                                     EnvironmentCaptureProbeType                       //0x005C(0x0001)
  WorldMapData*                                                       WorldMapData                                      //0x0060(0x0010)
  CandidateObjects*                                                   CandidateObjects                                  //0x0070(0x0010)
  ARVideoFormat*                                                      DesiredVideoFormat                                //0x0080(0x000C)
  UnderlyingType*                                                     FaceTrackingDirection                             //0x008C(0x0001)
  UnderlyingType*                                                     FaceTrackingUpdate                                //0x008D(0x0001)
  SerializedARCandidateImageDatabase*                                 SerializedARCandidateImageDatabase                //0x0090(0x0010)
  UnderlyingType*                                                     EnabledSessionTrackingFeature                     //0x00A0(0x0001)
  *                                                                   ShouldResetTrackedObjects                         //0x0000(0x0229)
  *                                                                   ShouldResetCameraTracking                         //0x0000(0x0229)
  *                                                                   ShouldRenderCameraOverlay                         //0x0000(0x0229)
  *                                                                   ShouldEnableCameraTracking                        //0x0000(0x0229)
  *                                                                   ShouldEnableAutoFocus                             //0x0000(0x0229)
  *                                                                   SetWorldMapData                                   //0x0000(0x0229)
  *                                                                   SetSessionTrackingFeatureToEnable                 //0x0000(0x0229)
  *                                                                   SetResetTrackedObjects                            //0x0000(0x0229)
  *                                                                   SetResetCameraTracking                            //0x0000(0x0229)
  *                                                                   SetFaceTrackingUpdate                             //0x0000(0x0229)
  *                                                                   SetFaceTrackingDirection                          //0x0000(0x0229)
  *                                                                   SetEnableAutoFocus                                //0x0000(0x0229)
  *                                                                   SetDesiredVideoFormat                             //0x0000(0x0229)
  InCandidateObjects*                                                 SetCandidateObjectList                            //0x0000(0x0229)
  *                                                                   GetWorldMapData                                   //0x0000(0x0229)
  *                                                                   GetWorldAlignment                                 //0x0000(0x0229)
  *                                                                   GetSessionType                                    //0x0000(0x0229)
  *                                                                   GetPlaneDetectionMode                             //0x0000(0x0229)
  *                                                                   GetMaxNumSimultaneousImagesTracked                //0x0000(0x0229)
  *                                                                   GetLightEstimationMode                            //0x0000(0x0229)
  *                                                                   GetFrameSyncMode                                  //0x0000(0x0229)
  *                                                                   GetFaceTrackingUpdate                             //0x0000(0x0229)
  *                                                                   GetFaceTrackingDirection                          //0x0000(0x0229)
  *                                                                   GetEnvironmentCaptureProbeType                    //0x0000(0x0229)
  *                                                                   GetEnabledSessionTrackingFeature                  //0x0000(0x0229)
  *                                                                   GetDesiredVideoFormat                             //0x0000(0x0229)
  ReturnValue*                                                        GetCandidateObjectList                            //0x0000(0x0229)
  ReturnValue*                                                        GetCandidateImageList                             //0x0000(0x0229)
  CandidateObject*                                                    AddCandidateObject                                //0x0000(0x0229)
  NewCandidateImage*                                                  AddCandidateImage                                 //0x0000(0x0229)
};


class LuminARSessionConfig : public ARSessionConfig
{
  *                                                                   MaxPlaneQueryResults                              //0x00A8(0x0004)
  *                                                                   MinPlaneArea                                      //0x00AC(0x0004)
  *                                                                   bArbitraryOrientationPlaneDetection               //0x00B0(0x0001)
  Vector*                                                             PlaneSearchExtents                                //0x00B4(0x000C)
  PlaneQueryFlags*                                                    PlaneQueryFlags                                   //0x00C0(0x0010)
  *                                                                   bDiscardZeroExtentPlanes                          //0x00D0(0x0001)
};


class MagicLeapARPinComponent : public SceneComponent
{
  *                                                                   ObjectUID                                         //0x01F0(0x0010)
  *                                                                   UserIndex                                         //0x0200(0x0004)
  UnderlyingType*                                                     AutoPinType                                       //0x0204(0x0001)
  *                                                                   bShouldPinActor                                   //0x0205(0x0001)
  Class*                                                              PinDataClass                                      //0x0208(0x0008)
  PersistentEntityPinned__DelegateSignature*                          OnPersistentEntityPinned                          //0x0210(0x0010)
  PersistentEntityPinLost__DelegateSignature*                         OnPersistentEntityPinLost                         //0x0220(0x0010)
  Guid*                                                               PinnedCFUID                                       //0x0230(0x0010)
  SceneComponent*                                                     PinnedSceneComponent                              //0x0240(0x0008)
  MagicLeapARPinSaveGame*                                             PinData                                           //0x0248(0x0008)
  *                                                                   UnPin                                             //0x0000(0x0229)
  ComponentToPin*                                                     PinSceneComponent                                 //0x0000(0x0229)
  *                                                                   PinRestoredOrSynced                               //0x0000(0x0229)
  ActorToPin*                                                         PinActor                                          //0x0000(0x0229)
  *                                                                   PersistentEntityPinned__DelegateSignature         //0x0000(0x0229)
  *                                                                   PersistentEntityPinLost__DelegateSignature        //0x0000(0x0229)
  *                                                                   IsPinned                                          //0x0000(0x0229)
  *                                                                   GetPinnedPinID                                    //0x0000(0x0229)
  PinDataClass*                                                       GetPinData                                        //0x0000(0x0229)
};


class MagicLeapARPinFunctionLibrary : public BlueprintFunctionLibrary
{
  *                                                                   IsTrackerValid                                    //0x0000(0x0229)
  *                                                                   GetNumAvailableARPins                             //0x0000(0x0229)
  *                                                                   GetClosestARPin                                   //0x0000(0x0229)
  *                                                                   GetAvailableARPins                                //0x0000(0x0229)
  *                                                                   GetARPinPositionAndOrientation                    //0x0000(0x0229)
  *                                                                   DestroyTracker                                    //0x0000(0x0229)
  *                                                                   CreateTracker                                     //0x0000(0x0229)
};


class SaveGame : public Object
{
};


class MagicLeapARPinSaveGame : public SaveGame
{
  Guid*                                                               PinnedID                                          //0x0028(0x0010)
  Transform*                                                          ComponentWorldTransform                           //0x0040(0x0030)
  Transform*                                                          PinTransform                                      //0x0070(0x0030)
};


class MagicLeapAudioFunctionLibrary : public BlueprintFunctionLibrary
{
  ResultDelegate*                                                     SetOnAudioJackUnpluggedDelegate                   //0x0000(0x0229)
  ResultDelegate*                                                     SetOnAudioJackPluggedDelegate                     //0x0000(0x0229)
};


class MagicLeapControllerFunctionLibrary : public BlueprintFunctionLibrary
{
  *                                                                   SetMotionSourceForHand                            //0x0000(0x0229)
  *                                                                   SetControllerTrackingMode                         //0x0000(0x0229)
  *                                                                   PlayLEDPattern                                    //0x0000(0x0229)
  *                                                                   PlayLEDEffect                                     //0x0000(0x0229)
  *                                                                   PlayHapticPattern                                 //0x0000(0x0229)
  *                                                                   PlayControllerLEDEffect                           //0x0000(0x0229)
  *                                                                   PlayControllerLED                                 //0x0000(0x0229)
  *                                                                   PlayControllerHapticFeedback                      //0x0000(0x0229)
  *                                                                   MaxSupportedMagicLeapControllers                  //0x0000(0x0229)
  *                                                                   IsMLControllerConnected                           //0x0000(0x0229)
  *                                                                   InvertControllerMapping                           //0x0000(0x0229)
  *                                                                   GetMotionSourceForHand                            //0x0000(0x0229)
  *                                                                   GetMLControllerType                               //0x0000(0x0229)
  *                                                                   GetHandForMotionSource                            //0x0000(0x0229)
  *                                                                   GetControllerType                                 //0x0000(0x0229)
  *                                                                   GetControllerTrackingMode                         //0x0000(0x0229)
  *                                                                   GetControllerMapping                              //0x0000(0x0229)
};


class MagicLeapTouchpadGesturesComponent : public ActorComponent
{
  TouchpadGestureEvent__DelegateSignature*                            OnTouchpadGestureStart                            //0x00B8(0x0010)
  TouchpadGestureEvent__DelegateSignature*                            OnTouchpadGestureContinue                         //0x00C8(0x0010)
  TouchpadGestureEvent__DelegateSignature*                            OnTouchpadGestureEnd                              //0x00D8(0x0010)
};


class MagicLeapEyeTrackerFunctionLibrary : public BlueprintFunctionLibrary
{
  *                                                                   GetFixationComfort                                //0x0000(0x0229)
  *                                                                   GetEyeBlinkState                                  //0x0000(0x0229)
  *                                                                   GetCalibrationStatus                              //0x0000(0x0229)
};


class MagicLeapHandMeshingComponent : public ActorComponent
{
  InMRMeshPtr*                                                        DisconnectMRMesh                                  //0x0000(0x0229)
  InMRMeshPtr*                                                        ConnectMRMesh                                     //0x0000(0x0229)
};


class MagicLeapHandMeshingFunctionLibrary : public BlueprintFunctionLibrary
{
  InMRMeshPtr*                                                        DisconnectMRMesh                                  //0x0000(0x0229)
  *                                                                   DestroyClient                                     //0x0000(0x0229)
  *                                                                   CreateClient                                      //0x0000(0x0229)
  InMRMeshPtr*                                                        ConnectMRMesh                                     //0x0000(0x0229)
};


class LiveLinkSourceFactory : public Object
{
};


class LiveLinkMagicLeapHandTrackingSourceFactory : public LiveLinkSourceFactory
{
};


class MagicLeapHandTrackingFunctionLibrary : public BlueprintFunctionLibrary
{
  *                                                                   SetStaticGestureConfidenceThreshold               //0x0000(0x0229)
  *                                                                   SetConfiguration                                  //0x0000(0x0229)
  *                                                                   GetStaticGestureConfidenceThreshold               //0x0000(0x0229)
  *                                                                   GetMagicLeapHandTrackingLiveLinkSource            //0x0000(0x0229)
  *                                                                   GetHandThumbTip                                   //0x0000(0x0229)
  *                                                                   GetHandIndexFingerTip                             //0x0000(0x0229)
  *                                                                   GetHandCenterNormalized                           //0x0000(0x0229)
  *                                                                   GetHandCenter                                     //0x0000(0x0229)
  *                                                                   GetGestureKeypointTransform                       //0x0000(0x0229)
  *                                                                   GetGestureKeypoints                               //0x0000(0x0229)
  *                                                                   GetCurrentGestureConfidence                       //0x0000(0x0229)
  *                                                                   GetCurrentGesture                                 //0x0000(0x0229)
  *                                                                   GetConfiguration                                  //0x0000(0x0229)
};


class MagicLeapImageTrackerComponent : public SceneComponent
{
  Texture2D*                                                          TargetImageTexture                                //0x01F0(0x0008)
  *                                                                   Name                                              //0x01F8(0x0010)
  *                                                                   LongerDimension                                   //0x0208(0x0004)
  *                                                                   bIsStationary                                     //0x020C(0x0001)
  *                                                                   bUseUnreliablePose                                //0x020D(0x0001)
  SetImageTargetSucceededMulti__DelegateSignature*                    OnSetImageTargetSucceeded                         //0x0210(0x0010)
  SetImageTargetFailedMulti__DelegateSignature*                       OnSetImageTargetFailed                            //0x0220(0x0010)
  ImageTargetFoundMulti__DelegateSignature*                           OnImageTargetFound                                //0x0230(0x0010)
  ImageTargetLostMulti__DelegateSignature*                            OnImageTargetLost                                 //0x0240(0x0010)
  ImageTargetUnreliableTrackingMulti__DelegateSignature*              OnImageTargetUnreliableTracking                   //0x0250(0x0010)
  ImageTarget*                                                        SetTargetAsync                                    //0x0000(0x0229)
  *                                                                   RemoveTargetAsync                                 //0x0000(0x0229)
};


class MagicLeapImageTrackerFunctionLibrary : public BlueprintFunctionLibrary
{
  *                                                                   SetMaxSimultaneousTargets                         //0x0000(0x0229)
  *                                                                   IsImageTrackingEnabled                            //0x0000(0x0229)
  *                                                                   GetMaxSimultaneousTargets                         //0x0000(0x0229)
  *                                                                   EnableImageTracking                               //0x0000(0x0229)
};


class MagicLeapSecureStorage : public BlueprintFunctionLibrary
{
  *                                                                   PutSecureVector                                   //0x0000(0x0229)
  *                                                                   PutSecureTransform                                //0x0000(0x0229)
  *                                                                   PutSecureString                                   //0x0000(0x0229)
  ObjectToStore*                                                      PutSecureSaveGame                                 //0x0000(0x0229)
  *                                                                   PutSecureRotator                                  //0x0000(0x0229)
  *                                                                   PutSecureInt64                                    //0x0000(0x0229)
  *                                                                   PutSecureInt                                      //0x0000(0x0229)
  *                                                                   PutSecureFloat                                    //0x0000(0x0229)
  *                                                                   PutSecureByte                                     //0x0000(0x0229)
  *                                                                   PutSecureBool                                     //0x0000(0x0229)
  *                                                                   PutSecureArray                                    //0x0000(0x0229)
  *                                                                   GetSecureVector                                   //0x0000(0x0229)
  *                                                                   GetSecureTransform                                //0x0000(0x0229)
  *                                                                   GetSecureString                                   //0x0000(0x0229)
  ObjectToRetrieve*                                                   GetSecureSaveGame                                 //0x0000(0x0229)
  *                                                                   GetSecureRotator                                  //0x0000(0x0229)
  *                                                                   GetSecureInt64                                    //0x0000(0x0229)
  *                                                                   GetSecureInt                                      //0x0000(0x0229)
  *                                                                   GetSecureFloat                                    //0x0000(0x0229)
  *                                                                   GetSecureByte                                     //0x0000(0x0229)
  *                                                                   GetSecureBool                                     //0x0000(0x0229)
  *                                                                   GetSecureArray                                    //0x0000(0x0229)
  *                                                                   DeleteSecureData                                  //0x0000(0x0229)
};


class MagicLeapIdentity : public Object
{
  *                                                                   RequestIdentityAttributeValueDelegate__DelegateSignature//0x0000(0x0229)
  ResultDelegate*                                                     RequestAttributeValueAsync                        //0x0000(0x0229)
  *                                                                   RequestAttributeValue                             //0x0000(0x0229)
  *                                                                   ModifyIdentityAttributeValueDelegate__DelegateSignature//0x0000(0x0229)
  ResultDelegate*                                                     GetAllAvailableAttributesAsync                    //0x0000(0x0229)
  *                                                                   GetAllAvailableAttributes                         //0x0000(0x0229)
  *                                                                   AvailableIdentityAttributesDelegate__DelegateSignature//0x0000(0x0229)
};


class MagicLeapPlanesComponent : public SceneComponent
{
  QueryFlags*                                                         QueryFlags                                        //0x01F0(0x0010)
  BoxComponent*                                                       SearchVolume                                      //0x0200(0x0008)
  *                                                                   MaxResults                                        //0x0208(0x0004)
  *                                                                   MinHolePerimeter                                  //0x020C(0x0004)
  *                                                                   MinPlaneArea                                      //0x0210(0x0004)
  MagicLeapPlanesResultDelegateMulti__DelegateSignature*              OnPlanesQueryResult                               //0x0218(0x0010)
  *                                                                   RequestPlanesAsync                                //0x0000(0x0229)
};


class MagicLeapPlanesFunctionLibrary : public BlueprintFunctionLibrary
{
  *                                                                   ReorderPlaneFlags                                 //0x0000(0x0229)
  *                                                                   RemoveFlagsNotInQuery                             //0x0000(0x0229)
  Query*                                                              PlanesQueryBeginAsync                             //0x0000(0x0229)
  *                                                                   IsTrackerValid                                    //0x0000(0x0229)
  ContentActor*                                                       GetContentScale                                   //0x0000(0x0229)
  *                                                                   DestroyTracker                                    //0x0000(0x0229)
  *                                                                   CreateTracker                                     //0x0000(0x0229)
};


class MagicLeapPrivilegesFunctionLibrary : public BlueprintFunctionLibrary
{
  ResultDelegate*                                                     RequestPrivilegeAsync                             //0x0000(0x0229)
  *                                                                   RequestPrivilege                                  //0x0000(0x0229)
  *                                                                   CheckPrivilege                                    //0x0000(0x0229)
};


class AvfMediaSettings : public Object
{
  *                                                                   NativeAudioOut                                    //0x0028(0x0001)
};


class MediaSource : public Object
{
  *                                                                   Validate                                          //0x0000(0x0229)
  *                                                                   SetMediaOptionString                              //0x0000(0x0229)
  *                                                                   SetMediaOptionInt64                               //0x0000(0x0229)
  *                                                                   SetMediaOptionFloat                               //0x0000(0x0229)
  *                                                                   SetMediaOptionBool                                //0x0000(0x0229)
  *                                                                   GetURL                                            //0x0000(0x0229)
};


class BaseMediaSource : public MediaSource
{
  *                                                                   PlayerName                                        //0x0080(0x0008)
};


class ImgMediaSource : public BaseMediaSource
{
  FrameRate*                                                          FrameRateOverride                                 //0x0088(0x0008)
  *                                                                   ProxyOverride                                     //0x0090(0x0010)
  DirectoryPath*                                                      SequencePath                                      //0x00A0(0x0010)
  *                                                                   SetSequencePath                                   //0x0000(0x0229)
  *                                                                   GetSequencePath                                   //0x0000(0x0229)
  *                                                                   GetProxies                                        //0x0000(0x0229)
};


class ImgMediaSettings : public Object
{
  FrameRate*                                                          DefaultFrameRate                                  //0x0028(0x0008)
  *                                                                   CacheBehindPercentage                             //0x0030(0x0004)
  *                                                                   CacheSizeGB                                       //0x0034(0x0004)
  *                                                                   CacheThreads                                      //0x0038(0x0004)
  *                                                                   CacheThreadStackSizeKB                            //0x003C(0x0004)
  *                                                                   GlobalCacheSizeGB                                 //0x0040(0x0004)
  *                                                                   UseGlobalCache                                    //0x0044(0x0001)
  *                                                                   ExrDecoderThreads                                 //0x0048(0x0004)
  *                                                                   DefaultProxy                                      //0x0050(0x0010)
  *                                                                   UseDefaultProxy                                   //0x0060(0x0001)
};


class MovieSceneMediaSection : public MovieSceneSection
{
  MediaSource*                                                        MediaSource                                       //0x00E0(0x0008)
  *                                                                   bLooping                                          //0x00E8(0x0001)
  FrameNumber*                                                        StartFrameOffset                                  //0x00EC(0x0004)
  MediaTexture*                                                       MediaTexture                                      //0x00F0(0x0008)
  MediaSoundComponent*                                                MediaSoundComponent                               //0x00F8(0x0008)
  *                                                                   bUseExternalMediaPlayer                           //0x0100(0x0001)
  MediaPlayer*                                                        ExternalMediaPlayer                               //0x0108(0x0008)
};


class MovieSceneMediaTrack : public MovieSceneNameableTrack
{
  MediaSections*                                                      MediaSections                                     //0x0058(0x0010)
};


class WmfMediaSettings : public Object
{
  *                                                                   AllowNonStandardCodecs                            //0x0028(0x0001)
  *                                                                   LowLatency                                        //0x0029(0x0001)
  *                                                                   NativeAudioOut                                    //0x002A(0x0001)
  *                                                                   HardwareAcceleratedVideoDecoding                  //0x002B(0x0001)
};


class TcpMessagingSettings : public Object
{
  *                                                                   EnableTransport                                   //0x0028(0x0001)
  *                                                                   ListenEndpoint                                    //0x0030(0x0010)
  ConnectToEndpoints*                                                 ConnectToEndpoints                                //0x0040(0x0010)
  *                                                                   ConnectionRetryDelay                              //0x0050(0x0004)
};


class UdpMessagingSettings : public Object
{
  *                                                                   EnableTransport                                   //0x0028(0x0001)
  *                                                                   bAutoRepair                                       //0x0029(0x0001)
  *                                                                   UnicastEndpoint                                   //0x0030(0x0010)
  *                                                                   MulticastEndpoint                                 //0x0040(0x0010)
  *                                                                   MulticastTimeToLive                               //0x0050(0x0001)
  StaticEndpoints*                                                    StaticEndpoints                                   //0x0058(0x0010)
  *                                                                   EnableTunnel                                      //0x0068(0x0001)
  *                                                                   TunnelUnicastEndpoint                             //0x0070(0x0010)
  *                                                                   TunnelMulticastEndpoint                           //0x0080(0x0010)
  RemoteTunnelEndpoints*                                              RemoteTunnelEndpoints                             //0x0090(0x0010)
};


class MovieSceneSequence : public MovieSceneSignedObject
{
  MovieSceneEvaluationTemplate*                                       PrecompiledEvaluationTemplate                     //0x0050(0x02F0)
  UnderlyingType*                                                     DefaultCompletionMode                             //0x0340(0x0001)
  *                                                                   bParentContextsAreSignificant                     //0x0341(0x0001)
  *                                                                   bPlayableDirectly                                 //0x0342(0x0001)
  *                                                                   FindBindingsByTag                                 //0x0000(0x0229)
  *                                                                   FindBindingByTag                                  //0x0000(0x0229)
};


class ActorSequence : public MovieSceneSequence
{
  MovieScene*                                                         MovieScene                                        //0x0348(0x0008)
  ActorSequenceObjectReferenceMap*                                    ObjectReferences                                  //0x0350(0x0020)
};


class ActorSequenceComponent : public ActorComponent
{
  MovieSceneSequencePlaybackSettings*                                 PlaybackSettings                                  //0x00B0(0x0014)
  ActorSequence*                                                      Sequence                                          //0x00C8(0x0008)
  ActorSequencePlayer*                                                SequencePlayer                                    //0x00D0(0x0008)
};


class MovieSceneSequencePlayer : public Object
{
  OnMovieSceneSequencePlayerEvent__DelegateSignature*                 OnPlay                                            //0x0408(0x0010)
  OnMovieSceneSequencePlayerEvent__DelegateSignature*                 OnPlayReverse                                     //0x0418(0x0010)
  OnMovieSceneSequencePlayerEvent__DelegateSignature*                 OnStop                                            //0x0428(0x0010)
  OnMovieSceneSequencePlayerEvent__DelegateSignature*                 OnPause                                           //0x0438(0x0010)
  OnMovieSceneSequencePlayerEvent__DelegateSignature*                 OnFinished                                        //0x0448(0x0010)
  EMovieScenePlayerStatus*                                            Status                                            //0x0458(0x0001)
  *                                                                   bReversePlayback                                  //0x045C(0x0001)
  MovieSceneSequence*                                                 Sequence                                          //0x0460(0x0008)
  FrameNumber*                                                        StartTime                                         //0x0468(0x0004)
  *                                                                   DurationFrames                                    //0x046C(0x0004)
  *                                                                   CurrentNumLoops                                   //0x0470(0x0004)
  MovieSceneSequencePlaybackSettings*                                 PlaybackSettings                                  //0x0488(0x0014)
  MovieSceneRootEvaluationTemplateInstance*                           RootTemplateInstance                              //0x04A0(0x0308)
  MovieSceneSequenceReplProperties*                                   NetSyncProps                                      //0x0810(0x0010)
  MovieScenePlaybackClient*                                           PlaybackClient                                    //0x0820(0x0010)
  *                                                                   StopAtCurrentTime                                 //0x0000(0x0229)
  *                                                                   Stop                                              //0x0000(0x0229)
  *                                                                   SetTimeRange                                      //0x0000(0x0229)
  *                                                                   SetPlayRate                                       //0x0000(0x0229)
  *                                                                   SetPlaybackRange                                  //0x0000(0x0229)
  *                                                                   SetPlaybackPosition                               //0x0000(0x0229)
  *                                                                   SetFrameRate                                      //0x0000(0x0229)
  *                                                                   SetFrameRange                                     //0x0000(0x0229)
  *                                                                   SetDisableCameraCuts                              //0x0000(0x0229)
  *                                                                   ScrubToSeconds                                    //0x0000(0x0229)
  *                                                                   ScrubToMarkedFrame                                //0x0000(0x0229)
  *                                                                   ScrubToFrame                                      //0x0000(0x0229)
  *                                                                   Scrub                                             //0x0000(0x0229)
  *                                                                   RPC_OnStopEvent                                   //0x0000(0x0229)
  *                                                                   RPC_ExplicitServerUpdateEvent                     //0x0000(0x0229)
  *                                                                   PlayToSeconds                                     //0x0000(0x0229)
  *                                                                   PlayToMarkedFrame                                 //0x0000(0x0229)
  *                                                                   PlayToFrame                                       //0x0000(0x0229)
  *                                                                   PlayReverse                                       //0x0000(0x0229)
  *                                                                   PlayLooping                                       //0x0000(0x0229)
  *                                                                   Play                                              //0x0000(0x0229)
  *                                                                   Pause                                             //0x0000(0x0229)
  *                                                                   JumpToSeconds                                     //0x0000(0x0229)
  *                                                                   JumpToPosition                                    //0x0000(0x0229)
  *                                                                   JumpToMarkedFrame                                 //0x0000(0x0229)
  *                                                                   JumpToFrame                                       //0x0000(0x0229)
  *                                                                   IsReversed                                        //0x0000(0x0229)
  *                                                                   IsPlaying                                         //0x0000(0x0229)
  *                                                                   IsPaused                                          //0x0000(0x0229)
  *                                                                   GoToEndAndStop                                    //0x0000(0x0229)
  *                                                                   GetStartTime                                      //0x0000(0x0229)
  *                                                                   GetPlayRate                                       //0x0000(0x0229)
  *                                                                   GetPlaybackStart                                  //0x0000(0x0229)
  *                                                                   GetPlaybackPosition                               //0x0000(0x0229)
  *                                                                   GetPlaybackEnd                                    //0x0000(0x0229)
  InObject*                                                           GetObjectBindings                                 //0x0000(0x0229)
  *                                                                   GetLength                                         //0x0000(0x0229)
  *                                                                   GetFrameRate                                      //0x0000(0x0229)
  *                                                                   GetFrameDuration                                  //0x0000(0x0229)
  *                                                                   GetEndTime                                        //0x0000(0x0229)
  *                                                                   GetDuration                                       //0x0000(0x0229)
  *                                                                   GetDisableCameraCuts                              //0x0000(0x0229)
  *                                                                   GetCurrentTime                                    //0x0000(0x0229)
  ReturnValue*                                                        GetBoundObjects                                   //0x0000(0x0229)
  *                                                                   ChangePlaybackDirection                           //0x0000(0x0229)
};


class ActorSequencePlayer : public MovieSceneSequencePlayer
{
};


class AndroidPermissionCallbackProxy : public Object
{
  AndroidPermissionDynamicDelegate__DelegateSignature*                OnPermissionsGrantedDynamicDelegate               //0x0028(0x0010)
};


class AndroidPermissionFunctionLibrary : public BlueprintFunctionLibrary
{
  *                                                                   CheckPermission                                   //0x0000(0x0229)
  ReturnValue*                                                        AcquirePermissions                                //0x0000(0x0229)
};


class AppleImageUtilsBaseAsyncTaskBlueprintProxy : public Object
{
  AppleImageConversionDelegate__DelegateSignature*                    OnSuccess                                         //0x0030(0x0010)
  AppleImageConversionDelegate__DelegateSignature*                    OnFailure                                         //0x0040(0x0010)
  AppleImageUtilsImageConversionResult*                               ConversionResult                                  //0x0060(0x0020)
  SourceImage*                                                        CreateProxyObjectForConvertToTIFF                 //0x0000(0x0229)
  SourceImage*                                                        CreateProxyObjectForConvertToPNG                  //0x0000(0x0229)
  SourceImage*                                                        CreateProxyObjectForConvertToJPEG                 //0x0000(0x0229)
  SourceImage*                                                        CreateProxyObjectForConvertToHEIF                 //0x0000(0x0229)
};


class AppleImageInterface : public Interface
{
};


class ArchVisCharacter : public Character
{
  *                                                                   LookUpAxisName                                    //0x0628(0x0010)
  *                                                                   LookUpAtRateAxisName                              //0x0638(0x0010)
  *                                                                   TurnAxisName                                      //0x0648(0x0010)
  *                                                                   TurnAtRateAxisName                                //0x0658(0x0010)
  *                                                                   MoveForwardAxisName                               //0x0668(0x0010)
  *                                                                   MoveRightAxisName                                 //0x0678(0x0010)
  *                                                                   MouseSensitivityScale_Pitch                       //0x0688(0x0004)
  *                                                                   MouseSensitivityScale_Yaw                         //0x068C(0x0004)
};


class MovementComponent : public ActorComponent
{
  SceneComponent*                                                     UpdatedComponent                                  //0x00B0(0x0008)
  PrimitiveComponent*                                                 UpdatedPrimitive                                  //0x00B8(0x0008)
  Vector*                                                             Velocity                                          //0x00C4(0x000C)
  Vector*                                                             PlaneConstraintNormal                             //0x00D0(0x000C)
  Vector*                                                             PlaneConstraintOrigin                             //0x00DC(0x000C)
  *                                                                   bUpdateOnlyIfRendered                             //0x00E8(0x0001)
  *                                                                   bAutoUpdateTickRegistration                       //0x00E8(0x0001)
  *                                                                   bTickBeforeOwner                                  //0x00E8(0x0001)
  *                                                                   bAutoRegisterUpdatedComponent                     //0x00E8(0x0001)
  *                                                                   bConstrainToPlane                                 //0x00E8(0x0001)
  *                                                                   bSnapToPlaneAtStart                               //0x00E8(0x0001)
  *                                                                   bAutoRegisterPhysicsVolumeUpdates                 //0x00E8(0x0001)
  *                                                                   bComponentShouldUpdatePhysicsVolume               //0x00E8(0x0001)
  UnderlyingType*                                                     PlaneConstraintAxisSetting                        //0x00EB(0x0001)
  *                                                                   StopMovementImmediately                           //0x0000(0x0229)
  *                                                                   SnapUpdatedComponentToPlane                       //0x0000(0x0229)
  NewUpdatedComponent*                                                SetUpdatedComponent                               //0x0000(0x0229)
  *                                                                   SetPlaneConstraintOrigin                          //0x0000(0x0229)
  *                                                                   SetPlaneConstraintNormal                          //0x0000(0x0229)
  *                                                                   SetPlaneConstraintFromVectors                     //0x0000(0x0229)
  *                                                                   SetPlaneConstraintEnabled                         //0x0000(0x0229)
  *                                                                   SetPlaneConstraintAxisSetting                     //0x0000(0x0229)
  NewVolume*                                                          PhysicsVolumeChanged                              //0x0000(0x0229)
  OutHit*                                                             K2_MoveUpdatedComponent                           //0x0000(0x0229)
  *                                                                   K2_GetModifiedMaxSpeed                            //0x0000(0x0229)
  *                                                                   K2_GetMaxSpeedModifier                            //0x0000(0x0229)
  *                                                                   IsExceedingMaxSpeed                               //0x0000(0x0229)
  *                                                                   GetPlaneConstraintOrigin                          //0x0000(0x0229)
  *                                                                   GetPlaneConstraintNormal                          //0x0000(0x0229)
  *                                                                   GetPlaneConstraintAxisSetting                     //0x0000(0x0229)
  ReturnValue*                                                        GetPhysicsVolume                                  //0x0000(0x0229)
  *                                                                   GetMaxSpeed                                       //0x0000(0x0229)
  *                                                                   GetGravityZ                                       //0x0000(0x0229)
  *                                                                   ConstrainNormalToPlane                            //0x0000(0x0229)
  *                                                                   ConstrainLocationToPlane                          //0x0000(0x0229)
  *                                                                   ConstrainDirectionToPlane                         //0x0000(0x0229)
};


class NavMovementComponent : public MovementComponent
{
  NavAgentProperties*                                                 NavAgentProps                                     //0x00F0(0x0030)
  *                                                                   FixedPathBrakingDistance                          //0x0120(0x0004)
  *                                                                   bUpdateNavAgentWithOwnersCollision                //0x0124(0x0001)
  *                                                                   bUseAccelerationForPaths                          //0x0124(0x0001)
  *                                                                   bUseFixedBrakingDistanceForPaths                  //0x0124(0x0001)
  MovementProperties*                                                 MovementState                                     //0x0125(0x0001)
  Object*                                                             PathFollowingComp                                 //0x0128(0x0008)
  *                                                                   StopMovementKeepPathing                           //0x0000(0x0229)
  *                                                                   StopActiveMovement                                //0x0000(0x0229)
  *                                                                   IsSwimming                                        //0x0000(0x0229)
  *                                                                   IsMovingOnGround                                  //0x0000(0x0229)
  *                                                                   IsFlying                                          //0x0000(0x0229)
  *                                                                   IsFalling                                         //0x0000(0x0229)
  *                                                                   IsCrouching                                       //0x0000(0x0229)
};


class PawnMovementComponent : public NavMovementComponent
{
  Pawn*                                                               PawnOwner                                         //0x0130(0x0008)
  *                                                                   K2_GetInputVector                                 //0x0000(0x0229)
  *                                                                   IsMoveInputIgnored                                //0x0000(0x0229)
  *                                                                   GetPendingInputVector                             //0x0000(0x0229)
  ReturnValue*                                                        GetPawnOwner                                      //0x0000(0x0229)
  *                                                                   GetLastInputVector                                //0x0000(0x0229)
  *                                                                   ConsumeInputVector                                //0x0000(0x0229)
  *                                                                   AddInputVector                                    //0x0000(0x0229)
};


class CharacterMovementComponent : public PawnMovementComponent
{
  Character*                                                          CharacterOwner                                    //0x0148(0x0008)
  *                                                                   GravityScale                                      //0x0150(0x0004)
  *                                                                   MaxStepHeight                                     //0x0154(0x0004)
  *                                                                   JumpZVelocity                                     //0x0158(0x0004)
  *                                                                   JumpOffJumpZFactor                                //0x015C(0x0004)
  *                                                                   WalkableFloorAngle                                //0x0160(0x0004)
  *                                                                   WalkableFloorZ                                    //0x0164(0x0004)
  EMovementMode*                                                      MovementMode                                      //0x0168(0x0001)
  *                                                                   CustomMovementMode                                //0x0169(0x0001)
  UnderlyingType*                                                     NetworkSmoothingMode                              //0x016A(0x0001)
  *                                                                   GroundFriction                                    //0x016C(0x0004)
  *                                                                   MaxWalkSpeed                                      //0x018C(0x0004)
  *                                                                   MaxWalkSpeedCrouched                              //0x0190(0x0004)
  *                                                                   MaxSwimSpeed                                      //0x0194(0x0004)
  *                                                                   MaxFlySpeed                                       //0x0198(0x0004)
  *                                                                   MaxCustomMovementSpeed                            //0x019C(0x0004)
  *                                                                   MaxAcceleration                                   //0x01A0(0x0004)
  *                                                                   MinAnalogWalkSpeed                                //0x01A4(0x0004)
  *                                                                   BrakingFrictionFactor                             //0x01A8(0x0004)
  *                                                                   BrakingFriction                                   //0x01AC(0x0004)
  *                                                                   BrakingSubStepTime                                //0x01B0(0x0004)
  *                                                                   BrakingDecelerationWalking                        //0x01B4(0x0004)
  *                                                                   BrakingDecelerationFalling                        //0x01B8(0x0004)
  *                                                                   BrakingDecelerationSwimming                       //0x01BC(0x0004)
  *                                                                   BrakingDecelerationFlying                         //0x01C0(0x0004)
  *                                                                   AirControl                                        //0x01C4(0x0004)
  *                                                                   AirControlBoostMultiplier                         //0x01C8(0x0004)
  *                                                                   AirControlBoostVelocityThreshold                  //0x01CC(0x0004)
  *                                                                   FallingLateralFriction                            //0x01D0(0x0004)
  *                                                                   CrouchedHalfHeight                                //0x01D4(0x0004)
  *                                                                   Buoyancy                                          //0x01D8(0x0004)
  *                                                                   PerchRadiusThreshold                              //0x01DC(0x0004)
  *                                                                   PerchAdditionalHeight                             //0x01E0(0x0004)
  Rotator*                                                            RotationRate                                      //0x01E4(0x000C)
  *                                                                   bUseSeparateBrakingFriction                       //0x01F0(0x0001)
  *                                                                   bApplyGravityWhileJumping                         //0x01F0(0x0001)
  *                                                                   bUseControllerDesiredRotation                     //0x01F0(0x0001)
  *                                                                   bOrientRotationToMovement                         //0x01F0(0x0001)
  *                                                                   bSweepWhileNavWalking                             //0x01F0(0x0001)
  *                                                                   bMovementInProgress                               //0x01F0(0x0001)
  *                                                                   bEnableScopedMovementUpdates                      //0x01F0(0x0001)
  *                                                                   bEnableServerDualMoveScopedMovementUpdates        //0x01F1(0x0001)
  *                                                                   bForceMaxAccel                                    //0x01F1(0x0001)
  *                                                                   bRunPhysicsWithNoController                       //0x01F1(0x0001)
  *                                                                   bForceNextFloorCheck                              //0x01F1(0x0001)
  *                                                                   bShrinkProxyCapsule                               //0x01F1(0x0001)
  *                                                                   bCanWalkOffLedges                                 //0x01F1(0x0001)
  *                                                                   bCanWalkOffLedgesWhenCrouching                    //0x01F1(0x0001)
  *                                                                   bNetworkSkipProxyPredictionOnNetUpdate            //0x01F2(0x0001)
  *                                                                   bNetworkAlwaysReplicateTransformUpdateTimestamp   //0x01F2(0x0001)
  *                                                                   bDeferUpdateMoveComponent                         //0x01F2(0x0001)
  *                                                                   bEnablePhysicsInteraction                         //0x01F2(0x0001)
  *                                                                   bTouchForceScaledToMass                           //0x01F2(0x0001)
  *                                                                   bPushForceScaledToMass                            //0x01F2(0x0001)
  *                                                                   bPushForceUsingZOffset                            //0x01F2(0x0001)
  *                                                                   bScalePushForceToVelocity                         //0x01F3(0x0001)
  SceneComponent*                                                     DeferredUpdatedMoveComponent                      //0x01F8(0x0008)
  *                                                                   MaxOutOfWaterStepHeight                           //0x0200(0x0004)
  *                                                                   OutofWaterZ                                       //0x0204(0x0004)
  *                                                                   Mass                                              //0x0208(0x0004)
  *                                                                   StandingDownwardForceScale                        //0x020C(0x0004)
  *                                                                   InitialPushForceFactor                            //0x0210(0x0004)
  *                                                                   PushForceFactor                                   //0x0214(0x0004)
  *                                                                   PushForcePointZOffsetFactor                       //0x0218(0x0004)
  *                                                                   TouchForceFactor                                  //0x021C(0x0004)
  *                                                                   MinTouchForce                                     //0x0220(0x0004)
  *                                                                   MaxTouchForce                                     //0x0224(0x0004)
  *                                                                   RepulsionForce                                    //0x0228(0x0004)
  Vector*                                                             Acceleration                                      //0x022C(0x000C)
  Quat*                                                               LastUpdateRotation                                //0x0240(0x0010)
  Vector*                                                             LastUpdateLocation                                //0x0250(0x000C)
  Vector*                                                             LastUpdateVelocity                                //0x025C(0x000C)
  *                                                                   ServerLastTransformUpdateTimeStamp                //0x0268(0x0004)
  *                                                                   ServerLastClientGoodMoveAckTime                   //0x026C(0x0004)
  *                                                                   ServerLastClientAdjustmentTime                    //0x0270(0x0004)
  Vector*                                                             PendingImpulseToApply                             //0x0274(0x000C)
  Vector*                                                             PendingForceToApply                               //0x0280(0x000C)
  *                                                                   AnalogInputModifier                               //0x028C(0x0004)
  *                                                                   MaxSimulationTimeStep                             //0x029C(0x0004)
  *                                                                   MaxSimulationIterations                           //0x02A0(0x0004)
  *                                                                   MaxJumpApexAttemptsPerSimulation                  //0x02A4(0x0004)
  *                                                                   MaxDepenetrationWithGeometry                      //0x02A8(0x0004)
  *                                                                   MaxDepenetrationWithGeometryAsProxy               //0x02AC(0x0004)
  *                                                                   MaxDepenetrationWithPawn                          //0x02B0(0x0004)
  *                                                                   MaxDepenetrationWithPawnAsProxy                   //0x02B4(0x0004)
  *                                                                   NetworkSimulatedSmoothLocationTime                //0x02B8(0x0004)
  *                                                                   NetworkSimulatedSmoothRotationTime                //0x02BC(0x0004)
  *                                                                   ListenServerNetworkSimulatedSmoothLocationTime    //0x02C0(0x0004)
  *                                                                   ListenServerNetworkSimulatedSmoothRotationTime    //0x02C4(0x0004)
  *                                                                   NetProxyShrinkRadius                              //0x02C8(0x0004)
  *                                                                   NetProxyShrinkHalfHeight                          //0x02CC(0x0004)
  *                                                                   NetworkMaxSmoothUpdateDistance                    //0x02D0(0x0004)
  *                                                                   NetworkNoSmoothUpdateDistance                     //0x02D4(0x0004)
  *                                                                   NetworkMinTimeBetweenClientAckGoodMoves           //0x02D8(0x0004)
  *                                                                   NetworkMinTimeBetweenClientAdjustments            //0x02DC(0x0004)
  *                                                                   NetworkMinTimeBetweenClientAdjustmentsLargeCorrection//0x02E0(0x0004)
  *                                                                   NetworkLargeClientCorrectionDistance              //0x02E4(0x0004)
  *                                                                   LedgeCheckThreshold                               //0x02E8(0x0004)
  *                                                                   JumpOutOfWaterPitch                               //0x02EC(0x0004)
  FindFloorResult*                                                    CurrentFloor                                      //0x02F0(0x0094)
  EMovementMode*                                                      DefaultLandMovementMode                           //0x0384(0x0001)
  EMovementMode*                                                      DefaultWaterMovementMode                          //0x0385(0x0001)
  EMovementMode*                                                      GroundMovementMode                                //0x0386(0x0001)
  *                                                                   bMaintainHorizontalGroundVelocity                 //0x0387(0x0001)
  *                                                                   bImpartBaseVelocityX                              //0x0387(0x0001)
  *                                                                   bImpartBaseVelocityY                              //0x0387(0x0001)
  *                                                                   bImpartBaseVelocityZ                              //0x0387(0x0001)
  *                                                                   bImpartBaseAngularVelocity                        //0x0387(0x0001)
  *                                                                   bJustTeleported                                   //0x0387(0x0001)
  *                                                                   bNetworkUpdateReceived                            //0x0387(0x0001)
  *                                                                   bNetworkMovementModeChanged                       //0x0387(0x0001)
  *                                                                   bIgnoreClientMovementErrorChecksAndCorrection     //0x0388(0x0001)
  *                                                                   bServerAcceptClientAuthoritativePosition          //0x0388(0x0001)
  *                                                                   bNotifyApex                                       //0x0388(0x0001)
  *                                                                   bCheatFlying                                      //0x0388(0x0001)
  *                                                                   bWantsToCrouch                                    //0x0388(0x0001)
  *                                                                   bCrouchMaintainsBaseLocation                      //0x0388(0x0001)
  *                                                                   bIgnoreBaseRotation                               //0x0388(0x0001)
  *                                                                   bFastAttachedMove                                 //0x0388(0x0001)
  *                                                                   bAlwaysCheckFloor                                 //0x0389(0x0001)
  *                                                                   bUseFlatBaseForFloorChecks                        //0x0389(0x0001)
  *                                                                   bPerformingJumpOff                                //0x0389(0x0001)
  *                                                                   bWantsToLeaveNavWalking                           //0x0389(0x0001)
  *                                                                   bUseRVOAvoidance                                  //0x0389(0x0001)
  *                                                                   bRequestedMoveUseAcceleration                     //0x0389(0x0001)
  *                                                                   bWasSimulatingRootMotion                          //0x0389(0x0001)
  *                                                                   bAllowPhysicsRotationDuringAnimRootMotion         //0x038A(0x0001)
  *                                                                   bHasRequestedVelocity                             //0x038A(0x0001)
  *                                                                   bRequestedMoveWithMaxSpeed                        //0x038A(0x0001)
  *                                                                   bWasAvoidanceUpdated                              //0x038A(0x0001)
  *                                                                   bProjectNavMeshWalking                            //0x038A(0x0001)
  *                                                                   bProjectNavMeshOnBothWorldChannels                //0x038A(0x0001)
  *                                                                   AvoidanceConsiderationRadius                      //0x039C(0x0004)
  Vector*                                                             RequestedVelocity                                 //0x03A0(0x000C)
  *                                                                   AvoidanceUID                                      //0x03AC(0x0004)
  NavAvoidanceMask*                                                   AvoidanceGroup                                    //0x03B0(0x0004)
  NavAvoidanceMask*                                                   GroupsToAvoid                                     //0x03B4(0x0004)
  NavAvoidanceMask*                                                   GroupsToIgnore                                    //0x03B8(0x0004)
  *                                                                   AvoidanceWeight                                   //0x03BC(0x0004)
  Vector*                                                             PendingLaunchVelocity                             //0x03C0(0x000C)
  *                                                                   NavMeshProjectionInterval                         //0x0470(0x0004)
  *                                                                   NavMeshProjectionTimer                            //0x0474(0x0004)
  *                                                                   NavMeshProjectionInterpSpeed                      //0x0478(0x0004)
  *                                                                   NavMeshProjectionHeightScaleUp                    //0x047C(0x0004)
  *                                                                   NavMeshProjectionHeightScaleDown                  //0x0480(0x0004)
  *                                                                   NavWalkingFloorDistTolerance                      //0x0484(0x0004)
  CharacterMovementComponentPostPhysicsTickFunction*                  PostPhysicsTickFunction                           //0x0488(0x0030)
  *                                                                   MinTimeBetweenTimeStampResets                     //0x04D0(0x0004)
  RootMotionSourceGroup*                                              CurrentRootMotion                                 //0x04D8(0x00F8)
  RootMotionMovementParams*                                           RootMotionParams                                  //0x0660(0x0040)
  Vector*                                                             AnimRootMotionVelocity                            //0x06A0(0x000C)
  *                                                                   SetWalkableFloorZ                                 //0x0000(0x0229)
  *                                                                   SetWalkableFloorAngle                             //0x0000(0x0229)
  *                                                                   SetMovementMode                                   //0x0000(0x0229)
  *                                                                   SetGroupsToIgnoreMask                             //0x0000(0x0229)
  *                                                                   SetGroupsToIgnore                                 //0x0000(0x0229)
  *                                                                   SetGroupsToAvoidMask                              //0x0000(0x0229)
  *                                                                   SetGroupsToAvoid                                  //0x0000(0x0229)
  *                                                                   SetAvoidanceGroupMask                             //0x0000(0x0229)
  *                                                                   SetAvoidanceGroup                                 //0x0000(0x0229)
  *                                                                   SetAvoidanceEnabled                               //0x0000(0x0229)
  *                                                                   K2_GetWalkableFloorZ                              //0x0000(0x0229)
  *                                                                   K2_GetWalkableFloorAngle                          //0x0000(0x0229)
  *                                                                   K2_GetModifiedMaxAcceleration                     //0x0000(0x0229)
  FloorResult*                                                        K2_FindFloor                                      //0x0000(0x0229)
  FloorResult*                                                        K2_ComputeFloorDist                               //0x0000(0x0229)
  *                                                                   IsWalking                                         //0x0000(0x0229)
  Hit*                                                                IsWalkable                                        //0x0000(0x0229)
  *                                                                   GetValidPerchRadius                               //0x0000(0x0229)
  *                                                                   GetPerchRadiusThreshold                           //0x0000(0x0229)
  ReturnValue*                                                        GetMovementBase                                   //0x0000(0x0229)
  *                                                                   GetMinAnalogSpeed                                 //0x0000(0x0229)
  *                                                                   GetMaxJumpHeightWithJumpTime                      //0x0000(0x0229)
  *                                                                   GetMaxJumpHeight                                  //0x0000(0x0229)
  *                                                                   GetMaxBrakingDeceleration                         //0x0000(0x0229)
  *                                                                   GetMaxAcceleration                                //0x0000(0x0229)
  *                                                                   GetLastUpdateVelocity                             //0x0000(0x0229)
  *                                                                   GetLastUpdateRotation                             //0x0000(0x0229)
  *                                                                   GetLastUpdateLocation                             //0x0000(0x0229)
  *                                                                   GetImpartedMovementBaseVelocity                   //0x0000(0x0229)
  *                                                                   GetCurrentAcceleration                            //0x0000(0x0229)
  ReturnValue*                                                        GetCharacterOwner                                 //0x0000(0x0229)
  *                                                                   GetAnalogInputModifier                            //0x0000(0x0229)
  *                                                                   DisableMovement                                   //0x0000(0x0229)
  *                                                                   ClearAccumulatedForces                            //0x0000(0x0229)
  OverlappedComp*                                                     CapsuleTouched                                    //0x0000(0x0229)
  *                                                                   CalcVelocity                                      //0x0000(0x0229)
  *                                                                   AddImpulse                                        //0x0000(0x0229)
  *                                                                   AddForce                                          //0x0000(0x0229)
};


class ArchVisCharMovementComponent : public CharacterMovementComponent
{
  Rotator*                                                            RotationalAcceleration                            //0x06D0(0x000C)
  Rotator*                                                            RotationalDeceleration                            //0x06DC(0x000C)
  Rotator*                                                            MaxRotationalVelocity                             //0x06E8(0x000C)
  *                                                                   MinPitch                                          //0x06F4(0x0004)
  *                                                                   MaxPitch                                          //0x06F8(0x0004)
  *                                                                   WalkingFriction                                   //0x06FC(0x0004)
  *                                                                   WalkingSpeed                                      //0x0700(0x0004)
  *                                                                   WalkingAcceleration                               //0x0704(0x0004)
};


class AssetTagsSubsystem : public EngineSubsystem
{
  AssetPtr*                                                           GetCollectionsContainingAssetPtr                  //0x0000(0x0229)
  *                                                                   GetCollectionsContainingAssetData                 //0x0000(0x0229)
  *                                                                   GetCollectionsContainingAsset                     //0x0000(0x0229)
  *                                                                   GetCollections                                    //0x0000(0x0229)
  *                                                                   GetAssetsInCollection                             //0x0000(0x0229)
  *                                                                   CollectionExists                                  //0x0000(0x0229)
};


class AudioGenerator : public Object
{
};


class AudioCapture : public AudioGenerator
{
  *                                                                   StopCapturingAudio                                //0x0000(0x0229)
  *                                                                   StartCapturingAudio                               //0x0000(0x0229)
  *                                                                   IsCapturingAudio                                  //0x0000(0x0229)
  *                                                                   GetAudioCaptureDeviceInfo                         //0x0000(0x0229)
};


class AudioCaptureFunctionLibrary : public BlueprintFunctionLibrary
{
  ReturnValue*                                                        CreateAudioCapture                                //0x0000(0x0229)
};


class AudioCaptureComponent : public SynthComponent
{
  *                                                                   JitterLatencyFrames                               //0x0620(0x0004)
};


class CableActor : public Actor
{
  CableComponent*                                                     CableComponent                                    //0x0218(0x0008)
};


class CableComponent : public MeshComponent
{
  *                                                                   bAttachStart                                      //0x0400(0x0001)
  *                                                                   bAttachEnd                                        //0x0401(0x0001)
  ComponentReference*                                                 AttachEndTo                                       //0x0408(0x0028)
  *                                                                   AttachEndToSocketName                             //0x0430(0x0008)
  Vector*                                                             EndLocation                                       //0x0438(0x000C)
  *                                                                   CableLength                                       //0x0444(0x0004)
  *                                                                   NumSegments                                       //0x0448(0x0004)
  *                                                                   SubstepTime                                       //0x044C(0x0004)
  *                                                                   SolverIterations                                  //0x0450(0x0004)
  *                                                                   bEnableStiffness                                  //0x0454(0x0001)
  *                                                                   bEnableCollision                                  //0x0455(0x0001)
  *                                                                   CollisionFriction                                 //0x0458(0x0004)
  Vector*                                                             CableForce                                        //0x045C(0x000C)
  *                                                                   CableGravityScale                                 //0x0468(0x0004)
  *                                                                   CableWidth                                        //0x046C(0x0004)
  *                                                                   NumSides                                          //0x0470(0x0004)
  *                                                                   TileMaterial                                      //0x0474(0x0004)
  Component*                                                          SetAttachEndToComponent                           //0x0000(0x0229)
  Actor*                                                              SetAttachEndTo                                    //0x0000(0x0229)
  *                                                                   GetCableParticleLocations                         //0x0000(0x0229)
  ReturnValue*                                                        GetAttachedComponent                              //0x0000(0x0229)
  ReturnValue*                                                        GetAttachedActor                                  //0x0000(0x0229)
};


class CustomMeshComponent : public MeshComponent
{
  *                                                                   SetCustomMeshTriangles                            //0x0000(0x0229)
  *                                                                   ClearCustomMeshTriangles                          //0x0000(0x0229)
  *                                                                   AddCustomMeshTriangles                            //0x0000(0x0229)
};


class LocationServices : public BlueprintFunctionLibrary
{
  *                                                                   StopLocationServices                              //0x0000(0x0229)
  *                                                                   StartLocationServices                             //0x0000(0x0229)
  *                                                                   IsLocationAccuracyAvailable                       //0x0000(0x0229)
  *                                                                   InitLocationServices                              //0x0000(0x0229)
  ReturnValue*                                                        GetLocationServicesImpl                           //0x0000(0x0229)
  *                                                                   GetLastKnownLocation                              //0x0000(0x0229)
  *                                                                   AreLocationServicesEnabled                        //0x0000(0x0229)
};


class LocationServicesImpl : public Object
{
  LocationServicesData_OnLocationChanged__DelegateSignature*          OnLocationChanged                                 //0x0028(0x0010)
};


class MobileInstalledContent : public Object
{
  *                                                                   Mount                                             //0x0000(0x0229)
  *                                                                   GetInstalledContentSize                           //0x0000(0x0229)
  *                                                                   GetDiskFreeSpace                                  //0x0000(0x0229)
};


class MobilePendingContent : public MobileInstalledContent
{
  OnSucceeded*                                                        StartInstall                                      //0x0000(0x0229)
  *                                                                   GetTotalDownloadedSize                            //0x0000(0x0229)
  *                                                                   GetRequiredDiskSpace                              //0x0000(0x0229)
  *                                                                   GetInstallProgress                                //0x0000(0x0229)
  *                                                                   GetDownloadStatusText                             //0x0000(0x0229)
  *                                                                   GetDownloadSpeed                                  //0x0000(0x0229)
  *                                                                   GetDownloadSize                                   //0x0000(0x0229)
};


class MobilePatchingLibrary : public BlueprintFunctionLibrary
{
  OnSucceeded*                                                        RequestContent                                    //0x0000(0x0229)
  *                                                                   HasActiveWiFiConnection                           //0x0000(0x0229)
  *                                                                   GetSupportedPlatformNames                         //0x0000(0x0229)
  ReturnValue*                                                        GetInstalledContent                               //0x0000(0x0229)
  *                                                                   GetActiveDeviceProfileName                        //0x0000(0x0229)
};


class WheeledVehicleMovementComponent : public PawnMovementComponent
{
  *                                                                   bDeprecatedSpringOffsetMode                       //0x0140(0x0001)
  *                                                                   bReverseAsBrake                                   //0x0140(0x0001)
  *                                                                   bUseRVOAvoidance                                  //0x0140(0x0001)
  *                                                                   bRawHandbrakeInput                                //0x0140(0x0001)
  *                                                                   bRawGearUpInput                                   //0x0140(0x0001)
  *                                                                   bRawGearDownInput                                 //0x0140(0x0001)
  *                                                                   bWasAvoidanceUpdated                              //0x0144(0x0001)
  *                                                                   Mass                                              //0x0148(0x0004)
  WheelSetups*                                                        WheelSetups                                       //0x0150(0x0010)
  *                                                                   DragCoefficient                                   //0x0160(0x0004)
  *                                                                   ChassisWidth                                      //0x0164(0x0004)
  *                                                                   ChassisHeight                                     //0x0168(0x0004)
  *                                                                   DragArea                                          //0x016C(0x0004)
  *                                                                   EstimatedMaxEngineSpeed                           //0x0170(0x0004)
  *                                                                   MaxEngineRPM                                      //0x0174(0x0004)
  *                                                                   DebugDragMagnitude                                //0x0178(0x0004)
  Vector*                                                             InertiaTensorScale                                //0x017C(0x000C)
  *                                                                   MinNormalizedTireLoad                             //0x0188(0x0004)
  *                                                                   MinNormalizedTireLoadFiltered                     //0x018C(0x0004)
  *                                                                   MaxNormalizedTireLoad                             //0x0190(0x0004)
  *                                                                   MaxNormalizedTireLoadFiltered                     //0x0194(0x0004)
  *                                                                   ThresholdLongitudinalSpeed                        //0x0198(0x0004)
  *                                                                   LowForwardSpeedSubStepCount                       //0x019C(0x0004)
  *                                                                   HighForwardSpeedSubStepCount                      //0x01A0(0x0004)
  Wheels*                                                             Wheels                                            //0x01A8(0x0010)
  *                                                                   RVOAvoidanceRadius                                //0x01D0(0x0004)
  *                                                                   RVOAvoidanceHeight                                //0x01D4(0x0004)
  *                                                                   AvoidanceConsiderationRadius                      //0x01D8(0x0004)
  *                                                                   RVOSteeringStep                                   //0x01DC(0x0004)
  *                                                                   RVOThrottleStep                                   //0x01E0(0x0004)
  *                                                                   AvoidanceUID                                      //0x01E4(0x0004)
  NavAvoidanceMask*                                                   AvoidanceGroup                                    //0x01E8(0x0004)
  NavAvoidanceMask*                                                   GroupsToAvoid                                     //0x01EC(0x0004)
  NavAvoidanceMask*                                                   GroupsToIgnore                                    //0x01F0(0x0004)
  *                                                                   AvoidanceWeight                                   //0x01F4(0x0004)
  Vector*                                                             PendingLaunchVelocity                             //0x01F8(0x000C)
  ReplicatedVehicleState*                                             ReplicatedState                                   //0x0204(0x0014)
  *                                                                   RawSteeringInput                                  //0x021C(0x0004)
  *                                                                   RawThrottleInput                                  //0x0220(0x0004)
  *                                                                   RawBrakeInput                                     //0x0224(0x0004)
  *                                                                   SteeringInput                                     //0x0228(0x0004)
  *                                                                   ThrottleInput                                     //0x022C(0x0004)
  *                                                                   BrakeInput                                        //0x0230(0x0004)
  *                                                                   HandbrakeInput                                    //0x0234(0x0004)
  *                                                                   IdleBrakeInput                                    //0x0238(0x0004)
  *                                                                   StopThreshold                                     //0x023C(0x0004)
  *                                                                   WrongDirectionThreshold                           //0x0240(0x0004)
  VehicleInputRate*                                                   ThrottleInputRate                                 //0x0244(0x0008)
  VehicleInputRate*                                                   BrakeInputRate                                    //0x024C(0x0008)
  VehicleInputRate*                                                   HandbrakeInputRate                                //0x0254(0x0008)
  VehicleInputRate*                                                   SteeringInputRate                                 //0x025C(0x0008)
  Controller*                                                         OverrideController                                //0x0288(0x0008)
  *                                                                   SetUseAutoGears                                   //0x0000(0x0229)
  *                                                                   SetThrottleInput                                  //0x0000(0x0229)
  *                                                                   SetTargetGear                                     //0x0000(0x0229)
  *                                                                   SetSteeringInput                                  //0x0000(0x0229)
  *                                                                   SetHandbrakeInput                                 //0x0000(0x0229)
  *                                                                   SetGroupsToIgnoreMask                             //0x0000(0x0229)
  *                                                                   SetGroupsToIgnore                                 //0x0000(0x0229)
  *                                                                   SetGroupsToAvoidMask                              //0x0000(0x0229)
  *                                                                   SetGroupsToAvoid                                  //0x0000(0x0229)
  *                                                                   SetGearUp                                         //0x0000(0x0229)
  *                                                                   SetGearDown                                       //0x0000(0x0229)
  *                                                                   SetBrakeInput                                     //0x0000(0x0229)
  *                                                                   SetAvoidanceGroupMask                             //0x0000(0x0229)
  *                                                                   SetAvoidanceGroup                                 //0x0000(0x0229)
  *                                                                   SetAvoidanceEnabled                               //0x0000(0x0229)
  *                                                                   ServerUpdateState                                 //0x0000(0x0229)
  *                                                                   GetUseAutoGears                                   //0x0000(0x0229)
  *                                                                   GetTargetGear                                     //0x0000(0x0229)
  *                                                                   GetForwardSpeed                                   //0x0000(0x0229)
  *                                                                   GetEngineRotationSpeed                            //0x0000(0x0229)
  *                                                                   GetEngineMaxRotationSpeed                         //0x0000(0x0229)
  *                                                                   GetCurrentGear                                    //0x0000(0x0229)
};


class SimpleWheeledVehicleMovementComponent : public WheeledVehicleMovementComponent
{
  *                                                                   SetSteerAngle                                     //0x0000(0x0229)
  *                                                                   SetDriveTorque                                    //0x0000(0x0229)
  *                                                                   SetBrakeTorque                                    //0x0000(0x0229)
};


class TireConfig : public DataAsset
{
  *                                                                   FrictionScale                                     //0x0030(0x0004)
  TireFrictionScales*                                                 TireFrictionScales                                //0x0038(0x0010)
};


class VehicleAnimInstance : public AnimInstance
{
  WheeledVehicleMovementComponent*                                    WheeledVehicleMovementComponent                   //0x0970(0x0008)
  ReturnValue*                                                        GetVehicle                                        //0x0000(0x0229)
};


class VehicleWheel : public Object
{
  StaticMesh*                                                         CollisionMesh                                     //0x0028(0x0008)
  *                                                                   bDontCreateShape                                  //0x0030(0x0001)
  *                                                                   bAutoAdjustCollisionSize                          //0x0031(0x0001)
  Vector*                                                             Offset                                            //0x0034(0x000C)
  *                                                                   ShapeRadius                                       //0x0040(0x0004)
  *                                                                   ShapeWidth                                        //0x0044(0x0004)
  *                                                                   Mass                                              //0x0048(0x0004)
  *                                                                   DampingRate                                       //0x004C(0x0004)
  *                                                                   SteerAngle                                        //0x0050(0x0004)
  *                                                                   bAffectedByHandbrake                              //0x0054(0x0001)
  TireType*                                                           TireType                                          //0x0058(0x0008)
  TireConfig*                                                         TireConfig                                        //0x0060(0x0008)
  *                                                                   LatStiffMaxLoad                                   //0x0068(0x0004)
  *                                                                   LatStiffValue                                     //0x006C(0x0004)
  *                                                                   LongStiffValue                                    //0x0070(0x0004)
  *                                                                   SuspensionForceOffset                             //0x0074(0x0004)
  *                                                                   SuspensionMaxRaise                                //0x0078(0x0004)
  *                                                                   SuspensionMaxDrop                                 //0x007C(0x0004)
  *                                                                   SuspensionNaturalFrequency                        //0x0080(0x0004)
  *                                                                   SuspensionDampingRatio                            //0x0084(0x0004)
  EWheelSweepType*                                                    SweepType                                         //0x0088(0x0001)
  *                                                                   MaxBrakeTorque                                    //0x008C(0x0004)
  *                                                                   MaxHandBrakeTorque                                //0x0090(0x0004)
  WheeledVehicleMovementComponent*                                    VehicleSim                                        //0x0098(0x0008)
  *                                                                   WheelIndex                                        //0x00A0(0x0004)
  *                                                                   DebugLongSlip                                     //0x00A4(0x0004)
  *                                                                   DebugLatSlip                                      //0x00A8(0x0004)
  *                                                                   DebugNormalizedTireLoad                           //0x00AC(0x0004)
  *                                                                   DebugWheelTorque                                  //0x00B4(0x0004)
  *                                                                   DebugLongForce                                    //0x00B8(0x0004)
  *                                                                   DebugLatForce                                     //0x00BC(0x0004)
  Vector*                                                             Location                                          //0x00C0(0x000C)
  Vector*                                                             OldLocation                                       //0x00CC(0x000C)
  Vector*                                                             Velocity                                          //0x00D8(0x000C)
  *                                                                   IsInAir                                           //0x0000(0x0229)
  *                                                                   GetSuspensionOffset                               //0x0000(0x0229)
  *                                                                   GetSteerAngle                                     //0x0000(0x0229)
  *                                                                   GetRotationAngle                                  //0x0000(0x0229)
};


class WheeledVehicle : public Pawn
{
  SkeletalMeshComponent*                                              Mesh                                              //0x0278(0x0008)
  WheeledVehicleMovementComponent*                                    VehicleMovement                                   //0x0280(0x0008)
};


class WheeledVehicleMovementComponent4W : public WheeledVehicleMovementComponent
{
  VehicleEngineData*                                                  EngineSetup                                       //0x0290(0x00A0)
  VehicleDifferential4WData*                                          DifferentialSetup                                 //0x0330(0x001C)
  *                                                                   AckermannAccuracy                                 //0x034C(0x0004)
  VehicleTransmissionData*                                            TransmissionSetup                                 //0x0350(0x0030)
  RuntimeFloatCurve*                                                  SteeringCurve                                     //0x0380(0x0088)
};


class Character_w_Tags : public Character
{
  GameplayTagContainer*                                               GameplayTags                                      //0x0630(0x0020)
  GenericTeamId*                                                      TeamID                                            //0x0650(0x0001)
};


class FOCleanupLibrary : public BlueprintFunctionLibrary
{
  *                                                                   GetDayOfWeek                                      //0x0000(0x0229)
  *                                                                   GetAppVersion                                     //0x0000(0x0229)
  Object*                                                             DestroyObject                                     //0x0000(0x0229)
};


class GetPort : public BlueprintFunctionLibrary
{
  WorldContextObject*                                                 GetPort                                           //0x0000(0x0229)
};


class ShapeComponent : public PrimitiveComponent
{
  BodySetup*                                                          ShapeBodySetup                                    //0x03D8(0x0008)
  Class*                                                              AreaClass                                         //0x03E0(0x0008)
  Color*                                                              ShapeColor                                        //0x03E8(0x0004)
  *                                                                   bDrawOnlyIfSelected                               //0x03EC(0x0001)
  *                                                                   bShouldCollideWhenPlacing                         //0x03EC(0x0001)
  *                                                                   bDynamicObstacle                                  //0x03EC(0x0001)
};


class CapsuleComponent : public ShapeComponent
{
  *                                                                   CapsuleHalfHeight                                 //0x03F0(0x0004)
  *                                                                   CapsuleRadius                                     //0x03F4(0x0004)
  *                                                                   SetCapsuleSize                                    //0x0000(0x0229)
  *                                                                   SetCapsuleRadius                                  //0x0000(0x0229)
  *                                                                   SetCapsuleHalfHeight                              //0x0000(0x0229)
  *                                                                   GetUnscaledCapsuleSize_WithoutHemisphere          //0x0000(0x0229)
  *                                                                   GetUnscaledCapsuleSize                            //0x0000(0x0229)
  *                                                                   GetUnscaledCapsuleRadius                          //0x0000(0x0229)
  *                                                                   GetUnscaledCapsuleHalfHeight_WithoutHemisphere    //0x0000(0x0229)
  *                                                                   GetUnscaledCapsuleHalfHeight                      //0x0000(0x0229)
  *                                                                   GetShapeScale                                     //0x0000(0x0229)
  *                                                                   GetScaledCapsuleSize_WithoutHemisphere            //0x0000(0x0229)
  *                                                                   GetScaledCapsuleSize                              //0x0000(0x0229)
  *                                                                   GetScaledCapsuleRadius                            //0x0000(0x0229)
  *                                                                   GetScaledCapsuleHalfHeight_WithoutHemisphere      //0x0000(0x0229)
  *                                                                   GetScaledCapsuleHalfHeight                        //0x0000(0x0229)
};


class HitBoxCapsule : public CapsuleComponent
{
  *                                                                   HitBoxName                                        //0x03F8(0x0010)
};


class SteamCustomNodes : public BlueprintFunctionLibrary
{
  *                                                                   OpenStore                                         //0x0000(0x0229)
  *                                                                   DlcInstallDate                                    //0x0000(0x0229)
  *                                                                   BIsDlcInstalled                                   //0x0000(0x0229)
  *                                                                   BIsAppInstalled                                   //0x0000(0x0229)
};


class Controller : public Actor
{
  PlayerState*                                                        PlayerState                                       //0x0220(0x0008)
  InstigatedAnyDamageSignature__DelegateSignature*                    OnInstigatedAnyDamage                             //0x0230(0x0010)
  *                                                                   StateName                                         //0x0240(0x0008)
  Pawn*                                                               Pawn                                              //0x0248(0x0008)
  Character*                                                          Character                                         //0x0258(0x0008)
  SceneComponent*                                                     TransformComponent                                //0x0260(0x0008)
  Rotator*                                                            ControlRotation                                   //0x0280(0x000C)
  *                                                                   bAttachToPawn                                     //0x028C(0x0001)
  *                                                                   UnPossess                                         //0x0000(0x0229)
  *                                                                   StopMovement                                      //0x0000(0x0229)
  *                                                                   SetInitialLocationAndRotation                     //0x0000(0x0229)
  *                                                                   SetIgnoreMoveInput                                //0x0000(0x0229)
  *                                                                   SetIgnoreLookInput                                //0x0000(0x0229)
  *                                                                   SetControlRotation                                //0x0000(0x0229)
  *                                                                   ResetIgnoreMoveInput                              //0x0000(0x0229)
  *                                                                   ResetIgnoreLookInput                              //0x0000(0x0229)
  *                                                                   ResetIgnoreInputFlags                             //0x0000(0x0229)
  UnpossessedPawn*                                                    ReceiveUnPossess                                  //0x0000(0x0229)
  PossessedPawn*                                                      ReceivePossess                                    //0x0000(0x0229)
  DamageType*                                                         ReceiveInstigatedAnyDamage                        //0x0000(0x0229)
  InPawn*                                                             Possess                                           //0x0000(0x0229)
  *                                                                   OnRep_PlayerState                                 //0x0000(0x0229)
  *                                                                   OnRep_Pawn                                        //0x0000(0x0229)
  Other*                                                              LineOfSightTo                                     //0x0000(0x0229)
  ReturnValue*                                                        K2_GetPawn                                        //0x0000(0x0229)
  *                                                                   IsPlayerController                                //0x0000(0x0229)
  *                                                                   IsMoveInputIgnored                                //0x0000(0x0229)
  *                                                                   IsLookInputIgnored                                //0x0000(0x0229)
  *                                                                   IsLocalPlayerController                           //0x0000(0x0229)
  *                                                                   IsLocalController                                 //0x0000(0x0229)
  ReturnValue*                                                        GetViewTarget                                     //0x0000(0x0229)
  *                                                                   GetDesiredRotation                                //0x0000(0x0229)
  *                                                                   GetControlRotation                                //0x0000(0x0229)
  *                                                                   ClientSetRotation                                 //0x0000(0x0229)
  *                                                                   ClientSetLocation                                 //0x0000(0x0229)
  ReturnValue*                                                        CastToPlayerController                            //0x0000(0x0229)
};


class AIController : public Controller
{
  *                                                                   bStopAILogicOnUnposses                            //0x02C8(0x0001)
  *                                                                   bLOSflag                                          //0x02C8(0x0001)
  *                                                                   bSkipExtraLOSChecks                               //0x02C8(0x0001)
  *                                                                   bAllowStrafe                                      //0x02C8(0x0001)
  *                                                                   bWantsPlayerState                                 //0x02C8(0x0001)
  *                                                                   bSetControlRotationFromPawnOrientation            //0x02C8(0x0001)
  PathFollowingComponent*                                             PathFollowingComponent                            //0x02D0(0x0008)
  BrainComponent*                                                     BrainComponent                                    //0x02D8(0x0008)
  AIPerceptionComponent*                                              PerceptionComponent                               //0x02E0(0x0008)
  PawnActionsComponent*                                               ActionsComp                                       //0x02E8(0x0008)
  BlackboardComponent*                                                Blackboard                                        //0x02F0(0x0008)
  GameplayTasksComponent*                                             CachedGameplayTasksComponent                      //0x02F8(0x0008)
  Class*                                                              DefaultNavigationFilterClass                      //0x0300(0x0008)
  AIMoveCompletedSignature__DelegateSignature*                        ReceiveMoveCompleted                              //0x0308(0x0010)
  BlackboardAsset*                                                    UseBlackboard                                     //0x0000(0x0229)
  ResourceClass*                                                      UnclaimTaskResource                               //0x0000(0x0229)
  NewPFComponent*                                                     SetPathFollowingComponent                         //0x0000(0x0229)
  *                                                                   SetMoveBlockDetection                             //0x0000(0x0229)
  BTAsset*                                                            RunBehaviorTree                                   //0x0000(0x0229)
  BlackboardComp*                                                     OnUsingBlackBoard                                 //0x0000(0x0229)
  *                                                                   OnGameplayTaskResourcesClaimed                    //0x0000(0x0229)
  FilterClass*                                                        MoveToLocation                                    //0x0000(0x0229)
  Goal*                                                               MoveToActor                                       //0x0000(0x0229)
  NewFocus*                                                           K2_SetFocus                                       //0x0000(0x0229)
  *                                                                   K2_SetFocalPoint                                  //0x0000(0x0229)
  *                                                                   K2_ClearFocus                                     //0x0000(0x0229)
  *                                                                   HasPartialPath                                    //0x0000(0x0229)
  ReturnValue*                                                        GetPathFollowingComponent                         //0x0000(0x0229)
  *                                                                   GetMoveStatus                                     //0x0000(0x0229)
  *                                                                   GetImmediateMoveDestination                       //0x0000(0x0229)
  ReturnValue*                                                        GetFocusActor                                     //0x0000(0x0229)
  Actor*                                                              GetFocalPointOnActor                              //0x0000(0x0229)
  *                                                                   GetFocalPoint                                     //0x0000(0x0229)
  ReturnValue*                                                        GetAIPerceptionComponent                          //0x0000(0x0229)
  ResourceClass*                                                      ClaimTaskResource                                 //0x0000(0x0229)
};


class TeamAIController : public AIController
{
};


class GCObjectReferencer : public Object
{
};


class TextBuffer : public Object
{
};


class Field : public Object
{
};


class Struct : public Field
{
};


class ScriptStruct : public Struct
{
};


class Package : public Object
{
};


class Class : public Struct
{
};


class Function : public Struct
{
};


class DelegateFunction : public Function
{
};


class SparseDelegateFunction : public DelegateFunction
{
};


class DynamicClass : public Class
{
};


class PackageMap : public Object
{
};


class Enum : public Field
{
};


class Property : public Field
{
};


class EnumProperty : public Property
{
};


class LinkerPlaceholderClass : public Class
{
};


class LinkerPlaceholderExportObject : public Object
{
};


class LinkerPlaceholderFunction : public Function
{
};


class MetaData : public Object
{
};


class ObjectRedirector : public Object
{
};


class ArrayProperty : public Property
{
};


class ObjectPropertyBase : public Property
{
};


class BoolProperty : public Property
{
};


class NumericProperty : public Property
{
};


class ByteProperty : public NumericProperty
{
};


class ObjectProperty : public ObjectPropertyBase
{
};


class ClassProperty : public ObjectProperty
{
};


class DelegateProperty : public Property
{
};


class DoubleProperty : public NumericProperty
{
};


class FloatProperty : public NumericProperty
{
};


class IntProperty : public NumericProperty
{
};


class Int16Property : public NumericProperty
{
};


class Int64Property : public NumericProperty
{
};


class Int8Property : public NumericProperty
{
};


class InterfaceProperty : public Property
{
};


class LazyObjectProperty : public ObjectPropertyBase
{
};


class MapProperty : public Property
{
};


class MulticastDelegateProperty : public Property
{
};


class MulticastInlineDelegateProperty : public MulticastDelegateProperty
{
};


class MulticastSparseDelegateProperty : public MulticastDelegateProperty
{
};


class NameProperty : public Property
{
};


class SetProperty : public Property
{
};


class SoftObjectProperty : public ObjectPropertyBase
{
};


class SoftClassProperty : public SoftObjectProperty
{
};


class StrProperty : public Property
{
};


class StructProperty : public Property
{
};


class UInt16Property : public NumericProperty
{
};


class UInt32Property : public NumericProperty
{
};


class UInt64Property : public NumericProperty
{
};


class WeakObjectProperty : public ObjectPropertyBase
{
};


class TextProperty : public Property
{
};


class InputCoreTypes : public Object
{
};


class FontBulkData : public Object
{
};


class FontFaceInterface : public Interface
{
};


class FontProviderInterface : public Interface
{
};


class SlateTypes : public Object
{
};


class SlateWidgetStyleAsset : public Object
{
  SlateWidgetStyleContainerBase*                                      CustomStyle                                       //0x0028(0x0008)
};


class SlateWidgetStyleContainerBase : public Object
{
};


class SlateWidgetStyleContainerInterface : public Interface
{
};


class ButtonWidgetStyle : public SlateWidgetStyleContainerBase
{
  ButtonStyle*                                                        ButtonStyle                                       //0x0030(0x0278)
};


class CheckBoxWidgetStyle : public SlateWidgetStyleContainerBase
{
  CheckBoxStyle*                                                      CheckBoxStyle                                     //0x0030(0x0580)
};


class ComboBoxWidgetStyle : public SlateWidgetStyleContainerBase
{
  ComboBoxStyle*                                                      ComboBoxStyle                                     //0x0030(0x03D8)
};


class ComboButtonWidgetStyle : public SlateWidgetStyleContainerBase
{
  ComboButtonStyle*                                                   ComboButtonStyle                                  //0x0030(0x03A0)
};


class EditableTextBoxWidgetStyle : public SlateWidgetStyleContainerBase
{
  EditableTextBoxStyle*                                               EditableTextBoxStyle                              //0x0030(0x07F0)
};


class EditableTextWidgetStyle : public SlateWidgetStyleContainerBase
{
  EditableTextStyle*                                                  EditableTextStyle                                 //0x0030(0x0218)
};


class ProgressWidgetStyle : public SlateWidgetStyleContainerBase
{
  ProgressBarStyle*                                                   ProgressBarStyle                                  //0x0030(0x01A0)
};


class ScrollBarWidgetStyle : public SlateWidgetStyleContainerBase
{
  ScrollBarStyle*                                                     ScrollBarStyle                                    //0x0030(0x04D0)
};


class ScrollBoxWidgetStyle : public SlateWidgetStyleContainerBase
{
  ScrollBoxStyle*                                                     ScrollBoxStyle                                    //0x0030(0x0228)
};


class SlateSettings : public Object
{
  *                                                                   bExplicitCanvasChildZOrder                        //0x0028(0x0001)
};


class SpinBoxWidgetStyle : public SlateWidgetStyleContainerBase
{
  SpinBoxStyle*                                                       SpinBoxStyle                                      //0x0030(0x02E8)
};


class TextBlockWidgetStyle : public SlateWidgetStyleContainerBase
{
  TextBlockStyle*                                                     TextBlockStyle                                    //0x0030(0x0268)
};


class ToolMenuBase : public Object
{
};


class ImageWriteBlueprintLibrary : public BlueprintFunctionLibrary
{
  Texture*                                                            ExportToDisk                                      //0x0000(0x0229)
};


class MaterialShaderQualitySettings : public Object
{
  ForwardSettingMap_Key*                                              ForwardSettingMap                                 //0x0028(0x0050)
};


class ShaderPlatformQualitySettings : public Object
{
  MaterialQualityOverrides*                                           QualityOverrides                                  //0x0028(0x0008)
};


class ConsoleSettings : public Object
{
  *                                                                   MaxScrollbackSize                                 //0x0028(0x0004)
  ManualAutoCompleteList*                                             ManualAutoCompleteList                            //0x0030(0x0010)
  AutoCompleteMapPaths*                                               AutoCompleteMapPaths                              //0x0040(0x0010)
  *                                                                   BackgroundOpacityPercentage                       //0x0050(0x0004)
  *                                                                   bOrderTopToBottom                                 //0x0054(0x0001)
  *                                                                   bDisplayHelpInAutoComplete                        //0x0055(0x0001)
  Color*                                                              InputColor                                        //0x0058(0x0004)
  Color*                                                              HistoryColor                                      //0x005C(0x0004)
  Color*                                                              AutoCompleteCommandColor                          //0x0060(0x0004)
  Color*                                                              AutoCompleteCVarColor                             //0x0064(0x0004)
  Color*                                                              AutoCompleteFadedColor                            //0x0068(0x0004)
};


class GameMapsSettings : public Object
{
  *                                                                   LocalMapOptions                                   //0x0028(0x0010)
  SoftObjectPath*                                                     TransitionMap                                     //0x0038(0x0018)
  *                                                                   bUseSplitscreen                                   //0x0050(0x0001)
  ETwoPlayerSplitScreenType*                                          TwoPlayerSplitscreenLayout                        //0x0051(0x0001)
  EThreePlayerSplitScreenType*                                        ThreePlayerSplitscreenLayout                      //0x0052(0x0001)
  UnderlyingType*                                                     FourPlayerSplitscreenLayout                       //0x0053(0x0001)
  *                                                                   bOffsetPlayerGamepadIds                           //0x0054(0x0001)
  SoftClassPath*                                                      GameInstanceClass                                 //0x0058(0x0018)
  SoftObjectPath*                                                     GameDefaultMap                                    //0x0070(0x0018)
  SoftObjectPath*                                                     ServerDefaultMap                                  //0x0088(0x0018)
  SoftClassPath*                                                      GlobalDefaultGameMode                             //0x00A0(0x0018)
  SoftClassPath*                                                      GlobalDefaultServerGameMode                       //0x00B8(0x0018)
  GameModeMapPrefixes*                                                GameModeMapPrefixes                               //0x00D0(0x0010)
  GameModeClassAliases*                                               GameModeClassAliases                              //0x00E0(0x0010)
  *                                                                   SetSkipAssigningGamepadToPlayer1                  //0x0000(0x0229)
  *                                                                   GetSkipAssigningGamepadToPlayer1                  //0x0000(0x0229)
  ReturnValue*                                                        GetGameMapsSettings                               //0x0000(0x0229)
};


class GameNetworkManagerSettings : public Object
{
  *                                                                   MinDynamicBandwidth                               //0x0028(0x0004)
  *                                                                   MaxDynamicBandwidth                               //0x002C(0x0004)
  *                                                                   TotalNetBandwidth                                 //0x0030(0x0004)
  *                                                                   BadPingThreshold                                  //0x0034(0x0004)
  *                                                                   bIsStandbyCheckingEnabled                         //0x0038(0x0001)
  *                                                                   StandbyRxCheatTime                                //0x003C(0x0004)
  *                                                                   StandbyTxCheatTime                                //0x0040(0x0004)
  *                                                                   PercentMissingForRxStandby                        //0x0044(0x0004)
  *                                                                   PercentMissingForTxStandby                        //0x0048(0x0004)
  *                                                                   PercentForBadPing                                 //0x004C(0x0004)
  *                                                                   JoinInProgressStandbyWaitTime                     //0x0050(0x0004)
};


class GameSessionSettings : public Object
{
  *                                                                   MaxSpectators                                     //0x0028(0x0004)
  *                                                                   MaxPlayers                                        //0x002C(0x0004)
  *                                                                   bRequiresPushToTalk                               //0x0030(0x0001)
};


class GeneralEngineSettings : public Object
{
};


class GeneralProjectSettings : public Object
{
  *                                                                   CompanyName                                       //0x0028(0x0010)
  *                                                                   CompanyDistinguishedName                          //0x0038(0x0010)
  *                                                                   CopyrightNotice                                   //0x0048(0x0010)
  *                                                                   Description                                       //0x0058(0x0010)
  *                                                                   Homepage                                          //0x0068(0x0010)
  *                                                                   LicensingTerms                                    //0x0078(0x0010)
  *                                                                   PrivacyPolicy                                     //0x0088(0x0010)
  Guid*                                                               ProjectID                                         //0x0098(0x0010)
  *                                                                   ProjectName                                       //0x00A8(0x0010)
  *                                                                   ProjectVersion                                    //0x00B8(0x0010)
  *                                                                   SupportContact                                    //0x00C8(0x0010)
  *                                                                   ProjectDisplayedTitle                             //0x00D8(0x0018)
  *                                                                   ProjectDebugTitleInfo                             //0x00F0(0x0018)
  *                                                                   bShouldWindowPreserveAspectRatio                  //0x0108(0x0001)
  *                                                                   bUseBorderlessWindow                              //0x0109(0x0001)
  *                                                                   bStartInVR                                        //0x010A(0x0001)
  *                                                                   bStartInAR                                        //0x010B(0x0001)
  *                                                                   bSupportAR                                        //0x010C(0x0001)
  *                                                                   bAllowWindowResize                                //0x010D(0x0001)
  *                                                                   bAllowClose                                       //0x010E(0x0001)
  *                                                                   bAllowMaximize                                    //0x010F(0x0001)
  *                                                                   bAllowMinimize                                    //0x0110(0x0001)
};


class HudSettings : public Object
{
  *                                                                   bShowHUD                                          //0x0028(0x0001)
  DebugDisplay*                                                       DebugDisplay                                      //0x0030(0x0010)
};


class MeshReconstructorBase : public Object
{
  *                                                                   StopReconstruction                                //0x0000(0x0229)
  *                                                                   StartReconstruction                               //0x0000(0x0229)
  *                                                                   PauseReconstruction                               //0x0000(0x0229)
  *                                                                   IsReconstructionStarted                           //0x0000(0x0229)
  *                                                                   IsReconstructionPaused                            //0x0000(0x0229)
  *                                                                   DisconnectMRMesh                                  //0x0000(0x0229)
  Mesh*                                                               ConnectMRMesh                                     //0x0000(0x0229)
};


class MockDataMeshTrackerComponent : public SceneComponent
{
  OnMockDataMeshTrackerUpdated__DelegateSignature*                    OnMeshTrackerUpdated                              //0x01F0(0x0010)
  *                                                                   ScanWorld                                         //0x0200(0x0001)
  *                                                                   RequestNormals                                    //0x0201(0x0001)
  *                                                                   RequestVertexConfidence                           //0x0202(0x0001)
  UnderlyingType*                                                     VertexColorMode                                   //0x0203(0x0001)
  BlockVertexColors*                                                  BlockVertexColors                                 //0x0208(0x0010)
  LinearColor*                                                        VertexColorFromConfidenceZero                     //0x0218(0x0010)
  LinearColor*                                                        VertexColorFromConfidenceOne                      //0x0228(0x0010)
  *                                                                   UpdateInterval                                    //0x0238(0x0004)
  MRMeshComponent*                                                    MRMesh                                            //0x0240(0x0008)
  *                                                                   OnMockDataMeshTrackerUpdated__DelegateSignature   //0x0000(0x0229)
  InMRMeshPtr*                                                        DisconnectMRMesh                                  //0x0000(0x0229)
  InMRMeshPtr*                                                        ConnectMRMesh                                     //0x0000(0x0229)
};


class MRMeshComponent : public PrimitiveComponent
{
  MaterialInterface*                                                  Material                                          //0x03E0(0x0008)
  *                                                                   bCreateMeshProxySections                          //0x03E8(0x0001)
  *                                                                   bUpdateNavMeshOnMeshUpdate                        //0x03E9(0x0001)
  *                                                                   bNeverCreateCollisionMesh                         //0x03EA(0x0001)
  BodySetup*                                                          CachedBodySetup                                   //0x03F0(0x0008)
  BodySetups*                                                         BodySetups                                        //0x03F8(0x0010)
  MaterialInterface*                                                  WireframeMaterial                                 //0x0408(0x0008)
  *                                                                   IsConnected                                       //0x0000(0x0229)
  *                                                                   ForceNavMeshUpdate                                //0x0000(0x0229)
  *                                                                   Clear                                             //0x0000(0x0229)
};


class ARBlueprintLibrary : public BlueprintFunctionLibrary
{
  ComponentToUnpin*                                                   UnpinComponent                                    //0x0000(0x0229)
  *                                                                   StopARSession                                     //0x0000(0x0229)
  SessionConfig*                                                      StartARSession                                    //0x0000(0x0229)
  *                                                                   SetAlignmentTransform                             //0x0000(0x0229)
  PinToRemove*                                                        RemovePin                                         //0x0000(0x0229)
  ComponentToPin*                                                     PinComponentToTraceResult                         //0x0000(0x0229)
  ComponentToPin*                                                     PinComponent                                      //0x0000(0x0229)
  *                                                                   PauseARSession                                    //0x0000(0x0229)
  ReturnValue*                                                        LineTraceTrackedObjects3D                         //0x0000(0x0229)
  ReturnValue*                                                        LineTraceTrackedObjects                           //0x0000(0x0229)
  *                                                                   IsSessionTypeSupported                            //0x0000(0x0229)
  *                                                                   IsSessionTrackingFeatureSupported                 //0x0000(0x0229)
  *                                                                   IsARSupported                                     //0x0000(0x0229)
  *                                                                   GetWorldMappingStatus                             //0x0000(0x0229)
  *                                                                   GetTrackingQualityReason                          //0x0000(0x0229)
  *                                                                   GetTrackingQuality                                //0x0000(0x0229)
  *                                                                   GetSupportedVideoFormats                          //0x0000(0x0229)
  ReturnValue*                                                        GetSessionConfig                                  //0x0000(0x0229)
  *                                                                   GetPointCloud                                     //0x0000(0x0229)
  ReturnValue*                                                        GetPersonSegmentationImage                        //0x0000(0x0229)
  ReturnValue*                                                        GetPersonSegmentationDepthImage                   //0x0000(0x0229)
  ReturnValue*                                                        GetCurrentLightEstimate                           //0x0000(0x0229)
  ReturnValue*                                                        GetCameraImage                                    //0x0000(0x0229)
  ReturnValue*                                                        GetCameraDepth                                    //0x0000(0x0229)
  *                                                                   GetARSessionStatus                                //0x0000(0x0229)
  ReturnValue*                                                        GetAllTrackedPoses                                //0x0000(0x0229)
  ReturnValue*                                                        GetAllTrackedPoints                               //0x0000(0x0229)
  ReturnValue*                                                        GetAllTrackedPlanes                               //0x0000(0x0229)
  ReturnValue*                                                        GetAllTrackedImages                               //0x0000(0x0229)
  ReturnValue*                                                        GetAllTrackedEnvironmentCaptureProbes             //0x0000(0x0229)
  *                                                                   GetAllTracked2DPoses                              //0x0000(0x0229)
  ReturnValue*                                                        GetAllPins                                        //0x0000(0x0229)
  ReturnValue*                                                        GetAllGeometries                                  //0x0000(0x0229)
  TrackedGeometry*                                                    DebugDrawTrackedGeometry                          //0x0000(0x0229)
  ARPin*                                                              DebugDrawPin                                      //0x0000(0x0229)
  SessionConfig*                                                      AddRuntimeCandidateImage                          //0x0000(0x0229)
  *                                                                   AddManualEnvironmentCaptureProbe                  //0x0000(0x0229)
};


class ARTraceResultLibrary : public BlueprintFunctionLibrary
{
  TraceResult*                                                        GetTrackedGeometry                                //0x0000(0x0229)
  TraceResult*                                                        GetTraceChannel                                   //0x0000(0x0229)
  TraceResult*                                                        GetLocalToWorldTransform                          //0x0000(0x0229)
  TraceResult*                                                        GetLocalToTrackingTransform                       //0x0000(0x0229)
  TraceResult*                                                        GetDistanceFromCamera                             //0x0000(0x0229)
};


class ARBaseAsyncTaskBlueprintProxy : public BlueprintAsyncActionBase
{
};


class ARSaveWorldAsyncTaskBlueprintProxy : public ARBaseAsyncTaskBlueprintProxy
{
  ARSaveWorldPin__DelegateSignature*                                  OnSuccess                                         //0x0050(0x0010)
  ARSaveWorldPin__DelegateSignature*                                  OnFailed                                          //0x0060(0x0010)
  WorldContextObject*                                                 ARSaveWorld                                       //0x0000(0x0229)
};


class ARGetCandidateObjectAsyncTaskBlueprintProxy : public ARBaseAsyncTaskBlueprintProxy
{
  ARGetCandidateObjectPin__DelegateSignature*                         OnSuccess                                         //0x0050(0x0010)
  ARGetCandidateObjectPin__DelegateSignature*                         OnFailed                                          //0x0060(0x0010)
  WorldContextObject*                                                 ARGetCandidateObject                              //0x0000(0x0229)
};


class ARLightEstimate : public Object
{
};


class ARBasicLightEstimate : public ARLightEstimate
{
  *                                                                   AmbientIntensityLumens                            //0x0028(0x0004)
  *                                                                   AmbientColorTemperatureKelvin                     //0x002C(0x0004)
  LinearColor*                                                        AmbientColor                                      //0x0030(0x0010)
  *                                                                   GetAmbientIntensityLumens                         //0x0000(0x0229)
  *                                                                   GetAmbientColorTemperatureKelvin                  //0x0000(0x0229)
  *                                                                   GetAmbientColor                                   //0x0000(0x0229)
};


class AROriginActor : public Actor
{
};


class ARPin : public Object
{
  ARTrackedGeometry*                                                  TrackedGeometry                                   //0x0028(0x0008)
  SceneComponent*                                                     PinnedComponent                                   //0x0030(0x0008)
  Transform*                                                          LocalToTrackingTransform                          //0x0040(0x0030)
  Transform*                                                          LocalToAlignedTrackingTransform                   //0x0070(0x0030)
  UnderlyingType*                                                     TrackingState                                     //0x00A0(0x0001)
  OnARTrackingStateChanged__DelegateSignature*                        OnARTrackingStateChanged                          //0x00C0(0x0010)
  OnARTransformUpdated__DelegateSignature*                            OnARTransformUpdated                              //0x00D0(0x0010)
  *                                                                   GetTrackingState                                  //0x0000(0x0229)
  ReturnValue*                                                        GetTrackedGeometry                                //0x0000(0x0229)
  ReturnValue*                                                        GetPinnedComponent                                //0x0000(0x0229)
  *                                                                   GetLocalToWorldTransform                          //0x0000(0x0229)
  *                                                                   GetLocalToTrackingTransform                       //0x0000(0x0229)
  *                                                                   GetDebugName                                      //0x0000(0x0229)
  World*                                                              DebugDraw                                         //0x0000(0x0229)
};


class Info : public Actor
{
};


class GameModeBase : public Info
{
  *                                                                   OptionsString                                     //0x0218(0x0010)
  Class*                                                              GameSessionClass                                  //0x0228(0x0008)
  Class*                                                              GameStateClass                                    //0x0230(0x0008)
  Class*                                                              PlayerControllerClass                             //0x0238(0x0008)
  Class*                                                              PlayerStateClass                                  //0x0240(0x0008)
  Class*                                                              HUDClass                                          //0x0248(0x0008)
  Class*                                                              DefaultPawnClass                                  //0x0250(0x0008)
  Class*                                                              SpectatorClass                                    //0x0258(0x0008)
  Class*                                                              ReplaySpectatorPlayerControllerClass              //0x0260(0x0008)
  Class*                                                              ServerStatReplicatorClass                         //0x0268(0x0008)
  GameSession*                                                        GameSession                                       //0x0270(0x0008)
  GameStateBase*                                                      GameState                                         //0x0278(0x0008)
  ServerStatReplicator*                                               ServerStatReplicator                              //0x0280(0x0008)
  *                                                                   DefaultPlayerName                                 //0x0288(0x0018)
  *                                                                   bUseSeamlessTravel                                //0x02A0(0x0001)
  *                                                                   bStartPlayersAsSpectators                         //0x02A0(0x0001)
  *                                                                   bPauseable                                        //0x02A0(0x0001)
  *                                                                   StartPlay                                         //0x0000(0x0229)
  NewPlayer*                                                          SpawnDefaultPawnFor                               //0x0000(0x0229)
  NewPlayer*                                                          SpawnDefaultPawnAtTransform                       //0x0000(0x0229)
  ActorToReset*                                                       ShouldReset                                       //0x0000(0x0229)
  *                                                                   ReturnToMainMenuHost                              //0x0000(0x0229)
  NewPlayer*                                                          RestartPlayerAtTransform                          //0x0000(0x0229)
  NewPlayer*                                                          RestartPlayerAtPlayerStart                        //0x0000(0x0229)
  NewPlayer*                                                          RestartPlayer                                     //0x0000(0x0229)
  *                                                                   ResetLevel                                        //0x0000(0x0229)
  Player*                                                             PlayerCanRestart                                  //0x0000(0x0229)
  NewPlayerController*                                                MustSpectate                                      //0x0000(0x0229)
  NewPlayer*                                                          K2_PostLogin                                      //0x0000(0x0229)
  OldPC*                                                              K2_OnSwapPlayerControllers                        //0x0000(0x0229)
  NewPlayer*                                                          K2_OnRestartPlayer                                //0x0000(0x0229)
  ExitingController*                                                  K2_OnLogout                                       //0x0000(0x0229)
  Other*                                                              K2_OnChangeName                                   //0x0000(0x0229)
  Player*                                                             K2_FindPlayerStart                                //0x0000(0x0229)
  StartSpot*                                                          InitStartSpot                                     //0x0000(0x0229)
  NewPlayer*                                                          InitializeHUDForPlayer                            //0x0000(0x0229)
  *                                                                   HasMatchStarted                                   //0x0000(0x0229)
  NewPlayer*                                                          HandleStartingNewPlayer                           //0x0000(0x0229)
  *                                                                   GetNumSpectators                                  //0x0000(0x0229)
  *                                                                   GetNumPlayers                                     //0x0000(0x0229)
  InController*                                                       GetDefaultPawnClassForController                  //0x0000(0x0229)
  Player*                                                             FindPlayerStart                                   //0x0000(0x0229)
  Player*                                                             ChoosePlayerStart                                 //0x0000(0x0229)
  Controller*                                                         ChangeName                                        //0x0000(0x0229)
  Viewer*                                                             CanSpectate                                       //0x0000(0x0229)
};


class GameMode : public GameModeBase
{
  *                                                                   MatchState                                        //0x02B8(0x0008)
  *                                                                   bDelayedStart                                     //0x02C0(0x0001)
  *                                                                   NumSpectators                                     //0x02C4(0x0004)
  *                                                                   NumPlayers                                        //0x02C8(0x0004)
  *                                                                   NumBots                                           //0x02CC(0x0004)
  *                                                                   MinRespawnDelay                                   //0x02D0(0x0004)
  *                                                                   NumTravellingPlayers                              //0x02D4(0x0004)
  Class*                                                              EngineMessageClass                                //0x02D8(0x0008)
  InactivePlayerArray*                                                InactivePlayerArray                               //0x02E0(0x0010)
  *                                                                   InactivePlayerStateLifeSpan                       //0x02F0(0x0004)
  *                                                                   MaxInactivePlayers                                //0x02F4(0x0004)
  *                                                                   bHandleDedicatedServerReplays                     //0x02F8(0x0001)
  *                                                                   StartMatch                                        //0x0000(0x0229)
  *                                                                   SetBandwidthLimit                                 //0x0000(0x0229)
  *                                                                   Say                                               //0x0000(0x0229)
  *                                                                   RestartGame                                       //0x0000(0x0229)
  *                                                                   ReadyToStartMatch                                 //0x0000(0x0229)
  *                                                                   ReadyToEndMatch                                   //0x0000(0x0229)
  *                                                                   K2_OnSetMatchState                                //0x0000(0x0229)
  *                                                                   IsMatchInProgress                                 //0x0000(0x0229)
  *                                                                   HasMatchEnded                                     //0x0000(0x0229)
  *                                                                   GetMatchState                                     //0x0000(0x0229)
  *                                                                   EndMatch                                          //0x0000(0x0229)
  *                                                                   AbortMatch                                        //0x0000(0x0229)
};


class ARSharedWorldGameMode : public GameMode
{
  *                                                                   BufferSizePerChunk                                //0x0300(0x0004)
  *                                                                   SetPreviewImageData                               //0x0000(0x0229)
  *                                                                   SetARWorldSharingIsReady                          //0x0000(0x0229)
  *                                                                   SetARSharedWorldData                              //0x0000(0x0229)
  ReturnValue*                                                        GetARSharedWorldGameState                         //0x0000(0x0229)
};


class GameStateBase : public Info
{
  Class*                                                              GameModeClass                                     //0x0218(0x0008)
  GameModeBase*                                                       AuthorityGameMode                                 //0x0220(0x0008)
  Class*                                                              SpectatorClass                                    //0x0228(0x0008)
  PlayerArray*                                                        PlayerArray                                       //0x0230(0x0010)
  *                                                                   bReplicatedHasBegunPlay                           //0x0240(0x0001)
  *                                                                   ReplicatedWorldTimeSeconds                        //0x0244(0x0004)
  *                                                                   ServerWorldTimeSecondsDelta                       //0x0248(0x0004)
  *                                                                   ServerWorldTimeSecondsUpdateFrequency             //0x024C(0x0004)
  *                                                                   OnRep_SpectatorClass                              //0x0000(0x0229)
  *                                                                   OnRep_ReplicatedWorldTimeSeconds                  //0x0000(0x0229)
  *                                                                   OnRep_ReplicatedHasBegunPlay                      //0x0000(0x0229)
  *                                                                   OnRep_GameModeClass                               //0x0000(0x0229)
  *                                                                   HasMatchStarted                                   //0x0000(0x0229)
  *                                                                   HasBegunPlay                                      //0x0000(0x0229)
  *                                                                   GetServerWorldTimeSeconds                         //0x0000(0x0229)
  Controller*                                                         GetPlayerStartTime                                //0x0000(0x0229)
  Controller*                                                         GetPlayerRespawnDelay                             //0x0000(0x0229)
};


class GameState : public GameStateBase
{
  *                                                                   MatchState                                        //0x0258(0x0008)
  *                                                                   PreviousMatchState                                //0x0260(0x0008)
  *                                                                   ElapsedTime                                       //0x0268(0x0004)
  *                                                                   OnRep_MatchState                                  //0x0000(0x0229)
  *                                                                   OnRep_ElapsedTime                                 //0x0000(0x0229)
};


class ARSharedWorldGameState : public GameState
{
  PreviewImageData*                                                   PreviewImageData                                  //0x0278(0x0010)
  ARWorldData*                                                        ARWorldData                                       //0x0288(0x0010)
  *                                                                   PreviewImageBytesTotal                            //0x0298(0x0004)
  *                                                                   ARWorldBytesTotal                                 //0x029C(0x0004)
  *                                                                   PreviewImageBytesDelivered                        //0x02A0(0x0004)
  *                                                                   ARWorldBytesDelivered                             //0x02A4(0x0004)
  *                                                                   K2_OnARWorldMapIsReady                            //0x0000(0x0229)
};


class PlayerController : public Controller
{
  Player*                                                             Player                                            //0x0290(0x0008)
  Pawn*                                                               AcknowledgedPawn                                  //0x0298(0x0008)
  InterpTrackInstDirector*                                            ControllingDirTrackInst                           //0x02A0(0x0008)
  HUD*                                                                MyHUD                                             //0x02A8(0x0008)
  PlayerCameraManager*                                                PlayerCameraManager                               //0x02B0(0x0008)
  Class*                                                              PlayerCameraManagerClass                          //0x02B8(0x0008)
  *                                                                   bAutoManageActiveCameraTarget                     //0x02C0(0x0001)
  Rotator*                                                            TargetViewRotation                                //0x02C4(0x000C)
  *                                                                   SmoothTargetViewRotationSpeed                     //0x02DC(0x0004)
  HiddenActors*                                                       HiddenActors                                      //0x02E8(0x0010)
  HiddenPrimitiveComponents*                                          HiddenPrimitiveComponents                         //0x02F8(0x0010)
  *                                                                   LastSpectatorStateSynchTime                       //0x030C(0x0004)
  Vector*                                                             LastSpectatorSyncLocation                         //0x0310(0x000C)
  Rotator*                                                            LastSpectatorSyncRotation                         //0x031C(0x000C)
  *                                                                   ClientCap                                         //0x0328(0x0004)
  CheatManager*                                                       CheatManager                                      //0x0330(0x0008)
  Class*                                                              CheatClass                                        //0x0338(0x0008)
  PlayerInput*                                                        PlayerInput                                       //0x0340(0x0008)
  ActiveForceFeedbackEffects*                                         ActiveForceFeedbackEffects                        //0x0348(0x0010)
  *                                                                   bPlayerIsWaiting                                  //0x03C8(0x0001)
  *                                                                   NetPlayerIndex                                    //0x03CC(0x0001)
  NetConnection*                                                      PendingSwapConnection                             //0x0408(0x0008)
  NetConnection*                                                      NetConnection                                     //0x0410(0x0008)
  *                                                                   InputYawScale                                     //0x0424(0x0004)
  *                                                                   InputPitchScale                                   //0x0428(0x0004)
  *                                                                   InputRollScale                                    //0x042C(0x0004)
  *                                                                   bShowMouseCursor                                  //0x0430(0x0001)
  *                                                                   bEnableClickEvents                                //0x0430(0x0001)
  *                                                                   bEnableTouchEvents                                //0x0430(0x0001)
  *                                                                   bEnableMouseOverEvents                            //0x0430(0x0001)
  *                                                                   bEnableTouchOverEvents                            //0x0430(0x0001)
  *                                                                   bForceFeedbackEnabled                             //0x0430(0x0001)
  *                                                                   ForceFeedbackScale                                //0x0434(0x0004)
  ClickEventKeys*                                                     ClickEventKeys                                    //0x0438(0x0010)
  EMouseCursor*                                                       DefaultMouseCursor                                //0x0448(0x0001)
  EMouseCursor*                                                       CurrentMouseCursor                                //0x0449(0x0001)
  ECollisionChannel*                                                  DefaultClickTraceChannel                          //0x044A(0x0001)
  ECollisionChannel*                                                  CurrentClickTraceChannel                          //0x044B(0x0001)
  *                                                                   HitResultTraceDistance                            //0x044C(0x0004)
  *                                                                   SeamlessTravelCount                               //0x0450(0x0002)
  *                                                                   LastCompletedSeamlessTravelCount                  //0x0452(0x0002)
  InputComponent*                                                     InactiveStateInputComponent                       //0x04C8(0x0008)
  *                                                                   bShouldPerformFullTickWhenPaused                  //0x04D0(0x0001)
  TouchInterface*                                                     CurrentTouchInterface                             //0x04E8(0x0008)
  SpectatorPawn*                                                      SpectatorPawn                                     //0x0540(0x0008)
  *                                                                   bIsLocalPlayerController                          //0x054C(0x0001)
  Vector*                                                             SpawnLocation                                     //0x0550(0x000C)
  *                                                                   WasInputKeyJustReleased                           //0x0000(0x0229)
  *                                                                   WasInputKeyJustPressed                            //0x0000(0x0229)
  *                                                                   ToggleSpeaking                                    //0x0000(0x0229)
  *                                                                   TestServerLevelVisibilityChange                   //0x0000(0x0229)
  *                                                                   SwitchLevel                                       //0x0000(0x0229)
  *                                                                   StopHapticEffect                                  //0x0000(0x0229)
  *                                                                   StartFire                                         //0x0000(0x0229)
  *                                                                   SetVirtualJoystickVisibility                      //0x0000(0x0229)
  NewViewTarget*                                                      SetViewTargetWithBlend                            //0x0000(0x0229)
  *                                                                   SetName                                           //0x0000(0x0229)
  *                                                                   SetMouseLocation                                  //0x0000(0x0229)
  CursorWidget*                                                       SetMouseCursorWidget                              //0x0000(0x0229)
  *                                                                   SetHapticsByValue                                 //0x0000(0x0229)
  *                                                                   SetDisableHaptics                                 //0x0000(0x0229)
  *                                                                   SetControllerLightColor                           //0x0000(0x0229)
  *                                                                   SetCinematicMode                                  //0x0000(0x0229)
  AttachToComponent*                                                  SetAudioListenerOverride                          //0x0000(0x0229)
  AttachToComponent*                                                  SetAudioListenerAttenuationOverride               //0x0000(0x0229)
  *                                                                   ServerViewSelf                                    //0x0000(0x0229)
  *                                                                   ServerViewPrevPlayer                              //0x0000(0x0229)
  *                                                                   ServerViewNextPlayer                              //0x0000(0x0229)
  *                                                                   ServerVerifyViewTarget                            //0x0000(0x0229)
  *                                                                   ServerUpdateMultipleLevelsVisibility              //0x0000(0x0229)
  *                                                                   ServerUpdateLevelVisibility                       //0x0000(0x0229)
  *                                                                   ServerUpdateCamera                                //0x0000(0x0229)
  *                                                                   ServerUnmutePlayer                                //0x0000(0x0229)
  *                                                                   ServerToggleAILogging                             //0x0000(0x0229)
  *                                                                   ServerShortTimeout                                //0x0000(0x0229)
  *                                                                   ServerSetSpectatorWaiting                         //0x0000(0x0229)
  *                                                                   ServerSetSpectatorLocation                        //0x0000(0x0229)
  *                                                                   ServerRestartPlayer                               //0x0000(0x0229)
  *                                                                   ServerPause                                       //0x0000(0x0229)
  *                                                                   ServerNotifyLoadedWorld                           //0x0000(0x0229)
  *                                                                   ServerMutePlayer                                  //0x0000(0x0229)
  *                                                                   ServerExecRPC                                     //0x0000(0x0229)
  *                                                                   ServerExec                                        //0x0000(0x0229)
  *                                                                   ServerCheckClientPossessionReliable               //0x0000(0x0229)
  *                                                                   ServerCheckClientPossession                       //0x0000(0x0229)
  *                                                                   ServerChangeName                                  //0x0000(0x0229)
  *                                                                   ServerCamera                                      //0x0000(0x0229)
  P*                                                                  ServerAcknowledgePossession                       //0x0000(0x0229)
  *                                                                   SendToConsole                                     //0x0000(0x0229)
  *                                                                   RestartLevel                                      //0x0000(0x0229)
  *                                                                   ResetControllerLightColor                         //0x0000(0x0229)
  *                                                                   ProjectWorldLocationToScreen                      //0x0000(0x0229)
  HapticEffect*                                                       PlayHapticEffect                                  //0x0000(0x0229)
  LatentInfo*                                                         PlayDynamicForceFeedback                          //0x0000(0x0229)
  *                                                                   Pause                                             //0x0000(0x0229)
  *                                                                   OnServerStartedVisualLogger                       //0x0000(0x0229)
  *                                                                   LocalTravel                                       //0x0000(0x0229)
  ForceFeedbackEffect*                                                K2_ClientPlayForceFeedback                        //0x0000(0x0229)
  *                                                                   IsInputKeyDown                                    //0x0000(0x0229)
  *                                                                   GetViewportSize                                   //0x0000(0x0229)
  ReturnValue*                                                        GetSpectatorPawn                                  //0x0000(0x0229)
  *                                                                   GetMousePosition                                  //0x0000(0x0229)
  *                                                                   GetInputVectorKeyState                            //0x0000(0x0229)
  *                                                                   GetInputTouchState                                //0x0000(0x0229)
  *                                                                   GetInputMouseDelta                                //0x0000(0x0229)
  *                                                                   GetInputMotionState                               //0x0000(0x0229)
  *                                                                   GetInputKeyTimeDown                               //0x0000(0x0229)
  *                                                                   GetInputAnalogStickState                          //0x0000(0x0229)
  *                                                                   GetInputAnalogKeyState                            //0x0000(0x0229)
  ReturnValue*                                                        GetHUD                                            //0x0000(0x0229)
  HitResult*                                                          GetHitResultUnderFingerForObjects                 //0x0000(0x0229)
  HitResult*                                                          GetHitResultUnderFingerByChannel                  //0x0000(0x0229)
  HitResult*                                                          GetHitResultUnderFinger                           //0x0000(0x0229)
  HitResult*                                                          GetHitResultUnderCursorForObjects                 //0x0000(0x0229)
  HitResult*                                                          GetHitResultUnderCursorByChannel                  //0x0000(0x0229)
  HitResult*                                                          GetHitResultUnderCursor                           //0x0000(0x0229)
  *                                                                   GetFocalLocation                                  //0x0000(0x0229)
  *                                                                   FOV                                               //0x0000(0x0229)
  *                                                                   EnableCheats                                      //0x0000(0x0229)
  *                                                                   DeprojectScreenPositionToWorld                    //0x0000(0x0229)
  *                                                                   DeprojectMousePositionToWorld                     //0x0000(0x0229)
  *                                                                   ConsoleKey                                        //0x0000(0x0229)
  *                                                                   ClientWasKicked                                   //0x0000(0x0229)
  *                                                                   ClientVoiceHandshakeComplete                      //0x0000(0x0229)
  *                                                                   ClientUpdateMultipleLevelsStreamingStatus         //0x0000(0x0229)
  *                                                                   ClientUpdateLevelStreamingStatus                  //0x0000(0x0229)
  *                                                                   ClientUnmutePlayer                                //0x0000(0x0229)
  *                                                                   ClientTravelInternal                              //0x0000(0x0229)
  *                                                                   ClientTravel                                      //0x0000(0x0229)
  SenderPlayerState*                                                  ClientTeamMessage                                 //0x0000(0x0229)
  ForceFeedbackEffect*                                                ClientStopForceFeedback                           //0x0000(0x0229)
  Shake*                                                              ClientStopCameraShake                             //0x0000(0x0229)
  AnimToStop*                                                         ClientStopCameraAnim                              //0x0000(0x0229)
  *                                                                   ClientStartOnlineSession                          //0x0000(0x0229)
  LensEffectEmitterClass*                                             ClientSpawnCameraLensEffect                       //0x0000(0x0229)
  A*                                                                  ClientSetViewTarget                               //0x0000(0x0229)
  *                                                                   ClientSetSpectatorWaiting                         //0x0000(0x0229)
  NewHUDClass*                                                        ClientSetHUD                                      //0x0000(0x0229)
  Material*                                                           ClientSetForceMipLevelsToBeResident               //0x0000(0x0229)
  *                                                                   ClientSetCinematicMode                            //0x0000(0x0229)
  *                                                                   ClientSetCameraMode                               //0x0000(0x0229)
  *                                                                   ClientSetCameraFade                               //0x0000(0x0229)
  *                                                                   ClientSetBlockOnAsyncLoading                      //0x0000(0x0229)
  *                                                                   ClientReturnToMainMenuWithTextReason              //0x0000(0x0229)
  *                                                                   ClientReturnToMainMenu                            //0x0000(0x0229)
  NewPawn*                                                            ClientRetryClientRestart                          //0x0000(0x0229)
  NewPawn*                                                            ClientRestart                                     //0x0000(0x0229)
  *                                                                   ClientReset                                       //0x0000(0x0229)
  Object*                                                             ClientRepObjRef                                   //0x0000(0x0229)
  Message*                                                            ClientReceiveLocalizedMessage                     //0x0000(0x0229)
  ForcedActor*                                                        ClientPrestreamTextures                           //0x0000(0x0229)
  *                                                                   ClientPrepareMapChange                            //0x0000(0x0229)
  Sound*                                                              ClientPlaySoundAtLocation                         //0x0000(0x0229)
  Sound*                                                              ClientPlaySound                                   //0x0000(0x0229)
  ForceFeedbackEffect*                                                ClientPlayForceFeedback_Internal                  //0x0000(0x0229)
  Shake*                                                              ClientPlayCameraShake                             //0x0000(0x0229)
  AnimToPlay*                                                         ClientPlayCameraAnim                              //0x0000(0x0229)
  *                                                                   ClientMutePlayer                                  //0x0000(0x0229)
  *                                                                   ClientMessage                                     //0x0000(0x0229)
  *                                                                   ClientIgnoreMoveInput                             //0x0000(0x0229)
  *                                                                   ClientIgnoreLookInput                             //0x0000(0x0229)
  *                                                                   ClientGotoState                                   //0x0000(0x0229)
  EndGameFocus*                                                       ClientGameEnded                                   //0x0000(0x0229)
  *                                                                   ClientForceGarbageCollection                      //0x0000(0x0229)
  *                                                                   ClientFlushLevelStreaming                         //0x0000(0x0229)
  *                                                                   ClientEndOnlineSession                            //0x0000(0x0229)
  *                                                                   ClientEnableNetworkVoice                          //0x0000(0x0229)
  *                                                                   ClientCommitMapChange                             //0x0000(0x0229)
  *                                                                   ClientClearCameraLensEffects                      //0x0000(0x0229)
  *                                                                   ClientCapBandwidth                                //0x0000(0x0229)
  *                                                                   ClientCancelPendingMapChange                      //0x0000(0x0229)
  *                                                                   ClientAddTextureStreamingLoc                      //0x0000(0x0229)
  *                                                                   ClearAudioListenerOverride                        //0x0000(0x0229)
  *                                                                   ClearAudioListenerAttenuationOverride             //0x0000(0x0229)
  *                                                                   CanRestartPlayer                                  //0x0000(0x0229)
  *                                                                   Camera                                            //0x0000(0x0229)
  *                                                                   AddYawInput                                       //0x0000(0x0229)
  *                                                                   AddRollInput                                      //0x0000(0x0229)
  *                                                                   AddPitchInput                                     //0x0000(0x0229)
  NewTouchInterface*                                                  ActivateTouchInterface                            //0x0000(0x0229)
};


class ARSharedWorldPlayerController : public PlayerController
{
  *                                                                   ServerMarkReadyForReceiving                       //0x0000(0x0229)
  *                                                                   ClientUpdatePreviewImageData                      //0x0000(0x0229)
  *                                                                   ClientUpdateARWorldData                           //0x0000(0x0229)
  *                                                                   ClientInitSharedWorld                             //0x0000(0x0229)
};


class SkyLight : public Info
{
  SkyLightComponent*                                                  LightComponent                                    //0x0218(0x0008)
  *                                                                   bEnabled                                          //0x0220(0x0001)
  *                                                                   OnRep_bEnabled                                    //0x0000(0x0229)
};


class ARSkyLight : public SkyLight
{
  AREnvironmentCaptureProbe*                                          CaptureProbe                                      //0x0228(0x0008)
  InCaptureProbe*                                                     SetEnvironmentCaptureProbe                        //0x0000(0x0229)
};


class StreamableRenderAsset : public Object
{
  *                                                                   ForceMipLevelsToBeResidentTimestamp               //0x0028(0x0008)
  *                                                                   NumCinematicMipLevels                             //0x0030(0x0004)
  *                                                                   StreamingIndex                                    //0x0034(0x0004)
  *                                                                   CachedCombinedLODBias                             //0x0038(0x0004)
  *                                                                   CachedNumResidentLODs                             //0x003C(0x0001)
  *                                                                   bCachedReadyForStreaming                          //0x003D(0x0001)
  *                                                                   NeverStream                                       //0x003D(0x0001)
  *                                                                   bGlobalForceMipLevelsToBeResident                 //0x003D(0x0001)
  *                                                                   bIsStreamable                                     //0x003D(0x0001)
  *                                                                   bHasStreamingUpdatePending                        //0x003D(0x0001)
  *                                                                   bForceMiplevelsToBeResident                       //0x003D(0x0001)
  *                                                                   bIgnoreStreamingMipBias                           //0x003D(0x0001)
  *                                                                   bUseCinematicMipLevels                            //0x003D(0x0001)
};


class Texture : public StreamableRenderAsset
{
  Guid*                                                               LightingGuid                                      //0x0048(0x0010)
  *                                                                   LODBias                                           //0x0058(0x0004)
  TextureCompressionSettings*                                         CompressionSettings                               //0x005C(0x0001)
  TextureFilter*                                                      Filter                                            //0x005D(0x0001)
  UnderlyingType*                                                     MipLoadOptions                                    //0x005E(0x0001)
  TextureGroup*                                                       LODGroup                                          //0x005F(0x0001)
  *                                                                   SRGB                                              //0x0060(0x0001)
  *                                                                   bNoTiling                                         //0x0060(0x0001)
  *                                                                   VirtualTextureStreaming                           //0x0060(0x0001)
  *                                                                   CompressionYCoCg                                  //0x0060(0x0001)
  *                                                                   bAsyncResourceReleaseHasBeenStarted               //0x0060(0x0001)
  AssetUserData*                                                      AssetUserData                                     //0x0068(0x0010)
};


class ARTexture : public Texture
{
  UnderlyingType*                                                     TextureType                                       //0x00D0(0x0001)
  *                                                                   Timestamp                                         //0x00D4(0x0004)
  Guid*                                                               ExternalTextureGuid                               //0x00D8(0x0010)
  Vector2D*                                                           Size                                              //0x00E8(0x0008)
};


class ARTextureCameraImage : public ARTexture
{
};


class ARTextureCameraDepth : public ARTexture
{
  UnderlyingType*                                                     DepthQuality                                      //0x00F0(0x0001)
  UnderlyingType*                                                     DepthAccuracy                                     //0x00F1(0x0001)
  *                                                                   bIsTemporallySmoothed                             //0x00F2(0x0001)
};


class TextureCube : public Texture
{
};


class AREnvironmentCaptureProbeTexture : public TextureCube
{
  UnderlyingType*                                                     TextureType                                       //0x0128(0x0001)
  *                                                                   Timestamp                                         //0x012C(0x0004)
  Guid*                                                               ExternalTextureGuid                               //0x0130(0x0010)
  Vector2D*                                                           Size                                              //0x0140(0x0008)
};


class ARTraceResultDummy : public Object
{
};


class ARTrackedGeometry : public Object
{
  Guid*                                                               UniqueId                                          //0x0028(0x0010)
  Transform*                                                          LocalToTrackingTransform                          //0x0040(0x0030)
  Transform*                                                          LocalToAlignedTrackingTransform                   //0x0070(0x0030)
  UnderlyingType*                                                     TrackingState                                     //0x00A0(0x0001)
  MRMeshComponent*                                                    UnderlyingMesh                                    //0x00B0(0x0008)
  UnderlyingType*                                                     ObjectClassification                              //0x00B8(0x0001)
  *                                                                   LastUpdateFrameNumber                             //0x00D0(0x0004)
  *                                                                   DebugName                                         //0x00E0(0x0008)
  *                                                                   IsTracked                                         //0x0000(0x0229)
  ReturnValue*                                                        GetUnderlyingMesh                                 //0x0000(0x0229)
  *                                                                   GetTrackingState                                  //0x0000(0x0229)
  *                                                                   GetObjectClassification                           //0x0000(0x0229)
  *                                                                   GetLocalToWorldTransform                          //0x0000(0x0229)
  *                                                                   GetLocalToTrackingTransform                       //0x0000(0x0229)
  *                                                                   GetLastUpdateTimestamp                            //0x0000(0x0229)
  *                                                                   GetLastUpdateFrameNumber                          //0x0000(0x0229)
  *                                                                   GetDebugName                                      //0x0000(0x0229)
};


class ARPlaneGeometry : public ARTrackedGeometry
{
  UnderlyingType*                                                     Orientation                                       //0x00E8(0x0001)
  Vector*                                                             Center                                            //0x00EC(0x000C)
  Vector*                                                             Extent                                            //0x00F8(0x000C)
  ARPlaneGeometry*                                                    SubsumedBy                                        //0x0118(0x0008)
  ReturnValue*                                                        GetSubsumedBy                                     //0x0000(0x0229)
  *                                                                   GetOrientation                                    //0x0000(0x0229)
  *                                                                   GetExtent                                         //0x0000(0x0229)
  *                                                                   GetCenter                                         //0x0000(0x0229)
  *                                                                   GetBoundaryPolygonInLocalSpace                    //0x0000(0x0229)
};


class ARTrackedPoint : public ARTrackedGeometry
{
};


class ARTrackedImage : public ARTrackedGeometry
{
  ARCandidateImage*                                                   DetectedImage                                     //0x00E8(0x0008)
  Vector2D*                                                           EstimatedSize                                     //0x00F0(0x0008)
  *                                                                   GetEstimateSize                                   //0x0000(0x0229)
  ReturnValue*                                                        GetDetectedImage                                  //0x0000(0x0229)
};


class ARTrackedQRCode : public ARTrackedImage
{
  *                                                                   QRCode                                            //0x00F8(0x0010)
  *                                                                   version                                           //0x0108(0x0004)
};


class ARFaceGeometry : public ARTrackedGeometry
{
  Vector*                                                             LookAtTarget                                      //0x00E8(0x000C)
  *                                                                   bIsTracked                                        //0x00F4(0x0001)
  BlendShapes_Key*                                                    BlendShapes                                       //0x00F8(0x0050)
  *                                                                   GetWorldSpaceEyeTransform                         //0x0000(0x0229)
  *                                                                   GetLocalSpaceEyeTransform                         //0x0000(0x0229)
  *                                                                   GetBlendShapeValue                                //0x0000(0x0229)
  *                                                                   GetBlendShapes                                    //0x0000(0x0229)
};


class AREnvironmentCaptureProbe : public ARTrackedGeometry
{
  AREnvironmentCaptureProbeTexture*                                   EnvironmentCaptureTexture                         //0x00F8(0x0008)
  *                                                                   GetExtent                                         //0x0000(0x0229)
  ReturnValue*                                                        GetEnvironmentCaptureTexture                      //0x0000(0x0229)
};


class ARTrackedObject : public ARTrackedGeometry
{
  ARCandidateObject*                                                  DetectedObject                                    //0x00E8(0x0008)
  ReturnValue*                                                        GetDetectedObject                                 //0x0000(0x0229)
};


class ARTrackedPose : public ARTrackedGeometry
{
  *                                                                   GetTrackedPoseData                                //0x0000(0x0229)
};


class ARTrackableNotifyComponent : public ActorComponent
{
  TrackableDelegate__DelegateSignature*                               OnAddTrackedGeometry                              //0x00B0(0x0010)
  TrackableDelegate__DelegateSignature*                               OnUpdateTrackedGeometry                           //0x00C0(0x0010)
  TrackableDelegate__DelegateSignature*                               OnRemoveTrackedGeometry                           //0x00D0(0x0010)
  TrackablePlaneDelegate__DelegateSignature*                          OnAddTrackedPlane                                 //0x00E0(0x0010)
  TrackablePlaneDelegate__DelegateSignature*                          OnUpdateTrackedPlane                              //0x00F0(0x0010)
  TrackablePlaneDelegate__DelegateSignature*                          OnRemoveTrackedPlane                              //0x0100(0x0010)
  TrackablePointDelegate__DelegateSignature*                          OnAddTrackedPoint                                 //0x0110(0x0010)
  TrackablePointDelegate__DelegateSignature*                          OnUpdateTrackedPoint                              //0x0120(0x0010)
  TrackablePointDelegate__DelegateSignature*                          OnRemoveTrackedPoint                              //0x0130(0x0010)
  TrackableImageDelegate__DelegateSignature*                          OnAddTrackedImage                                 //0x0140(0x0010)
  TrackableImageDelegate__DelegateSignature*                          OnUpdateTrackedImage                              //0x0150(0x0010)
  TrackableImageDelegate__DelegateSignature*                          OnRemoveTrackedImage                              //0x0160(0x0010)
  TrackableFaceDelegate__DelegateSignature*                           OnAddTrackedFace                                  //0x0170(0x0010)
  TrackableFaceDelegate__DelegateSignature*                           OnUpdateTrackedFace                               //0x0180(0x0010)
  TrackableFaceDelegate__DelegateSignature*                           OnRemoveTrackedFace                               //0x0190(0x0010)
  TrackableEnvProbeDelegate__DelegateSignature*                       OnAddTrackedEnvProbe                              //0x01A0(0x0010)
  TrackableEnvProbeDelegate__DelegateSignature*                       OnUpdateTrackedEnvProbe                           //0x01B0(0x0010)
  TrackableEnvProbeDelegate__DelegateSignature*                       OnRemoveTrackedEnvProbe                           //0x01C0(0x0010)
  TrackableObjectDelegate__DelegateSignature*                         OnAddTrackedObject                                //0x01D0(0x0010)
  TrackableObjectDelegate__DelegateSignature*                         OnUpdateTrackedObject                             //0x01E0(0x0010)
  TrackableObjectDelegate__DelegateSignature*                         OnRemoveTrackedObject                             //0x01F0(0x0010)
};


class ARTypesDummyClass : public Object
{
};


class ARCandidateImage : public DataAsset
{
  Texture2D*                                                          CandidateTexture                                  //0x0030(0x0008)
  *                                                                   FriendlyName                                      //0x0038(0x0010)
  *                                                                   Width                                             //0x0048(0x0004)
  *                                                                   Height                                            //0x004C(0x0004)
  UnderlyingType*                                                     Orientation                                       //0x0050(0x0001)
  *                                                                   GetPhysicalWidth                                  //0x0000(0x0229)
  *                                                                   GetPhysicalHeight                                 //0x0000(0x0229)
  *                                                                   GetOrientation                                    //0x0000(0x0229)
  *                                                                   GetFriendlyName                                   //0x0000(0x0229)
  ReturnValue*                                                        GetCandidateTexture                               //0x0000(0x0229)
};


class ARCandidateObject : public DataAsset
{
  CandidateObjectData*                                                CandidateObjectData                               //0x0030(0x0010)
  *                                                                   FriendlyName                                      //0x0040(0x0010)
  Box*                                                                BoundingBox                                       //0x0050(0x001C)
  *                                                                   SetFriendlyName                                   //0x0000(0x0229)
  *                                                                   SetCandidateObjectData                            //0x0000(0x0229)
  *                                                                   SetBoundingBox                                    //0x0000(0x0229)
  *                                                                   GetFriendlyName                                   //0x0000(0x0229)
  *                                                                   GetCandidateObjectData                            //0x0000(0x0229)
  *                                                                   GetBoundingBox                                    //0x0000(0x0229)
};


class HeadMountedDisplayFunctionLibrary : public BlueprintFunctionLibrary
{
  *                                                                   UpdateExternalTrackingHMDPosition                 //0x0000(0x0229)
  WorldContext*                                                       SetWorldToMetersScale                             //0x0000(0x0229)
  *                                                                   SetTrackingOrigin                                 //0x0000(0x0229)
  InTexture*                                                          SetSpectatorScreenTexture                         //0x0000(0x0229)
  *                                                                   SetSpectatorScreenModeTexturePlusEyeLayout        //0x0000(0x0229)
  *                                                                   SetSpectatorScreenMode                            //0x0000(0x0229)
  *                                                                   SetClippingPlanes                                 //0x0000(0x0229)
  *                                                                   ResetOrientationAndPosition                       //0x0000(0x0229)
  *                                                                   IsSpectatorScreenModeControllable                 //0x0000(0x0229)
  *                                                                   IsInLowPersistenceMode                            //0x0000(0x0229)
  *                                                                   IsHeadMountedDisplayEnabled                       //0x0000(0x0229)
  *                                                                   IsHeadMountedDisplayConnected                     //0x0000(0x0229)
  *                                                                   IsDeviceTracking                                  //0x0000(0x0229)
  *                                                                   HasValidTrackingPosition                          //0x0000(0x0229)
  WorldContext*                                                       GetWorldToMetersScale                             //0x0000(0x0229)
  *                                                                   GetVRFocusState                                   //0x0000(0x0229)
  WorldContext*                                                       GetTrackingToWorldTransform                       //0x0000(0x0229)
  *                                                                   GetTrackingSensorParameters                       //0x0000(0x0229)
  *                                                                   GetTrackingOrigin                                 //0x0000(0x0229)
  *                                                                   GetScreenPercentage                               //0x0000(0x0229)
  *                                                                   GetPositionalTrackingCameraParameters             //0x0000(0x0229)
  *                                                                   GetPixelDensity                                   //0x0000(0x0229)
  *                                                                   GetOrientationAndPosition                         //0x0000(0x0229)
  *                                                                   GetNumOfTrackingSensors                           //0x0000(0x0229)
  *                                                                   GetHMDWornState                                   //0x0000(0x0229)
  *                                                                   GetHMDDeviceName                                  //0x0000(0x0229)
  WorldContext*                                                       GetDeviceWorldPose                                //0x0000(0x0229)
  *                                                                   GetDevicePose                                     //0x0000(0x0229)
  *                                                                   EnumerateTrackedDevices                           //0x0000(0x0229)
  *                                                                   EnableLowPersistenceMode                          //0x0000(0x0229)
  *                                                                   EnableHMD                                         //0x0000(0x0229)
  *                                                                   CalibrateExternalTrackingToHMD                    //0x0000(0x0229)
};


class MotionControllerComponent : public PrimitiveComponent
{
  *                                                                   PlayerIndex                                       //0x03D8(0x0004)
  UnderlyingType*                                                     Hand                                              //0x03DC(0x0001)
  *                                                                   MotionSource                                      //0x03E0(0x0008)
  *                                                                   bDisableLowLatencyUpdate                          //0x03E8(0x0001)
  UnderlyingType*                                                     CurrentTrackingStatus                             //0x03EC(0x0001)
  *                                                                   bDisplayDeviceModel                               //0x03ED(0x0001)
  *                                                                   DisplayModelSource                                //0x03F0(0x0008)
  StaticMesh*                                                         CustomDisplayMesh                                 //0x03F8(0x0008)
  DisplayMeshMaterialOverrides*                                       DisplayMeshMaterialOverrides                      //0x0400(0x0010)
  PrimitiveComponent*                                                 DisplayComponent                                  //0x0470(0x0008)
  *                                                                   SetTrackingSource                                 //0x0000(0x0229)
  *                                                                   SetTrackingMotionSource                           //0x0000(0x0229)
  *                                                                   SetShowDeviceModel                                //0x0000(0x0229)
  *                                                                   SetDisplayModelSource                             //0x0000(0x0229)
  NewDisplayMesh*                                                     SetCustomDisplayMesh                              //0x0000(0x0229)
  *                                                                   SetAssociatedPlayerIndex                          //0x0000(0x0229)
  *                                                                   OnMotionControllerUpdated                         //0x0000(0x0229)
  *                                                                   IsTracked                                         //0x0000(0x0229)
  *                                                                   GetTrackingSource                                 //0x0000(0x0229)
  *                                                                   GetParameterValue                                 //0x0000(0x0229)
  *                                                                   GetHandJointPosition                              //0x0000(0x0229)
};


class MotionTrackedDeviceFunctionLibrary : public BlueprintFunctionLibrary
{
  *                                                                   SetIsControllerMotionTrackingEnabledByDefault     //0x0000(0x0229)
  *                                                                   IsMotionTrackingEnabledForSource                  //0x0000(0x0229)
  *                                                                   IsMotionTrackingEnabledForDevice                  //0x0000(0x0229)
  MotionControllerComponent*                                          IsMotionTrackingEnabledForComponent               //0x0000(0x0229)
  *                                                                   IsMotionTrackedDeviceCountManagementNecessary     //0x0000(0x0229)
  *                                                                   IsMotionSourceTracking                            //0x0000(0x0229)
  *                                                                   GetMotionTrackingEnabledControllerCount           //0x0000(0x0229)
  *                                                                   GetMaximumMotionTrackedControllerCount            //0x0000(0x0229)
  *                                                                   GetActiveTrackingSystemName                       //0x0000(0x0229)
  *                                                                   EnumerateMotionSources                            //0x0000(0x0229)
  *                                                                   EnableMotionTrackingOfSource                      //0x0000(0x0229)
  *                                                                   EnableMotionTrackingOfDevice                      //0x0000(0x0229)
  MotionControllerComponent*                                          EnableMotionTrackingForComponent                  //0x0000(0x0229)
  *                                                                   DisableMotionTrackingOfSource                     //0x0000(0x0229)
  *                                                                   DisableMotionTrackingOfDevice                     //0x0000(0x0229)
  *                                                                   DisableMotionTrackingOfControllersForPlayer       //0x0000(0x0229)
  *                                                                   DisableMotionTrackingOfAllControllers             //0x0000(0x0229)
  MotionControllerComponent*                                          DisableMotionTrackingForComponent                 //0x0000(0x0229)
};


class XRAssetFunctionLibrary : public BlueprintFunctionLibrary
{
  Target*                                                             AddNamedDeviceVisualizationComponentBlocking      //0x0000(0x0229)
  Target*                                                             AddDeviceVisualizationComponentBlocking           //0x0000(0x0229)
};


class AsyncTask_LoadXRDeviceVisComponent : public BlueprintAsyncActionBase
{
  DeviceModelLoadedDelegate__DelegateSignature*                       OnModelLoaded                                     //0x0030(0x0010)
  DeviceModelLoadedDelegate__DelegateSignature*                       OnLoadFailure                                     //0x0040(0x0010)
  PrimitiveComponent*                                                 SpawnedComponent                                  //0x0058(0x0008)
  Target*                                                             AddNamedDeviceVisualizationComponentAsync         //0x0000(0x0229)
  Target*                                                             AddDeviceVisualizationComponentAsync              //0x0000(0x0229)
};


class XRLoadingScreenFunctionLibrary : public BlueprintFunctionLibrary
{
  *                                                                   ShowLoadingScreen                                 //0x0000(0x0229)
  Texture*                                                            SetLoadingScreen                                  //0x0000(0x0229)
  *                                                                   HideLoadingScreen                                 //0x0000(0x0229)
  *                                                                   ClearLoadingScreenSplashes                        //0x0000(0x0229)
  Texture*                                                            AddLoadingScreenSplash                            //0x0000(0x0229)
};


class BuildPatchManifest : public Object
{
  *                                                                   ManifestFileVersion                               //0x0028(0x0001)
  *                                                                   bIsFileData                                       //0x0029(0x0001)
  *                                                                   AppId                                             //0x002C(0x0004)
  *                                                                   AppName                                           //0x0030(0x0010)
  *                                                                   BuildVersion                                      //0x0040(0x0010)
  *                                                                   LaunchExe                                         //0x0050(0x0010)
  *                                                                   LaunchCommand                                     //0x0060(0x0010)
  PrereqIds*                                                          PrereqIds                                         //0x0070(0x0050)
  *                                                                   PrereqName                                        //0x00C0(0x0010)
  *                                                                   PrereqPath                                        //0x00D0(0x0010)
  *                                                                   PrereqArgs                                        //0x00E0(0x0010)
  FileManifestList*                                                   FileManifestList                                  //0x00F0(0x0010)
  ChunkList*                                                          ChunkList                                         //0x0100(0x0010)
  CustomFields*                                                       CustomFields                                      //0x0110(0x0010)
};


class StaticMeshComponent : public MeshComponent
{
  *                                                                   ForcedLodModel                                    //0x0400(0x0004)
  *                                                                   PreviousLODLevel                                  //0x0404(0x0004)
  *                                                                   MinLOD                                            //0x0408(0x0004)
  *                                                                   SubDivisionStepSize                               //0x040C(0x0004)
  StaticMesh*                                                         StaticMesh                                        //0x0410(0x0008)
  Color*                                                              WireframeColorOverride                            //0x0418(0x0004)
  *                                                                   bEvaluateWorldPositionOffset                      //0x041C(0x0001)
  *                                                                   bOverrideWireframeColor                           //0x041C(0x0001)
  *                                                                   bOverrideMinLOD                                   //0x041C(0x0001)
  *                                                                   bOverrideNavigationExport                         //0x041C(0x0001)
  *                                                                   bForceNavigationObstacle                          //0x041C(0x0001)
  *                                                                   bDisallowMeshPaintPerInstance                     //0x041C(0x0001)
  *                                                                   bIgnoreInstanceForTextureStreaming                //0x041C(0x0001)
  *                                                                   bOverrideLightMapRes                              //0x041C(0x0001)
  *                                                                   bCastDistanceFieldIndirectShadow                  //0x041D(0x0001)
  *                                                                   bOverrideDistanceFieldSelfShadowBias              //0x041D(0x0001)
  *                                                                   bUseSubDivisions                                  //0x041D(0x0001)
  *                                                                   bUseDefaultCollision                              //0x041D(0x0001)
  *                                                                   bReverseCulling                                   //0x041D(0x0001)
  *                                                                   OverriddenLightMapRes                             //0x0420(0x0004)
  *                                                                   DistanceFieldIndirectShadowMinVisibility          //0x0424(0x0004)
  *                                                                   DistanceFieldSelfShadowBias                       //0x0428(0x0004)
  *                                                                   StreamingDistanceMultiplier                       //0x042C(0x0004)
  LODData*                                                            LODData                                           //0x0430(0x0010)
  StreamingTextureData*                                               StreamingTextureData                              //0x0440(0x0010)
  LightmassPrimitiveSettings*                                         LightmassSettings                                 //0x0450(0x0018)
  NewMesh*                                                            SetStaticMesh                                     //0x0000(0x0229)
  *                                                                   SetReverseCulling                                 //0x0000(0x0229)
  *                                                                   SetForcedLodModel                                 //0x0000(0x0229)
  *                                                                   SetDistanceFieldSelfShadowBias                    //0x0000(0x0229)
  OldStaticMesh*                                                      OnRep_StaticMesh                                  //0x0000(0x0229)
  *                                                                   GetLocalBounds                                    //0x0000(0x0229)
};


class InstancedStaticMeshComponent : public StaticMeshComponent
{
  PerInstanceSMData*                                                  PerInstanceSMData                                 //0x0468(0x0010)
  *                                                                   InstancingRandomSeed                              //0x0478(0x0004)
  *                                                                   InstanceStartCullDistance                         //0x047C(0x0004)
  *                                                                   InstanceEndCullDistance                           //0x0480(0x0004)
  InstanceReorderTable*                                               InstanceReorderTable                              //0x0488(0x0010)
  *                                                                   NumPendingLightmaps                               //0x04E0(0x0004)
  CachedMappings*                                                     CachedMappings                                    //0x04E8(0x0010)
  *                                                                   UpdateInstanceTransform                           //0x0000(0x0229)
  *                                                                   SetCullDistances                                  //0x0000(0x0229)
  *                                                                   RemoveInstance                                    //0x0000(0x0229)
  *                                                                   GetInstanceTransform                              //0x0000(0x0229)
  *                                                                   GetInstancesOverlappingSphere                     //0x0000(0x0229)
  *                                                                   GetInstancesOverlappingBox                        //0x0000(0x0229)
  *                                                                   GetInstanceCount                                  //0x0000(0x0229)
  *                                                                   ClearInstances                                    //0x0000(0x0229)
  *                                                                   BatchUpdateInstancesTransforms                    //0x0000(0x0229)
  *                                                                   BatchUpdateInstancesTransform                     //0x0000(0x0229)
  *                                                                   AddInstanceWorldSpace                             //0x0000(0x0229)
  *                                                                   AddInstance                                       //0x0000(0x0229)
};


class HierarchicalInstancedStaticMeshComponent : public InstancedStaticMeshComponent
{
  SortedInstances*                                                    SortedInstances                                   //0x0508(0x0010)
  *                                                                   NumBuiltInstances                                 //0x0518(0x0004)
  Box*                                                                BuiltInstanceBounds                               //0x0520(0x001C)
  Box*                                                                UnbuiltInstanceBounds                             //0x053C(0x001C)
  UnbuiltInstanceBoundsList*                                          UnbuiltInstanceBoundsList                         //0x0558(0x0010)
  *                                                                   bEnableDensityScaling                             //0x0568(0x0001)
  *                                                                   OcclusionLayerNumNodes                            //0x0570(0x0004)
  BoxSphereBounds*                                                    CacheMeshExtendedBounds                           //0x0574(0x001C)
  *                                                                   bDisableCollision                                 //0x0594(0x0001)
  *                                                                   InstanceCountToRender                             //0x0598(0x0004)
  *                                                                   RemoveInstances                                   //0x0000(0x0229)
};


class FoliageInstancedStaticMeshComponent : public HierarchicalInstancedStaticMeshComponent
{
  InstancePointDamageSignature__DelegateSignature*                    OnInstanceTakePointDamage                         //0x05E8(0x0010)
  InstanceRadialDamageSignature__DelegateSignature*                   OnInstanceTakeRadialDamage                        //0x05F8(0x0010)
};


class FoliageStatistics : public BlueprintFunctionLibrary
{
  WorldContextObject*                                                 FoliageOverlappingSphereCount                     //0x0000(0x0229)
  WorldContextObject*                                                 FoliageOverlappingBoxCount                        //0x0000(0x0229)
};


class FoliageType : public Object
{
  Guid*                                                               UpdateGuid                                        //0x0028(0x0010)
  *                                                                   Density                                           //0x0038(0x0004)
  *                                                                   DensityAdjustmentFactor                           //0x003C(0x0004)
  *                                                                   Radius                                            //0x0040(0x0004)
  *                                                                   bSingleInstanceModeOverrideRadius                 //0x0044(0x0001)
  *                                                                   SingleInstanceModeRadius                          //0x0048(0x0004)
  UnderlyingType*                                                     Scaling                                           //0x004C(0x0001)
  FloatInterval*                                                      ScaleX                                            //0x0050(0x0008)
  FloatInterval*                                                      ScaleY                                            //0x0058(0x0008)
  FloatInterval*                                                      ScaleZ                                            //0x0060(0x0008)
  FoliageVertexColorChannelMask*                                      VertexColorMaskByChannel                          //0x0068(0x000C)
  FoliageVertexColorMask*                                             VertexColorMask                                   //0x0098(0x0001)
  *                                                                   VertexColorMaskThreshold                          //0x009C(0x0004)
  *                                                                   VertexColorMaskInvert                             //0x00A0(0x0001)
  FloatInterval*                                                      ZOffset                                           //0x00A4(0x0008)
  *                                                                   AlignToNormal                                     //0x00AC(0x0001)
  *                                                                   AlignMaxAngle                                     //0x00B0(0x0004)
  *                                                                   RandomYaw                                         //0x00B4(0x0001)
  *                                                                   RandomPitchAngle                                  //0x00B8(0x0004)
  FloatInterval*                                                      GroundSlopeAngle                                  //0x00BC(0x0008)
  FloatInterval*                                                      Height                                            //0x00C4(0x0008)
  LandscapeLayers*                                                    LandscapeLayers                                   //0x00D0(0x0010)
  *                                                                   MinimumLayerWeight                                //0x00E0(0x0004)
  ExclusionLandscapeLayers*                                           ExclusionLandscapeLayers                          //0x00E8(0x0010)
  *                                                                   MinimumExclusionLayerWeight                       //0x00F8(0x0004)
  *                                                                   LandscapeLayer                                    //0x00FC(0x0008)
  *                                                                   CollisionWithWorld                                //0x0104(0x0001)
  Vector*                                                             CollisionScale                                    //0x0108(0x000C)
  BoxSphereBounds*                                                    MeshBounds                                        //0x0114(0x001C)
  Vector*                                                             LowBoundOriginRadius                              //0x0130(0x000C)
  EComponentMobility*                                                 Mobility                                          //0x013C(0x0001)
  Int32Interval*                                                      CullDistance                                      //0x0140(0x0008)
  *                                                                   bEnableStaticLighting                             //0x0148(0x0001)
  *                                                                   CastShadow                                        //0x0148(0x0001)
  *                                                                   bAffectDynamicIndirectLighting                    //0x0148(0x0001)
  *                                                                   bAffectDistanceFieldLighting                      //0x0148(0x0001)
  *                                                                   bCastDynamicShadow                                //0x0148(0x0001)
  *                                                                   bCastStaticShadow                                 //0x0148(0x0001)
  *                                                                   bCastShadowAsTwoSided                             //0x0148(0x0001)
  *                                                                   bReceivesDecals                                   //0x0148(0x0001)
  *                                                                   bOverrideLightMapRes                              //0x0149(0x0001)
  *                                                                   OverriddenLightMapRes                             //0x014C(0x0004)
  UnderlyingType*                                                     LightmapType                                      //0x0150(0x0001)
  *                                                                   bUseAsOccluder                                    //0x0154(0x0001)
  BodyInstance*                                                       BodyInstance                                      //0x0158(0x0110)
  EHasCustomNavigableGeometry*                                        CustomNavigableGeometry                           //0x0268(0x0001)
  LightingChannels*                                                   LightingChannels                                  //0x0269(0x0001)
  *                                                                   bRenderCustomDepth                                //0x026C(0x0001)
  *                                                                   CustomDepthStencilValue                           //0x0270(0x0004)
  *                                                                   TranslucencySortPriority                          //0x0274(0x0004)
  *                                                                   CollisionRadius                                   //0x0278(0x0004)
  *                                                                   ShadeRadius                                       //0x027C(0x0004)
  *                                                                   NumSteps                                          //0x0280(0x0004)
  *                                                                   InitialSeedDensity                                //0x0284(0x0004)
  *                                                                   AverageSpreadDistance                             //0x0288(0x0004)
  *                                                                   SpreadVariance                                    //0x028C(0x0004)
  *                                                                   SeedsPerStep                                      //0x0290(0x0004)
  *                                                                   DistributionSeed                                  //0x0294(0x0004)
  *                                                                   MaxInitialSeedOffset                              //0x0298(0x0004)
  *                                                                   bCanGrowInShade                                   //0x029C(0x0001)
  *                                                                   bSpawnsInShade                                    //0x029D(0x0001)
  *                                                                   MaxInitialAge                                     //0x02A0(0x0004)
  *                                                                   MaxAge                                            //0x02A4(0x0004)
  *                                                                   OverlapPriority                                   //0x02A8(0x0004)
  FloatInterval*                                                      ProceduralScale                                   //0x02AC(0x0008)
  RuntimeFloatCurve*                                                  ScaleCurve                                        //0x02B8(0x0088)
  *                                                                   ChangeCount                                       //0x0340(0x0004)
  *                                                                   ReapplyDensity                                    //0x0344(0x0001)
  *                                                                   ReapplyRadius                                     //0x0344(0x0001)
  *                                                                   ReapplyAlignToNormal                              //0x0344(0x0001)
  *                                                                   ReapplyRandomYaw                                  //0x0344(0x0001)
  *                                                                   ReapplyScaling                                    //0x0344(0x0001)
  *                                                                   ReapplyScaleX                                     //0x0344(0x0001)
  *                                                                   ReapplyScaleY                                     //0x0344(0x0001)
  *                                                                   ReapplyScaleZ                                     //0x0344(0x0001)
  *                                                                   ReapplyRandomPitchAngle                           //0x0345(0x0001)
  *                                                                   ReapplyGroundSlope                                //0x0345(0x0001)
  *                                                                   ReapplyHeight                                     //0x0345(0x0001)
  *                                                                   ReapplyLandscapeLayers                            //0x0345(0x0001)
  *                                                                   ReapplyZOffset                                    //0x0345(0x0001)
  *                                                                   ReapplyCollisionWithWorld                         //0x0345(0x0001)
  *                                                                   ReapplyVertexColorMask                            //0x0345(0x0001)
  *                                                                   bEnableDensityScaling                             //0x0345(0x0001)
  RuntimeVirtualTextures*                                             RuntimeVirtualTextures                            //0x0348(0x0010)
  *                                                                   VirtualTextureCullMips                            //0x0358(0x0004)
  UnderlyingType*                                                     VirtualTextureRenderPassType                      //0x035C(0x0001)
};


class FoliageType_Actor : public FoliageType
{
  Class*                                                              ActorClass                                        //0x0360(0x0008)
  *                                                                   bShouldAttachToBaseComponent                      //0x0368(0x0001)
};


class FoliageType_InstancedStaticMesh : public FoliageType
{
  StaticMesh*                                                         Mesh                                              //0x0360(0x0008)
  OverrideMaterials*                                                  OverrideMaterials                                 //0x0368(0x0010)
  Class*                                                              ComponentClass                                    //0x0378(0x0008)
};


class InstancedFoliageActor : public Actor
{
};


class StaticMeshActor : public Actor
{
  StaticMeshComponent*                                                StaticMeshComponent                               //0x0218(0x0008)
  *                                                                   bStaticMeshReplicateMovement                      //0x0220(0x0001)
  UnderlyingType*                                                     NavigationGeometryGatheringMode                   //0x0221(0x0001)
  *                                                                   SetMobility                                       //0x0000(0x0229)
};


class InteractiveFoliageActor : public StaticMeshActor
{
  CapsuleComponent*                                                   CapsuleComponent                                  //0x0228(0x0008)
  Vector*                                                             TouchingActorEntryPosition                        //0x0230(0x000C)
  Vector*                                                             FoliageVelocity                                   //0x023C(0x000C)
  Vector*                                                             FoliageForce                                      //0x0248(0x000C)
  Vector*                                                             FoliagePosition                                   //0x0254(0x000C)
  *                                                                   FoliageDamageImpulseScale                         //0x0260(0x0004)
  *                                                                   FoliageTouchImpulseScale                          //0x0264(0x0004)
  *                                                                   FoliageStiffness                                  //0x0268(0x0004)
  *                                                                   FoliageStiffnessQuadratic                         //0x026C(0x0004)
  *                                                                   FoliageDamping                                    //0x0270(0x0004)
  *                                                                   MaxDamageImpulse                                  //0x0274(0x0004)
  *                                                                   MaxTouchImpulse                                   //0x0278(0x0004)
  *                                                                   MaxForce                                          //0x027C(0x0004)
  *                                                                   Mass                                              //0x0280(0x0004)
  OverlappedComp*                                                     CapsuleTouched                                    //0x0000(0x0229)
};


class InteractiveFoliageComponent : public StaticMeshComponent
{
};


class Brush : public Actor
{
  EBrushType*                                                         BrushType                                         //0x0218(0x0001)
  Color*                                                              BrushColor                                        //0x021C(0x0004)
  *                                                                   PolyFlags                                         //0x0220(0x0004)
  *                                                                   bColored                                          //0x0224(0x0001)
  *                                                                   bSolidWhenSelected                                //0x0224(0x0001)
  *                                                                   bPlaceableFromClassBrowser                        //0x0224(0x0001)
  *                                                                   bNotForClientOrServer                             //0x0224(0x0001)
  Model*                                                              Brush                                             //0x0228(0x0008)
  BrushComponent*                                                     BrushComponent                                    //0x0230(0x0008)
  *                                                                   bInManipulation                                   //0x0238(0x0001)
  SavedSelections*                                                    SavedSelections                                   //0x0240(0x0010)
};


class Volume : public Brush
{
};


class ProceduralFoliageBlockingVolume : public Volume
{
  ProceduralFoliageVolume*                                            ProceduralFoliageVolume                           //0x0250(0x0008)
};


class ProceduralFoliageComponent : public ActorComponent
{
  ProceduralFoliageSpawner*                                           FoliageSpawner                                    //0x00B0(0x0008)
  *                                                                   TileOverlap                                       //0x00B8(0x0004)
  Volume*                                                             SpawningVolume                                    //0x00C0(0x0008)
  Guid*                                                               ProceduralGuid                                    //0x00C8(0x0010)
};


class ProceduralFoliageSpawner : public Object
{
  *                                                                   RandomSeed                                        //0x0028(0x0004)
  *                                                                   TileSize                                          //0x002C(0x0004)
  *                                                                   NumUniqueTiles                                    //0x0030(0x0004)
  *                                                                   MinimumQuadTreeSize                               //0x0034(0x0004)
  FoliageTypes*                                                       FoliageTypes                                      //0x0040(0x0010)
  *                                                                   bNeedsSimulation                                  //0x0050(0x0001)
  *                                                                   Simulate                                          //0x0000(0x0229)
};


class ProceduralFoliageTile : public Object
{
  ProceduralFoliageSpawner*                                           FoliageSpawner                                    //0x0028(0x0008)
  InstancesArray*                                                     InstancesArray                                    //0x00D0(0x0010)
};


class ProceduralFoliageVolume : public Volume
{
  ProceduralFoliageComponent*                                         ProceduralComponent                               //0x0250(0x0008)
};


class ControlPointMeshActor : public Actor
{
  ControlPointMeshComponent*                                          ControlPointMeshComponent                         //0x0218(0x0008)
};


class ControlPointMeshComponent : public StaticMeshComponent
{
  *                                                                   VirtualTextureMainPassMaxDrawDistance             //0x0468(0x0004)
};


class LandscapeProxy : public Actor
{
  LandscapeSplinesComponent*                                          SplineComponent                                   //0x0218(0x0008)
  Guid*                                                               LandscapeGuid                                     //0x0220(0x0010)
  IntPoint*                                                           LandscapeSectionOffset                            //0x0230(0x0008)
  *                                                                   MaxLODLevel                                       //0x0238(0x0004)
  *                                                                   LODDistanceFactor                                 //0x023C(0x0004)
  ELandscapeLODFalloff*                                               LODFalloff                                        //0x0240(0x0001)
  *                                                                   ComponentScreenSizeToUseSubSections               //0x0244(0x0004)
  *                                                                   LOD0ScreenSize                                    //0x0248(0x0004)
  *                                                                   LOD0DistributionSetting                           //0x024C(0x0004)
  *                                                                   LODDistributionSetting                            //0x0250(0x0004)
  *                                                                   TessellationComponentScreenSize                   //0x0254(0x0004)
  *                                                                   UseTessellationComponentScreenSizeFalloff         //0x0258(0x0001)
  *                                                                   TessellationComponentScreenSizeFalloff            //0x025C(0x0004)
  *                                                                   OccluderGeometryLOD                               //0x0260(0x0004)
  *                                                                   StaticLightingLOD                                 //0x0264(0x0004)
  PhysicalMaterial*                                                   DefaultPhysMaterial                               //0x0268(0x0008)
  *                                                                   StreamingDistanceMultiplier                       //0x0270(0x0004)
  MaterialInterface*                                                  LandscapeMaterial                                 //0x0278(0x0008)
  MaterialInterface*                                                  LandscapeHoleMaterial                             //0x0280(0x0008)
  LandscapeMaterialsOverride*                                         LandscapeMaterialsOverride                        //0x0288(0x0010)
  RuntimeVirtualTextures*                                             RuntimeVirtualTextures                            //0x0298(0x0010)
  *                                                                   VirtualTextureNumLods                             //0x02A8(0x0004)
  *                                                                   VirtualTextureLodBias                             //0x02AC(0x0004)
  UnderlyingType*                                                     VirtualTextureRenderPassType                      //0x02B0(0x0001)
  *                                                                   NegativeZBoundsExtension                          //0x02B4(0x0004)
  *                                                                   PositiveZBoundsExtension                          //0x02B8(0x0004)
  LandscapeComponents*                                                LandscapeComponents                               //0x02C0(0x0010)
  CollisionComponents*                                                CollisionComponents                               //0x02D0(0x0010)
  FoliageComponents*                                                  FoliageComponents                                 //0x02E0(0x0010)
  *                                                                   bHasLandscapeGrass                                //0x0354(0x0001)
  *                                                                   StaticLightingResolution                          //0x0358(0x0004)
  *                                                                   bCastStaticShadow                                 //0x035C(0x0001)
  *                                                                   bCastShadowAsTwoSided                             //0x035C(0x0001)
  *                                                                   bCastFarShadow                                    //0x035C(0x0001)
  *                                                                   bAffectDistanceFieldLighting                      //0x0360(0x0001)
  LightingChannels*                                                   LightingChannels                                  //0x0361(0x0001)
  *                                                                   bUseMaterialPositionOffsetInStaticLighting        //0x0364(0x0001)
  *                                                                   bRenderCustomDepth                                //0x0364(0x0001)
  *                                                                   CustomDepthStencilValue                           //0x0368(0x0004)
  *                                                                   LDMaxDrawDistance                                 //0x036C(0x0004)
  LightmassPrimitiveSettings*                                         LightmassSettings                                 //0x0370(0x0018)
  *                                                                   CollisionMipLevel                                 //0x0388(0x0004)
  *                                                                   SimpleCollisionMipLevel                           //0x038C(0x0004)
  *                                                                   CollisionThickness                                //0x0390(0x0004)
  BodyInstance*                                                       BodyInstance                                      //0x0398(0x0110)
  *                                                                   bGenerateOverlapEvents                            //0x04A8(0x0001)
  *                                                                   bBakeMaterialPositionOffsetIntoCollision          //0x04A8(0x0001)
  *                                                                   ComponentSizeQuads                                //0x04AC(0x0004)
  *                                                                   SubsectionSizeQuads                               //0x04B0(0x0004)
  *                                                                   NumSubsections                                    //0x04B4(0x0004)
  *                                                                   bUsedForNavigation                                //0x04B8(0x0001)
  *                                                                   bUseDynamicMaterialInstance                       //0x04BC(0x0001)
  UnderlyingType*                                                     NavigationGeometryGatheringMode                   //0x04BD(0x0001)
  *                                                                   bUseLandscapeForCullingInvisibleHLODVertices      //0x04BE(0x0001)
  *                                                                   bHasLayersContent                                 //0x04BF(0x0001)
  WeightmapUsageMap_Key*                                              WeightmapUsageMap                                 //0x04C0(0x0050)
  *                                                                   SetLandscapeMaterialVectorParameterValue          //0x0000(0x0229)
  Value*                                                              SetLandscapeMaterialTextureParameterValue         //0x0000(0x0229)
  *                                                                   SetLandscapeMaterialScalarParameterValue          //0x0000(0x0229)
  NewLandscapeMaterial*                                               EditorSetLandscapeMaterial                        //0x0000(0x0229)
  InSplineComponent*                                                  EditorApplySpline                                 //0x0000(0x0229)
  *                                                                   ChangeUseTessellationComponentScreenSizeFalloff   //0x0000(0x0229)
  *                                                                   ChangeTessellationComponentScreenSizeFalloff      //0x0000(0x0229)
  *                                                                   ChangeTessellationComponentScreenSize             //0x0000(0x0229)
  *                                                                   ChangeLODDistanceFactor                           //0x0000(0x0229)
  *                                                                   ChangeComponentScreenSizeToUseSubSections         //0x0000(0x0229)
};


class Landscape : public LandscapeProxy
{
};


class LandscapeBlueprintBrushBase : public Actor
{
  *                                                                   RequestLandscapeUpdate                            //0x0000(0x0229)
  InCombinedResult*                                                   Render                                            //0x0000(0x0229)
  *                                                                   Initialize                                        //0x0000(0x0229)
  OutStreamableAssets*                                                GetBlueprintRenderDependencies                    //0x0000(0x0229)
};


class LandscapeComponent : public PrimitiveComponent
{
  *                                                                   SectionBaseX                                      //0x03D8(0x0004)
  *                                                                   SectionBaseY                                      //0x03DC(0x0004)
  *                                                                   ComponentSizeQuads                                //0x03E0(0x0004)
  *                                                                   SubsectionSizeQuads                               //0x03E4(0x0004)
  *                                                                   NumSubsections                                    //0x03E8(0x0004)
  MaterialInterface*                                                  OverrideMaterial                                  //0x03F0(0x0008)
  MaterialInterface*                                                  OverrideHoleMaterial                              //0x03F8(0x0008)
  OverrideMaterials*                                                  OverrideMaterials                                 //0x0400(0x0010)
  MaterialInstances*                                                  MaterialInstances                                 //0x0410(0x0010)
  MaterialInstancesDynamic*                                           MaterialInstancesDynamic                          //0x0420(0x0010)
  LODIndexToMaterialIndex*                                            LODIndexToMaterialIndex                           //0x0430(0x0010)
  MaterialIndexToDisabledTessellationMaterial*                        MaterialIndexToDisabledTessellationMaterial       //0x0440(0x0010)
  Texture2D*                                                          XYOffsetmapTexture                                //0x0450(0x0008)
  Vector4*                                                            WeightmapScaleBias                                //0x0460(0x0010)
  *                                                                   WeightmapSubsectionOffset                         //0x0470(0x0004)
  Vector4*                                                            HeightmapScaleBias                                //0x0480(0x0010)
  Box*                                                                CachedLocalBox                                    //0x0490(0x001C)
  LandscapeHeightfieldCollisionComponent*                             CollisionComponent                                //0x04AC(0x001C)
  Texture2D*                                                          HeightmapTexture                                  //0x04C8(0x0008)
  WeightmapLayerAllocations*                                          WeightmapLayerAllocations                         //0x04D0(0x0010)
  WeightmapTextures*                                                  WeightmapTextures                                 //0x04E0(0x0010)
  Guid*                                                               MapBuildDataId                                    //0x04F0(0x0010)
  IrrelevantLights*                                                   IrrelevantLights                                  //0x0500(0x0010)
  *                                                                   CollisionMipLevel                                 //0x0510(0x0004)
  *                                                                   SimpleCollisionMipLevel                           //0x0514(0x0004)
  *                                                                   NegativeZBoundsExtension                          //0x0518(0x0004)
  *                                                                   PositiveZBoundsExtension                          //0x051C(0x0004)
  *                                                                   StaticLightingResolution                          //0x0520(0x0004)
  *                                                                   ForcedLOD                                         //0x0524(0x0004)
  *                                                                   LODBias                                           //0x0528(0x0004)
  Guid*                                                               StateId                                           //0x052C(0x0010)
  Guid*                                                               BakedTextureMaterialGuid                          //0x053C(0x0010)
  Texture2D*                                                          GIBakedBaseColorTexture                           //0x0550(0x0008)
  *                                                                   MobileBlendableLayerMask                          //0x0558(0x0001)
  MaterialInterface*                                                  MobileMaterialInterface                           //0x0560(0x0008)
  MobileMaterialInterfaces*                                           MobileMaterialInterfaces                          //0x0568(0x0010)
  MobileWeightmapTextures*                                            MobileWeightmapTextures                           //0x0578(0x0010)
  ReturnValue*                                                        GetMaterialInstanceDynamic                        //0x0000(0x0229)
  *                                                                   EditorGetPaintLayerWeightByNameAtLocation         //0x0000(0x0229)
  PaintLayer*                                                         EditorGetPaintLayerWeightAtLocation               //0x0000(0x0229)
};


class LandscapeGizmoActor : public Actor
{
};


class LandscapeGizmoActiveActor : public LandscapeGizmoActor
{
};


class LandscapeGizmoRenderComponent : public PrimitiveComponent
{
};


class LandscapeGrassType : public Object
{
  GrassVarieties*                                                     GrassVarieties                                    //0x0028(0x0010)
  *                                                                   bEnableDensityScaling                             //0x0038(0x0001)
  StaticMesh*                                                         GrassMesh                                         //0x0040(0x0008)
  *                                                                   GrassDensity                                      //0x0048(0x0004)
  *                                                                   PlacementJitter                                   //0x004C(0x0004)
  *                                                                   StartCullDistance                                 //0x0050(0x0004)
  *                                                                   EndCullDistance                                   //0x0054(0x0004)
  *                                                                   RandomRotation                                    //0x0058(0x0001)
  *                                                                   AlignToSurface                                    //0x0059(0x0001)
};


class LandscapeHeightfieldCollisionComponent : public PrimitiveComponent
{
  ComponentLayerInfos*                                                ComponentLayerInfos                               //0x03D8(0x0010)
  *                                                                   SectionBaseX                                      //0x03E8(0x0004)
  *                                                                   SectionBaseY                                      //0x03EC(0x0004)
  *                                                                   CollisionSizeQuads                                //0x03F0(0x0004)
  *                                                                   CollisionScale                                    //0x03F4(0x0004)
  *                                                                   SimpleCollisionSizeQuads                          //0x03F8(0x0004)
  CollisionQuadFlags*                                                 CollisionQuadFlags                                //0x0400(0x0010)
  Guid*                                                               HeightfieldGuid                                   //0x0410(0x0010)
  Box*                                                                CachedLocalBox                                    //0x0420(0x001C)
  LandscapeComponent*                                                 RenderComponent                                   //0x043C(0x001C)
  CookedPhysicalMaterials*                                            CookedPhysicalMaterials                           //0x0468(0x0010)
  ReturnValue*                                                        GetRenderComponent                                //0x0000(0x0229)
};


class LandscapeInfo : public Object
{
  Landscape*                                                          LandscapeActor                                    //0x0028(0x001C)
  Guid*                                                               LandscapeGuid                                     //0x0044(0x0010)
  *                                                                   ComponentSizeQuads                                //0x0054(0x0004)
  *                                                                   SubsectionSizeQuads                               //0x0058(0x0004)
  *                                                                   ComponentNumSubsections                           //0x005C(0x0004)
  Vector*                                                             DrawScale                                         //0x0060(0x000C)
  Proxies*                                                            Proxies                                           //0x0110(0x0010)
};


class LandscapeInfoMap : public Object
{
};


class LandscapeLayerInfoObject : public Object
{
  *                                                                   LayerName                                         //0x0028(0x0008)
  PhysicalMaterial*                                                   PhysMaterial                                      //0x0030(0x0008)
  *                                                                   Hardness                                          //0x0038(0x0004)
  LinearColor*                                                        LayerUsageDebugColor                              //0x003C(0x0010)
};


class MaterialInterface : public Object
{
  SubsurfaceProfile*                                                  SubsurfaceProfile                                 //0x0038(0x0008)
  LightmassMaterialInterfaceSettings*                                 LightmassSettings                                 //0x0050(0x0010)
  TextureStreamingData*                                               TextureStreamingData                              //0x0060(0x0010)
  AssetUserData*                                                      AssetUserData                                     //0x0070(0x0010)
  *                                                                   SetForceMipLevelsToBeResident                     //0x0000(0x0229)
  ReturnValue*                                                        GetPhysicalMaterial                               //0x0000(0x0229)
  ReturnValue*                                                        GetBaseMaterial                                   //0x0000(0x0229)
};


class MaterialInstance : public MaterialInterface
{
  PhysicalMaterial*                                                   PhysMaterial                                      //0x0088(0x0008)
  MaterialInterface*                                                  Parent                                            //0x0090(0x0008)
  *                                                                   bHasStaticPermutationResource                     //0x0098(0x0001)
  *                                                                   bOverrideSubsurfaceProfile                        //0x0098(0x0001)
  ScalarParameterValues*                                              ScalarParameterValues                             //0x00A0(0x0010)
  VectorParameterValues*                                              VectorParameterValues                             //0x00B0(0x0010)
  TextureParameterValues*                                             TextureParameterValues                            //0x00C0(0x0010)
  RuntimeVirtualTextureParameterValues*                               RuntimeVirtualTextureParameterValues              //0x00D0(0x0010)
  FontParameterValues*                                                FontParameterValues                               //0x00E0(0x0010)
  MaterialInstanceBasePropertyOverrides*                              BasePropertyOverrides                             //0x00F0(0x0008)
  PermutationTextureReferences*                                       PermutationTextureReferences                      //0x0108(0x0010)
  StaticParameterSet*                                                 StaticParameters                                  //0x0118(0x0040)
};


class MaterialInstanceConstant : public MaterialInstance
{
  *                                                                   K2_GetVectorParameterValue                        //0x0000(0x0229)
  ReturnValue*                                                        K2_GetTextureParameterValue                       //0x0000(0x0229)
  *                                                                   K2_GetScalarParameterValue                        //0x0000(0x0229)
};


class LandscapeMaterialInstanceConstant : public MaterialInstanceConstant
{
  *                                                                   bIsLayerThumbnail                                 //0x01D8(0x0001)
  *                                                                   bDisableTessellation                              //0x01D8(0x0001)
  *                                                                   bMobile                                           //0x01D8(0x0001)
  *                                                                   bEditorToolUsage                                  //0x01D8(0x0001)
};


class LandscapeMeshCollisionComponent : public LandscapeHeightfieldCollisionComponent
{
  Guid*                                                               MeshGuid                                          //0x04B8(0x0010)
};


class LandscapeMeshProxyActor : public Actor
{
  LandscapeMeshProxyComponent*                                        LandscapeMeshProxyComponent                       //0x0218(0x0008)
};


class LandscapeMeshProxyComponent : public StaticMeshComponent
{
  Guid*                                                               LandscapeGuid                                     //0x0468(0x0010)
  ProxyComponentBases*                                                ProxyComponentBases                               //0x0478(0x0010)
  *                                                                   ProxyLOD                                          //0x0488(0x0001)
};


class LandscapeSettings : public DeveloperSettings
{
  *                                                                   MaxNumberOfLayers                                 //0x0038(0x0004)
};


class LandscapeSplinesComponent : public PrimitiveComponent
{
  ControlPoints*                                                      ControlPoints                                     //0x03D8(0x0010)
  Segments*                                                           Segments                                          //0x03E8(0x0010)
  CookedForeignMeshComponents*                                        CookedForeignMeshComponents                       //0x03F8(0x0010)
  ReturnValue*                                                        GetSplineMeshComponents                           //0x0000(0x0229)
};


class LandscapeSplineControlPoint : public Object
{
  Vector*                                                             Location                                          //0x0028(0x000C)
  Rotator*                                                            Rotation                                          //0x0034(0x000C)
  *                                                                   Width                                             //0x0040(0x0004)
  *                                                                   LayerWidthRatio                                   //0x0044(0x0004)
  *                                                                   SideFalloff                                       //0x0048(0x0004)
  *                                                                   LeftSideFalloffFactor                             //0x004C(0x0004)
  *                                                                   RightSideFalloffFactor                            //0x0050(0x0004)
  *                                                                   LeftSideLayerFalloffFactor                        //0x0054(0x0004)
  *                                                                   RightSideLayerFalloffFactor                       //0x0058(0x0004)
  *                                                                   EndFalloff                                        //0x005C(0x0004)
  ConnectedSegments*                                                  ConnectedSegments                                 //0x0060(0x0010)
  Points*                                                             Points                                            //0x0070(0x0010)
  Box*                                                                Bounds                                            //0x0080(0x001C)
  ControlPointMeshComponent*                                          LocalMeshComponent                                //0x00A0(0x0008)
};


class LandscapeSplineSegment : public Object
{
  LandscapeSplineSegmentConnection*                                   Connections                                       //0x0028(0x0018)
  InterpCurveVector*                                                  SplineInfo                                        //0x0058(0x0018)
  Points*                                                             Points                                            //0x0070(0x0010)
  Box*                                                                Bounds                                            //0x0080(0x001C)
  LocalMeshComponents*                                                LocalMeshComponents                               //0x00A0(0x0010)
};


class LandscapeStreamingProxy : public LandscapeProxy
{
  Landscape*                                                          LandscapeActor                                    //0x0510(0x001C)
};


class LandscapeWeightmapUsage : public Object
{
  LandscapeComponent*                                                 ChannelUsage                                      //0x0028(0x0008)
  Guid*                                                               LayerGuid                                         //0x0048(0x0010)
};


class MaterialExpressionCustomOutput : public MaterialExpression
{
};


class MaterialExpressionLandscapeGrassOutput : public MaterialExpressionCustomOutput
{
  GrassTypes*                                                         GrassTypes                                        //0x0040(0x0010)
};


class MaterialExpressionLandscapeLayerBlend : public MaterialExpression
{
  Layers*                                                             Layers                                            //0x0040(0x0010)
  Guid*                                                               ExpressionGUID                                    //0x0050(0x0010)
};


class MaterialExpressionLandscapeLayerCoords : public MaterialExpression
{
  ETerrainCoordMappingType*                                           MappingType                                       //0x0040(0x0001)
  ELandscapeCustomizedCoordType*                                      CustomUVType                                      //0x0041(0x0001)
  *                                                                   MappingScale                                      //0x0044(0x0004)
  *                                                                   MappingRotation                                   //0x0048(0x0004)
  *                                                                   MappingPanU                                       //0x004C(0x0004)
  *                                                                   MappingPanV                                       //0x0050(0x0004)
};


class MaterialExpressionLandscapeLayerSample : public MaterialExpression
{
  *                                                                   ParameterName                                     //0x0040(0x0008)
  *                                                                   PreviewWeight                                     //0x0048(0x0004)
  Guid*                                                               ExpressionGUID                                    //0x004C(0x0010)
};


class MaterialExpressionLandscapeLayerSwitch : public MaterialExpression
{
  ExpressionInput*                                                    LayerUsed                                         //0x0040(0x000C)
  ExpressionInput*                                                    LayerNotUsed                                      //0x0054(0x000C)
  *                                                                   ParameterName                                     //0x0068(0x0008)
  *                                                                   PreviewUsed                                       //0x0070(0x0001)
  Guid*                                                               ExpressionGUID                                    //0x0074(0x0010)
};


class MaterialExpressionLandscapeLayerWeight : public MaterialExpression
{
  ExpressionInput*                                                    Base                                              //0x0040(0x000C)
  ExpressionInput*                                                    Layer                                             //0x0054(0x000C)
  *                                                                   ParameterName                                     //0x0068(0x0008)
  *                                                                   PreviewWeight                                     //0x0070(0x0004)
  Vector*                                                             ConstBase                                         //0x0074(0x000C)
  Guid*                                                               ExpressionGUID                                    //0x0080(0x0010)
};


class MaterialExpressionLandscapeVisibilityMask : public MaterialExpression
{
  Guid*                                                               ExpressionGUID                                    //0x0040(0x0010)
};


class EngineCustomTimeStep : public Object
{
};


class FixedFrameRateCustomTimeStep : public EngineCustomTimeStep
{
  FrameRate*                                                          FixedFrameRate                                    //0x0028(0x0008)
};


class TimeManagementBlueprintLibrary : public BlueprintFunctionLibrary
{
  *                                                                   TransformTime                                     //0x0000(0x0229)
  *                                                                   Subtract_FrameNumberInteger                       //0x0000(0x0229)
  *                                                                   Subtract_FrameNumberFrameNumber                   //0x0000(0x0229)
  *                                                                   SnapFrameTimeToRate                               //0x0000(0x0229)
  *                                                                   Multiply_SecondsFrameRate                         //0x0000(0x0229)
  *                                                                   Multiply_FrameNumberInteger                       //0x0000(0x0229)
  *                                                                   IsValid_MultipleOf                                //0x0000(0x0229)
  *                                                                   IsValid_Framerate                                 //0x0000(0x0229)
  *                                                                   GetTimecodeFrameRate                              //0x0000(0x0229)
  *                                                                   GetTimecode                                       //0x0000(0x0229)
  *                                                                   Divide_FrameNumberInteger                         //0x0000(0x0229)
  *                                                                   Conv_TimecodeToString                             //0x0000(0x0229)
  *                                                                   Conv_QualifiedFrameTimeToSeconds                  //0x0000(0x0229)
  *                                                                   Conv_FrameRateToSeconds                           //0x0000(0x0229)
  *                                                                   Conv_FrameNumberToInteger                         //0x0000(0x0229)
  *                                                                   Add_FrameNumberInteger                            //0x0000(0x0229)
  *                                                                   Add_FrameNumberFrameNumber                        //0x0000(0x0229)
};


class TimeSynchronizationSource : public Object
{
  *                                                                   bUseForSynchronization                            //0x0028(0x0001)
  *                                                                   FrameOffset                                       //0x002C(0x0004)
};


class MovieScenePlaybackClient : public Interface
{
};


class MovieScene : public MovieSceneSignedObject
{
  Spawnables*                                                         Spawnables                                        //0x0050(0x0010)
  Possessables*                                                       Possessables                                      //0x0060(0x0010)
  ObjectBindings*                                                     ObjectBindings                                    //0x0070(0x0010)
  BindingGroups_Key*                                                  BindingGroups                                     //0x0080(0x0050)
  MasterTracks*                                                       MasterTracks                                      //0x00D0(0x0010)
  MovieSceneTrack*                                                    CameraCutTrack                                    //0x00E0(0x0008)
  MovieSceneFrameRange*                                               SelectionRange                                    //0x00E8(0x0010)
  MovieSceneFrameRange*                                               PlaybackRange                                     //0x00F8(0x0010)
  FrameRate*                                                          TickResolution                                    //0x0108(0x0008)
  FrameRate*                                                          DisplayRate                                       //0x0110(0x0008)
  UnderlyingType*                                                     EvaluationType                                    //0x0118(0x0001)
  UnderlyingType*                                                     ClockSource                                       //0x0119(0x0001)
  MarkedFrames*                                                       MarkedFrames                                      //0x0120(0x0010)
};


class MovieSceneBindingOverrides : public Object
{
  BindingData*                                                        BindingData                                       //0x0028(0x0010)
};


class MovieSceneBindingOwnerInterface : public Interface
{
};


class MovieSceneBuiltInEasingFunction : public Object
{
  UnderlyingType*                                                     Type                                              //0x0030(0x0001)
};


class MovieSceneEasingExternalCurve : public Object
{
  CurveFloat*                                                         Curve                                             //0x0030(0x0008)
};


class MovieSceneEasingFunction : public Interface
{
  *                                                                   OnEvaluate                                        //0x0000(0x0229)
};


class MovieSceneFolder : public Object
{
  *                                                                   FolderName                                        //0x0028(0x0008)
  ChildFolders*                                                       ChildFolders                                      //0x0030(0x0010)
  ChildMasterTracks*                                                  ChildMasterTracks                                 //0x0040(0x0010)
  ChildObjectBindingStrings*                                          ChildObjectBindingStrings                         //0x0050(0x0010)
};


class MovieSceneKeyProxy : public Interface
{
};


class MovieSceneSubSection : public MovieSceneSection
{
  MovieSceneSectionParameters*                                        Parameters                                        //0x00E0(0x0018)
  *                                                                   StartOffset                                       //0x00F8(0x0004)
  *                                                                   TimeScale                                         //0x00FC(0x0004)
  *                                                                   PrerollTime                                       //0x0100(0x0004)
  MovieSceneSequence*                                                 SubSequence                                       //0x0108(0x0008)
  Actor*                                                              ActorToRecord                                     //0x0110(0x001C)
  *                                                                   TargetSequenceName                                //0x0130(0x0010)
  DirectoryPath*                                                      TargetPathToRecordTo                              //0x0140(0x0010)
  Sequence*                                                           SetSequence                                       //0x0000(0x0229)
  ReturnValue*                                                        GetSequence                                       //0x0000(0x0229)
};


class MovieSceneSubTrack : public MovieSceneNameableTrack
{
  Sections*                                                           Sections                                          //0x0058(0x0010)
};


class TestMovieSceneTrack : public MovieSceneTrack
{
  *                                                                   bHighPassFilter                                   //0x0058(0x0001)
  SectionArray*                                                       SectionArray                                      //0x0060(0x0010)
};


class TestMovieSceneSection : public MovieSceneSection
{
};


class TestMovieSceneSequence : public MovieSceneSequence
{
  MovieScene*                                                         MovieScene                                        //0x0348(0x0008)
};


class AnimationDataSourceRegistry : public Object
{
  DataSources_Key*                                                    DataSources                                       //0x0028(0x0050)
};


class AnimCustomInstance : public AnimInstance
{
};


class AnimNotify_PlayMontageNotify : public AnimNotify
{
  *                                                                   NotifyName                                        //0x0038(0x0008)
};


class AnimNotify_PlayMontageNotifyWindow : public AnimNotifyState
{
  *                                                                   NotifyName                                        //0x0030(0x0008)
};


class AnimSequencerInstance : public AnimCustomInstance
{
};


class KismetAnimationLibrary : public BlueprintFunctionLibrary
{
  *                                                                   K2_TwoBoneIK                                      //0x0000(0x0229)
  *                                                                   K2_StartProfilingTimer                            //0x0000(0x0229)
  *                                                                   K2_MakePerlinNoiseVectorAndRemap                  //0x0000(0x0229)
  *                                                                   K2_MakePerlinNoiseAndRemap                        //0x0000(0x0229)
  *                                                                   K2_LookAt                                         //0x0000(0x0229)
  *                                                                   K2_EndProfilingTimer                              //0x0000(0x0229)
  Component*                                                          K2_DistanceBetweenTwoSocketsAndMapRange           //0x0000(0x0229)
  Component*                                                          K2_DirectionBetweenSockets                        //0x0000(0x0229)
  Component*                                                          K2_CalculateVelocityFromSockets                   //0x0000(0x0229)
  *                                                                   K2_CalculateVelocityFromPositionHistory           //0x0000(0x0229)
};


class PlayMontageCallbackProxy : public Object
{
  OnMontagePlayDelegate__DelegateSignature*                           OnCompleted                                       //0x0028(0x0010)
  OnMontagePlayDelegate__DelegateSignature*                           OnBlendOut                                        //0x0038(0x0010)
  OnMontagePlayDelegate__DelegateSignature*                           OnInterrupted                                     //0x0048(0x0010)
  OnMontagePlayDelegate__DelegateSignature*                           OnNotifyBegin                                     //0x0058(0x0010)
  OnMontagePlayDelegate__DelegateSignature*                           OnNotifyEnd                                       //0x0068(0x0010)
  *                                                                   OnNotifyEndReceived                               //0x0000(0x0229)
  *                                                                   OnNotifyBeginReceived                             //0x0000(0x0229)
  Montage*                                                            OnMontageEnded                                    //0x0000(0x0229)
  Montage*                                                            OnMontageBlendingOut                              //0x0000(0x0229)
  InSkeletalMeshComponent*                                            CreateProxyObjectForPlayMontage                   //0x0000(0x0229)
};


class MovieSceneTransformOrigin : public Interface
{
  *                                                                   BP_GetTransformOrigin                             //0x0000(0x0229)
};


class MovieScene3DConstraintSection : public MovieSceneSection
{
  Guid*                                                               ConstraintId                                      //0x00E0(0x0010)
  MovieSceneObjectBindingID*                                          ConstraintBindingID                               //0x00F0(0x0018)
  *                                                                   SetConstraintBindingID                            //0x0000(0x0229)
  *                                                                   GetConstraintBindingID                            //0x0000(0x0229)
};


class MovieScene3DAttachSection : public MovieScene3DConstraintSection
{
  *                                                                   AttachSocketName                                  //0x0108(0x0008)
  *                                                                   AttachComponentName                               //0x0110(0x0008)
  UnderlyingType*                                                     AttachmentLocationRule                            //0x0118(0x0001)
  UnderlyingType*                                                     AttachmentRotationRule                            //0x0119(0x0001)
  UnderlyingType*                                                     AttachmentScaleRule                               //0x011A(0x0001)
  UnderlyingType*                                                     DetachmentLocationRule                            //0x011B(0x0001)
  UnderlyingType*                                                     DetachmentRotationRule                            //0x011C(0x0001)
  UnderlyingType*                                                     DetachmentScaleRule                               //0x011D(0x0001)
};


class MovieScene3DConstraintTrack : public MovieSceneTrack
{
  ConstraintSections*                                                 ConstraintSections                                //0x0058(0x0010)
};


class MovieScene3DAttachTrack : public MovieScene3DConstraintTrack
{
};


class MovieScene3DPathSection : public MovieScene3DConstraintSection
{
  MovieSceneFloatChannel*                                             TimingCurve                                       //0x0108(0x00A0)
  UnderlyingType*                                                     FrontAxisEnum                                     //0x01A8(0x0001)
  UnderlyingType*                                                     UpAxisEnum                                        //0x01A9(0x0001)
  *                                                                   bFollow                                           //0x01AC(0x0001)
  *                                                                   bReverse                                          //0x01AC(0x0001)
  *                                                                   bForceUpright                                     //0x01AC(0x0001)
};


class MovieScene3DPathTrack : public MovieScene3DConstraintTrack
{
};


class MovieScene3DTransformSection : public MovieSceneSection
{
  MovieSceneTransformMask*                                            TransformMask                                     //0x00E0(0x0004)
  MovieSceneFloatChannel*                                             Translation                                       //0x00E8(0x00A0)
  MovieSceneFloatChannel*                                             Rotation                                          //0x02C8(0x00A0)
  MovieSceneFloatChannel*                                             Scale                                             //0x04A8(0x00A0)
  MovieSceneFloatChannel*                                             ManualWeight                                      //0x0688(0x00A0)
  *                                                                   bUseQuaternionInterpolation                       //0x072C(0x0001)
};


class MovieScenePropertyTrack : public MovieSceneNameableTrack
{
  MovieSceneSection*                                                  SectionToKey                                      //0x0058(0x0008)
  *                                                                   PropertyName                                      //0x0060(0x0008)
  *                                                                   PropertyPath                                      //0x0068(0x0010)
  Sections*                                                           Sections                                          //0x0078(0x0010)
};


class MovieScene3DTransformTrack : public MovieScenePropertyTrack
{
};


class MovieSceneActorReferenceSection : public MovieSceneSection
{
  MovieSceneActorReferenceData*                                       ActorReferenceData                                //0x00E0(0x00A0)
  IntegralCurve*                                                      ActorGuidIndexCurve                               //0x0180(0x0080)
  ActorGuidStrings*                                                   ActorGuidStrings                                  //0x0200(0x0010)
};


class MovieSceneActorReferenceTrack : public MovieScenePropertyTrack
{
};


class MovieSceneAudioSection : public MovieSceneSection
{
  SoundBase*                                                          Sound                                             //0x00E0(0x0008)
  FrameNumber*                                                        StartFrameOffset                                  //0x00E8(0x0004)
  *                                                                   StartOffset                                       //0x00EC(0x0004)
  *                                                                   AudioStartTime                                    //0x00F0(0x0004)
  *                                                                   AudioDilationFactor                               //0x00F4(0x0004)
  *                                                                   AudioVolume                                       //0x00F8(0x0004)
  MovieSceneFloatChannel*                                             SoundVolume                                       //0x0100(0x00A0)
  MovieSceneFloatChannel*                                             PitchMultiplier                                   //0x01A0(0x00A0)
  *                                                                   bSuppressSubtitles                                //0x0240(0x0001)
  *                                                                   bOverrideAttenuation                              //0x0241(0x0001)
  SoundAttenuation*                                                   AttenuationSettings                               //0x0248(0x0008)
  OnQueueSubtitles__DelegateSignature*                                OnQueueSubtitles                                  //0x0250(0x0010)
  OnAudioFinished__DelegateSignature*                                 OnAudioFinished                                   //0x0260(0x0010)
  OnAudioPlaybackPercent__DelegateSignature*                          OnAudioPlaybackPercent                            //0x0270(0x0010)
  *                                                                   SetStartOffset                                    //0x0000(0x0229)
  InSound*                                                            SetSound                                          //0x0000(0x0229)
  *                                                                   GetStartOffset                                    //0x0000(0x0229)
  ReturnValue*                                                        GetSound                                          //0x0000(0x0229)
};


class MovieSceneAudioTrack : public MovieSceneNameableTrack
{
  AudioSections*                                                      AudioSections                                     //0x0058(0x0010)
};


class MovieSceneBoolSection : public MovieSceneSection
{
  *                                                                   DefaultValue                                      //0x00E0(0x0001)
  MovieSceneBoolChannel*                                              BoolCurve                                         //0x00E8(0x0090)
};


class MovieSceneBoolTrack : public MovieScenePropertyTrack
{
};


class MovieSceneByteSection : public MovieSceneSection
{
  MovieSceneByteChannel*                                              ByteCurve                                         //0x00E0(0x0098)
};


class MovieSceneByteTrack : public MovieScenePropertyTrack
{
  Enum*                                                               Enum                                              //0x0088(0x0008)
};


class MovieSceneCameraAnimSection : public MovieSceneSection
{
  MovieSceneCameraAnimSectionData*                                    AnimData                                          //0x00E0(0x0020)
  CameraAnim*                                                         CameraAnim                                        //0x0100(0x0008)
  *                                                                   PlayRate                                          //0x0108(0x0004)
  *                                                                   PlayScale                                         //0x010C(0x0004)
  *                                                                   BlendInTime                                       //0x0110(0x0004)
  *                                                                   BlendOutTime                                      //0x0114(0x0004)
  *                                                                   bLooping                                          //0x0118(0x0001)
};


class MovieSceneCameraAnimTrack : public MovieSceneNameableTrack
{
  CameraAnimSections*                                                 CameraAnimSections                                //0x0058(0x0010)
};


class MovieSceneCameraCutSection : public MovieSceneSection
{
  Guid*                                                               CameraGuid                                        //0x00E0(0x0010)
  MovieSceneObjectBindingID*                                          CameraBindingID                                   //0x00F0(0x0018)
  *                                                                   SetCameraBindingID                                //0x0000(0x0229)
  *                                                                   GetCameraBindingID                                //0x0000(0x0229)
};


class MovieSceneCameraCutTrack : public MovieSceneNameableTrack
{
  Sections*                                                           Sections                                          //0x0058(0x0010)
};


class MovieSceneCameraShakeSection : public MovieSceneSection
{
  MovieSceneCameraShakeSectionData*                                   ShakeData                                         //0x00E0(0x0020)
  Class*                                                              ShakeClass                                        //0x0100(0x0008)
  *                                                                   PlayScale                                         //0x0108(0x0004)
  ECameraAnimPlaySpace*                                               PlaySpace                                         //0x010C(0x0001)
  Rotator*                                                            UserDefinedPlaySpace                              //0x0110(0x000C)
};


class MovieSceneCameraShakeTrack : public MovieSceneNameableTrack
{
  CameraShakeSections*                                                CameraShakeSections                               //0x0058(0x0010)
};


class MovieSceneCinematicShotSection : public MovieSceneSubSection
{
  *                                                                   ShotDisplayName                                   //0x0150(0x0010)
  *                                                                   DisplayName                                       //0x0160(0x0018)
  *                                                                   SetShotDisplayName                                //0x0000(0x0229)
  *                                                                   GetShotDisplayName                                //0x0000(0x0229)
};


class MovieSceneCinematicShotTrack : public MovieSceneSubTrack
{
};


class MovieSceneColorSection : public MovieSceneSection
{
  MovieSceneFloatChannel*                                             RedCurve                                          //0x00E0(0x00A0)
  MovieSceneFloatChannel*                                             GreenCurve                                        //0x0180(0x00A0)
  MovieSceneFloatChannel*                                             BlueCurve                                         //0x0220(0x00A0)
  MovieSceneFloatChannel*                                             AlphaCurve                                        //0x02C0(0x00A0)
};


class MovieSceneColorTrack : public MovieScenePropertyTrack
{
  *                                                                   bIsSlateColor                                     //0x0088(0x0001)
};


class MovieSceneEnumSection : public MovieSceneSection
{
  MovieSceneByteChannel*                                              EnumCurve                                         //0x00E0(0x0098)
};


class MovieSceneEnumTrack : public MovieScenePropertyTrack
{
  Enum*                                                               Enum                                              //0x0088(0x0008)
};


class MovieSceneEulerTransformTrack : public MovieScenePropertyTrack
{
};


class MovieSceneEventSectionBase : public MovieSceneSection
{
};


class MovieSceneEventRepeaterSection : public MovieSceneEventSectionBase
{
  MovieSceneEvent*                                                    Event                                             //0x00E0(0x0010)
};


class MovieSceneEventSection : public MovieSceneSection
{
  NameCurve*                                                          Events                                            //0x00E0(0x0078)
  MovieSceneEventSectionData*                                         EventData                                         //0x0158(0x0088)
};


class MovieSceneEventTrack : public MovieSceneNameableTrack
{
  *                                                                   bFireEventsWhenForwards                           //0x0058(0x0001)
  *                                                                   bFireEventsWhenBackwards                          //0x0058(0x0001)
  UnderlyingType*                                                     EventPosition                                     //0x005C(0x0001)
  EventReceivers*                                                     EventReceivers                                    //0x0060(0x0010)
  Sections*                                                           Sections                                          //0x0070(0x0010)
};


class MovieSceneEventTriggerSection : public MovieSceneEventSectionBase
{
  MovieSceneEventChannel*                                             EventChannel                                      //0x00E0(0x0088)
};


class MovieSceneFloatSection : public MovieSceneSection
{
  MovieSceneFloatChannel*                                             FloatCurve                                        //0x00E0(0x00A0)
};


class MovieSceneFadeSection : public MovieSceneFloatSection
{
  LinearColor*                                                        FadeColor                                         //0x0180(0x0010)
  *                                                                   bFadeAudio                                        //0x0190(0x0001)
};


class MovieSceneFloatTrack : public MovieScenePropertyTrack
{
};


class MovieSceneFadeTrack : public MovieSceneFloatTrack
{
};


class MovieSceneIntegerSection : public MovieSceneSection
{
  MovieSceneIntegerChannel*                                           IntegerCurve                                      //0x00E0(0x0090)
};


class MovieSceneIntegerTrack : public MovieScenePropertyTrack
{
};


class MovieSceneLevelVisibilitySection : public MovieSceneSection
{
  UnderlyingType*                                                     Visibility                                        //0x00E0(0x0001)
  LevelNames*                                                         LevelNames                                        //0x00E8(0x0010)
  *                                                                   SetVisibility                                     //0x0000(0x0229)
  *                                                                   SetLevelNames                                     //0x0000(0x0229)
  *                                                                   GetVisibility                                     //0x0000(0x0229)
  *                                                                   GetLevelNames                                     //0x0000(0x0229)
};


class MovieSceneLevelVisibilityTrack : public MovieSceneNameableTrack
{
  Sections*                                                           Sections                                          //0x0058(0x0010)
};


class MovieSceneMaterialTrack : public MovieSceneNameableTrack
{
  Sections*                                                           Sections                                          //0x0058(0x0010)
};


class MovieSceneMaterialParameterCollectionTrack : public MovieSceneMaterialTrack
{
  MaterialParameterCollection*                                        MPC                                               //0x0068(0x0008)
};


class MovieSceneComponentMaterialTrack : public MovieSceneMaterialTrack
{
  *                                                                   MaterialIndex                                     //0x0068(0x0004)
};


class MovieSceneObjectPropertySection : public MovieSceneSection
{
  MovieSceneObjectPathChannel*                                        ObjectChannel                                     //0x00E0(0x00C0)
};


class MovieSceneObjectPropertyTrack : public MovieScenePropertyTrack
{
  Class*                                                              PropertyClass                                     //0x0088(0x0008)
};


class MovieSceneParameterSection : public MovieSceneSection
{
  ScalarParameterNamesAndCurves*                                      ScalarParameterNamesAndCurves                     //0x00E0(0x0010)
  VectorParameterNamesAndCurves*                                      VectorParameterNamesAndCurves                     //0x00F0(0x0010)
  ColorParameterNamesAndCurves*                                       ColorParameterNamesAndCurves                      //0x0100(0x0010)
  TransformParameterNamesAndCurves*                                   TransformParameterNamesAndCurves                  //0x0110(0x0010)
};


class MovieSceneParticleParameterTrack : public MovieSceneNameableTrack
{
  Sections*                                                           Sections                                          //0x0058(0x0010)
};


class MovieSceneParticleSection : public MovieSceneSection
{
  MovieSceneParticleChannel*                                          ParticleKeys                                      //0x00E0(0x0098)
};


class MovieSceneParticleTrack : public MovieSceneNameableTrack
{
  ParticleSections*                                                   ParticleSections                                  //0x0058(0x0010)
};


class MovieScenePrimitiveMaterialSection : public MovieSceneSection
{
  MovieSceneObjectPathChannel*                                        MaterialChannel                                   //0x00E0(0x00C0)
};


class MovieScenePrimitiveMaterialTrack : public MovieScenePropertyTrack
{
  *                                                                   MaterialIndex                                     //0x0088(0x0004)
};


class MovieSceneSkeletalAnimationSection : public MovieSceneSection
{
  MovieSceneSkeletalAnimationParams*                                  Params                                            //0x00E0(0x00D8)
  AnimSequence*                                                       AnimSequence                                      //0x01B8(0x0008)
  AnimSequenceBase*                                                   Animation                                         //0x01C0(0x0008)
  *                                                                   StartOffset                                       //0x01C8(0x0004)
  *                                                                   EndOffset                                         //0x01CC(0x0004)
  *                                                                   PlayRate                                          //0x01D0(0x0004)
  *                                                                   bReverse                                          //0x01D4(0x0001)
  *                                                                   SlotName                                          //0x01D8(0x0008)
};


class MovieSceneSkeletalAnimationTrack : public MovieSceneNameableTrack
{
  AnimationSections*                                                  AnimationSections                                 //0x0058(0x0010)
  *                                                                   bUseLegacySectionIndexBlend                       //0x0068(0x0001)
};


class MovieSceneSlomoSection : public MovieSceneFloatSection
{
};


class MovieSceneSlomoTrack : public MovieSceneFloatTrack
{
};


class MovieSceneSpawnSection : public MovieSceneBoolSection
{
};


class MovieSceneSpawnTrack : public MovieSceneTrack
{
  Sections*                                                           Sections                                          //0x0058(0x0010)
  Guid*                                                               ObjectGuid                                        //0x0068(0x0010)
};


class MovieSceneStringSection : public MovieSceneSection
{
  MovieSceneStringChannel*                                            StringCurve                                       //0x00E0(0x00A0)
};


class MovieSceneStringTrack : public MovieScenePropertyTrack
{
};


class MovieSceneTransformTrack : public MovieScenePropertyTrack
{
};


class MovieSceneVectorSection : public MovieSceneSection
{
  MovieSceneFloatChannel*                                             Curves                                            //0x00E0(0x00A0)
  *                                                                   ChannelsUsed                                      //0x0360(0x0004)
};


class MovieSceneVectorTrack : public MovieScenePropertyTrack
{
  *                                                                   NumChannelsUsed                                   //0x0088(0x0004)
};


class MovieSceneVisibilityTrack : public MovieSceneBoolTrack
{
};


class AsyncTaskDownloadImage : public BlueprintAsyncActionBase
{
  DownloadImageDelegate__DelegateSignature*                           OnSuccess                                         //0x0030(0x0010)
  DownloadImageDelegate__DelegateSignature*                           OnFail                                            //0x0040(0x0010)
  ReturnValue*                                                        DownloadImage                                     //0x0000(0x0229)
};


class PanelWidget : public Widget
{
  Slots*                                                              Slots                                             //0x0108(0x0010)
  *                                                                   RemoveChildAt                                     //0x0000(0x0229)
  Content*                                                            RemoveChild                                       //0x0000(0x0229)
  Content*                                                            HasChild                                          //0x0000(0x0229)
  *                                                                   HasAnyChildren                                    //0x0000(0x0229)
  *                                                                   GetChildrenCount                                  //0x0000(0x0229)
  Content*                                                            GetChildIndex                                     //0x0000(0x0229)
  ReturnValue*                                                        GetChildAt                                        //0x0000(0x0229)
  ReturnValue*                                                        GetAllChildren                                    //0x0000(0x0229)
  *                                                                   ClearChildren                                     //0x0000(0x0229)
  Content*                                                            AddChild                                          //0x0000(0x0229)
};


class ContentWidget : public PanelWidget
{
  Content*                                                            SetContent                                        //0x0000(0x0229)
  ReturnValue*                                                        GetContentSlot                                    //0x0000(0x0229)
  ReturnValue*                                                        GetContent                                        //0x0000(0x0229)
};


class BackgroundBlur : public ContentWidget
{
  Margin*                                                             Padding                                           //0x0120(0x0010)
  EHorizontalAlignment*                                               HorizontalAlignment                               //0x0130(0x0001)
  EVerticalAlignment*                                                 VerticalAlignment                                 //0x0131(0x0001)
  *                                                                   bApplyAlphaToBlur                                 //0x0132(0x0001)
  *                                                                   BlurStrength                                      //0x0134(0x0004)
  *                                                                   bOverrideAutoRadiusCalculation                    //0x0138(0x0001)
  *                                                                   BlurRadius                                        //0x013C(0x0004)
  SlateBrush*                                                         LowQualityFallbackBrush                           //0x0140(0x0088)
  *                                                                   SetVerticalAlignment                              //0x0000(0x0229)
  *                                                                   SetPadding                                        //0x0000(0x0229)
  InBrush*                                                            SetLowQualityFallbackBrush                        //0x0000(0x0229)
  *                                                                   SetHorizontalAlignment                            //0x0000(0x0229)
  *                                                                   SetBlurStrength                                   //0x0000(0x0229)
  *                                                                   SetBlurRadius                                     //0x0000(0x0229)
  *                                                                   SetApplyAlphaToBlur                               //0x0000(0x0229)
};


class PanelSlot : public Visual
{
  PanelWidget*                                                        Parent                                            //0x0028(0x0008)
  Widget*                                                             Content                                           //0x0030(0x0008)
};


class BackgroundBlurSlot : public PanelSlot
{
  Margin*                                                             Padding                                           //0x0038(0x0010)
  EHorizontalAlignment*                                               HorizontalAlignment                               //0x0048(0x0001)
  EVerticalAlignment*                                                 VerticalAlignment                                 //0x0049(0x0001)
  *                                                                   SetVerticalAlignment                              //0x0000(0x0229)
  *                                                                   SetPadding                                        //0x0000(0x0229)
  *                                                                   SetHorizontalAlignment                            //0x0000(0x0229)
};


class PropertyBinding : public Object
{
  Object*                                                             SourceObject                                      //0x0028(0x0008)
  DynamicPropertyPath*                                                SourcePath                                        //0x0030(0x0028)
  *                                                                   DestinationProperty                               //0x0058(0x0008)
};


class BoolBinding : public PropertyBinding
{
  *                                                                   GetValue                                          //0x0000(0x0229)
};


class Border : public ContentWidget
{
  EHorizontalAlignment*                                               HorizontalAlignment                               //0x0120(0x0001)
  EVerticalAlignment*                                                 VerticalAlignment                                 //0x0121(0x0001)
  *                                                                   bShowEffectWhenDisabled                           //0x0122(0x0001)
  LinearColor*                                                        ContentColorAndOpacity                            //0x0124(0x0010)
  GetLinearColor__DelegateSignature*                                  ContentColorAndOpacityDelegate                    //0x0134(0x0010)
  Margin*                                                             Padding                                           //0x0144(0x0010)
  SlateBrush*                                                         Background                                        //0x0158(0x0088)
  GetSlateBrush__DelegateSignature*                                   BackgroundDelegate                                //0x01E0(0x0010)
  LinearColor*                                                        BrushColor                                        //0x01F0(0x0010)
  GetLinearColor__DelegateSignature*                                  BrushColorDelegate                                //0x0200(0x0010)
  Vector2D*                                                           DesiredSizeScale                                  //0x0210(0x0008)
  *                                                                   bFlipForRightToLeftFlowDirection                  //0x0218(0x0001)
  OnPointerEvent__DelegateSignature*                                  OnMouseButtonDownEvent                            //0x021C(0x0010)
  OnPointerEvent__DelegateSignature*                                  OnMouseButtonUpEvent                              //0x022C(0x0010)
  OnPointerEvent__DelegateSignature*                                  OnMouseMoveEvent                                  //0x023C(0x0010)
  OnPointerEvent__DelegateSignature*                                  OnMouseDoubleClickEvent                           //0x024C(0x0010)
  *                                                                   SetVerticalAlignment                              //0x0000(0x0229)
  *                                                                   SetPadding                                        //0x0000(0x0229)
  *                                                                   SetHorizontalAlignment                            //0x0000(0x0229)
  *                                                                   SetDesiredSizeScale                               //0x0000(0x0229)
  *                                                                   SetContentColorAndOpacity                         //0x0000(0x0229)
  Texture*                                                            SetBrushFromTexture                               //0x0000(0x0229)
  Material*                                                           SetBrushFromMaterial                              //0x0000(0x0229)
  Asset*                                                              SetBrushFromAsset                                 //0x0000(0x0229)
  *                                                                   SetBrushColor                                     //0x0000(0x0229)
  InBrush*                                                            SetBrush                                          //0x0000(0x0229)
  ReturnValue*                                                        GetDynamicMaterial                                //0x0000(0x0229)
};


class BorderSlot : public PanelSlot
{
  Margin*                                                             Padding                                           //0x0038(0x0010)
  EHorizontalAlignment*                                               HorizontalAlignment                               //0x0048(0x0001)
  EVerticalAlignment*                                                 VerticalAlignment                                 //0x0049(0x0001)
  *                                                                   SetVerticalAlignment                              //0x0000(0x0229)
  *                                                                   SetPadding                                        //0x0000(0x0229)
  *                                                                   SetHorizontalAlignment                            //0x0000(0x0229)
};


class BrushBinding : public PropertyBinding
{
  ReturnValue*                                                        GetValue                                          //0x0000(0x0229)
};


class Button : public ContentWidget
{
  SlateWidgetStyleAsset*                                              Style                                             //0x0120(0x0008)
  ButtonStyle*                                                        WidgetStyle                                       //0x0128(0x0278)
  LinearColor*                                                        ColorAndOpacity                                   //0x03A0(0x0010)
  LinearColor*                                                        BackgroundColor                                   //0x03B0(0x0010)
  EButtonClickMethod*                                                 ClickMethod                                       //0x03C0(0x0001)
  EButtonTouchMethod*                                                 TouchMethod                                       //0x03C1(0x0001)
  EButtonPressMethod*                                                 PressMethod                                       //0x03C2(0x0001)
  *                                                                   IsFocusable                                       //0x03C3(0x0001)
  OnButtonClickedEvent__DelegateSignature*                            OnClicked                                         //0x03C8(0x0010)
  OnButtonPressedEvent__DelegateSignature*                            OnPressed                                         //0x03D8(0x0010)
  OnButtonReleasedEvent__DelegateSignature*                           OnReleased                                        //0x03E8(0x0010)
  OnButtonHoverEvent__DelegateSignature*                              OnHovered                                         //0x03F8(0x0010)
  OnButtonHoverEvent__DelegateSignature*                              OnUnhovered                                       //0x0408(0x0010)
  *                                                                   SetTouchMethod                                    //0x0000(0x0229)
  InStyle*                                                            SetStyle                                          //0x0000(0x0229)
  *                                                                   SetPressMethod                                    //0x0000(0x0229)
  *                                                                   SetColorAndOpacity                                //0x0000(0x0229)
  *                                                                   SetClickMethod                                    //0x0000(0x0229)
  *                                                                   SetBackgroundColor                                //0x0000(0x0229)
  *                                                                   IsPressed                                         //0x0000(0x0229)
};


class ButtonSlot : public PanelSlot
{
  Margin*                                                             Padding                                           //0x0038(0x0010)
  EHorizontalAlignment*                                               HorizontalAlignment                               //0x0048(0x0001)
  EVerticalAlignment*                                                 VerticalAlignment                                 //0x0049(0x0001)
  *                                                                   SetVerticalAlignment                              //0x0000(0x0229)
  *                                                                   SetPadding                                        //0x0000(0x0229)
  *                                                                   SetHorizontalAlignment                            //0x0000(0x0229)
};


class CanvasPanel : public PanelWidget
{
  Content*                                                            AddChildToCanvas                                  //0x0000(0x0229)
};


class CanvasPanelSlot : public PanelSlot
{
  AnchorData*                                                         LayoutData                                        //0x0038(0x0028)
  *                                                                   bAutoSize                                         //0x0060(0x0001)
  *                                                                   ZOrder                                            //0x0064(0x0004)
  *                                                                   SetZOrder                                         //0x0000(0x0229)
  *                                                                   SetSize                                           //0x0000(0x0229)
  *                                                                   SetPosition                                       //0x0000(0x0229)
  *                                                                   SetOffsets                                        //0x0000(0x0229)
  *                                                                   SetMinimum                                        //0x0000(0x0229)
  *                                                                   SetMaximum                                        //0x0000(0x0229)
  *                                                                   SetLayout                                         //0x0000(0x0229)
  *                                                                   SetAutoSize                                       //0x0000(0x0229)
  *                                                                   SetAnchors                                        //0x0000(0x0229)
  *                                                                   SetAlignment                                      //0x0000(0x0229)
  *                                                                   GetZOrder                                         //0x0000(0x0229)
  *                                                                   GetSize                                           //0x0000(0x0229)
  *                                                                   GetPosition                                       //0x0000(0x0229)
  *                                                                   GetOffsets                                        //0x0000(0x0229)
  *                                                                   GetLayout                                         //0x0000(0x0229)
  *                                                                   GetAutoSize                                       //0x0000(0x0229)
  *                                                                   GetAnchors                                        //0x0000(0x0229)
  *                                                                   GetAlignment                                      //0x0000(0x0229)
};


class CheckBox : public ContentWidget
{
  UnderlyingType*                                                     CheckedState                                      //0x0120(0x0001)
  GetCheckBoxState__DelegateSignature*                                CheckedStateDelegate                              //0x0124(0x0010)
  CheckBoxStyle*                                                      WidgetStyle                                       //0x0138(0x0580)
  SlateWidgetStyleAsset*                                              Style                                             //0x06B8(0x0008)
  SlateBrushAsset*                                                    UncheckedImage                                    //0x06C0(0x0008)
  SlateBrushAsset*                                                    UncheckedHoveredImage                             //0x06C8(0x0008)
  SlateBrushAsset*                                                    UncheckedPressedImage                             //0x06D0(0x0008)
  SlateBrushAsset*                                                    CheckedImage                                      //0x06D8(0x0008)
  SlateBrushAsset*                                                    CheckedHoveredImage                               //0x06E0(0x0008)
  SlateBrushAsset*                                                    CheckedPressedImage                               //0x06E8(0x0008)
  SlateBrushAsset*                                                    UndeterminedImage                                 //0x06F0(0x0008)
  SlateBrushAsset*                                                    UndeterminedHoveredImage                          //0x06F8(0x0008)
  SlateBrushAsset*                                                    UndeterminedPressedImage                          //0x0700(0x0008)
  EHorizontalAlignment*                                               HorizontalAlignment                               //0x0708(0x0001)
  Margin*                                                             Padding                                           //0x070C(0x0010)
  SlateColor*                                                         BorderBackgroundColor                             //0x0720(0x0028)
  *                                                                   IsFocusable                                       //0x0748(0x0001)
  OnCheckBoxComponentStateChanged__DelegateSignature*                 OnCheckStateChanged                               //0x0750(0x0010)
  *                                                                   SetIsChecked                                      //0x0000(0x0229)
  *                                                                   SetCheckedState                                   //0x0000(0x0229)
  *                                                                   IsPressed                                         //0x0000(0x0229)
  *                                                                   IsChecked                                         //0x0000(0x0229)
  *                                                                   GetCheckedState                                   //0x0000(0x0229)
};


class CheckedStateBinding : public PropertyBinding
{
  *                                                                   GetValue                                          //0x0000(0x0229)
};


class CircularThrobber : public Widget
{
  *                                                                   NumberOfPieces                                    //0x0108(0x0004)
  *                                                                   Period                                            //0x010C(0x0004)
  *                                                                   Radius                                            //0x0110(0x0004)
  SlateBrushAsset*                                                    PieceImage                                        //0x0118(0x0008)
  SlateBrush*                                                         Image                                             //0x0120(0x0088)
  *                                                                   bEnableRadius                                     //0x01A8(0x0001)
  *                                                                   SetRadius                                         //0x0000(0x0229)
  *                                                                   SetPeriod                                         //0x0000(0x0229)
  *                                                                   SetNumberOfPieces                                 //0x0000(0x0229)
};


class ColorBinding : public PropertyBinding
{
  *                                                                   GetSlateValue                                     //0x0000(0x0229)
  *                                                                   GetLinearValue                                    //0x0000(0x0229)
};


class ComboBox : public Widget
{
  Items*                                                              Items                                             //0x0108(0x0010)
  GenerateWidgetForObject__DelegateSignature*                         OnGenerateWidgetEvent                             //0x0118(0x0010)
  *                                                                   bIsFocusable                                      //0x0128(0x0001)
};


class ComboBoxString : public Widget
{
  DefaultOptions*                                                     DefaultOptions                                    //0x0108(0x0010)
  *                                                                   SelectedOption                                    //0x0118(0x0010)
  ComboBoxStyle*                                                      WidgetStyle                                       //0x0128(0x03D8)
  TableRowStyle*                                                      ItemStyle                                         //0x0500(0x07C8)
  Margin*                                                             ContentPadding                                    //0x0CC8(0x0010)
  *                                                                   MaxListHeight                                     //0x0CD8(0x0004)
  *                                                                   HasDownArrow                                      //0x0CDC(0x0001)
  *                                                                   EnableGamepadNavigationMode                       //0x0CDD(0x0001)
  SlateFontInfo*                                                      Font                                              //0x0CE0(0x0050)
  SlateColor*                                                         ForegroundColor                                   //0x0D30(0x0028)
  *                                                                   bIsFocusable                                      //0x0D58(0x0001)
  GenerateWidgetForString__DelegateSignature*                         OnGenerateWidgetEvent                             //0x0D5C(0x0010)
  OnSelectionChangedEvent__DelegateSignature*                         OnSelectionChanged                                //0x0D70(0x0010)
  OnOpeningEvent__DelegateSignature*                                  OnOpening                                         //0x0D80(0x0010)
  *                                                                   SetSelectedOption                                 //0x0000(0x0229)
  *                                                                   SetSelectedIndex                                  //0x0000(0x0229)
  *                                                                   RemoveOption                                      //0x0000(0x0229)
  *                                                                   RefreshOptions                                    //0x0000(0x0229)
  *                                                                   OnSelectionChangedEvent__DelegateSignature        //0x0000(0x0229)
  *                                                                   OnOpeningEvent__DelegateSignature                 //0x0000(0x0229)
  *                                                                   IsOpen                                            //0x0000(0x0229)
  *                                                                   GetSelectedOption                                 //0x0000(0x0229)
  *                                                                   GetSelectedIndex                                  //0x0000(0x0229)
  *                                                                   GetOptionCount                                    //0x0000(0x0229)
  *                                                                   GetOptionAtIndex                                  //0x0000(0x0229)
  *                                                                   FindOptionIndex                                   //0x0000(0x0229)
  *                                                                   ClearSelection                                    //0x0000(0x0229)
  *                                                                   ClearOptions                                      //0x0000(0x0229)
  *                                                                   AddOption                                         //0x0000(0x0229)
};


class DragDropOperation : public Object
{
  *                                                                   Tag                                               //0x0028(0x0010)
  Object*                                                             Payload                                           //0x0038(0x0008)
  Widget*                                                             DefaultDragVisual                                 //0x0040(0x0008)
  UnderlyingType*                                                     Pivot                                             //0x0048(0x0001)
  Vector2D*                                                           Offset                                            //0x004C(0x0008)
  OnDragDropMulticast__DelegateSignature*                             OnDrop                                            //0x0058(0x0010)
  OnDragDropMulticast__DelegateSignature*                             OnDragCancelled                                   //0x0068(0x0010)
  OnDragDropMulticast__DelegateSignature*                             OnDragged                                         //0x0078(0x0010)
  *                                                                   Drop                                              //0x0000(0x0229)
  *                                                                   Dragged                                           //0x0000(0x0229)
  *                                                                   DragCancelled                                     //0x0000(0x0229)
};


class DynamicEntryBoxBase : public Widget
{
  UnderlyingType*                                                     EntryBoxType                                      //0x0108(0x0001)
  Vector2D*                                                           EntrySpacing                                      //0x010C(0x0008)
  SpacingPattern*                                                     SpacingPattern                                    //0x0118(0x0010)
  SlateChildSize*                                                     EntrySizeRule                                     //0x0128(0x0008)
  EHorizontalAlignment*                                               EntryHorizontalAlignment                          //0x0130(0x0001)
  EVerticalAlignment*                                                 EntryVerticalAlignment                            //0x0131(0x0001)
  *                                                                   MaxElementSize                                    //0x0134(0x0004)
  UserWidgetPool*                                                     EntryWidgetPool                                   //0x0148(0x0080)
  *                                                                   SetEntrySpacing                                   //0x0000(0x0229)
  *                                                                   GetNumEntries                                     //0x0000(0x0229)
  ReturnValue*                                                        GetAllEntries                                     //0x0000(0x0229)
};


class DynamicEntryBox : public DynamicEntryBoxBase
{
  Class*                                                              EntryWidgetClass                                  //0x01C8(0x0008)
  *                                                                   Reset                                             //0x0000(0x0229)
  EntryWidget*                                                        RemoveEntry                                       //0x0000(0x0229)
  EntryClass*                                                         BP_CreateEntryOfClass                             //0x0000(0x0229)
  ReturnValue*                                                        BP_CreateEntry                                    //0x0000(0x0229)
};


class EditableText : public Widget
{
  *                                                                   Text                                              //0x0108(0x0018)
  GetText__DelegateSignature*                                         TextDelegate                                      //0x0120(0x0010)
  *                                                                   HintText                                          //0x0130(0x0018)
  GetText__DelegateSignature*                                         HintTextDelegate                                  //0x0148(0x0010)
  EditableTextStyle*                                                  WidgetStyle                                       //0x0158(0x0218)
  SlateWidgetStyleAsset*                                              Style                                             //0x0370(0x0008)
  SlateBrushAsset*                                                    BackgroundImageSelected                           //0x0378(0x0008)
  SlateBrushAsset*                                                    BackgroundImageComposing                          //0x0380(0x0008)
  SlateBrushAsset*                                                    CaretImage                                        //0x0388(0x0008)
  SlateFontInfo*                                                      Font                                              //0x0390(0x0050)
  SlateColor*                                                         ColorAndOpacity                                   //0x03E0(0x0028)
  *                                                                   IsReadOnly                                        //0x0408(0x0001)
  *                                                                   IsPassword                                        //0x0409(0x0001)
  *                                                                   MinimumDesiredWidth                               //0x040C(0x0004)
  *                                                                   IsCaretMovedWhenGainFocus                         //0x0410(0x0001)
  *                                                                   SelectAllTextWhenFocused                          //0x0411(0x0001)
  *                                                                   RevertTextOnEscape                                //0x0412(0x0001)
  *                                                                   ClearKeyboardFocusOnCommit                        //0x0413(0x0001)
  *                                                                   SelectAllTextOnCommit                             //0x0414(0x0001)
  *                                                                   AllowContextMenu                                  //0x0415(0x0001)
  EVirtualKeyboardType*                                               KeyboardType                                      //0x0416(0x0001)
  VirtualKeyboardOptions*                                             VirtualKeyboardOptions                            //0x0417(0x0001)
  UnderlyingType*                                                     VirtualKeyboardDismissAction                      //0x0418(0x0001)
  ETextJustify*                                                       Justification                                     //0x0419(0x0001)
  ShapedTextOptions*                                                  ShapedTextOptions                                 //0x041A(0x0003)
  OnEditableTextChangedEvent__DelegateSignature*                      OnTextChanged                                     //0x0420(0x0010)
  OnEditableTextCommittedEvent__DelegateSignature*                    OnTextCommitted                                   //0x0430(0x0010)
  *                                                                   SetText                                           //0x0000(0x0229)
  *                                                                   SetJustification                                  //0x0000(0x0229)
  *                                                                   SetIsReadOnly                                     //0x0000(0x0229)
  *                                                                   SetIsPassword                                     //0x0000(0x0229)
  *                                                                   SetHintText                                       //0x0000(0x0229)
  *                                                                   OnEditableTextCommittedEvent__DelegateSignature   //0x0000(0x0229)
  *                                                                   OnEditableTextChangedEvent__DelegateSignature     //0x0000(0x0229)
  *                                                                   GetText                                           //0x0000(0x0229)
};


class EditableTextBox : public Widget
{
  *                                                                   Text                                              //0x0108(0x0018)
  GetText__DelegateSignature*                                         TextDelegate                                      //0x0120(0x0010)
  EditableTextBoxStyle*                                               WidgetStyle                                       //0x0130(0x07F0)
  SlateWidgetStyleAsset*                                              Style                                             //0x0920(0x0008)
  *                                                                   HintText                                          //0x0928(0x0018)
  GetText__DelegateSignature*                                         HintTextDelegate                                  //0x0940(0x0010)
  SlateFontInfo*                                                      Font                                              //0x0950(0x0050)
  LinearColor*                                                        ForegroundColor                                   //0x09A0(0x0010)
  LinearColor*                                                        BackgroundColor                                   //0x09B0(0x0010)
  LinearColor*                                                        ReadOnlyForegroundColor                           //0x09C0(0x0010)
  *                                                                   IsReadOnly                                        //0x09D0(0x0001)
  *                                                                   IsPassword                                        //0x09D1(0x0001)
  *                                                                   MinimumDesiredWidth                               //0x09D4(0x0004)
  Margin*                                                             Padding                                           //0x09D8(0x0010)
  *                                                                   IsCaretMovedWhenGainFocus                         //0x09E8(0x0001)
  *                                                                   SelectAllTextWhenFocused                          //0x09E9(0x0001)
  *                                                                   RevertTextOnEscape                                //0x09EA(0x0001)
  *                                                                   ClearKeyboardFocusOnCommit                        //0x09EB(0x0001)
  *                                                                   SelectAllTextOnCommit                             //0x09EC(0x0001)
  *                                                                   AllowContextMenu                                  //0x09ED(0x0001)
  EVirtualKeyboardType*                                               KeyboardType                                      //0x09EE(0x0001)
  VirtualKeyboardOptions*                                             VirtualKeyboardOptions                            //0x09EF(0x0001)
  UnderlyingType*                                                     VirtualKeyboardDismissAction                      //0x09F0(0x0001)
  ETextJustify*                                                       Justification                                     //0x09F1(0x0001)
  ShapedTextOptions*                                                  ShapedTextOptions                                 //0x09F2(0x0003)
  OnEditableTextBoxChangedEvent__DelegateSignature*                   OnTextChanged                                     //0x09F8(0x0010)
  OnEditableTextBoxCommittedEvent__DelegateSignature*                 OnTextCommitted                                   //0x0A08(0x0010)
  *                                                                   SetText                                           //0x0000(0x0229)
  *                                                                   SetJustification                                  //0x0000(0x0229)
  *                                                                   SetIsReadOnly                                     //0x0000(0x0229)
  *                                                                   SetIsPassword                                     //0x0000(0x0229)
  *                                                                   SetHintText                                       //0x0000(0x0229)
  *                                                                   SetError                                          //0x0000(0x0229)
  *                                                                   OnEditableTextBoxCommittedEvent__DelegateSignature//0x0000(0x0229)
  *                                                                   OnEditableTextBoxChangedEvent__DelegateSignature  //0x0000(0x0229)
  *                                                                   HasError                                          //0x0000(0x0229)
  *                                                                   GetText                                           //0x0000(0x0229)
  *                                                                   ClearError                                        //0x0000(0x0229)
};


class ExpandableArea : public Widget
{
  ExpandableAreaStyle*                                                Style                                             //0x0110(0x0120)
  SlateBrush*                                                         BorderBrush                                       //0x0230(0x0088)
  SlateColor*                                                         BorderColor                                       //0x02B8(0x0028)
  *                                                                   bIsExpanded                                       //0x02E0(0x0001)
  *                                                                   MaxHeight                                         //0x02E4(0x0004)
  Margin*                                                             HeaderPadding                                     //0x02E8(0x0010)
  Margin*                                                             AreaPadding                                       //0x02F8(0x0010)
  OnExpandableAreaExpansionChanged__DelegateSignature*                OnExpansionChanged                                //0x0308(0x0010)
  Widget*                                                             HeaderContent                                     //0x0318(0x0008)
  Widget*                                                             BodyContent                                       //0x0320(0x0008)
  *                                                                   SetIsExpanded_Animated                            //0x0000(0x0229)
  *                                                                   SetIsExpanded                                     //0x0000(0x0229)
  *                                                                   GetIsExpanded                                     //0x0000(0x0229)
};


class FloatBinding : public PropertyBinding
{
  *                                                                   GetValue                                          //0x0000(0x0229)
};


class GridPanel : public PanelWidget
{
  ColumnFill*                                                         ColumnFill                                        //0x0120(0x0010)
  RowFill*                                                            RowFill                                           //0x0130(0x0010)
  *                                                                   SetRowFill                                        //0x0000(0x0229)
  *                                                                   SetColumnFill                                     //0x0000(0x0229)
  Content*                                                            AddChildToGrid                                    //0x0000(0x0229)
};


class GridSlot : public PanelSlot
{
  Margin*                                                             Padding                                           //0x0038(0x0010)
  EHorizontalAlignment*                                               HorizontalAlignment                               //0x0048(0x0001)
  EVerticalAlignment*                                                 VerticalAlignment                                 //0x0049(0x0001)
  *                                                                   Row                                               //0x004C(0x0004)
  *                                                                   RowSpan                                           //0x0050(0x0004)
  *                                                                   Column                                            //0x0054(0x0004)
  *                                                                   ColumnSpan                                        //0x0058(0x0004)
  *                                                                   Layer                                             //0x005C(0x0004)
  Vector2D*                                                           Nudge                                             //0x0060(0x0008)
  *                                                                   SetVerticalAlignment                              //0x0000(0x0229)
  *                                                                   SetRowSpan                                        //0x0000(0x0229)
  *                                                                   SetRow                                            //0x0000(0x0229)
  *                                                                   SetPadding                                        //0x0000(0x0229)
  *                                                                   SetNudge                                          //0x0000(0x0229)
  *                                                                   SetLayer                                          //0x0000(0x0229)
  *                                                                   SetHorizontalAlignment                            //0x0000(0x0229)
  *                                                                   SetColumnSpan                                     //0x0000(0x0229)
  *                                                                   SetColumn                                         //0x0000(0x0229)
};


class HorizontalBox : public PanelWidget
{
  Content*                                                            AddChildToHorizontalBox                           //0x0000(0x0229)
};


class HorizontalBoxSlot : public PanelSlot
{
  Margin*                                                             Padding                                           //0x0040(0x0010)
  SlateChildSize*                                                     Size                                              //0x0050(0x0008)
  EHorizontalAlignment*                                               HorizontalAlignment                               //0x0058(0x0001)
  EVerticalAlignment*                                                 VerticalAlignment                                 //0x0059(0x0001)
  *                                                                   SetVerticalAlignment                              //0x0000(0x0229)
  *                                                                   SetSize                                           //0x0000(0x0229)
  *                                                                   SetPadding                                        //0x0000(0x0229)
  *                                                                   SetHorizontalAlignment                            //0x0000(0x0229)
};


class Image : public Widget
{
  SlateBrush*                                                         Brush                                             //0x0108(0x0088)
  GetSlateBrush__DelegateSignature*                                   BrushDelegate                                     //0x0190(0x0010)
  LinearColor*                                                        ColorAndOpacity                                   //0x01A0(0x0010)
  GetLinearColor__DelegateSignature*                                  ColorAndOpacityDelegate                           //0x01B0(0x0010)
  *                                                                   bFlipForRightToLeftFlowDirection                  //0x01C0(0x0001)
  OnPointerEvent__DelegateSignature*                                  OnMouseButtonDownEvent                            //0x01C4(0x0010)
  *                                                                   SetOpacity                                        //0x0000(0x0229)
  *                                                                   SetColorAndOpacity                                //0x0000(0x0229)
  *                                                                   SetBrushTintColor                                 //0x0000(0x0229)
  *                                                                   SetBrushSize                                      //0x0000(0x0229)
  ResourceObject*                                                     SetBrushResourceObject                            //0x0000(0x0229)
  Texture*                                                            SetBrushFromTextureDynamic                        //0x0000(0x0229)
  Texture*                                                            SetBrushFromTexture                               //0x0000(0x0229)
  SoftTexture*                                                        SetBrushFromSoftTexture                           //0x0000(0x0229)
  SoftMaterial*                                                       SetBrushFromSoftMaterial                          //0x0000(0x0229)
  Material*                                                           SetBrushFromMaterial                              //0x0000(0x0229)
  AtlasRegion*                                                        SetBrushFromAtlasInterface                        //0x0000(0x0229)
  Asset*                                                              SetBrushFromAsset                                 //0x0000(0x0229)
  InBrush*                                                            SetBrush                                          //0x0000(0x0229)
  ReturnValue*                                                        GetDynamicMaterial                                //0x0000(0x0229)
};


class InputKeySelector : public Widget
{
  ButtonStyle*                                                        WidgetStyle                                       //0x0108(0x0278)
  TextBlockStyle*                                                     TextStyle                                         //0x0380(0x0268)
  InputChord*                                                         SelectedKey                                       //0x05E8(0x0020)
  SlateFontInfo*                                                      Font                                              //0x0608(0x0050)
  Margin*                                                             Margin                                            //0x0658(0x0010)
  LinearColor*                                                        ColorAndOpacity                                   //0x0668(0x0010)
  *                                                                   KeySelectionText                                  //0x0678(0x0018)
  *                                                                   NoKeySpecifiedText                                //0x0690(0x0018)
  *                                                                   bAllowModifierKeys                                //0x06A8(0x0001)
  *                                                                   bAllowGamepadKeys                                 //0x06A9(0x0001)
  EscapeKeys*                                                         EscapeKeys                                        //0x06B0(0x0010)
  OnKeySelected__DelegateSignature*                                   OnKeySelected                                     //0x06C0(0x0010)
  OnIsSelectingKeyChanged__DelegateSignature*                         OnIsSelectingKeyChanged                           //0x06D0(0x0010)
  *                                                                   SetTextBlockVisibility                            //0x0000(0x0229)
  *                                                                   SetSelectedKey                                    //0x0000(0x0229)
  *                                                                   SetNoKeySpecifiedText                             //0x0000(0x0229)
  *                                                                   SetKeySelectionText                               //0x0000(0x0229)
  *                                                                   SetEscapeKeys                                     //0x0000(0x0229)
  *                                                                   SetAllowModifierKeys                              //0x0000(0x0229)
  *                                                                   SetAllowGamepadKeys                               //0x0000(0x0229)
  *                                                                   OnKeySelected__DelegateSignature                  //0x0000(0x0229)
  *                                                                   OnIsSelectingKeyChanged__DelegateSignature        //0x0000(0x0229)
  *                                                                   GetIsSelectingKey                                 //0x0000(0x0229)
};


class Int32Binding : public PropertyBinding
{
  *                                                                   GetValue                                          //0x0000(0x0229)
};


class InvalidationBox : public ContentWidget
{
  *                                                                   bCanCache                                         //0x0120(0x0001)
  *                                                                   CacheRelativeTransforms                           //0x0121(0x0001)
  *                                                                   SetCanCache                                       //0x0000(0x0229)
  *                                                                   InvalidateCache                                   //0x0000(0x0229)
  *                                                                   GetCanCache                                       //0x0000(0x0229)
};


class UserListEntry : public Interface
{
  *                                                                   BP_OnItemSelectionChanged                         //0x0000(0x0229)
  *                                                                   BP_OnItemExpansionChanged                         //0x0000(0x0229)
  *                                                                   BP_OnEntryReleased                                //0x0000(0x0229)
};


class UserListEntryLibrary : public BlueprintFunctionLibrary
{
  UserListEntry*                                                      IsListItemSelected                                //0x0000(0x0229)
  UserListEntry*                                                      IsListItemExpanded                                //0x0000(0x0229)
  UserListEntry*                                                      GetOwningListView                                 //0x0000(0x0229)
};


class UserObjectListEntry : public UserListEntry
{
  ListItemObject*                                                     OnListItemObjectSet                               //0x0000(0x0229)
};


class UserObjectListEntryLibrary : public BlueprintFunctionLibrary
{
  UserObjectListEntry*                                                GetListItemObject                                 //0x0000(0x0229)
};


class ListViewBase : public Widget
{
  Class*                                                              EntryWidgetClass                                  //0x0108(0x0008)
  *                                                                   WheelScrollMultiplier                             //0x0110(0x0004)
  *                                                                   bEnableScrollAnimation                            //0x0114(0x0001)
  *                                                                   bEnableFixedLineOffset                            //0x0115(0x0001)
  *                                                                   FixedLineScrollOffset                             //0x0118(0x0004)
  OnListEntryGeneratedDynamic__DelegateSignature*                     BP_OnEntryGenerated                               //0x0120(0x0010)
  OnListEntryReleasedDynamic__DelegateSignature*                      BP_OnEntryReleased                                //0x0130(0x0010)
  UserWidgetPool*                                                     EntryWidgetPool                                   //0x0140(0x0080)
  *                                                                   SetWheelScrollMultiplier                          //0x0000(0x0229)
  *                                                                   SetScrollOffset                                   //0x0000(0x0229)
  *                                                                   SetScrollbarVisibility                            //0x0000(0x0229)
  *                                                                   ScrollToTop                                       //0x0000(0x0229)
  *                                                                   ScrollToBottom                                    //0x0000(0x0229)
  *                                                                   RequestRefresh                                    //0x0000(0x0229)
  *                                                                   RegenerateAllEntries                              //0x0000(0x0229)
  ReturnValue*                                                        GetDisplayedEntryWidgets                          //0x0000(0x0229)
};


class ListView : public ListViewBase
{
  EOrientation*                                                       Orientation                                       //0x02D8(0x0001)
  ESelectionMode*                                                     SelectionMode                                     //0x02D9(0x0001)
  UnderlyingType*                                                     ConsumeMouseWheel                                 //0x02DA(0x0001)
  *                                                                   bClearSelectionOnClick                            //0x02DB(0x0001)
  *                                                                   bIsFocusable                                      //0x02DC(0x0001)
  *                                                                   EntrySpacing                                      //0x02E0(0x0004)
  *                                                                   bReturnFocusToSelection                           //0x02E4(0x0001)
  ListItems*                                                          ListItems                                         //0x02E8(0x0010)
  OnListEntryInitializedDynamic__DelegateSignature*                   BP_OnEntryInitialized                             //0x0308(0x0010)
  SimpleListItemEventDynamic__DelegateSignature*                      BP_OnItemClicked                                  //0x0318(0x0010)
  SimpleListItemEventDynamic__DelegateSignature*                      BP_OnItemDoubleClicked                            //0x0328(0x0010)
  OnItemIsHoveredChangedDynamic__DelegateSignature*                   BP_OnItemIsHoveredChanged                         //0x0338(0x0010)
  OnListItemSelectionChangedDynamic__DelegateSignature*               BP_OnItemSelectionChanged                         //0x0348(0x0010)
  OnListItemScrolledIntoViewDynamic__DelegateSignature*               BP_OnItemScrolledIntoView                         //0x0358(0x0010)
  *                                                                   SetSelectionMode                                  //0x0000(0x0229)
  *                                                                   SetSelectedIndex                                  //0x0000(0x0229)
  *                                                                   ScrollIndexIntoView                               //0x0000(0x0229)
  Item*                                                               RemoveItem                                        //0x0000(0x0229)
  *                                                                   NavigateToIndex                                   //0x0000(0x0229)
  *                                                                   IsRefreshPending                                  //0x0000(0x0229)
  *                                                                   GetNumItems                                       //0x0000(0x0229)
  ReturnValue*                                                        GetListItems                                      //0x0000(0x0229)
  ReturnValue*                                                        GetItemAt                                         //0x0000(0x0229)
  Item*                                                               GetIndexForItem                                   //0x0000(0x0229)
  *                                                                   ClearListItems                                    //0x0000(0x0229)
  Item*                                                               BP_SetSelectedItem                                //0x0000(0x0229)
  InListItems*                                                        BP_SetListItems                                   //0x0000(0x0229)
  Item*                                                               BP_SetItemSelection                               //0x0000(0x0229)
  Item*                                                               BP_ScrollItemIntoView                             //0x0000(0x0229)
  Item*                                                               BP_NavigateToItem                                 //0x0000(0x0229)
  Item*                                                               BP_IsItemVisible                                  //0x0000(0x0229)
  Items*                                                              BP_GetSelectedItems                               //0x0000(0x0229)
  ReturnValue*                                                        BP_GetSelectedItem                                //0x0000(0x0229)
  *                                                                   BP_GetNumItemsSelected                            //0x0000(0x0229)
  *                                                                   BP_ClearSelection                                 //0x0000(0x0229)
  *                                                                   BP_CancelScrollIntoView                           //0x0000(0x0229)
  Item*                                                               AddItem                                           //0x0000(0x0229)
};


class ListViewDesignerPreviewItem : public Object
{
};


class MenuAnchor : public ContentWidget
{
  Class*                                                              MenuClass                                         //0x0120(0x0008)
  GetWidget__DelegateSignature*                                       OnGetMenuContentEvent                             //0x0128(0x0010)
  EMenuPlacement*                                                     Placement                                         //0x0138(0x0001)
  *                                                                   bFitInWindow                                      //0x0139(0x0001)
  *                                                                   ShouldDeferPaintingAfterWindowContent             //0x013A(0x0001)
  *                                                                   UseApplicationMenuStack                           //0x013B(0x0001)
  OnMenuOpenChangedEvent__DelegateSignature*                          OnMenuOpenChanged                                 //0x0140(0x0010)
  *                                                                   ToggleOpen                                        //0x0000(0x0229)
  *                                                                   ShouldOpenDueToClick                              //0x0000(0x0229)
  *                                                                   SetPlacement                                      //0x0000(0x0229)
  *                                                                   Open                                              //0x0000(0x0229)
  *                                                                   IsOpen                                            //0x0000(0x0229)
  *                                                                   HasOpenSubMenus                                   //0x0000(0x0229)
  *                                                                   GetMenuPosition                                   //0x0000(0x0229)
  *                                                                   FitInWindow                                       //0x0000(0x0229)
  *                                                                   Close                                             //0x0000(0x0229)
};


class MouseCursorBinding : public PropertyBinding
{
  *                                                                   GetValue                                          //0x0000(0x0229)
};


class MovieScene2DTransformSection : public MovieSceneSection
{
  MovieScene2DTransformMask*                                          TransformMask                                     //0x00E0(0x0004)
  MovieSceneFloatChannel*                                             Translation                                       //0x00E8(0x00A0)
  MovieSceneFloatChannel*                                             Rotation                                          //0x0228(0x00A0)
  MovieSceneFloatChannel*                                             Scale                                             //0x02C8(0x00A0)
  MovieSceneFloatChannel*                                             Shear                                             //0x0408(0x00A0)
};


class MovieScene2DTransformTrack : public MovieScenePropertyTrack
{
};


class MovieSceneMarginSection : public MovieSceneSection
{
  MovieSceneFloatChannel*                                             TopCurve                                          //0x00E0(0x00A0)
  MovieSceneFloatChannel*                                             LeftCurve                                         //0x0180(0x00A0)
  MovieSceneFloatChannel*                                             RightCurve                                        //0x0220(0x00A0)
  MovieSceneFloatChannel*                                             BottomCurve                                       //0x02C0(0x00A0)
};


class MovieSceneMarginTrack : public MovieScenePropertyTrack
{
};


class MovieSceneWidgetMaterialTrack : public MovieSceneMaterialTrack
{
  BrushPropertyNamePath*                                              BrushPropertyNamePath                             //0x0068(0x0010)
  *                                                                   TrackName                                         //0x0078(0x0008)
};


class TextLayoutWidget : public Widget
{
  ShapedTextOptions*                                                  ShapedTextOptions                                 //0x0108(0x0003)
  ETextJustify*                                                       Justification                                     //0x010B(0x0001)
  UnderlyingType*                                                     WrappingPolicy                                    //0x010C(0x0001)
  *                                                                   AutoWrapText                                      //0x010D(0x0001)
  *                                                                   WrapTextAt                                        //0x0110(0x0004)
  Margin*                                                             Margin                                            //0x0114(0x0010)
  *                                                                   LineHeightPercentage                              //0x0124(0x0004)
  *                                                                   SetJustification                                  //0x0000(0x0229)
};


class MultiLineEditableText : public TextLayoutWidget
{
  *                                                                   Text                                              //0x0128(0x0018)
  *                                                                   HintText                                          //0x0140(0x0018)
  GetText__DelegateSignature*                                         HintTextDelegate                                  //0x0158(0x0010)
  TextBlockStyle*                                                     WidgetStyle                                       //0x0168(0x0268)
  *                                                                   bIsReadOnly                                       //0x03D0(0x0001)
  SlateFontInfo*                                                      Font                                              //0x03D8(0x0050)
  *                                                                   SelectAllTextWhenFocused                          //0x0428(0x0001)
  *                                                                   ClearTextSelectionOnFocusLoss                     //0x0429(0x0001)
  *                                                                   RevertTextOnEscape                                //0x042A(0x0001)
  *                                                                   ClearKeyboardFocusOnCommit                        //0x042B(0x0001)
  *                                                                   AllowContextMenu                                  //0x042C(0x0001)
  VirtualKeyboardOptions*                                             VirtualKeyboardOptions                            //0x042D(0x0001)
  UnderlyingType*                                                     VirtualKeyboardDismissAction                      //0x042E(0x0001)
  OnMultiLineEditableTextChangedEvent__DelegateSignature*             OnTextChanged                                     //0x0430(0x0010)
  OnMultiLineEditableTextCommittedEvent__DelegateSignature*           OnTextCommitted                                   //0x0440(0x0010)
  InWidgetStyle*                                                      SetWidgetStyle                                    //0x0000(0x0229)
  *                                                                   SetText                                           //0x0000(0x0229)
  *                                                                   SetIsReadOnly                                     //0x0000(0x0229)
  *                                                                   SetHintText                                       //0x0000(0x0229)
  *                                                                   OnMultiLineEditableTextCommittedEvent__DelegateSignature//0x0000(0x0229)
  *                                                                   OnMultiLineEditableTextChangedEvent__DelegateSignature//0x0000(0x0229)
  *                                                                   GetText                                           //0x0000(0x0229)
  *                                                                   GetHintText                                       //0x0000(0x0229)
};


class MultiLineEditableTextBox : public TextLayoutWidget
{
  *                                                                   Text                                              //0x0128(0x0018)
  *                                                                   HintText                                          //0x0140(0x0018)
  GetText__DelegateSignature*                                         HintTextDelegate                                  //0x0158(0x0010)
  EditableTextBoxStyle*                                               WidgetStyle                                       //0x0168(0x07F0)
  TextBlockStyle*                                                     TextStyle                                         //0x0958(0x0268)
  *                                                                   bIsReadOnly                                       //0x0BC0(0x0001)
  *                                                                   AllowContextMenu                                  //0x0BC1(0x0001)
  VirtualKeyboardOptions*                                             VirtualKeyboardOptions                            //0x0BC2(0x0001)
  UnderlyingType*                                                     VirtualKeyboardDismissAction                      //0x0BC3(0x0001)
  SlateWidgetStyleAsset*                                              Style                                             //0x0BC8(0x0008)
  SlateFontInfo*                                                      Font                                              //0x0BD0(0x0050)
  LinearColor*                                                        ForegroundColor                                   //0x0C20(0x0010)
  LinearColor*                                                        BackgroundColor                                   //0x0C30(0x0010)
  LinearColor*                                                        ReadOnlyForegroundColor                           //0x0C40(0x0010)
  OnMultiLineEditableTextBoxChangedEvent__DelegateSignature*          OnTextChanged                                     //0x0C50(0x0010)
  OnMultiLineEditableTextBoxCommittedEvent__DelegateSignature*        OnTextCommitted                                   //0x0C60(0x0010)
  InTextStyle*                                                        SetTextStyle                                      //0x0000(0x0229)
  *                                                                   SetText                                           //0x0000(0x0229)
  *                                                                   SetIsReadOnly                                     //0x0000(0x0229)
  *                                                                   SetHintText                                       //0x0000(0x0229)
  *                                                                   SetError                                          //0x0000(0x0229)
  *                                                                   OnMultiLineEditableTextBoxCommittedEvent__DelegateSignature//0x0000(0x0229)
  *                                                                   OnMultiLineEditableTextBoxChangedEvent__DelegateSignature//0x0000(0x0229)
  *                                                                   GetText                                           //0x0000(0x0229)
  *                                                                   GetHintText                                       //0x0000(0x0229)
};


class NamedSlot : public ContentWidget
{
};


class NamedSlotInterface : public Interface
{
};


class NativeWidgetHost : public Widget
{
};


class Overlay : public PanelWidget
{
  Content*                                                            AddChildToOverlay                                 //0x0000(0x0229)
};


class OverlaySlot : public PanelSlot
{
  Margin*                                                             Padding                                           //0x0040(0x0010)
  EHorizontalAlignment*                                               HorizontalAlignment                               //0x0050(0x0001)
  EVerticalAlignment*                                                 VerticalAlignment                                 //0x0051(0x0001)
  *                                                                   SetVerticalAlignment                              //0x0000(0x0229)
  *                                                                   SetPadding                                        //0x0000(0x0229)
  *                                                                   SetHorizontalAlignment                            //0x0000(0x0229)
};


class ProgressBar : public Widget
{
  ProgressBarStyle*                                                   WidgetStyle                                       //0x0108(0x01A0)
  SlateWidgetStyleAsset*                                              Style                                             //0x02A8(0x0008)
  SlateBrushAsset*                                                    BackgroundImage                                   //0x02B0(0x0008)
  SlateBrushAsset*                                                    FillImage                                         //0x02B8(0x0008)
  SlateBrushAsset*                                                    MarqueeImage                                      //0x02C0(0x0008)
  *                                                                   Percent                                           //0x02C8(0x0004)
  EProgressBarFillType*                                               BarFillType                                       //0x02CC(0x0001)
  *                                                                   bIsMarquee                                        //0x02CD(0x0001)
  Vector2D*                                                           BorderPadding                                     //0x02D0(0x0008)
  GetFloat__DelegateSignature*                                        PercentDelegate                                   //0x02D8(0x0010)
  LinearColor*                                                        FillColorAndOpacity                               //0x02E8(0x0010)
  GetLinearColor__DelegateSignature*                                  FillColorAndOpacityDelegate                       //0x02F8(0x0010)
  *                                                                   SetPercent                                        //0x0000(0x0229)
  *                                                                   SetIsMarquee                                      //0x0000(0x0229)
  *                                                                   SetFillColorAndOpacity                            //0x0000(0x0229)
};


class RetainerBox : public ContentWidget
{
  *                                                                   RenderOnInvalidation                              //0x0120(0x0001)
  *                                                                   RenderOnPhase                                     //0x0121(0x0001)
  *                                                                   Phase                                             //0x0124(0x0004)
  *                                                                   PhaseCount                                        //0x0128(0x0004)
  MaterialInterface*                                                  EffectMaterial                                    //0x0130(0x0008)
  *                                                                   TextureParameter                                  //0x0138(0x0008)
  *                                                                   SetTextureParameter                               //0x0000(0x0229)
  *                                                                   SetRenderingPhase                                 //0x0000(0x0229)
  EffectMaterial*                                                     SetEffectMaterial                                 //0x0000(0x0229)
  *                                                                   RequestRender                                     //0x0000(0x0229)
  ReturnValue*                                                        GetEffectMaterial                                 //0x0000(0x0229)
};


class RichTextBlock : public TextLayoutWidget
{
  *                                                                   Text                                              //0x0128(0x0018)
  DataTable*                                                          TextStyleSet                                      //0x0140(0x0008)
  DecoratorClasses*                                                   DecoratorClasses                                  //0x0148(0x0010)
  *                                                                   bOverrideDefaultStyle                             //0x0158(0x0001)
  TextBlockStyle*                                                     DefaultTextStyleOverride                          //0x0160(0x0268)
  *                                                                   MinDesiredWidth                                   //0x03C8(0x0004)
  InstanceDecorators*                                                 InstanceDecorators                                //0x0638(0x0010)
  NewTextStyleSet*                                                    SetTextStyleSet                                   //0x0000(0x0229)
  *                                                                   SetText                                           //0x0000(0x0229)
  *                                                                   SetMinDesiredWidth                                //0x0000(0x0229)
  InDefaultTextStyle*                                                 SetDefaultTextStyle                               //0x0000(0x0229)
  InStrikeBrush*                                                      SetDefaultStrikeBrush                             //0x0000(0x0229)
  *                                                                   SetDefaultShadowOffset                            //0x0000(0x0229)
  *                                                                   SetDefaultShadowColorAndOpacity                   //0x0000(0x0229)
  InFontInfo*                                                         SetDefaultFont                                    //0x0000(0x0229)
  *                                                                   SetDefaultColorAndOpacity                         //0x0000(0x0229)
  *                                                                   SetAutoWrapText                                   //0x0000(0x0229)
  *                                                                   GetText                                           //0x0000(0x0229)
  DecoratorClass*                                                     GetDecoratorByClass                               //0x0000(0x0229)
  *                                                                   ClearAllDefaultStyleOverrides                     //0x0000(0x0229)
};


class RichTextBlockDecorator : public Object
{
};


class RichTextBlockImageDecorator : public RichTextBlockDecorator
{
  DataTable*                                                          ImageSet                                          //0x0028(0x0008)
};


class SafeZone : public ContentWidget
{
  *                                                                   PadLeft                                           //0x0120(0x0001)
  *                                                                   PadRight                                          //0x0121(0x0001)
  *                                                                   PadTop                                            //0x0122(0x0001)
  *                                                                   PadBottom                                         //0x0123(0x0001)
  *                                                                   SetSidesToPad                                     //0x0000(0x0229)
};


class SafeZoneSlot : public PanelSlot
{
  *                                                                   bIsTitleSafe                                      //0x0038(0x0001)
  Margin*                                                             SafeAreaScale                                     //0x003C(0x0010)
  EHorizontalAlignment*                                               HAlign                                            //0x004C(0x0001)
  EVerticalAlignment*                                                 VAlign                                            //0x004D(0x0001)
  Margin*                                                             Padding                                           //0x0050(0x0010)
};


class ScaleBox : public ContentWidget
{
  EStretch*                                                           Stretch                                           //0x0120(0x0001)
  EStretchDirection*                                                  StretchDirection                                  //0x0121(0x0001)
  *                                                                   UserSpecifiedScale                                //0x0124(0x0004)
  *                                                                   IgnoreInheritedScale                              //0x0128(0x0001)
  *                                                                   SetUserSpecifiedScale                             //0x0000(0x0229)
  *                                                                   SetStretchDirection                               //0x0000(0x0229)
  *                                                                   SetStretch                                        //0x0000(0x0229)
  *                                                                   SetIgnoreInheritedScale                           //0x0000(0x0229)
};


class ScaleBoxSlot : public PanelSlot
{
  Margin*                                                             Padding                                           //0x0038(0x0010)
  EHorizontalAlignment*                                               HorizontalAlignment                               //0x0048(0x0001)
  EVerticalAlignment*                                                 VerticalAlignment                                 //0x0049(0x0001)
  *                                                                   SetVerticalAlignment                              //0x0000(0x0229)
  *                                                                   SetPadding                                        //0x0000(0x0229)
  *                                                                   SetHorizontalAlignment                            //0x0000(0x0229)
};


class ScrollBar : public Widget
{
  ScrollBarStyle*                                                     WidgetStyle                                       //0x0108(0x04D0)
  SlateWidgetStyleAsset*                                              Style                                             //0x05D8(0x0008)
  *                                                                   bAlwaysShowScrollbar                              //0x05E0(0x0001)
  *                                                                   bAlwaysShowScrollbarTrack                         //0x05E1(0x0001)
  EOrientation*                                                       Orientation                                       //0x05E2(0x0001)
  Vector2D*                                                           Thickness                                         //0x05E4(0x0008)
  Margin*                                                             Padding                                           //0x05EC(0x0010)
  *                                                                   SetState                                          //0x0000(0x0229)
};


class ScrollBox : public PanelWidget
{
  ScrollBoxStyle*                                                     WidgetStyle                                       //0x0120(0x0228)
  ScrollBarStyle*                                                     WidgetBarStyle                                    //0x0348(0x04D0)
  SlateWidgetStyleAsset*                                              Style                                             //0x0818(0x0008)
  SlateWidgetStyleAsset*                                              BarStyle                                          //0x0820(0x0008)
  EOrientation*                                                       Orientation                                       //0x0828(0x0001)
  UnderlyingType*                                                     ScrollBarVisibility                               //0x0829(0x0001)
  UnderlyingType*                                                     ConsumeMouseWheel                                 //0x082A(0x0001)
  Vector2D*                                                           ScrollbarThickness                                //0x082C(0x0008)
  Margin*                                                             ScrollbarPadding                                  //0x0834(0x0010)
  *                                                                   AlwaysShowScrollbar                               //0x0844(0x0001)
  *                                                                   AlwaysShowScrollbarTrack                          //0x0845(0x0001)
  *                                                                   AllowOverscroll                                   //0x0846(0x0001)
  *                                                                   bAnimateWheelScrolling                            //0x0847(0x0001)
  UnderlyingType*                                                     NavigationDestination                             //0x0848(0x0001)
  *                                                                   NavigationScrollPadding                           //0x084C(0x0004)
  *                                                                   bAllowRightClickDragScrolling                     //0x0850(0x0001)
  *                                                                   WheelScrollMultiplier                             //0x0854(0x0004)
  OnUserScrolledEvent__DelegateSignature*                             OnUserScrolled                                    //0x0858(0x0010)
  *                                                                   SetWheelScrollMultiplier                          //0x0000(0x0229)
  *                                                                   SetScrollOffset                                   //0x0000(0x0229)
  *                                                                   SetScrollbarVisibility                            //0x0000(0x0229)
  *                                                                   SetScrollbarThickness                             //0x0000(0x0229)
  *                                                                   SetScrollbarPadding                               //0x0000(0x0229)
  *                                                                   SetOrientation                                    //0x0000(0x0229)
  *                                                                   SetConsumeMouseWheel                              //0x0000(0x0229)
  *                                                                   SetAnimateWheelScrolling                          //0x0000(0x0229)
  *                                                                   SetAlwaysShowScrollbar                            //0x0000(0x0229)
  *                                                                   SetAllowOverscroll                                //0x0000(0x0229)
  WidgetToFind*                                                       ScrollWidgetIntoView                              //0x0000(0x0229)
  *                                                                   ScrollToStart                                     //0x0000(0x0229)
  *                                                                   ScrollToEnd                                       //0x0000(0x0229)
  *                                                                   GetViewOffsetFraction                             //0x0000(0x0229)
  *                                                                   GetScrollOffsetOfEnd                              //0x0000(0x0229)
  *                                                                   GetScrollOffset                                   //0x0000(0x0229)
  *                                                                   EndInertialScrolling                              //0x0000(0x0229)
};


class ScrollBoxSlot : public PanelSlot
{
  Margin*                                                             Padding                                           //0x0038(0x0010)
  EHorizontalAlignment*                                               HorizontalAlignment                               //0x0048(0x0001)
  EVerticalAlignment*                                                 VerticalAlignment                                 //0x0049(0x0001)
  *                                                                   SetVerticalAlignment                              //0x0000(0x0229)
  *                                                                   SetPadding                                        //0x0000(0x0229)
  *                                                                   SetHorizontalAlignment                            //0x0000(0x0229)
};


class SizeBox : public ContentWidget
{
  *                                                                   WidthOverride                                     //0x0130(0x0004)
  *                                                                   HeightOverride                                    //0x0134(0x0004)
  *                                                                   MinDesiredWidth                                   //0x0138(0x0004)
  *                                                                   MinDesiredHeight                                  //0x013C(0x0004)
  *                                                                   MaxDesiredWidth                                   //0x0140(0x0004)
  *                                                                   MaxDesiredHeight                                  //0x0144(0x0004)
  *                                                                   MinAspectRatio                                    //0x0148(0x0004)
  *                                                                   MaxAspectRatio                                    //0x014C(0x0004)
  *                                                                   bOverride_WidthOverride                           //0x0150(0x0001)
  *                                                                   bOverride_HeightOverride                          //0x0150(0x0001)
  *                                                                   bOverride_MinDesiredWidth                         //0x0150(0x0001)
  *                                                                   bOverride_MinDesiredHeight                        //0x0150(0x0001)
  *                                                                   bOverride_MaxDesiredWidth                         //0x0150(0x0001)
  *                                                                   bOverride_MaxDesiredHeight                        //0x0150(0x0001)
  *                                                                   bOverride_MinAspectRatio                          //0x0150(0x0001)
  *                                                                   bOverride_MaxAspectRatio                          //0x0150(0x0001)
  *                                                                   SetWidthOverride                                  //0x0000(0x0229)
  *                                                                   SetMinDesiredWidth                                //0x0000(0x0229)
  *                                                                   SetMinDesiredHeight                               //0x0000(0x0229)
  *                                                                   SetMinAspectRatio                                 //0x0000(0x0229)
  *                                                                   SetMaxDesiredWidth                                //0x0000(0x0229)
  *                                                                   SetMaxDesiredHeight                               //0x0000(0x0229)
  *                                                                   SetMaxAspectRatio                                 //0x0000(0x0229)
  *                                                                   SetHeightOverride                                 //0x0000(0x0229)
  *                                                                   ClearWidthOverride                                //0x0000(0x0229)
  *                                                                   ClearMinDesiredWidth                              //0x0000(0x0229)
  *                                                                   ClearMinDesiredHeight                             //0x0000(0x0229)
  *                                                                   ClearMinAspectRatio                               //0x0000(0x0229)
  *                                                                   ClearMaxDesiredWidth                              //0x0000(0x0229)
  *                                                                   ClearMaxDesiredHeight                             //0x0000(0x0229)
  *                                                                   ClearMaxAspectRatio                               //0x0000(0x0229)
  *                                                                   ClearHeightOverride                               //0x0000(0x0229)
};


class SizeBoxSlot : public PanelSlot
{
  Margin*                                                             Padding                                           //0x0038(0x0010)
  EHorizontalAlignment*                                               HorizontalAlignment                               //0x0058(0x0001)
  EVerticalAlignment*                                                 VerticalAlignment                                 //0x0059(0x0001)
  *                                                                   SetVerticalAlignment                              //0x0000(0x0229)
  *                                                                   SetPadding                                        //0x0000(0x0229)
  *                                                                   SetHorizontalAlignment                            //0x0000(0x0229)
};


class SlateBlueprintLibrary : public BlueprintFunctionLibrary
{
  *                                                                   TransformVectorLocalToAbsolute                    //0x0000(0x0229)
  *                                                                   TransformVectorAbsoluteToLocal                    //0x0000(0x0229)
  *                                                                   TransformScalarLocalToAbsolute                    //0x0000(0x0229)
  *                                                                   TransformScalarAbsoluteToLocal                    //0x0000(0x0229)
  WorldContextObject*                                                 ScreenToWidgetLocal                               //0x0000(0x0229)
  WorldContextObject*                                                 ScreenToWidgetAbsolute                            //0x0000(0x0229)
  WorldContextObject*                                                 ScreenToViewport                                  //0x0000(0x0229)
  WorldContextObject*                                                 LocalToViewport                                   //0x0000(0x0229)
  *                                                                   LocalToAbsolute                                   //0x0000(0x0229)
  *                                                                   IsUnderLocation                                   //0x0000(0x0229)
  *                                                                   GetLocalTopLeft                                   //0x0000(0x0229)
  *                                                                   GetLocalSize                                      //0x0000(0x0229)
  *                                                                   GetAbsoluteSize                                   //0x0000(0x0229)
  A*                                                                  EqualEqual_SlateBrush                             //0x0000(0x0229)
  WorldContextObject*                                                 AbsoluteToViewport                                //0x0000(0x0229)
  *                                                                   AbsoluteToLocal                                   //0x0000(0x0229)
};


class SlateVectorArtData : public Object
{
  VertexData*                                                         VertexData                                        //0x0028(0x0010)
  IndexData*                                                          IndexData                                         //0x0038(0x0010)
  MaterialInterface*                                                  Material                                          //0x0048(0x0008)
  Vector2D*                                                           ExtentMin                                         //0x0050(0x0008)
  Vector2D*                                                           ExtentMax                                         //0x0058(0x0008)
};


class SlateAccessibleWidgetData : public Object
{
  *                                                                   bCanChildrenBeAccessible                          //0x0028(0x0001)
  UnderlyingType*                                                     AccessibleBehavior                                //0x0029(0x0001)
  UnderlyingType*                                                     AccessibleSummaryBehavior                         //0x002A(0x0001)
  *                                                                   AccessibleText                                    //0x0030(0x0018)
  GetText__DelegateSignature*                                         AccessibleTextDelegate                            //0x0048(0x0010)
  *                                                                   AccessibleSummaryText                             //0x0058(0x0018)
  GetText__DelegateSignature*                                         AccessibleSummaryTextDelegate                     //0x0070(0x0010)
};


class Spacer : public Widget
{
  Vector2D*                                                           Size                                              //0x0108(0x0008)
  *                                                                   SetSize                                           //0x0000(0x0229)
};


class SpinBox : public Widget
{
  *                                                                   Value                                             //0x0108(0x0004)
  GetFloat__DelegateSignature*                                        ValueDelegate                                     //0x010C(0x0010)
  SpinBoxStyle*                                                       WidgetStyle                                       //0x0120(0x02E8)
  SlateWidgetStyleAsset*                                              Style                                             //0x0408(0x0008)
  *                                                                   Delta                                             //0x0410(0x0004)
  *                                                                   SliderExponent                                    //0x0414(0x0004)
  SlateFontInfo*                                                      Font                                              //0x0418(0x0050)
  ETextJustify*                                                       Justification                                     //0x0468(0x0001)
  *                                                                   MinDesiredWidth                                   //0x046C(0x0004)
  *                                                                   ClearKeyboardFocusOnCommit                        //0x0470(0x0001)
  *                                                                   SelectAllTextOnCommit                             //0x0471(0x0001)
  SlateColor*                                                         ForegroundColor                                   //0x0478(0x0028)
  OnSpinBoxValueChangedEvent__DelegateSignature*                      OnValueChanged                                    //0x04A0(0x0010)
  OnSpinBoxValueCommittedEvent__DelegateSignature*                    OnValueCommitted                                  //0x04B0(0x0010)
  OnSpinBoxBeginSliderMovement__DelegateSignature*                    OnBeginSliderMovement                             //0x04C0(0x0010)
  OnSpinBoxValueChangedEvent__DelegateSignature*                      OnEndSliderMovement                               //0x04D0(0x0010)
  *                                                                   bOverride_MinValue                                //0x04E0(0x0001)
  *                                                                   bOverride_MaxValue                                //0x04E0(0x0001)
  *                                                                   bOverride_MinSliderValue                          //0x04E0(0x0001)
  *                                                                   bOverride_MaxSliderValue                          //0x04E0(0x0001)
  *                                                                   MinValue                                          //0x04E4(0x0004)
  *                                                                   MaxValue                                          //0x04E8(0x0004)
  *                                                                   MinSliderValue                                    //0x04EC(0x0004)
  *                                                                   MaxSliderValue                                    //0x04F0(0x0004)
  *                                                                   SetValue                                          //0x0000(0x0229)
  *                                                                   SetMinValue                                       //0x0000(0x0229)
  *                                                                   SetMinSliderValue                                 //0x0000(0x0229)
  *                                                                   SetMaxValue                                       //0x0000(0x0229)
  *                                                                   SetMaxSliderValue                                 //0x0000(0x0229)
  *                                                                   SetForegroundColor                                //0x0000(0x0229)
  *                                                                   OnSpinBoxValueCommittedEvent__DelegateSignature   //0x0000(0x0229)
  *                                                                   OnSpinBoxValueChangedEvent__DelegateSignature     //0x0000(0x0229)
  *                                                                   OnSpinBoxBeginSliderMovement__DelegateSignature   //0x0000(0x0229)
  *                                                                   GetValue                                          //0x0000(0x0229)
  *                                                                   GetMinValue                                       //0x0000(0x0229)
  *                                                                   GetMinSliderValue                                 //0x0000(0x0229)
  *                                                                   GetMaxValue                                       //0x0000(0x0229)
  *                                                                   GetMaxSliderValue                                 //0x0000(0x0229)
  *                                                                   ClearMinValue                                     //0x0000(0x0229)
  *                                                                   ClearMinSliderValue                               //0x0000(0x0229)
  *                                                                   ClearMaxValue                                     //0x0000(0x0229)
  *                                                                   ClearMaxSliderValue                               //0x0000(0x0229)
};


class TextBinding : public PropertyBinding
{
  *                                                                   GetTextValue                                      //0x0000(0x0229)
  *                                                                   GetStringValue                                    //0x0000(0x0229)
};


class TextBlock : public TextLayoutWidget
{
  *                                                                   Text                                              //0x0128(0x0018)
  GetText__DelegateSignature*                                         TextDelegate                                      //0x0140(0x0010)
  SlateColor*                                                         ColorAndOpacity                                   //0x0150(0x0028)
  GetSlateColor__DelegateSignature*                                   ColorAndOpacityDelegate                           //0x0178(0x0010)
  SlateFontInfo*                                                      Font                                              //0x0188(0x0050)
  SlateBrush*                                                         StrikeBrush                                       //0x01D8(0x0088)
  Vector2D*                                                           ShadowOffset                                      //0x0260(0x0008)
  LinearColor*                                                        ShadowColorAndOpacity                             //0x0268(0x0010)
  GetLinearColor__DelegateSignature*                                  ShadowColorAndOpacityDelegate                     //0x0278(0x0010)
  *                                                                   MinDesiredWidth                                   //0x0288(0x0004)
  *                                                                   bWrapWithInvalidationPanel                        //0x028C(0x0001)
  *                                                                   bAutoWrapText                                     //0x028D(0x0001)
  *                                                                   bSimpleTextMode                                   //0x028E(0x0001)
  *                                                                   SetText                                           //0x0000(0x0229)
  InStrikeBrush*                                                      SetStrikeBrush                                    //0x0000(0x0229)
  *                                                                   SetShadowOffset                                   //0x0000(0x0229)
  *                                                                   SetShadowColorAndOpacity                          //0x0000(0x0229)
  *                                                                   SetOpacity                                        //0x0000(0x0229)
  *                                                                   SetMinDesiredWidth                                //0x0000(0x0229)
  InFontInfo*                                                         SetFont                                           //0x0000(0x0229)
  *                                                                   SetColorAndOpacity                                //0x0000(0x0229)
  *                                                                   SetAutoWrapText                                   //0x0000(0x0229)
  *                                                                   GetText                                           //0x0000(0x0229)
  ReturnValue*                                                        GetDynamicOutlineMaterial                         //0x0000(0x0229)
  ReturnValue*                                                        GetDynamicFontMaterial                            //0x0000(0x0229)
};


class Throbber : public Widget
{
  *                                                                   NumberOfPieces                                    //0x0108(0x0004)
  *                                                                   bAnimateHorizontally                              //0x010C(0x0001)
  *                                                                   bAnimateVertically                                //0x010D(0x0001)
  *                                                                   bAnimateOpacity                                   //0x010E(0x0001)
  SlateBrushAsset*                                                    PieceImage                                        //0x0110(0x0008)
  SlateBrush*                                                         Image                                             //0x0118(0x0088)
  *                                                                   SetNumberOfPieces                                 //0x0000(0x0229)
  *                                                                   SetAnimateVertically                              //0x0000(0x0229)
  *                                                                   SetAnimateOpacity                                 //0x0000(0x0229)
  *                                                                   SetAnimateHorizontally                            //0x0000(0x0229)
};


class TileView : public ListView
{
  *                                                                   EntryHeight                                       //0x0368(0x0004)
  *                                                                   EntryWidth                                        //0x036C(0x0004)
  UnderlyingType*                                                     TileAlignment                                     //0x0370(0x0001)
  *                                                                   bWrapHorizontalNavigation                         //0x0371(0x0001)
  *                                                                   SetEntryWidth                                     //0x0000(0x0229)
  *                                                                   SetEntryHeight                                    //0x0000(0x0229)
};


class TreeView : public ListView
{
  OnGetItemChildrenDynamic__DelegateSignature*                        BP_OnGetItemChildren                              //0x0378(0x0010)
  OnItemExpansionChangedDynamic__DelegateSignature*                   BP_OnItemExpansionChanged                         //0x0388(0x0010)
  Item*                                                               SetItemExpansion                                  //0x0000(0x0229)
  *                                                                   ExpandAll                                         //0x0000(0x0229)
  *                                                                   CollapseAll                                       //0x0000(0x0229)
};


class UMGSequencePlayer : public Object
{
  WidgetAnimation*                                                    Animation                                         //0x0408(0x0008)
  *                                                                   SetUserTag                                        //0x0000(0x0229)
  *                                                                   GetUserTag                                        //0x0000(0x0229)
};


class UniformGridPanel : public PanelWidget
{
  Margin*                                                             SlotPadding                                       //0x0120(0x0010)
  *                                                                   MinDesiredSlotWidth                               //0x0130(0x0004)
  *                                                                   MinDesiredSlotHeight                              //0x0134(0x0004)
  *                                                                   SetSlotPadding                                    //0x0000(0x0229)
  *                                                                   SetMinDesiredSlotWidth                            //0x0000(0x0229)
  *                                                                   SetMinDesiredSlotHeight                           //0x0000(0x0229)
  Content*                                                            AddChildToUniformGrid                             //0x0000(0x0229)
};


class UniformGridSlot : public PanelSlot
{
  EHorizontalAlignment*                                               HorizontalAlignment                               //0x0038(0x0001)
  EVerticalAlignment*                                                 VerticalAlignment                                 //0x0039(0x0001)
  *                                                                   Row                                               //0x003C(0x0004)
  *                                                                   Column                                            //0x0040(0x0004)
  *                                                                   SetVerticalAlignment                              //0x0000(0x0229)
  *                                                                   SetRow                                            //0x0000(0x0229)
  *                                                                   SetHorizontalAlignment                            //0x0000(0x0229)
  *                                                                   SetColumn                                         //0x0000(0x0229)
};


class VerticalBox : public PanelWidget
{
  Content*                                                            AddChildToVerticalBox                             //0x0000(0x0229)
};


class VerticalBoxSlot : public PanelSlot
{
  SlateChildSize*                                                     Size                                              //0x0038(0x0008)
  Margin*                                                             Padding                                           //0x0040(0x0010)
  EHorizontalAlignment*                                               HorizontalAlignment                               //0x0058(0x0001)
  EVerticalAlignment*                                                 VerticalAlignment                                 //0x0059(0x0001)
  *                                                                   SetVerticalAlignment                              //0x0000(0x0229)
  *                                                                   SetSize                                           //0x0000(0x0229)
  *                                                                   SetPadding                                        //0x0000(0x0229)
  *                                                                   SetHorizontalAlignment                            //0x0000(0x0229)
};


class Viewport : public ContentWidget
{
  LinearColor*                                                        BackgroundColor                                   //0x0120(0x0010)
  ActorClass*                                                         Spawn                                             //0x0000(0x0229)
  *                                                                   SetViewRotation                                   //0x0000(0x0229)
  *                                                                   SetViewLocation                                   //0x0000(0x0229)
  *                                                                   GetViewRotation                                   //0x0000(0x0229)
  ReturnValue*                                                        GetViewportWorld                                  //0x0000(0x0229)
  *                                                                   GetViewLocation                                   //0x0000(0x0229)
};


class VisibilityBinding : public PropertyBinding
{
  *                                                                   GetValue                                          //0x0000(0x0229)
};


class WidgetAnimation : public MovieSceneSequence
{
  MovieScene*                                                         MovieScene                                        //0x0348(0x0008)
  AnimationBindings*                                                  AnimationBindings                                 //0x0350(0x0010)
  *                                                                   bLegacyFinishOnStop                               //0x0360(0x0001)
  *                                                                   DisplayLabel                                      //0x0368(0x0010)
  Widget*                                                             UnbindFromAnimationStarted                        //0x0000(0x0229)
  Widget*                                                             UnbindFromAnimationFinished                       //0x0000(0x0229)
  Widget*                                                             UnbindAllFromAnimationStarted                     //0x0000(0x0229)
  Widget*                                                             UnbindAllFromAnimationFinished                    //0x0000(0x0229)
  *                                                                   GetStartTime                                      //0x0000(0x0229)
  *                                                                   GetEndTime                                        //0x0000(0x0229)
  Widget*                                                             BindToAnimationStarted                            //0x0000(0x0229)
  Widget*                                                             BindToAnimationFinished                           //0x0000(0x0229)
};


class DynamicBlueprintBinding : public Object
{
};


class WidgetAnimationDelegateBinding : public DynamicBlueprintBinding
{
  WidgetAnimationDelegateBindings*                                    WidgetAnimationDelegateBindings                   //0x0028(0x0010)
};


class WidgetAnimationPlayCallbackProxy : public Object
{
  WidgetAnimationResult__DelegateSignature*                           Finished                                          //0x0028(0x0010)
  Result*                                                             CreatePlayAnimationTimeRangeProxyObject           //0x0000(0x0229)
  Result*                                                             CreatePlayAnimationProxyObject                    //0x0000(0x0229)
};


class WidgetBinding : public PropertyBinding
{
  ReturnValue*                                                        GetValue                                          //0x0000(0x0229)
};


class BlueprintGeneratedClass : public Class
{
  *                                                                   NumReplicatedProperties                           //0x0210(0x0004)
  *                                                                   bHasNativizedParent                               //0x0214(0x0001)
  *                                                                   bHasCookedComponentInstancingData                 //0x0214(0x0001)
  DynamicBindingObjects*                                              DynamicBindingObjects                             //0x0218(0x0010)
  ComponentTemplates*                                                 ComponentTemplates                                //0x0228(0x0010)
  Timelines*                                                          Timelines                                         //0x0238(0x0010)
  ComponentClassOverrides*                                            ComponentClassOverrides                           //0x0248(0x0010)
  SimpleConstructionScript*                                           SimpleConstructionScript                          //0x0258(0x0008)
  InheritableComponentHandler*                                        InheritableComponentHandler                       //0x0260(0x0008)
  StructProperty*                                                     UberGraphFramePointerProperty                     //0x0268(0x0008)
  Function*                                                           UberGraphFunction                                 //0x0270(0x0008)
  CookedComponentInstancingData_Key*                                  CookedComponentInstancingData                     //0x0278(0x0050)
};


class WidgetBlueprintGeneratedClass : public BlueprintGeneratedClass
{
  WidgetTree*                                                         WidgetTree                                        //0x0300(0x0008)
  *                                                                   bAllowTemplate                                    //0x0308(0x0001)
  *                                                                   bAllowDynamicCreation                             //0x0308(0x0001)
  *                                                                   bValidTemplate                                    //0x0308(0x0001)
  *                                                                   bTemplateInitialized                              //0x0308(0x0001)
  *                                                                   bCookedTemplate                                   //0x0308(0x0001)
  *                                                                   bClassRequiresNativeTick                          //0x0308(0x0001)
  Bindings*                                                           Bindings                                          //0x0310(0x0010)
  Animations*                                                         Animations                                        //0x0320(0x0010)
  NamedSlots*                                                         NamedSlots                                        //0x0330(0x0010)
  UserWidget*                                                         TemplateAsset                                     //0x0340(0x0028)
  UserWidget*                                                         Template                                          //0x0368(0x0008)
};


class WidgetBlueprintLibrary : public BlueprintFunctionLibrary
{
  *                                                                   UnlockMouse                                       //0x0000(0x0229)
  *                                                                   Unhandled                                         //0x0000(0x0229)
  TitleBarContent*                                                    SetWindowTitleBarState                            //0x0000(0x0229)
  Delegate*                                                           SetWindowTitleBarOnCloseClickedDelegate           //0x0000(0x0229)
  *                                                                   SetWindowTitleBarCloseButtonActive                //0x0000(0x0229)
  FocusWidget*                                                        SetUserFocus                                      //0x0000(0x0229)
  *                                                                   SetMousePosition                                  //0x0000(0x0229)
  PlayerController*                                                   SetInputMode_UIOnlyEx                             //0x0000(0x0229)
  Target*                                                             SetInputMode_UIOnly                               //0x0000(0x0229)
  PlayerController*                                                   SetInputMode_GameOnly                             //0x0000(0x0229)
  PlayerController*                                                   SetInputMode_GameAndUIEx                          //0x0000(0x0229)
  Target*                                                             SetInputMode_GameAndUI                            //0x0000(0x0229)
  WorldContextObject*                                                 SetHardwareCursor                                 //0x0000(0x0229)
  *                                                                   SetFocusToGameViewport                            //0x0000(0x0229)
  *                                                                   SetColorVisionDeficiencyType                      //0x0000(0x0229)
  Brush*                                                              SetBrushResourceToTexture                         //0x0000(0x0229)
  Brush*                                                              SetBrushResourceToMaterial                        //0x0000(0x0229)
  *                                                                   RestorePreviousWindowTitleBarState                //0x0000(0x0229)
  *                                                                   ReleaseMouseCapture                               //0x0000(0x0229)
  *                                                                   ReleaseJoystickCapture                            //0x0000(0x0229)
  *                                                                   OnGameWindowCloseButtonClickedDelegate__DelegateSignature//0x0000(0x0229)
  ReturnValue*                                                        NoResourceBrush                                   //0x0000(0x0229)
  Texture*                                                            MakeBrushFromTexture                              //0x0000(0x0229)
  Material*                                                           MakeBrushFromMaterial                             //0x0000(0x0229)
  BrushAsset*                                                         MakeBrushFromAsset                                //0x0000(0x0229)
  CapturingWidget*                                                    LockMouse                                         //0x0000(0x0229)
  *                                                                   IsDragDropping                                    //0x0000(0x0229)
  *                                                                   Handled                                           //0x0000(0x0229)
  WorldContextObject*                                                 GetSafeZonePadding                                //0x0000(0x0229)
  *                                                                   GetKeyEventFromAnalogInputEvent                   //0x0000(0x0229)
  *                                                                   GetInputEventFromPointerEvent                     //0x0000(0x0229)
  *                                                                   GetInputEventFromNavigationEvent                  //0x0000(0x0229)
  *                                                                   GetInputEventFromKeyEvent                         //0x0000(0x0229)
  *                                                                   GetInputEventFromCharacterEvent                   //0x0000(0x0229)
  Brush*                                                              GetDynamicMaterial                                //0x0000(0x0229)
  ReturnValue*                                                        GetDragDroppingContent                            //0x0000(0x0229)
  Brush*                                                              GetBrushResourceAsTexture2D                       //0x0000(0x0229)
  Brush*                                                              GetBrushResourceAsMaterial                        //0x0000(0x0229)
  Brush*                                                              GetBrushResource                                  //0x0000(0x0229)
  WorldContextObject*                                                 GetAllWidgetsWithInterface                        //0x0000(0x0229)
  WorldContextObject*                                                 GetAllWidgetsOfClass                              //0x0000(0x0229)
  *                                                                   EndDragDrop                                       //0x0000(0x0229)
  Font*                                                               DrawTextFormatted                                 //0x0000(0x0229)
  *                                                                   DrawText                                          //0x0000(0x0229)
  *                                                                   DrawLines                                         //0x0000(0x0229)
  *                                                                   DrawLine                                          //0x0000(0x0229)
  Brush*                                                              DrawBox                                           //0x0000(0x0229)
  *                                                                   DismissAllMenus                                   //0x0000(0x0229)
  WidgetDetectingDrag*                                                DetectDragIfPressed                               //0x0000(0x0229)
  WidgetDetectingDrag*                                                DetectDrag                                        //0x0000(0x0229)
  OperationClass*                                                     CreateDragDropOperation                           //0x0000(0x0229)
  WorldContextObject*                                                 Create                                            //0x0000(0x0229)
  *                                                                   ClearUserFocus                                    //0x0000(0x0229)
  CapturingWidget*                                                    CaptureMouse                                      //0x0000(0x0229)
  CapturingWidget*                                                    CaptureJoystick                                   //0x0000(0x0229)
  *                                                                   CancelDragDrop                                    //0x0000(0x0229)
};


class WidgetComponent : public MeshComponent
{
  UnderlyingType*                                                     Space                                             //0x0400(0x0001)
  UnderlyingType*                                                     TimingPolicy                                      //0x0401(0x0001)
  Class*                                                              WidgetClass                                       //0x0408(0x0008)
  IntPoint*                                                           DrawSize                                          //0x0410(0x0008)
  *                                                                   bManuallyRedraw                                   //0x0418(0x0001)
  *                                                                   bRedrawRequested                                  //0x0419(0x0001)
  *                                                                   RedrawTime                                        //0x041C(0x0004)
  IntPoint*                                                           CurrentDrawSize                                   //0x0428(0x0008)
  *                                                                   bDrawAtDesiredSize                                //0x0430(0x0001)
  Vector2D*                                                           Pivot                                             //0x0434(0x0008)
  *                                                                   bReceiveHardwareInput                             //0x043C(0x0001)
  *                                                                   bWindowFocusable                                  //0x043D(0x0001)
  UnderlyingType*                                                     WindowVisibility                                  //0x043E(0x0001)
  *                                                                   bApplyGammaCorrection                             //0x043F(0x0001)
  LocalPlayer*                                                        OwnerPlayer                                       //0x0440(0x0008)
  LinearColor*                                                        BackgroundColor                                   //0x0448(0x0010)
  LinearColor*                                                        TintColorAndOpacity                               //0x0458(0x0010)
  *                                                                   OpacityFromTexture                                //0x0468(0x0004)
  UnderlyingType*                                                     BlendMode                                         //0x046C(0x0001)
  *                                                                   bIsTwoSided                                       //0x046D(0x0001)
  *                                                                   TickWhenOffscreen                                 //0x046E(0x0001)
  UserWidget*                                                         Widget                                            //0x0470(0x0008)
  BodySetup*                                                          BodySetup                                         //0x0498(0x0008)
  MaterialInterface*                                                  TranslucentMaterial                               //0x04A0(0x0008)
  MaterialInterface*                                                  TranslucentMaterial_OneSided                      //0x04A8(0x0008)
  MaterialInterface*                                                  OpaqueMaterial                                    //0x04B0(0x0008)
  MaterialInterface*                                                  OpaqueMaterial_OneSided                           //0x04B8(0x0008)
  MaterialInterface*                                                  MaskedMaterial                                    //0x04C0(0x0008)
  MaterialInterface*                                                  MaskedMaterial_OneSided                           //0x04C8(0x0008)
  TextureRenderTarget2D*                                              RenderTarget                                      //0x04D0(0x0008)
  MaterialInstanceDynamic*                                            MaterialInstance                                  //0x04D8(0x0008)
  *                                                                   bAddedToScreen                                    //0x04E0(0x0001)
  *                                                                   bEditTimeUsable                                   //0x04E1(0x0001)
  *                                                                   SharedLayerName                                   //0x04E4(0x0008)
  *                                                                   LayerZOrder                                       //0x04EC(0x0004)
  UnderlyingType*                                                     GeometryMode                                      //0x04F0(0x0001)
  *                                                                   CylinderArcAngle                                  //0x04F4(0x0004)
  *                                                                   SetWindowVisibility                               //0x0000(0x0229)
  *                                                                   SetWindowFocusable                                //0x0000(0x0229)
  *                                                                   SetWidgetSpace                                    //0x0000(0x0229)
  Widget*                                                             SetWidget                                         //0x0000(0x0229)
  *                                                                   SetTwoSided                                       //0x0000(0x0229)
  *                                                                   SetTintColorAndOpacity                            //0x0000(0x0229)
  *                                                                   SetTickWhenOffscreen                              //0x0000(0x0229)
  *                                                                   SetRedrawTime                                     //0x0000(0x0229)
  *                                                                   SetPivot                                          //0x0000(0x0229)
  LocalPlayer*                                                        SetOwnerPlayer                                    //0x0000(0x0229)
  *                                                                   SetManuallyRedraw                                 //0x0000(0x0229)
  *                                                                   SetGeometryMode                                   //0x0000(0x0229)
  *                                                                   SetDrawSize                                       //0x0000(0x0229)
  *                                                                   SetDrawAtDesiredSize                              //0x0000(0x0229)
  *                                                                   SetCylinderArcAngle                               //0x0000(0x0229)
  *                                                                   SetBackgroundColor                                //0x0000(0x0229)
  *                                                                   RequestRedraw                                     //0x0000(0x0229)
  *                                                                   GetWindowVisiblility                              //0x0000(0x0229)
  *                                                                   GetWindowFocusable                                //0x0000(0x0229)
  *                                                                   GetWidgetSpace                                    //0x0000(0x0229)
  ReturnValue*                                                        GetUserWidgetObject                               //0x0000(0x0229)
  *                                                                   GetTwoSided                                       //0x0000(0x0229)
  *                                                                   GetTickWhenOffscreen                              //0x0000(0x0229)
  ReturnValue*                                                        GetRenderTarget                                   //0x0000(0x0229)
  *                                                                   GetRedrawTime                                     //0x0000(0x0229)
  *                                                                   GetPivot                                          //0x0000(0x0229)
  ReturnValue*                                                        GetOwnerPlayer                                    //0x0000(0x0229)
  ReturnValue*                                                        GetMaterialInstance                               //0x0000(0x0229)
  *                                                                   GetManuallyRedraw                                 //0x0000(0x0229)
  *                                                                   GetGeometryMode                                   //0x0000(0x0229)
  *                                                                   GetDrawSize                                       //0x0000(0x0229)
  *                                                                   GetDrawAtDesiredSize                              //0x0000(0x0229)
  *                                                                   GetCylinderArcAngle                               //0x0000(0x0229)
  *                                                                   GetCurrentDrawSize                                //0x0000(0x0229)
};


class WidgetInteractionComponent : public SceneComponent
{
  OnHoveredWidgetChanged__DelegateSignature*                          OnHoveredWidgetChanged                            //0x01F0(0x0010)
  *                                                                   VirtualUserIndex                                  //0x0210(0x0004)
  *                                                                   PointerIndex                                      //0x0214(0x0004)
  ECollisionChannel*                                                  TraceChannel                                      //0x0218(0x0001)
  *                                                                   InteractionDistance                               //0x021C(0x0004)
  UnderlyingType*                                                     InteractionSource                                 //0x0220(0x0001)
  *                                                                   bEnableHitTesting                                 //0x0221(0x0001)
  *                                                                   bShowDebug                                        //0x0222(0x0001)
  LinearColor*                                                        DebugColor                                        //0x0224(0x0010)
  HitResult*                                                          CustomHitResult                                   //0x02B0(0x0088)
  Vector2D*                                                           LocalHitLocation                                  //0x0338(0x0008)
  Vector2D*                                                           LastLocalHitLocation                              //0x0340(0x0008)
  WidgetComponent*                                                    HoveredWidgetComponent                            //0x0348(0x0008)
  HitResult*                                                          LastHitResult                                     //0x0350(0x0088)
  *                                                                   bIsHoveredWidgetInteractable                      //0x03D8(0x0001)
  *                                                                   bIsHoveredWidgetFocusable                         //0x03D9(0x0001)
  *                                                                   bIsHoveredWidgetHitTestVisible                    //0x03DA(0x0001)
  FocusWidget*                                                        SetFocus                                          //0x0000(0x0229)
  HitResult*                                                          SetCustomHitResult                                //0x0000(0x0229)
  *                                                                   SendKeyChar                                       //0x0000(0x0229)
  *                                                                   ScrollWheel                                       //0x0000(0x0229)
  *                                                                   ReleasePointerKey                                 //0x0000(0x0229)
  *                                                                   ReleaseKey                                        //0x0000(0x0229)
  *                                                                   PressPointerKey                                   //0x0000(0x0229)
  *                                                                   PressKey                                          //0x0000(0x0229)
  *                                                                   PressAndReleaseKey                                //0x0000(0x0229)
  *                                                                   IsOverInteractableWidget                          //0x0000(0x0229)
  *                                                                   IsOverHitTestVisibleWidget                        //0x0000(0x0229)
  *                                                                   IsOverFocusableWidget                             //0x0000(0x0229)
  ReturnValue*                                                        GetLastHitResult                                  //0x0000(0x0229)
  ReturnValue*                                                        GetHoveredWidgetComponent                         //0x0000(0x0229)
  *                                                                   Get2DHitLocation                                  //0x0000(0x0229)
};


class WidgetLayoutLibrary : public BlueprintFunctionLibrary
{
  Widget*                                                             SlotAsWrapBoxSlot                                 //0x0000(0x0229)
  Widget*                                                             SlotAsWidgetSwitcherSlot                          //0x0000(0x0229)
  Widget*                                                             SlotAsVerticalBoxSlot                             //0x0000(0x0229)
  Widget*                                                             SlotAsUniformGridSlot                             //0x0000(0x0229)
  Widget*                                                             SlotAsSizeBoxSlot                                 //0x0000(0x0229)
  Widget*                                                             SlotAsScrollBoxSlot                               //0x0000(0x0229)
  Widget*                                                             SlotAsScaleBoxSlot                                //0x0000(0x0229)
  Widget*                                                             SlotAsSafeBoxSlot                                 //0x0000(0x0229)
  Widget*                                                             SlotAsOverlaySlot                                 //0x0000(0x0229)
  Widget*                                                             SlotAsHorizontalBoxSlot                           //0x0000(0x0229)
  Widget*                                                             SlotAsGridSlot                                    //0x0000(0x0229)
  Widget*                                                             SlotAsCanvasSlot                                  //0x0000(0x0229)
  Widget*                                                             SlotAsBorderSlot                                  //0x0000(0x0229)
  WorldContextObject*                                                 RemoveAllWidgets                                  //0x0000(0x0229)
  PlayerController*                                                   ProjectWorldLocationToWidgetPosition              //0x0000(0x0229)
  WorldContextObject*                                                 GetViewportWidgetGeometry                         //0x0000(0x0229)
  WorldContextObject*                                                 GetViewportSize                                   //0x0000(0x0229)
  WorldContextObject*                                                 GetViewportScale                                  //0x0000(0x0229)
  PlayerController*                                                   GetPlayerScreenWidgetGeometry                     //0x0000(0x0229)
  Player*                                                             GetMousePositionScaledByDPI                       //0x0000(0x0229)
  WorldContextObject*                                                 GetMousePositionOnViewport                        //0x0000(0x0229)
  *                                                                   GetMousePositionOnPlatform                        //0x0000(0x0229)
};


class WidgetNavigation : public Object
{
  WidgetNavigationData*                                               Up                                                //0x0028(0x0024)
  WidgetNavigationData*                                               Down                                              //0x004C(0x0024)
  WidgetNavigationData*                                               Left                                              //0x0070(0x0024)
  WidgetNavigationData*                                               Right                                             //0x0094(0x0024)
  WidgetNavigationData*                                               Next                                              //0x00B8(0x0024)
  WidgetNavigationData*                                               Previous                                          //0x00DC(0x0024)
};


class WidgetSwitcher : public PanelWidget
{
  *                                                                   ActiveWidgetIndex                                 //0x0120(0x0004)
  *                                                                   SetActiveWidgetIndex                              //0x0000(0x0229)
  Widget*                                                             SetActiveWidget                                   //0x0000(0x0229)
  ReturnValue*                                                        GetWidgetAtIndex                                  //0x0000(0x0229)
  *                                                                   GetNumWidgets                                     //0x0000(0x0229)
  *                                                                   GetActiveWidgetIndex                              //0x0000(0x0229)
  ReturnValue*                                                        GetActiveWidget                                   //0x0000(0x0229)
};


class WidgetSwitcherSlot : public PanelSlot
{
  Margin*                                                             Padding                                           //0x0040(0x0010)
  EHorizontalAlignment*                                               HorizontalAlignment                               //0x0050(0x0001)
  EVerticalAlignment*                                                 VerticalAlignment                                 //0x0051(0x0001)
  *                                                                   SetVerticalAlignment                              //0x0000(0x0229)
  *                                                                   SetPadding                                        //0x0000(0x0229)
  *                                                                   SetHorizontalAlignment                            //0x0000(0x0229)
};


class WidgetTree : public Object
{
  Widget*                                                             RootWidget                                        //0x0028(0x0008)
};


class WindowTitleBarArea : public ContentWidget
{
  *                                                                   bWindowButtonsEnabled                             //0x0120(0x0001)
  *                                                                   bDoubleClickTogglesFullscreen                     //0x0121(0x0001)
  *                                                                   SetVerticalAlignment                              //0x0000(0x0229)
  *                                                                   SetPadding                                        //0x0000(0x0229)
  *                                                                   SetHorizontalAlignment                            //0x0000(0x0229)
};


class WindowTitleBarAreaSlot : public PanelSlot
{
  Margin*                                                             Padding                                           //0x0038(0x0010)
  EHorizontalAlignment*                                               HorizontalAlignment                               //0x0048(0x0001)
  EVerticalAlignment*                                                 VerticalAlignment                                 //0x0049(0x0001)
  *                                                                   SetVerticalAlignment                              //0x0000(0x0229)
  *                                                                   SetPadding                                        //0x0000(0x0229)
  *                                                                   SetHorizontalAlignment                            //0x0000(0x0229)
};


class WrapBox : public PanelWidget
{
  Vector2D*                                                           InnerSlotPadding                                  //0x0120(0x0008)
  *                                                                   WrapWidth                                         //0x0128(0x0004)
  *                                                                   bExplicitWrapWidth                                //0x012C(0x0001)
  *                                                                   SetInnerSlotPadding                               //0x0000(0x0229)
  Content*                                                            AddChildToWrapBox                                 //0x0000(0x0229)
};


class WrapBoxSlot : public PanelSlot
{
  Margin*                                                             Padding                                           //0x0038(0x0010)
  *                                                                   bFillEmptySpace                                   //0x0048(0x0001)
  *                                                                   FillSpanWhenLessThan                              //0x004C(0x0004)
  EHorizontalAlignment*                                               HorizontalAlignment                               //0x0050(0x0001)
  EVerticalAlignment*                                                 VerticalAlignment                                 //0x0051(0x0001)
  *                                                                   SetVerticalAlignment                              //0x0000(0x0229)
  *                                                                   SetPadding                                        //0x0000(0x0229)
  *                                                                   SetHorizontalAlignment                            //0x0000(0x0229)
  *                                                                   SetFillSpanWhenLessThan                           //0x0000(0x0229)
  *                                                                   SetFillEmptySpace                                 //0x0000(0x0229)
};


class CameraRig_Crane : public Actor
{
  *                                                                   CranePitch                                        //0x0218(0x0004)
  *                                                                   CraneYaw                                          //0x021C(0x0004)
  *                                                                   CraneArmLength                                    //0x0220(0x0004)
  *                                                                   bLockMountPitch                                   //0x0224(0x0001)
  *                                                                   bLockMountYaw                                     //0x0225(0x0001)
  SceneComponent*                                                     TransformComponent                                //0x0228(0x0008)
  SceneComponent*                                                     CraneYawControl                                   //0x0230(0x0008)
  SceneComponent*                                                     CranePitchControl                                 //0x0238(0x0008)
  SceneComponent*                                                     CraneCameraMount                                  //0x0240(0x0008)
};


class CameraRig_Rail : public Actor
{
  *                                                                   CurrentPositionOnRail                             //0x0218(0x0004)
  *                                                                   bLockOrientationToRail                            //0x021C(0x0001)
  SceneComponent*                                                     TransformComponent                                //0x0220(0x0008)
  SplineComponent*                                                    RailSplineComponent                               //0x0228(0x0008)
  SceneComponent*                                                     RailCameraMount                                   //0x0230(0x0008)
  ReturnValue*                                                        GetRailSplineComponent                            //0x0000(0x0229)
};


class CameraActor : public Actor
{
  EAutoReceiveInput*                                                  AutoActivateForPlayer                             //0x0218(0x0001)
  CameraComponent*                                                    CameraComponent                                   //0x0220(0x0008)
  SceneComponent*                                                     SceneComponent                                    //0x0228(0x0008)
  *                                                                   bConstrainAspectRatio                             //0x0238(0x0001)
  *                                                                   AspectRatio                                       //0x023C(0x0004)
  *                                                                   FOVAngle                                          //0x0240(0x0004)
  *                                                                   PostProcessBlendWeight                            //0x0244(0x0004)
  PostProcessSettings*                                                PostProcessSettings                               //0x0250(0x0530)
  *                                                                   GetAutoActivatePlayerIndex                        //0x0000(0x0229)
};


class CineCameraActor : public CameraActor
{
  CameraLookatTrackingSettings*                                       LookatTrackingSettings                            //0x0780(0x0050)
  ReturnValue*                                                        GetCineCameraComponent                            //0x0000(0x0229)
};


class CameraComponent : public SceneComponent
{
  *                                                                   FieldOfView                                       //0x01F0(0x0004)
  *                                                                   OrthoWidth                                        //0x01F4(0x0004)
  *                                                                   OrthoNearClipPlane                                //0x01F8(0x0004)
  *                                                                   OrthoFarClipPlane                                 //0x01FC(0x0004)
  *                                                                   AspectRatio                                       //0x0200(0x0004)
  *                                                                   bConstrainAspectRatio                             //0x0204(0x0001)
  *                                                                   bUseFieldOfViewForLOD                             //0x0204(0x0001)
  *                                                                   bLockToHmd                                        //0x0204(0x0001)
  *                                                                   bUsePawnControlRotation                           //0x0204(0x0001)
  ECameraProjectionMode*                                              ProjectionMode                                    //0x0205(0x0001)
  *                                                                   PostProcessBlendWeight                            //0x0240(0x0004)
  PostProcessSettings*                                                PostProcessSettings                               //0x0270(0x0530)
  *                                                                   SetUseFieldOfViewForLOD                           //0x0000(0x0229)
  *                                                                   SetProjectionMode                                 //0x0000(0x0229)
  *                                                                   SetPostProcessBlendWeight                         //0x0000(0x0229)
  *                                                                   SetOrthoWidth                                     //0x0000(0x0229)
  *                                                                   SetOrthoNearClipPlane                             //0x0000(0x0229)
  *                                                                   SetOrthoFarClipPlane                              //0x0000(0x0229)
  *                                                                   SetFieldOfView                                    //0x0000(0x0229)
  *                                                                   SetConstraintAspectRatio                          //0x0000(0x0229)
  *                                                                   SetAspectRatio                                    //0x0000(0x0229)
  InBlendableObject*                                                  RemoveBlendable                                   //0x0000(0x0229)
  *                                                                   OnCameraMeshHiddenChanged                         //0x0000(0x0229)
  DesiredView*                                                        GetCameraView                                     //0x0000(0x0229)
  InBlendableObject*                                                  AddOrUpdateBlendable                              //0x0000(0x0229)
};


class CineCameraComponent : public CameraComponent
{
  CameraFilmbackSettings*                                             FilmbackSettings                                  //0x07A0(0x000C)
  CameraFilmbackSettings*                                             Filmback                                          //0x07AC(0x000C)
  CameraLensSettings*                                                 LensSettings                                      //0x07B8(0x0018)
  CameraFocusSettings*                                                FocusSettings                                     //0x07D0(0x0058)
  *                                                                   CurrentFocalLength                                //0x0828(0x0004)
  *                                                                   CurrentAperture                                   //0x082C(0x0004)
  *                                                                   CurrentFocusDistance                              //0x0830(0x0004)
  FilmbackPresets*                                                    FilmbackPresets                                   //0x0840(0x0010)
  LensPresets*                                                        LensPresets                                       //0x0850(0x0010)
  *                                                                   DefaultFilmbackPresetName                         //0x0860(0x0010)
  *                                                                   DefaultFilmbackPreset                             //0x0870(0x0010)
  *                                                                   DefaultLensPresetName                             //0x0880(0x0010)
  *                                                                   DefaultLensFocalLength                            //0x0890(0x0004)
  *                                                                   DefaultLensFStop                                  //0x0894(0x0004)
  *                                                                   SetLensPresetByName                               //0x0000(0x0229)
  *                                                                   SetFilmbackPresetByName                           //0x0000(0x0229)
  *                                                                   SetCurrentFocalLength                             //0x0000(0x0229)
  *                                                                   GetVerticalFieldOfView                            //0x0000(0x0229)
  *                                                                   GetLensPresetsCopy                                //0x0000(0x0229)
  *                                                                   GetLensPresetName                                 //0x0000(0x0229)
  *                                                                   GetHorizontalFieldOfView                          //0x0000(0x0229)
  *                                                                   GetFilmbackPresetName                             //0x0000(0x0229)
  *                                                                   GetDefaultFilmbackPresetName                      //0x0000(0x0229)
};


class AudioMixerBlueprintLibrary : public BlueprintFunctionLibrary
{
  *                                                                   TrimAudioCache                                    //0x0000(0x0229)
  WorldContextObject*                                                 StopRecordingOutput                               //0x0000(0x0229)
  WorldContextObject*                                                 StopAnalyzingOutput                               //0x0000(0x0229)
  WorldContextObject*                                                 StartRecordingOutput                              //0x0000(0x0229)
  WorldContextObject*                                                 StartAnalyzingOutput                              //0x0000(0x0229)
  WorldContextObject*                                                 SetBypassSourceEffectChainEntry                   //0x0000(0x0229)
  WorldContextObject*                                                 ResumeRecordingOutput                             //0x0000(0x0229)
  WorldContextObject*                                                 RemoveSourceEffectFromPresetChain                 //0x0000(0x0229)
  WorldContextObject*                                                 RemoveMasterSubmixEffect                          //0x0000(0x0229)
  SoundWave*                                                          PrimeSoundForPlayback                             //0x0000(0x0229)
  SoundCue*                                                           PrimeSoundCueForPlayback                          //0x0000(0x0229)
  WorldContextObject*                                                 PauseRecordingOutput                              //0x0000(0x0229)
  WorldContextObject*                                                 GetPhaseForFrequencies                            //0x0000(0x0229)
  WorldContextObject*                                                 GetNumberOfEntriesInSourceEffectChain             //0x0000(0x0229)
  WorldContextObject*                                                 GetMagnitudeForFrequencies                        //0x0000(0x0229)
  WorldContextObject*                                                 ClearMasterSubmixEffects                          //0x0000(0x0229)
  WorldContextObject*                                                 AddSourceEffectToPresetChain                      //0x0000(0x0229)
  WorldContextObject*                                                 AddMasterSubmixEffect                             //0x0000(0x0229)
};


class SoundEffectPreset : public Object
{
};


class SoundEffectSubmixPreset : public SoundEffectPreset
{
};


class SubmixEffectDynamicsProcessorPreset : public SoundEffectSubmixPreset
{
  SubmixEffectDynamicsProcessorSettings*                              Settings                                          //0x0090(0x0028)
  *                                                                   SetSettings                                       //0x0000(0x0229)
};


class SubmixEffectSubmixEQPreset : public SoundEffectSubmixPreset
{
  SubmixEffectSubmixEQSettings*                                       Settings                                          //0x0078(0x0010)
  *                                                                   SetSettings                                       //0x0000(0x0229)
};


class SubmixEffectReverbPreset : public SoundEffectSubmixPreset
{
  SubmixEffectReverbSettings*                                         Settings                                          //0x009C(0x0034)
  InReverbEffect*                                                     SetSettingsWithReverbEffect                       //0x0000(0x0229)
  *                                                                   SetSettings                                       //0x0000(0x0229)
};


class SubmixEffectReverbFastPreset : public SoundEffectSubmixPreset
{
  SubmixEffectReverbFastSettings*                                     Settings                                          //0x009C(0x0034)
  InReverbEffect*                                                     SetSettingsWithReverbEffect                       //0x0000(0x0229)
  *                                                                   SetSettings                                       //0x0000(0x0229)
};


class SoundBase : public Object
{
  SoundClass*                                                         SoundClassObject                                  //0x0028(0x0008)
  *                                                                   bDebug                                            //0x0030(0x0001)
  *                                                                   bOverrideConcurrency                              //0x0030(0x0001)
  *                                                                   bOutputToBusOnly                                  //0x0030(0x0001)
  *                                                                   bHasDelayNode                                     //0x0030(0x0001)
  *                                                                   bHasConcatenatorNode                              //0x0030(0x0001)
  *                                                                   bBypassVolumeScaleForPriority                     //0x0030(0x0001)
  UnderlyingType*                                                     VirtualizationMode                                //0x0031(0x0001)
  ConcurrencySet*                                                     ConcurrencySet                                    //0x0088(0x0050)
  SoundConcurrencySettings*                                           ConcurrencyOverrides                              //0x00D8(0x0020)
  *                                                                   Duration                                          //0x00F8(0x0004)
  *                                                                   MaxDistance                                       //0x00FC(0x0004)
  *                                                                   TotalSamples                                      //0x0100(0x0004)
  *                                                                   Priority                                          //0x0104(0x0004)
  SoundAttenuation*                                                   AttenuationSettings                               //0x0108(0x0008)
  SoundModulation*                                                    Modulation                                        //0x0110(0x0010)
  SoundSubmix*                                                        SoundSubmixObject                                 //0x0120(0x0008)
  SoundSubmixSends*                                                   SoundSubmixSends                                  //0x0128(0x0010)
  SoundEffectSourcePresetChain*                                       SourceEffectChain                                 //0x0138(0x0008)
  BusSends*                                                           BusSends                                          //0x0140(0x0010)
  PreEffectBusSends*                                                  PreEffectBusSends                                 //0x0150(0x0010)
};


class SoundWave : public SoundBase
{
  *                                                                   CompressionQuality                                //0x0160(0x0004)
  *                                                                   StreamingPriority                                 //0x0164(0x0004)
  UnderlyingType*                                                     SampleRateQuality                                 //0x0168(0x0001)
  ESoundGroup*                                                        SoundGroup                                        //0x016A(0x0001)
  *                                                                   bLooping                                          //0x016B(0x0001)
  *                                                                   bStreaming                                        //0x016B(0x0001)
  *                                                                   bSeekableStreaming                                //0x016B(0x0001)
  UnderlyingType*                                                     LoadingBehavior                                   //0x016C(0x0001)
  *                                                                   bMature                                           //0x016D(0x0001)
  *                                                                   bManualWordWrap                                   //0x016D(0x0001)
  *                                                                   bSingleLine                                       //0x016D(0x0001)
  *                                                                   bIsAmbisonics                                     //0x016D(0x0001)
  FrequenciesToAnalyze*                                               FrequenciesToAnalyze                              //0x0170(0x0010)
  CookedSpectralTimeData*                                             CookedSpectralTimeData                            //0x0180(0x0010)
  CookedEnvelopeTimeData*                                             CookedEnvelopeTimeData                            //0x0190(0x0010)
  *                                                                   InitialChunkSize                                  //0x01A0(0x0004)
  *                                                                   SpokenText                                        //0x01E8(0x0010)
  *                                                                   SubtitlePriority                                  //0x01F8(0x0004)
  *                                                                   Volume                                            //0x01FC(0x0004)
  *                                                                   Pitch                                             //0x0200(0x0004)
  *                                                                   NumChannels                                       //0x0204(0x0004)
  *                                                                   SampleRate                                        //0x0208(0x0004)
  Subtitles*                                                          Subtitles                                         //0x0218(0x0010)
  CurveTable*                                                         Curves                                            //0x0228(0x0008)
  CurveTable*                                                         InternalCurves                                    //0x0230(0x0008)
};


class SoundWaveProcedural : public SoundWave
{
};


class SynthSound : public SoundWaveProcedural
{
  SynthComponent*                                                     OwningSynthComponent                              //0x03D0(0x0008)
};


class NetAnalyticsAggregatorConfig : public Object
{
  NetAnalyticsData*                                                   NetAnalyticsData                                  //0x0028(0x0010)
};


class AssetRegistryImpl : public Object
{
};


class AssetRegistryHelpers : public Object
{
  *                                                                   ToSoftObjectPath                                  //0x0000(0x0229)
  *                                                                   SetFilterTagsAndValues                            //0x0000(0x0229)
  *                                                                   IsValid                                           //0x0000(0x0229)
  *                                                                   IsUAsset                                          //0x0000(0x0229)
  *                                                                   IsRedirector                                      //0x0000(0x0229)
  *                                                                   IsAssetLoaded                                     //0x0000(0x0229)
  *                                                                   GetTagValue                                       //0x0000(0x0229)
  *                                                                   GetFullName                                       //0x0000(0x0229)
  *                                                                   GetExportTextName                                 //0x0000(0x0229)
  ReturnValue*                                                        GetClass                                          //0x0000(0x0229)
  ReturnValue*                                                        GetAssetRegistry                                  //0x0000(0x0229)
  ReturnValue*                                                        GetAsset                                          //0x0000(0x0229)
  InAsset*                                                            CreateAssetData                                   //0x0000(0x0229)
};


class AssetRegistry : public Interface
{
  *                                                                   UseFilterToExcludeAssets                          //0x0000(0x0229)
  *                                                                   SearchAllAssets                                   //0x0000(0x0229)
  *                                                                   ScanPathsSynchronous                              //0x0000(0x0229)
  *                                                                   ScanModifiedAssetFiles                            //0x0000(0x0229)
  *                                                                   ScanFilesSynchronous                              //0x0000(0x0229)
  *                                                                   RunAssetsThroughFilter                            //0x0000(0x0229)
  *                                                                   PrioritizeSearchPath                              //0x0000(0x0229)
  *                                                                   K2_GetReferencers                                 //0x0000(0x0229)
  *                                                                   K2_GetDependencies                                //0x0000(0x0229)
  *                                                                   IsLoadingAssets                                   //0x0000(0x0229)
  *                                                                   HasAssets                                         //0x0000(0x0229)
  *                                                                   GetSubPaths                                       //0x0000(0x0229)
  *                                                                   GetAssetsByPath                                   //0x0000(0x0229)
  *                                                                   GetAssetsByPackageName                            //0x0000(0x0229)
  *                                                                   GetAssetsByClass                                  //0x0000(0x0229)
  *                                                                   GetAssets                                         //0x0000(0x0229)
  *                                                                   GetAssetByObjectPath                              //0x0000(0x0229)
  *                                                                   GetAllCachedPaths                                 //0x0000(0x0229)
  *                                                                   GetAllAssets                                      //0x0000(0x0229)
};


class BlueprintGameplayTagLibrary : public BlueprintFunctionLibrary
{
  *                                                                   RemoveGameplayTag                                 //0x0000(0x0229)
  *                                                                   NotEqual_TagTag                                   //0x0000(0x0229)
  *                                                                   NotEqual_TagContainerTagContainer                 //0x0000(0x0229)
  *                                                                   NotEqual_GameplayTagContainer                     //0x0000(0x0229)
  *                                                                   NotEqual_GameplayTag                              //0x0000(0x0229)
  *                                                                   MatchesTag                                        //0x0000(0x0229)
  *                                                                   MatchesAnyTags                                    //0x0000(0x0229)
  *                                                                   MakeLiteralGameplayTagContainer                   //0x0000(0x0229)
  *                                                                   MakeLiteralGameplayTag                            //0x0000(0x0229)
  *                                                                   MakeGameplayTagQuery                              //0x0000(0x0229)
  *                                                                   MakeGameplayTagContainerFromTag                   //0x0000(0x0229)
  *                                                                   MakeGameplayTagContainerFromArray                 //0x0000(0x0229)
  *                                                                   IsTagQueryEmpty                                   //0x0000(0x0229)
  *                                                                   IsGameplayTagValid                                //0x0000(0x0229)
  *                                                                   HasTag                                            //0x0000(0x0229)
  *                                                                   HasAnyTags                                        //0x0000(0x0229)
  *                                                                   HasAllTags                                        //0x0000(0x0229)
  TagContainerInterface*                                              HasAllMatchingGameplayTags                        //0x0000(0x0229)
  *                                                                   GetTagName                                        //0x0000(0x0229)
  *                                                                   GetNumGameplayTagsInContainer                     //0x0000(0x0229)
  *                                                                   GetDebugStringFromGameplayTagContainer            //0x0000(0x0229)
  *                                                                   GetDebugStringFromGameplayTag                     //0x0000(0x0229)
  WorldContextObject*                                                 GetAllActorsOfClassMatchingTagQuery               //0x0000(0x0229)
  *                                                                   EqualEqual_GameplayTagContainer                   //0x0000(0x0229)
  *                                                                   EqualEqual_GameplayTag                            //0x0000(0x0229)
  TagContainerInterface*                                              DoesTagAssetInterfaceHaveTag                      //0x0000(0x0229)
  *                                                                   DoesContainerMatchTagQuery                        //0x0000(0x0229)
  *                                                                   BreakGameplayTagContainer                         //0x0000(0x0229)
  *                                                                   AppendGameplayTagContainers                       //0x0000(0x0229)
  *                                                                   AddGameplayTag                                    //0x0000(0x0229)
};


class GameplayTagAssetInterface : public Interface
{
  *                                                                   HasMatchingGameplayTag                            //0x0000(0x0229)
  *                                                                   HasAnyMatchingGameplayTags                        //0x0000(0x0229)
  *                                                                   HasAllMatchingGameplayTags                        //0x0000(0x0229)
  *                                                                   GetOwnedGameplayTags                              //0x0000(0x0229)
};


class EditableGameplayTagQuery : public Object
{
  *                                                                   UserDescription                                   //0x0028(0x0010)
  EditableGameplayTagQueryExpression*                                 RootExpression                                    //0x0048(0x0008)
  GameplayTagQuery*                                                   TagQueryExportText_Helper                         //0x0050(0x0048)
};


class EditableGameplayTagQueryExpression : public Object
{
};


class EditableGameplayTagQueryExpression_AnyTagsMatch : public EditableGameplayTagQueryExpression
{
  GameplayTagContainer*                                               Tags                                              //0x0028(0x0020)
};


class EditableGameplayTagQueryExpression_AllTagsMatch : public EditableGameplayTagQueryExpression
{
  GameplayTagContainer*                                               Tags                                              //0x0028(0x0020)
};


class EditableGameplayTagQueryExpression_NoTagsMatch : public EditableGameplayTagQueryExpression
{
  GameplayTagContainer*                                               Tags                                              //0x0028(0x0020)
};


class EditableGameplayTagQueryExpression_AnyExprMatch : public EditableGameplayTagQueryExpression
{
  Expressions*                                                        Expressions                                       //0x0028(0x0010)
};


class EditableGameplayTagQueryExpression_AllExprMatch : public EditableGameplayTagQueryExpression
{
  Expressions*                                                        Expressions                                       //0x0028(0x0010)
};


class EditableGameplayTagQueryExpression_NoExprMatch : public EditableGameplayTagQueryExpression
{
  Expressions*                                                        Expressions                                       //0x0028(0x0010)
};


class GameplayTagsManager : public Object
{
  TagSources*                                                         TagSources                                        //0x00C0(0x0010)
  GameplayTagTables*                                                  GameplayTagTables                                 //0x01B0(0x0010)
};


class GameplayTagsList : public Object
{
  *                                                                   ConfigFileName                                    //0x0028(0x0010)
  GameplayTagList*                                                    GameplayTagList                                   //0x0038(0x0010)
};


class RestrictedGameplayTagsList : public Object
{
  *                                                                   ConfigFileName                                    //0x0028(0x0010)
  RestrictedGameplayTagList*                                          RestrictedGameplayTagList                         //0x0038(0x0010)
};


class GameplayTagsSettings : public GameplayTagsList
{
  *                                                                   ImportTagsFromConfig                              //0x0048(0x0001)
  *                                                                   WarnOnInvalidTags                                 //0x0049(0x0001)
  *                                                                   FastReplication                                   //0x004A(0x0001)
  *                                                                   InvalidTagCharacters                              //0x0050(0x0010)
  CategoryRemapping*                                                  CategoryRemapping                                 //0x0060(0x0010)
  GameplayTagTableList*                                               GameplayTagTableList                              //0x0070(0x0010)
  GameplayTagRedirects*                                               GameplayTagRedirects                              //0x0080(0x0010)
  CommonlyReplicatedTags*                                             CommonlyReplicatedTags                            //0x0090(0x0010)
  *                                                                   NumBitsForContainerSize                           //0x00A0(0x0004)
  *                                                                   NetIndexFirstBitSegment                           //0x00A4(0x0004)
  RestrictedConfigFiles*                                              RestrictedConfigFiles                             //0x00A8(0x0010)
};


class GameplayTagsDeveloperSettings : public Object
{
  *                                                                   DeveloperConfigName                               //0x0028(0x0010)
};


class PacketHandlerProfileConfig : public Object
{
  Components*                                                         Components                                        //0x0028(0x0010)
};


class MeshDescription : public Object
{
};


class MeshDescriptionBase : public Object
{
  *                                                                   SetVertexPosition                                 //0x0000(0x0229)
  *                                                                   SetPolygonVertexInstance                          //0x0000(0x0229)
  *                                                                   SetPolygonPolygonGroup                            //0x0000(0x0229)
  *                                                                   ReversePolygonFacing                              //0x0000(0x0229)
  *                                                                   ReserveNewVertices                                //0x0000(0x0229)
  *                                                                   ReserveNewVertexInstances                         //0x0000(0x0229)
  *                                                                   ReserveNewTriangles                               //0x0000(0x0229)
  *                                                                   ReserveNewPolygons                                //0x0000(0x0229)
  *                                                                   ReserveNewPolygonGroups                           //0x0000(0x0229)
  *                                                                   ReserveNewEdges                                   //0x0000(0x0229)
  *                                                                   IsVertexValid                                     //0x0000(0x0229)
  *                                                                   IsVertexOrphaned                                  //0x0000(0x0229)
  *                                                                   IsVertexInstanceValid                             //0x0000(0x0229)
  *                                                                   IsTriangleValid                                   //0x0000(0x0229)
  *                                                                   IsTrianglePartOfNgon                              //0x0000(0x0229)
  *                                                                   IsPolygonValid                                    //0x0000(0x0229)
  *                                                                   IsPolygonGroupValid                               //0x0000(0x0229)
  *                                                                   IsEmpty                                           //0x0000(0x0229)
  *                                                                   IsEdgeValid                                       //0x0000(0x0229)
  *                                                                   IsEdgeInternalToPolygon                           //0x0000(0x0229)
  *                                                                   IsEdgeInternal                                    //0x0000(0x0229)
  *                                                                   GetVertexVertexInstances                          //0x0000(0x0229)
  *                                                                   GetVertexPosition                                 //0x0000(0x0229)
  *                                                                   GetVertexPairEdge                                 //0x0000(0x0229)
  *                                                                   GetVertexInstanceVertex                           //0x0000(0x0229)
  *                                                                   GetVertexInstancePairEdge                         //0x0000(0x0229)
  *                                                                   GetVertexInstanceForTriangleVertex                //0x0000(0x0229)
  *                                                                   GetVertexInstanceForPolygonVertex                 //0x0000(0x0229)
  *                                                                   GetVertexInstanceConnectedTriangles               //0x0000(0x0229)
  *                                                                   GetVertexInstanceConnectedPolygons                //0x0000(0x0229)
  *                                                                   GetVertexConnectedTriangles                       //0x0000(0x0229)
  *                                                                   GetVertexConnectedPolygons                        //0x0000(0x0229)
  *                                                                   GetVertexConnectedEdges                           //0x0000(0x0229)
  *                                                                   GetVertexAdjacentVertices                         //0x0000(0x0229)
  *                                                                   GetTriangleVertices                               //0x0000(0x0229)
  *                                                                   GetTriangleVertexInstances                        //0x0000(0x0229)
  *                                                                   GetTriangleVertexInstance                         //0x0000(0x0229)
  *                                                                   GetTrianglePolygonGroup                           //0x0000(0x0229)
  *                                                                   GetTrianglePolygon                                //0x0000(0x0229)
  *                                                                   GetTriangleEdges                                  //0x0000(0x0229)
  *                                                                   GetTriangleAdjacentTriangles                      //0x0000(0x0229)
  *                                                                   GetPolygonVertices                                //0x0000(0x0229)
  *                                                                   GetPolygonVertexInstances                         //0x0000(0x0229)
  *                                                                   GetPolygonTriangles                               //0x0000(0x0229)
  *                                                                   GetPolygonPolygonGroup                            //0x0000(0x0229)
  *                                                                   GetPolygonPerimeterEdges                          //0x0000(0x0229)
  *                                                                   GetPolygonInternalEdges                           //0x0000(0x0229)
  *                                                                   GetPolygonGroupPolygons                           //0x0000(0x0229)
  *                                                                   GetPolygonAdjacentPolygons                        //0x0000(0x0229)
  *                                                                   GetNumVertexVertexInstances                       //0x0000(0x0229)
  *                                                                   GetNumVertexInstanceConnectedTriangles            //0x0000(0x0229)
  *                                                                   GetNumVertexInstanceConnectedPolygons             //0x0000(0x0229)
  *                                                                   GetNumVertexConnectedTriangles                    //0x0000(0x0229)
  *                                                                   GetNumVertexConnectedPolygons                     //0x0000(0x0229)
  *                                                                   GetNumVertexConnectedEdges                        //0x0000(0x0229)
  *                                                                   GetNumPolygonVertices                             //0x0000(0x0229)
  *                                                                   GetNumPolygonTriangles                            //0x0000(0x0229)
  *                                                                   GetNumPolygonInternalEdges                        //0x0000(0x0229)
  *                                                                   GetNumPolygonGroupPolygons                        //0x0000(0x0229)
  *                                                                   GetNumEdgeConnectedTriangles                      //0x0000(0x0229)
  *                                                                   GetNumEdgeConnectedPolygons                       //0x0000(0x0229)
  *                                                                   GetEdgeVertices                                   //0x0000(0x0229)
  *                                                                   GetEdgeVertex                                     //0x0000(0x0229)
  *                                                                   GetEdgeConnectedTriangles                         //0x0000(0x0229)
  *                                                                   GetEdgeConnectedPolygons                          //0x0000(0x0229)
  *                                                                   Empty                                             //0x0000(0x0229)
  *                                                                   DeleteVertexInstance                              //0x0000(0x0229)
  *                                                                   DeleteVertex                                      //0x0000(0x0229)
  *                                                                   DeleteTriangle                                    //0x0000(0x0229)
  *                                                                   DeletePolygonGroup                                //0x0000(0x0229)
  *                                                                   DeletePolygon                                     //0x0000(0x0229)
  *                                                                   DeleteEdge                                        //0x0000(0x0229)
  *                                                                   CreateVertexWithID                                //0x0000(0x0229)
  *                                                                   CreateVertexInstanceWithID                        //0x0000(0x0229)
  *                                                                   CreateVertexInstance                              //0x0000(0x0229)
  *                                                                   CreateVertex                                      //0x0000(0x0229)
  *                                                                   CreateTriangleWithID                              //0x0000(0x0229)
  *                                                                   CreateTriangle                                    //0x0000(0x0229)
  *                                                                   CreatePolygonWithID                               //0x0000(0x0229)
  *                                                                   CreatePolygonGroupWithID                          //0x0000(0x0229)
  *                                                                   CreatePolygonGroup                                //0x0000(0x0229)
  *                                                                   CreatePolygon                                     //0x0000(0x0229)
  *                                                                   CreateEdgeWithID                                  //0x0000(0x0229)
  *                                                                   CreateEdge                                        //0x0000(0x0229)
  *                                                                   ComputePolygonTriangulation                       //0x0000(0x0229)
};


class StaticMeshDescription : public MeshDescriptionBase
{
  *                                                                   SetVertexInstanceUV                               //0x0000(0x0229)
  *                                                                   SetPolygonGroupMaterialSlotName                   //0x0000(0x0229)
  *                                                                   GetVertexInstanceUV                               //0x0000(0x0229)
  *                                                                   CreateCube                                        //0x0000(0x0229)
};


class ClothConfigBase : public Object
{
};


class ClothingAssetBase : public Object
{
  *                                                                   ImportedFilePath                                  //0x0028(0x0010)
  Guid*                                                               AssetGuid                                         //0x0038(0x0010)
};


class ClothingSimulationFactory : public Object
{
};


class ClothingSimulationInteractor : public Object
{
  *                                                                   PhysicsAssetUpdated                               //0x0000(0x0229)
  *                                                                   ClothConfigUpdated                                //0x0000(0x0229)
};


class ClothPhysicalMeshDataBase : public Object
{
  Vertices*                                                           Vertices                                          //0x0028(0x0010)
  Normals*                                                            Normals                                           //0x0038(0x0010)
  Indices*                                                            Indices                                           //0x0048(0x0010)
  InverseMasses*                                                      InverseMasses                                     //0x0058(0x0010)
  BoneData*                                                           BoneData                                          //0x0068(0x0010)
  *                                                                   NumFixedVerts                                     //0x0078(0x0004)
  *                                                                   MaxBoneWeights                                    //0x007C(0x0004)
  SelfCollisionIndices*                                               SelfCollisionIndices                              //0x0080(0x0010)
};


class EyeTrackerFunctionLibrary : public BlueprintFunctionLibrary
{
  PlayerController*                                                   SetEyeTrackedPlayer                               //0x0000(0x0229)
  *                                                                   IsStereoGazeDataAvailable                         //0x0000(0x0229)
  *                                                                   IsEyeTrackerConnected                             //0x0000(0x0229)
  *                                                                   GetStereoGazeData                                 //0x0000(0x0229)
  *                                                                   GetGazeData                                       //0x0000(0x0229)
};


class JsonUtilitiesDummyObject : public Object
{
};


class DefaultLevelSequenceInstanceData : public Object
{
  Actor*                                                              TransformOriginActor                              //0x0030(0x0008)
  Transform*                                                          TransformOrigin                                   //0x0040(0x0030)
};


class LevelSequenceMetaData : public Interface
{
};


class LevelSequence : public MovieSceneSequence
{
  MovieScene*                                                         MovieScene                                        //0x0348(0x0008)
  LevelSequenceObjectReferenceMap*                                    ObjectReferences                                  //0x0350(0x0050)
  LevelSequenceBindingReferences*                                     BindingReferences                                 //0x03A0(0x00A0)
  PossessedObjects_Key*                                               PossessedObjects                                  //0x0440(0x0050)
  Class*                                                              DirectorClass                                     //0x0490(0x0008)
  InClass*                                                            RemoveMetaDataByClass                             //0x0000(0x0229)
  InClass*                                                            FindOrAddMetaDataByClass                          //0x0000(0x0229)
  InClass*                                                            FindMetaDataByClass                               //0x0000(0x0229)
  InMetaData*                                                         CopyMetaData                                      //0x0000(0x0229)
};


class LevelSequenceBurnInInitSettings : public Object
{
};


class LevelSequenceBurnInOptions : public Object
{
  *                                                                   bUseBurnIn                                        //0x0028(0x0001)
  SoftClassPath*                                                      BurnInClass                                       //0x0030(0x0018)
  LevelSequenceBurnInInitSettings*                                    Settings                                          //0x0048(0x0008)
  *                                                                   SetBurnIn                                         //0x0000(0x0229)
};


class LevelSequenceActor : public Actor
{
  MovieSceneSequencePlaybackSettings*                                 PlaybackSettings                                  //0x0228(0x0014)
  LevelSequencePlayer*                                                SequencePlayer                                    //0x0240(0x0008)
  SoftObjectPath*                                                     LevelSequence                                     //0x0248(0x0018)
  AdditionalEventReceivers*                                           AdditionalEventReceivers                          //0x0260(0x0010)
  LevelSequenceCameraSettings*                                        CameraSettings                                    //0x0270(0x0002)
  LevelSequenceBurnInOptions*                                         BurnInOptions                                     //0x0278(0x0008)
  MovieSceneBindingOverrides*                                         BindingOverrides                                  //0x0280(0x0008)
  *                                                                   bAutoPlay                                         //0x0288(0x0001)
  *                                                                   bOverrideInstanceData                             //0x0288(0x0001)
  *                                                                   bReplicatePlayback                                //0x0288(0x0001)
  Object*                                                             DefaultInstanceData                               //0x0290(0x0008)
  LevelSequenceBurnIn*                                                BurnInInstance                                    //0x0298(0x0008)
  *                                                                   bShowBurnin                                       //0x02A0(0x0001)
  *                                                                   ShowBurnin                                        //0x0000(0x0229)
  InSequence*                                                         SetSequence                                       //0x0000(0x0229)
  *                                                                   SetReplicatePlayback                              //0x0000(0x0229)
  AdditionalReceivers*                                                SetEventReceivers                                 //0x0000(0x0229)
  Actors*                                                             SetBindingByTag                                   //0x0000(0x0229)
  Actors*                                                             SetBinding                                        //0x0000(0x0229)
  *                                                                   ResetBindings                                     //0x0000(0x0229)
  *                                                                   ResetBinding                                      //0x0000(0x0229)
  Actor*                                                              RemoveBindingByTag                                //0x0000(0x0229)
  Actor*                                                              RemoveBinding                                     //0x0000(0x0229)
  *                                                                   OnLevelSequenceLoaded__DelegateSignature          //0x0000(0x0229)
  ReturnValue*                                                        LoadSequence                                      //0x0000(0x0229)
  *                                                                   HideBurnin                                        //0x0000(0x0229)
  ReturnValue*                                                        GetSequencePlayer                                 //0x0000(0x0229)
  ReturnValue*                                                        GetSequence                                       //0x0000(0x0229)
  *                                                                   FindNamedBindings                                 //0x0000(0x0229)
  *                                                                   FindNamedBinding                                  //0x0000(0x0229)
  Actor*                                                              AddBindingByTag                                   //0x0000(0x0229)
  Actor*                                                              AddBinding                                        //0x0000(0x0229)
};


class LevelSequenceBurnIn : public UserWidget
{
  LevelSequencePlayerSnapshot*                                        FrameInformation                                  //0x0230(0x00B8)
  LevelSequenceActor*                                                 LevelSequenceActor                                //0x02E8(0x0008)
  InSettings*                                                         SetSettings                                       //0x0000(0x0229)
  ReturnValue*                                                        GetSettingsClass                                  //0x0000(0x0229)
};


class LevelSequenceDirector : public Object
{
  LevelSequencePlayer*                                                Player                                            //0x0028(0x0008)
  *                                                                   OnCreated                                         //0x0000(0x0229)
};


class BlueprintCore : public Object
{
  Class*                                                              SkeletonGeneratedClass                            //0x0028(0x0008)
  Class*                                                              GeneratedClass                                    //0x0030(0x0008)
  *                                                                   bLegacyNeedToPurgeSkelRefs                        //0x0038(0x0001)
  Guid*                                                               BlueprintGuid                                     //0x003C(0x0010)
};


class Blueprint : public BlueprintCore
{
  Class*                                                              ParentClass                                       //0x0050(0x0008)
  EBlueprintType*                                                     BlueprintType                                     //0x0058(0x0001)
  *                                                                   bRecompileOnLoad                                  //0x0059(0x0001)
  *                                                                   bHasBeenRegenerated                               //0x0059(0x0001)
  *                                                                   bIsRegeneratingOnLoad                             //0x0059(0x0001)
  *                                                                   BlueprintSystemVersion                            //0x005C(0x0004)
  SimpleConstructionScript*                                           SimpleConstructionScript                          //0x0060(0x0008)
  ComponentTemplates*                                                 ComponentTemplates                                //0x0068(0x0010)
  Timelines*                                                          Timelines                                         //0x0078(0x0010)
  ComponentClassOverrides*                                            ComponentClassOverrides                           //0x0088(0x0010)
  InheritableComponentHandler*                                        InheritableComponentHandler                       //0x0098(0x0008)
};


class LegacyLevelSequenceDirectorBlueprint : public Blueprint
{
};


class LevelSequencePlayer : public MovieSceneSequencePlayer
{
  OnLevelSequencePlayerCameraCutEvent__DelegateSignature*             OnCameraCut                                       //0x0870(0x0010)
  ReturnValue*                                                        GetActiveCameraComponent                          //0x0000(0x0229)
  WorldContextObject*                                                 CreateLevelSequencePlayer                         //0x0000(0x0229)
};


class MovieSceneCaptureProtocolBase : public Object
{
  UnderlyingType*                                                     State                                             //0x0050(0x0001)
  *                                                                   IsCapturing                                       //0x0000(0x0229)
  *                                                                   GetState                                          //0x0000(0x0229)
};


class MovieSceneAudioCaptureProtocolBase : public MovieSceneCaptureProtocolBase
{
};


class NullAudioCaptureProtocol : public MovieSceneAudioCaptureProtocolBase
{
};


class MasterAudioSubmixCaptureProtocol : public MovieSceneAudioCaptureProtocolBase
{
  *                                                                   Filename                                          //0x0058(0x0010)
};


class MovieSceneImageCaptureProtocolBase : public MovieSceneCaptureProtocolBase
{
};


class CompositionGraphCaptureProtocol : public MovieSceneImageCaptureProtocolBase
{
  CompositionGraphCapturePasses*                                      IncludeRenderPasses                               //0x0058(0x0010)
  *                                                                   bCaptureFramesInHDR                               //0x0068(0x0001)
  *                                                                   HDRCompressionQuality                             //0x006C(0x0004)
  EHDRCaptureGamut*                                                   CaptureGamut                                      //0x0070(0x0001)
  SoftObjectPath*                                                     PostProcessingMaterial                            //0x0078(0x0018)
  *                                                                   bDisableScreenPercentage                          //0x0090(0x0001)
  MaterialInterface*                                                  PostProcessingMaterialPtr                         //0x0098(0x0008)
};


class FrameGrabberProtocol : public MovieSceneImageCaptureProtocolBase
{
};


class ImageSequenceProtocol : public FrameGrabberProtocol
{
};


class CompressedImageSequenceProtocol : public ImageSequenceProtocol
{
  *                                                                   CompressionQuality                                //0x00D8(0x0004)
};


class ImageSequenceProtocol_BMP : public ImageSequenceProtocol
{
};


class ImageSequenceProtocol_PNG : public CompressedImageSequenceProtocol
{
};


class ImageSequenceProtocol_JPG : public CompressedImageSequenceProtocol
{
};


class ImageSequenceProtocol_EXR : public ImageSequenceProtocol
{
  *                                                                   bCompressed                                       //0x00D8(0x0001)
  EHDRCaptureGamut*                                                   CaptureGamut                                      //0x00D9(0x0001)
};


class MovieSceneCaptureInterface : public Interface
{
};


class MovieSceneCapture : public Object
{
  SoftClassPath*                                                      ImageCaptureProtocolType                          //0x0038(0x0018)
  SoftClassPath*                                                      AudioCaptureProtocolType                          //0x0050(0x0018)
  MovieSceneImageCaptureProtocolBase*                                 ImageCaptureProtocol                              //0x0068(0x0008)
  MovieSceneAudioCaptureProtocolBase*                                 AudioCaptureProtocol                              //0x0070(0x0008)
  MovieSceneCaptureSettings*                                          Settings                                          //0x0078(0x0070)
  *                                                                   bUseSeparateProcess                               //0x00E8(0x0001)
  *                                                                   bCloseEditorWhenCaptureStarts                     //0x00E9(0x0001)
  *                                                                   AdditionalCommandLineArguments                    //0x00F0(0x0010)
  *                                                                   InheritedCommandLineArguments                     //0x0100(0x0010)
  ProtocolType*                                                       SetImageCaptureProtocolType                       //0x0000(0x0229)
  ProtocolType*                                                       SetAudioCaptureProtocolType                       //0x0000(0x0229)
  ReturnValue*                                                        GetImageCaptureProtocol                           //0x0000(0x0229)
  ReturnValue*                                                        GetAudioCaptureProtocol                           //0x0000(0x0229)
};


class LevelCapture : public MovieSceneCapture
{
  *                                                                   bAutoStartCapture                                 //0x0220(0x0001)
  Guid*                                                               PrerequisiteActorId                               //0x022C(0x0010)
};


class MovieSceneCaptureEnvironment : public Object
{
  *                                                                   IsCaptureInProgress                               //0x0000(0x0229)
  *                                                                   GetCaptureFrameNumber                             //0x0000(0x0229)
  *                                                                   GetCaptureElapsedTime                             //0x0000(0x0229)
  ReturnValue*                                                        FindImageCaptureProtocol                          //0x0000(0x0229)
  ReturnValue*                                                        FindAudioCaptureProtocol                          //0x0000(0x0229)
};


class UserDefinedCaptureProtocol : public MovieSceneImageCaptureProtocolBase
{
  World*                                                              World                                             //0x0058(0x0008)
  *                                                                   StopCapturingFinalPixels                          //0x0000(0x0229)
  *                                                                   StartCapturingFinalPixels                         //0x0000(0x0229)
  Buffer*                                                             ResolveBuffer                                     //0x0000(0x0229)
  *                                                                   OnWarmUp                                          //0x0000(0x0229)
  *                                                                   OnTick                                            //0x0000(0x0229)
  *                                                                   OnStartCapture                                    //0x0000(0x0229)
  *                                                                   OnSetup                                           //0x0000(0x0229)
  *                                                                   OnPreTick                                         //0x0000(0x0229)
  *                                                                   OnPixelsReceived                                  //0x0000(0x0229)
  *                                                                   OnPauseCapture                                    //0x0000(0x0229)
  *                                                                   OnFinalize                                        //0x0000(0x0229)
  *                                                                   OnCaptureFrame                                    //0x0000(0x0229)
  *                                                                   OnCanFinalize                                     //0x0000(0x0229)
  *                                                                   OnBeginFinalize                                   //0x0000(0x0229)
  *                                                                   GetCurrentFrameMetrics                            //0x0000(0x0229)
  *                                                                   GenerateFilename                                  //0x0000(0x0229)
};


class UserDefinedImageCaptureProtocol : public UserDefinedCaptureProtocol
{
  UnderlyingType*                                                     Format                                            //0x00D8(0x0001)
  *                                                                   bEnableCompression                                //0x00D9(0x0001)
  *                                                                   CompressionQuality                                //0x00DC(0x0004)
  *                                                                   WriteImageToDisk                                  //0x0000(0x0229)
  *                                                                   GenerateFilenameForCurrentFrame                   //0x0000(0x0229)
  Buffer*                                                             GenerateFilenameForBuffer                         //0x0000(0x0229)
};


class VideoCaptureProtocol : public FrameGrabberProtocol
{
  *                                                                   bUseCompression                                   //0x0068(0x0001)
  *                                                                   CompressionQuality                                //0x006C(0x0004)
};


class MoviePlayerSettings : public Object
{
  *                                                                   bWaitForMoviesToComplete                          //0x0028(0x0001)
  *                                                                   bMoviesAreSkippable                               //0x0029(0x0001)
  StartupMovies*                                                      StartupMovies                                     //0x0030(0x0010)
};


class Model : public Object
{
};


class Channel : public Object
{
  NetConnection*                                                      Connection                                        //0x0028(0x0008)
};


class ActorChannel : public Channel
{
  Actor*                                                              Actor                                             //0x0070(0x0008)
  CreateSubObjects*                                                   CreateSubObjects                                  //0x0160(0x0010)
};


class AnimationAsset : public Object
{
  Skeleton*                                                           Skeleton                                          //0x0038(0x0008)
  MetaData*                                                           MetaData                                          //0x0060(0x0010)
  AssetUserData*                                                      AssetUserData                                     //0x0070(0x0010)
};


class BlendSpaceBase : public AnimationAsset
{
  *                                                                   bRotationBlendInMeshSpace                         //0x0088(0x0001)
  *                                                                   AnimLength                                        //0x008C(0x0004)
  InterpolationParameter*                                             InterpolationParam                                //0x0090(0x0008)
  *                                                                   TargetWeightInterpolationSpeedPerSec              //0x00A8(0x0004)
  ENotifyTriggerMode*                                                 NotifyTriggerMode                                 //0x00AC(0x0001)
  PerBoneBlend*                                                       PerBoneBlend                                      //0x00B0(0x0010)
  *                                                                   SampleIndexWithMarkers                            //0x00C0(0x0004)
  SampleData*                                                         SampleData                                        //0x00C8(0x0010)
  GridSamples*                                                        GridSamples                                       //0x00D8(0x0010)
  BlendParameter*                                                     BlendParameters                                   //0x00E8(0x0020)
};


class BlendSpace : public BlendSpaceBase
{
  EBlendSpaceAxis*                                                    AxisToScaleAnimation                              //0x0148(0x0001)
};


class AimOffsetBlendSpace : public BlendSpace
{
};


class BlendSpace1D : public BlendSpaceBase
{
  *                                                                   bScaleAnimation                                   //0x0148(0x0001)
};


class AimOffsetBlendSpace1D : public BlendSpace1D
{
};


class AISystemBase : public Object
{
  SoftClassPath*                                                      AISystemClassName                                 //0x0028(0x0018)
  *                                                                   AISystemModuleName                                //0x0040(0x0008)
  *                                                                   bInstantiateAISystemOnClient                      //0x0050(0x0001)
};


class AmbientSound : public Actor
{
  AudioComponent*                                                     AudioComponent                                    //0x0218(0x0008)
  *                                                                   Stop                                              //0x0000(0x0229)
  *                                                                   Play                                              //0x0000(0x0229)
  *                                                                   FadeOut                                           //0x0000(0x0229)
  *                                                                   FadeIn                                            //0x0000(0x0229)
  *                                                                   AdjustVolume                                      //0x0000(0x0229)
};


class AnimationSettings : public DeveloperSettings
{
  *                                                                   CompressCommandletVersion                         //0x0038(0x0004)
  KeyEndEffectorsMatchNameArray*                                      KeyEndEffectorsMatchNameArray                     //0x0040(0x0010)
  Class*                                                              DefaultCompressionAlgorithm                       //0x0050(0x0008)
  AnimationCompressionFormat*                                         RotationCompressionFormat                         //0x0058(0x0001)
  AnimationCompressionFormat*                                         TranslationCompressionFormat                      //0x0059(0x0001)
  *                                                                   MaxCurveError                                     //0x005C(0x0004)
  *                                                                   AlternativeCompressionThreshold                   //0x0060(0x0004)
  *                                                                   ForceRecompression                                //0x0064(0x0001)
  *                                                                   bOnlyCheckForMissingSkeletalMeshes                //0x0065(0x0001)
  *                                                                   bForceBelowThreshold                              //0x0066(0x0001)
  *                                                                   bFirstRecompressUsingCurrentOrDefault             //0x0067(0x0001)
  *                                                                   bRaiseMaxErrorToExisting                          //0x0068(0x0001)
  *                                                                   bTryExhaustiveSearch                              //0x0069(0x0001)
  *                                                                   bEnableSegmenting                                 //0x006A(0x0001)
  *                                                                   bEnablePerformanceLog                             //0x006B(0x0001)
  *                                                                   bStripAnimationDataOnDedicatedServer              //0x006C(0x0001)
  *                                                                   bTickAnimationOnSkeletalMeshInit                  //0x006D(0x0001)
};


class AnimBlueprint : public Blueprint
{
  Skeleton*                                                           TargetSkeleton                                    //0x00A8(0x0008)
  Groups*                                                             Groups                                            //0x00B0(0x0010)
  *                                                                   bUseMultiThreadedAnimationUpdate                  //0x00C0(0x0001)
  *                                                                   bWarnAboutBlueprintUsage                          //0x00C1(0x0001)
};


class AnimBlueprintGeneratedClass : public BlueprintGeneratedClass
{
  BakedStateMachines*                                                 BakedStateMachines                                //0x0308(0x0010)
  Skeleton*                                                           TargetSkeleton                                    //0x0318(0x0008)
  AnimNotifies*                                                       AnimNotifies                                      //0x0320(0x0010)
  OrderedSavedPoseIndicesMap_Key*                                     OrderedSavedPoseIndicesMap                        //0x0330(0x0050)
  SyncGroupNames*                                                     SyncGroupNames                                    //0x0400(0x0010)
  EvaluateGraphExposedInputs*                                         EvaluateGraphExposedInputs                        //0x0410(0x0010)
  GraphAssetPlayerInformation_Key*                                    GraphAssetPlayerInformation                       //0x0420(0x0050)
  GraphBlendOptions_Key*                                              GraphBlendOptions                                 //0x0470(0x0050)
};


class AnimClassData : public Object
{
  BakedStateMachines*                                                 BakedStateMachines                                //0x0030(0x0010)
  Skeleton*                                                           TargetSkeleton                                    //0x0040(0x0008)
  AnimNotifies*                                                       AnimNotifies                                      //0x0048(0x0010)
  OrderedSavedPoseIndicesMap_Key*                                     OrderedSavedPoseIndicesMap                        //0x0058(0x0050)
  AnimBlueprintFunctions*                                             AnimBlueprintFunctions                            //0x00A8(0x0010)
  AnimNodeProperties*                                                 AnimNodeProperties                                //0x00B8(0x0010)
  LinkedAnimGraphNodeProperties*                                      LinkedAnimGraphNodeProperties                     //0x00C8(0x0010)
  LinkedAnimLayerNodeProperties*                                      LinkedAnimLayerNodeProperties                     //0x00D8(0x0010)
  PreUpdateNodeProperties*                                            PreUpdateNodeProperties                           //0x00E8(0x0010)
  DynamicResetNodeProperties*                                         DynamicResetNodeProperties                        //0x00F8(0x0010)
  StateMachineNodeProperties*                                         StateMachineNodeProperties                        //0x0108(0x0010)
  InitializationNodeProperties*                                       InitializationNodeProperties                      //0x0118(0x0010)
  GraphNameAssetPlayers_Key*                                          GraphNameAssetPlayers                             //0x0128(0x0050)
  SyncGroupNames*                                                     SyncGroupNames                                    //0x0178(0x0010)
  EvaluateGraphExposedInputs*                                         EvaluateGraphExposedInputs                        //0x0188(0x0010)
  GraphBlendOptions_Key*                                              GraphBlendOptions                                 //0x0198(0x0050)
};


class AnimClassInterface : public Interface
{
};


class AnimSequenceBase : public AnimationAsset
{
  Notifies*                                                           Notifies                                          //0x0080(0x0010)
  *                                                                   SequenceLength                                    //0x0090(0x0004)
  *                                                                   RateScale                                         //0x0094(0x0004)
  RawCurveTracks*                                                     RawCurveData                                      //0x0098(0x0010)
  *                                                                   GetPlayLength                                     //0x0000(0x0229)
};


class AnimCompositeBase : public AnimSequenceBase
{
};


class AnimComposite : public AnimCompositeBase
{
  AnimTrack*                                                          AnimationTrack                                    //0x00A8(0x0010)
};


class AnimCompress : public Object
{
  *                                                                   Description                                       //0x0028(0x0010)
  *                                                                   bNeedsSkeleton                                    //0x0038(0x0001)
  *                                                                   bEnableSegmenting                                 //0x0038(0x0001)
  *                                                                   IdealNumFramesPerSegment                          //0x003C(0x0004)
  *                                                                   MaxNumFramesPerSegment                            //0x0040(0x0004)
  AnimationCompressionFormat*                                         TranslationCompressionFormat                      //0x0044(0x0001)
  AnimationCompressionFormat*                                         RotationCompressionFormat                         //0x0045(0x0001)
  AnimationCompressionFormat*                                         ScaleCompressionFormat                            //0x0046(0x0001)
  *                                                                   MaxCurveError                                     //0x0048(0x0004)
};


class AnimCompress_Automatic : public AnimCompress
{
  *                                                                   MaxEndEffectorError                               //0x0050(0x0004)
  *                                                                   bRunCurrentDefaultCompressor                      //0x0054(0x0001)
  *                                                                   bAutoReplaceIfExistingErrorTooGreat               //0x0054(0x0001)
  *                                                                   bRaiseMaxErrorToExisting                          //0x0054(0x0001)
  *                                                                   bTryExhaustiveSearch                              //0x0054(0x0001)
};


class AnimCompress_BitwiseCompressOnly : public AnimCompress
{
};


class AnimCompress_LeastDestructive : public AnimCompress
{
};


class AnimCompress_RemoveLinearKeys : public AnimCompress
{
  *                                                                   MaxPosDiff                                        //0x0050(0x0004)
  *                                                                   MaxAngleDiff                                      //0x0054(0x0004)
  *                                                                   MaxScaleDiff                                      //0x0058(0x0004)
  *                                                                   MaxEffectorDiff                                   //0x005C(0x0004)
  *                                                                   MinEffectorDiff                                   //0x0060(0x0004)
  *                                                                   EffectorDiffSocket                                //0x0064(0x0004)
  *                                                                   ParentKeyScale                                    //0x0068(0x0004)
  *                                                                   bRetarget                                         //0x006C(0x0001)
  *                                                                   bActuallyFilterLinearKeys                         //0x006C(0x0001)
  *                                                                   bOptimizeForForwardPlayback                       //0x006C(0x0001)
  *                                                                   bUseDecompression                                 //0x006C(0x0001)
  *                                                                   bUseMultithreading                                //0x006C(0x0001)
};


class AnimCompress_PerTrackCompression : public AnimCompress_RemoveLinearKeys
{
  *                                                                   MaxZeroingThreshold                               //0x0070(0x0004)
  *                                                                   MaxPosDiffBitwise                                 //0x0074(0x0004)
  *                                                                   MaxAngleDiffBitwise                               //0x0078(0x0004)
  *                                                                   MaxScaleDiffBitwise                               //0x007C(0x0004)
  AllowedRotationFormats*                                             AllowedRotationFormats                            //0x0080(0x0010)
  AllowedTranslationFormats*                                          AllowedTranslationFormats                         //0x0090(0x0010)
  AllowedScaleFormats*                                                AllowedScaleFormats                               //0x00A0(0x0010)
  *                                                                   bResampleAnimation                                //0x00B0(0x0001)
  *                                                                   ResampledFramerate                                //0x00B4(0x0004)
  *                                                                   MinKeysForResampling                              //0x00B8(0x0004)
  *                                                                   bUseAdaptiveError                                 //0x00BC(0x0001)
  *                                                                   bUseOverrideForEndEffectors                       //0x00BC(0x0001)
  *                                                                   TrackHeightBias                                   //0x00C0(0x0004)
  *                                                                   ParentingDivisor                                  //0x00C4(0x0004)
  *                                                                   ParentingDivisorExponent                          //0x00C8(0x0004)
  *                                                                   bUseAdaptiveError2                                //0x00CC(0x0001)
  *                                                                   RotationErrorSourceRatio                          //0x00D0(0x0004)
  *                                                                   TranslationErrorSourceRatio                       //0x00D4(0x0004)
  *                                                                   ScaleErrorSourceRatio                             //0x00D8(0x0004)
  *                                                                   MaxErrorPerTrackRatio                             //0x00DC(0x0004)
  *                                                                   PerturbationProbeSize                             //0x00E0(0x0004)
};


class AnimCompress_RemoveEverySecondKey : public AnimCompress
{
  *                                                                   MinKeys                                           //0x0050(0x0004)
  *                                                                   bStartAtSecondKey                                 //0x0054(0x0001)
};


class AnimCompress_RemoveTrivialKeys : public AnimCompress
{
  *                                                                   MaxPosDiff                                        //0x0050(0x0004)
  *                                                                   MaxAngleDiff                                      //0x0054(0x0004)
  *                                                                   MaxScaleDiff                                      //0x0058(0x0004)
};


class AnimCurveCompressionCodec : public Object
{
};


class AnimCurveCompressionCodec_CompressedRichCurve : public AnimCurveCompressionCodec
{
};


class AnimCurveCompressionCodec_UniformIndexable : public AnimCurveCompressionCodec
{
};


class AnimCurveCompressionCodec_UniformlySampled : public AnimCurveCompressionCodec
{
};


class AnimCurveCompressionSettings : public Object
{
  AnimCurveCompressionCodec*                                          Codec                                             //0x0028(0x0008)
};


class AnimLayerInterface : public Interface
{
};


class AnimMetaData : public Object
{
};


class AnimMontage : public AnimCompositeBase
{
  AlphaBlend*                                                         BlendIn                                           //0x00A8(0x0030)
  *                                                                   BlendInTime                                       //0x00D8(0x0004)
  AlphaBlend*                                                         BlendOut                                          //0x00E0(0x0030)
  *                                                                   BlendOutTime                                      //0x0110(0x0004)
  *                                                                   BlendOutTriggerTime                               //0x0114(0x0004)
  *                                                                   SyncGroup                                         //0x0118(0x0008)
  *                                                                   SyncSlotIndex                                     //0x0120(0x0004)
  MarkerSyncData*                                                     MarkerData                                        //0x0128(0x0020)
  CompositeSections*                                                  CompositeSections                                 //0x0148(0x0010)
  SlotAnimTracks*                                                     SlotAnimTracks                                    //0x0158(0x0010)
  BranchingPoints*                                                    BranchingPoints                                   //0x0168(0x0010)
  *                                                                   bEnableRootMotionTranslation                      //0x0178(0x0001)
  *                                                                   bEnableRootMotionRotation                         //0x0179(0x0001)
  *                                                                   bEnableAutoBlendOut                               //0x017A(0x0001)
  ERootMotionRootLock*                                                RootMotionRootLock                                //0x017B(0x0001)
  BranchingPointMarkers*                                              BranchingPointMarkers                             //0x0180(0x0010)
  BranchingPointStateNotifyIndices*                                   BranchingPointStateNotifyIndices                  //0x0190(0x0010)
  TimeStretchCurve*                                                   TimeStretchCurve                                  //0x01A0(0x0028)
  *                                                                   TimeStretchCurveName                              //0x01C8(0x0008)
  *                                                                   GetDefaultBlendOutTime                            //0x0000(0x0229)
};


class AnimNotify_PauseClothingSimulation : public AnimNotify
{
};


class AnimNotify_PlayParticleEffect : public AnimNotify
{
  ParticleSystem*                                                     PSTemplate                                        //0x0038(0x0008)
  Vector*                                                             LocationOffset                                    //0x0040(0x000C)
  Rotator*                                                            RotationOffset                                    //0x004C(0x000C)
  Vector*                                                             Scale                                             //0x0058(0x000C)
  *                                                                   Attached                                          //0x0080(0x0001)
  *                                                                   SocketName                                        //0x0084(0x0008)
};


class AnimNotify_PlaySound : public AnimNotify
{
  SoundBase*                                                          Sound                                             //0x0038(0x0008)
  *                                                                   VolumeMultiplier                                  //0x0040(0x0004)
  *                                                                   PitchMultiplier                                   //0x0044(0x0004)
  *                                                                   bFollow                                           //0x0048(0x0001)
  *                                                                   AttachName                                        //0x004C(0x0008)
};


class AnimNotify_ResetClothingSimulation : public AnimNotify
{
};


class AnimNotify_ResetDynamics : public AnimNotify
{
};


class AnimNotify_ResumeClothingSimulation : public AnimNotify
{
};


class AnimNotifyState_DisableRootMotion : public AnimNotifyState
{
};


class AnimNotifyState_TimedParticleEffect : public AnimNotifyState
{
  ParticleSystem*                                                     PSTemplate                                        //0x0030(0x0008)
  *                                                                   SocketName                                        //0x0038(0x0008)
  Vector*                                                             LocationOffset                                    //0x0040(0x000C)
  Rotator*                                                            RotationOffset                                    //0x004C(0x000C)
  *                                                                   bDestroyAtEnd                                     //0x0058(0x0001)
};


class AnimNotifyState_Trail : public AnimNotifyState
{
  ParticleSystem*                                                     PSTemplate                                        //0x0030(0x0008)
  *                                                                   FirstSocketName                                   //0x0038(0x0008)
  *                                                                   SecondSocketName                                  //0x0040(0x0008)
  ETrailWidthMode*                                                    WidthScaleMode                                    //0x0048(0x0001)
  *                                                                   WidthScaleCurve                                   //0x004C(0x0008)
  *                                                                   bRecycleSpawnedSystems                            //0x0054(0x0001)
  MeshComp*                                                           OverridePSTemplate                                //0x0000(0x0229)
};


class AnimSequence : public AnimSequenceBase
{
  *                                                                   NumFrames                                         //0x00A8(0x0004)
  TrackToSkeletonMapTable*                                            TrackToSkeletonMapTable                           //0x00B0(0x0010)
  AnimCurveCompressionSettings*                                       CurveCompressionSettings                          //0x00D0(0x0008)
  EAdditiveAnimationType*                                             AdditiveAnimType                                  //0x01A8(0x0001)
  EAdditiveBasePoseType*                                              RefPoseType                                       //0x01A9(0x0001)
  AnimSequence*                                                       RefPoseSeq                                        //0x01B0(0x0008)
  *                                                                   RefFrameIndex                                     //0x01B8(0x0004)
  *                                                                   RetargetSource                                    //0x01BC(0x0008)
  UnderlyingType*                                                     Interpolation                                     //0x01C4(0x0001)
  *                                                                   bEnableRootMotion                                 //0x01C5(0x0001)
  ERootMotionRootLock*                                                RootMotionRootLock                                //0x01C6(0x0001)
  *                                                                   bForceRootLock                                    //0x01C7(0x0001)
  *                                                                   bUseNormalizedRootMotionScale                     //0x01C8(0x0001)
  *                                                                   bRootMotionSettingsCopiedFromMontage              //0x01C9(0x0001)
  AuthoredSyncMarkers*                                                AuthoredSyncMarkers                               //0x01D0(0x0010)
};


class AnimSet : public Object
{
  *                                                                   bAnimRotationOnly                                 //0x0028(0x0001)
  TrackBoneNames*                                                     TrackBoneNames                                    //0x0030(0x0010)
  LinkupCache*                                                        LinkupCache                                       //0x0040(0x0010)
  BoneUseAnimTranslation*                                             BoneUseAnimTranslation                            //0x0050(0x0010)
  ForceUseMeshTranslation*                                            ForceUseMeshTranslation                           //0x0060(0x0010)
  UseTranslationBoneNames*                                            UseTranslationBoneNames                           //0x0070(0x0010)
  ForceMeshTranslationBoneNames*                                      ForceMeshTranslationBoneNames                     //0x0080(0x0010)
  *                                                                   PreviewSkelMeshName                               //0x0090(0x0008)
  *                                                                   BestRatioSkelMeshName                             //0x0098(0x0008)
};


class AnimSingleNodeInstance : public AnimInstance
{
  AnimationAsset*                                                     CurrentAsset                                      //0x0268(0x0008)
  PostEvaluateAnimEvent__DelegateSignature*                           PostEvaluateAnimEvent                             //0x0270(0x0010)
  *                                                                   StopAnim                                          //0x0000(0x0229)
  *                                                                   SetReverse                                        //0x0000(0x0229)
  *                                                                   SetPreviewCurveOverride                           //0x0000(0x0229)
  *                                                                   SetPositionWithPreviousTime                       //0x0000(0x0229)
  *                                                                   SetPosition                                       //0x0000(0x0229)
  *                                                                   SetPlayRate                                       //0x0000(0x0229)
  *                                                                   SetPlaying                                        //0x0000(0x0229)
  *                                                                   SetLooping                                        //0x0000(0x0229)
  *                                                                   SetBlendSpaceInput                                //0x0000(0x0229)
  NewAsset*                                                           SetAnimationAsset                                 //0x0000(0x0229)
  *                                                                   PlayAnim                                          //0x0000(0x0229)
  *                                                                   GetLength                                         //0x0000(0x0229)
  ReturnValue*                                                        GetAnimationAsset                                 //0x0000(0x0229)
};


class AnimStateMachineTypes : public Object
{
};


class AnimStreamable : public AnimSequenceBase
{
  *                                                                   NumFrames                                         //0x00A8(0x0004)
  UnderlyingType*                                                     Interpolation                                     //0x00AC(0x0001)
  *                                                                   RetargetSource                                    //0x00B0(0x0008)
  AnimCurveCompressionSettings*                                       CurveCompressionSettings                          //0x00C8(0x0008)
  *                                                                   bEnableRootMotion                                 //0x00D0(0x0001)
  ERootMotionRootLock*                                                RootMotionRootLock                                //0x00D1(0x0001)
  *                                                                   bForceRootLock                                    //0x00D2(0x0001)
  *                                                                   bUseNormalizedRootMotionScale                     //0x00D3(0x0001)
};


class ArrowComponent : public PrimitiveComponent
{
  Color*                                                              ArrowColor                                        //0x03D8(0x0004)
  *                                                                   ArrowSize                                         //0x03DC(0x0004)
  *                                                                   ScreenSize                                        //0x03E0(0x0004)
  *                                                                   bIsScreenSizeScaled                               //0x03E4(0x0001)
  *                                                                   bTreatAsASprite                                   //0x03E4(0x0001)
  *                                                                   SetArrowColor                                     //0x0000(0x0229)
};


class AssetExportTask : public Object
{
  Object*                                                             Object                                            //0x0028(0x0008)
  Exporter*                                                           Exporter                                          //0x0030(0x0008)
  *                                                                   Filename                                          //0x0038(0x0010)
  *                                                                   bSelected                                         //0x0048(0x0001)
  *                                                                   bReplaceIdentical                                 //0x0049(0x0001)
  *                                                                   bPrompt                                           //0x004A(0x0001)
  *                                                                   bAutomated                                        //0x004B(0x0001)
  *                                                                   bUseFileArchive                                   //0x004C(0x0001)
  *                                                                   bWriteEmptyFiles                                  //0x004D(0x0001)
  IgnoreObjectList*                                                   IgnoreObjectList                                  //0x0050(0x0010)
  Object*                                                             Options                                           //0x0060(0x0008)
  Errors*                                                             Errors                                            //0x0068(0x0010)
};


class AssetManager : public Object
{
  ObjectReferenceList*                                                ObjectReferenceList                               //0x02C0(0x0010)
  *                                                                   bIsGlobalAsyncScanEnvironment                     //0x02D0(0x0001)
  *                                                                   bShouldGuessTypeAndName                           //0x02D1(0x0001)
  *                                                                   bShouldUseSynchronousLoad                         //0x02D2(0x0001)
  *                                                                   bIsLoadingFromPakFiles                            //0x02D3(0x0001)
  *                                                                   bShouldAcquireMissingChunksOnLoad                 //0x02D4(0x0001)
  *                                                                   bOnlyCookProductionAssets                         //0x02D5(0x0001)
  *                                                                   bIsBulkScanning                                   //0x02D6(0x0001)
  *                                                                   bIsPrimaryAssetDirectoryCurrent                   //0x02D7(0x0001)
  *                                                                   bIsManagementDatabaseCurrent                      //0x02D8(0x0001)
  *                                                                   bUpdateManagementDatabaseAfterScan                //0x02D9(0x0001)
  *                                                                   bIncludeOnlyOnDiskAssets                          //0x02DA(0x0001)
  *                                                                   NumberOfSpawnedNotifications                      //0x02DC(0x0004)
};


class AssetManagerSettings : public DeveloperSettings
{
  PrimaryAssetTypesToScan*                                            PrimaryAssetTypesToScan                           //0x0038(0x0010)
  DirectoriesToExclude*                                               DirectoriesToExclude                              //0x0048(0x0010)
  PrimaryAssetRules*                                                  PrimaryAssetRules                                 //0x0058(0x0010)
  CustomPrimaryAssetRules*                                            CustomPrimaryAssetRules                           //0x0068(0x0010)
  *                                                                   bOnlyCookProductionAssets                         //0x0078(0x0001)
  *                                                                   bShouldManagerDetermineTypeAndName                //0x0079(0x0001)
  *                                                                   bShouldGuessTypeAndNameInEditor                   //0x007A(0x0001)
  *                                                                   bShouldAcquireMissingChunksOnLoad                 //0x007B(0x0001)
  PrimaryAssetIdRedirects*                                            PrimaryAssetIdRedirects                           //0x0080(0x0010)
  PrimaryAssetTypeRedirects*                                          PrimaryAssetTypeRedirects                         //0x0090(0x0010)
  AssetPathRedirects*                                                 AssetPathRedirects                                //0x00A0(0x0010)
  MetaDataTagsForAssetRegistry*                                       MetaDataTagsForAssetRegistry                      //0x00B0(0x0050)
};


class AssetMappingTable : public Object
{
  MappedAssets*                                                       MappedAssets                                      //0x0028(0x0010)
};


class AsyncActionHandleSaveGame : public BlueprintAsyncActionBase
{
  OnAsyncHandleSaveGame__DelegateSignature*                           Completed                                         //0x0030(0x0010)
  SaveGame*                                                           SaveGameObject                                    //0x0060(0x0008)
  WorldContextObject*                                                 AsyncSaveGameToSlot                               //0x0000(0x0229)
  WorldContextObject*                                                 AsyncLoadGameFromSlot                             //0x0000(0x0229)
};


class AsyncActionLoadPrimaryAssetBase : public BlueprintAsyncActionBase
{
};


class AsyncActionLoadPrimaryAsset : public AsyncActionLoadPrimaryAssetBase
{
  OnPrimaryAssetLoaded__DelegateSignature*                            Completed                                         //0x0078(0x0010)
  WorldContextObject*                                                 AsyncLoadPrimaryAsset                             //0x0000(0x0229)
};


class AsyncActionLoadPrimaryAssetClass : public AsyncActionLoadPrimaryAssetBase
{
  OnPrimaryAssetClassLoaded__DelegateSignature*                       Completed                                         //0x0078(0x0010)
  WorldContextObject*                                                 AsyncLoadPrimaryAssetClass                        //0x0000(0x0229)
};


class AsyncActionLoadPrimaryAssetList : public AsyncActionLoadPrimaryAssetBase
{
  OnPrimaryAssetListLoaded__DelegateSignature*                        Completed                                         //0x0078(0x0010)
  WorldContextObject*                                                 AsyncLoadPrimaryAssetList                         //0x0000(0x0229)
};


class AsyncActionLoadPrimaryAssetClassList : public AsyncActionLoadPrimaryAssetBase
{
  OnPrimaryAssetClassListLoaded__DelegateSignature*                   Completed                                         //0x0078(0x0010)
  WorldContextObject*                                                 AsyncLoadPrimaryAssetClassList                    //0x0000(0x0229)
};


class AsyncActionChangePrimaryAssetBundles : public AsyncActionLoadPrimaryAssetBase
{
  OnPrimaryAssetBundlesChanged__DelegateSignature*                    Completed                                         //0x0078(0x0010)
  WorldContextObject*                                                 AsyncChangeBundleStateForPrimaryAssetList         //0x0000(0x0229)
  WorldContextObject*                                                 AsyncChangeBundleStateForMatchingPrimaryAssets    //0x0000(0x0229)
};


class AtmosphericFog : public Info
{
  AtmosphericFogComponent*                                            AtmosphericFogComponent                           //0x0218(0x0008)
};


class AtmosphericFogComponent : public SceneComponent
{
  *                                                                   SunMultiplier                                     //0x01F0(0x0004)
  *                                                                   FogMultiplier                                     //0x01F4(0x0004)
  *                                                                   DensityMultiplier                                 //0x01F8(0x0004)
  *                                                                   DensityOffset                                     //0x01FC(0x0004)
  *                                                                   DistanceScale                                     //0x0200(0x0004)
  *                                                                   AltitudeScale                                     //0x0204(0x0004)
  *                                                                   DistanceOffset                                    //0x0208(0x0004)
  *                                                                   GroundOffset                                      //0x020C(0x0004)
  *                                                                   StartDistance                                     //0x0210(0x0004)
  *                                                                   SunDiscScale                                      //0x0214(0x0004)
  *                                                                   DefaultBrightness                                 //0x0218(0x0004)
  Color*                                                              DefaultLightColor                                 //0x021C(0x0004)
  *                                                                   bDisableSunDisk                                   //0x0220(0x0001)
  *                                                                   bAtmosphereAffectsSunIlluminance                  //0x0220(0x0001)
  *                                                                   bDisableGroundScattering                          //0x0220(0x0001)
  AtmospherePrecomputeParameters*                                     PrecomputeParams                                  //0x0224(0x002C)
  Texture2D*                                                          TransmittanceTexture                              //0x0250(0x0008)
  Texture2D*                                                          IrradianceTexture                                 //0x0258(0x0008)
  *                                                                   StartPrecompute                                   //0x0000(0x0229)
  *                                                                   SetSunMultiplier                                  //0x0000(0x0229)
  *                                                                   SetStartDistance                                  //0x0000(0x0229)
  *                                                                   SetPrecomputeParams                               //0x0000(0x0229)
  *                                                                   SetFogMultiplier                                  //0x0000(0x0229)
  *                                                                   SetDistanceScale                                  //0x0000(0x0229)
  *                                                                   SetDistanceOffset                                 //0x0000(0x0229)
  *                                                                   SetDensityOffset                                  //0x0000(0x0229)
  *                                                                   SetDensityMultiplier                              //0x0000(0x0229)
  *                                                                   SetDefaultLightColor                              //0x0000(0x0229)
  *                                                                   SetDefaultBrightness                              //0x0000(0x0229)
  *                                                                   SetAltitudeScale                                  //0x0000(0x0229)
  *                                                                   DisableSunDisk                                    //0x0000(0x0229)
  *                                                                   DisableGroundScattering                           //0x0000(0x0229)
};


class AudioSettings : public DeveloperSettings
{
  SoftObjectPath*                                                     DefaultSoundClassName                             //0x0038(0x0018)
  SoftObjectPath*                                                     DefaultMediaSoundClassName                        //0x0050(0x0018)
  SoftObjectPath*                                                     DefaultSoundConcurrencyName                       //0x0068(0x0018)
  SoftObjectPath*                                                     DefaultBaseSoundMix                               //0x0080(0x0018)
  SoftObjectPath*                                                     VoiPSoundClass                                    //0x0098(0x0018)
  UnderlyingType*                                                     VoiPSampleRate                                    //0x00B0(0x0004)
  *                                                                   VoipBufferingDelay                                //0x00B4(0x0004)
  *                                                                   DefaultReverbSendLevel                            //0x00B8(0x0004)
  *                                                                   bEnableLegacyReverb                               //0x00BC(0x0001)
  *                                                                   MaximumConcurrentStreams                          //0x00C0(0x0004)
  *                                                                   GlobalMinPitchScale                               //0x00C4(0x0004)
  *                                                                   GlobalMaxPitchScale                               //0x00C8(0x0004)
  QualityLevels*                                                      QualityLevels                                     //0x00D0(0x0010)
  *                                                                   bAllowPlayWhenSilent                              //0x00E0(0x0001)
  *                                                                   bDisableMasterEQ                                  //0x00E0(0x0001)
  *                                                                   bAllowCenterChannel3DPanning                      //0x00E0(0x0001)
  *                                                                   NumStoppingSources                                //0x00E4(0x0004)
  UnderlyingType*                                                     PanningMethod                                     //0x00E8(0x0001)
  UnderlyingType*                                                     MonoChannelUpmixMethod                            //0x00E9(0x0001)
  *                                                                   DialogueFilenameFormat                            //0x00F0(0x0010)
};


class AudioVolume : public Volume
{
  *                                                                   Priority                                          //0x0250(0x0004)
  *                                                                   bEnabled                                          //0x0254(0x0001)
  ReverbSettings*                                                     Settings                                          //0x0258(0x0020)
  InteriorSettings*                                                   AmbientZoneSettings                               //0x0278(0x0024)
  NewReverbSettings*                                                  SetReverbSettings                                 //0x0000(0x0229)
  *                                                                   SetPriority                                       //0x0000(0x0229)
  *                                                                   SetInteriorSettings                               //0x0000(0x0229)
  *                                                                   SetEnabled                                        //0x0000(0x0229)
  *                                                                   OnRep_bEnabled                                    //0x0000(0x0229)
};


class AutomationTestSettings : public Object
{
  EngineTestModules*                                                  EngineTestModules                                 //0x0028(0x0010)
  EditorTestModules*                                                  EditorTestModules                                 //0x0038(0x0010)
  SoftObjectPath*                                                     AutomationTestmap                                 //0x0048(0x0018)
  EditorPerformanceTestMaps*                                          EditorPerformanceTestMaps                         //0x0060(0x0010)
  AssetsToOpen*                                                       AssetsToOpen                                      //0x0070(0x0010)
  BuildPromotionTestSettings*                                         BuildPromotionTest                                //0x0080(0x01F0)
  MaterialEditorPromotionSettings*                                    MaterialEditorPromotionTest                       //0x0270(0x0030)
  ParticleEditorPromotionSettings*                                    ParticleEditorPromotionTest                       //0x02A0(0x0010)
  BlueprintEditorPromotionSettings*                                   BlueprintEditorPromotionTest                      //0x02B0(0x0030)
  TestLevelFolders*                                                   TestLevelFolders                                  //0x02E0(0x0010)
  ExternalTools*                                                      ExternalTools                                     //0x02F0(0x0010)
  ImportExportTestDefinitions*                                        ImportExportTestDefinitions                       //0x0300(0x0010)
  LaunchOnSettings*                                                   LaunchOnSettings                                  //0x0310(0x0010)
  IntPoint*                                                           DefaultScreenshotResolution                       //0x0320(0x0008)
};


class AvoidanceManager : public Object
{
  *                                                                   DefaultTimeToLive                                 //0x0030(0x0004)
  *                                                                   LockTimeAfterAvoid                                //0x0034(0x0004)
  *                                                                   LockTimeAfterClean                                //0x0038(0x0004)
  *                                                                   DeltaTimeToPredict                                //0x003C(0x0004)
  *                                                                   ArtificialRadiusExpansion                         //0x0040(0x0004)
  *                                                                   TestHeightDifference                              //0x0044(0x0004)
  *                                                                   HeightCheckMargin                                 //0x0048(0x0004)
  MovementComp*                                                       RegisterMovementComponent                         //0x0000(0x0229)
  *                                                                   GetObjectCount                                    //0x0000(0x0229)
  *                                                                   GetNewAvoidanceUID                                //0x0000(0x0229)
  MovementComp*                                                       GetAvoidanceVelocityForComponent                  //0x0000(0x0229)
};


class BandwidthTestActor : public Actor
{
  BandwidthTestGenerator*                                             BandwidthGenerator                                //0x0218(0x0020)
};


class BillboardComponent : public PrimitiveComponent
{
  Texture2D*                                                          Sprite                                            //0x03D8(0x0008)
  *                                                                   bIsScreenSizeScaled                               //0x03E0(0x0001)
  *                                                                   ScreenSize                                        //0x03E4(0x0004)
  *                                                                   U                                                 //0x03E8(0x0004)
  *                                                                   UL                                                //0x03EC(0x0004)
  *                                                                   V                                                 //0x03F0(0x0004)
  *                                                                   VL                                                //0x03F4(0x0004)
  *                                                                   SetUV                                             //0x0000(0x0229)
  NewSprite*                                                          SetSpriteAndUV                                    //0x0000(0x0229)
  NewSprite*                                                          SetSprite                                         //0x0000(0x0229)
};


class BlendableInterface : public Interface
{
};


class Skeleton : public Object
{
  BoneTree*                                                           BoneTree                                          //0x0038(0x0010)
  RefLocalPoses*                                                      RefLocalPoses                                     //0x0048(0x0010)
  Guid*                                                               VirtualBoneGuid                                   //0x0170(0x0010)
  VirtualBones*                                                       VirtualBones                                      //0x0180(0x0010)
  Sockets*                                                            Sockets                                           //0x0190(0x0010)
  SmartNameContainer*                                                 SmartNames                                        //0x01F0(0x0050)
  BlendProfiles*                                                      BlendProfiles                                     //0x0270(0x0010)
  SlotGroups*                                                         SlotGroups                                        //0x0280(0x0010)
  AssetUserData*                                                      AssetUserData                                     //0x0358(0x0010)
};


class BlendProfile : public Object
{
  Skeleton*                                                           OwningSkeleton                                    //0x0030(0x0008)
  ProfileEntries*                                                     ProfileEntries                                    //0x0038(0x0010)
};


class BlockingVolume : public Volume
{
};


class BlueprintExtension : public Object
{
};


class BlueprintMapLibrary : public BlueprintFunctionLibrary
{
  Object*                                                             SetMapPropertyByName                              //0x0000(0x0229)
  *                                                                   Map_Values                                        //0x0000(0x0229)
  *                                                                   Map_Remove                                        //0x0000(0x0229)
  *                                                                   Map_Length                                        //0x0000(0x0229)
  *                                                                   Map_Keys                                          //0x0000(0x0229)
  *                                                                   Map_Find                                          //0x0000(0x0229)
  *                                                                   Map_Contains                                      //0x0000(0x0229)
  *                                                                   Map_Clear                                         //0x0000(0x0229)
  *                                                                   Map_Add                                           //0x0000(0x0229)
};


class BlueprintPathsLibrary : public BlueprintFunctionLibrary
{
  *                                                                   VideoCaptureDir                                   //0x0000(0x0229)
  *                                                                   ValidatePath                                      //0x0000(0x0229)
  *                                                                   Split                                             //0x0000(0x0229)
  *                                                                   SourceConfigDir                                   //0x0000(0x0229)
  *                                                                   ShouldSaveToUserDir                               //0x0000(0x0229)
  *                                                                   ShaderWorkingDir                                  //0x0000(0x0229)
  *                                                                   SetProjectFilePath                                //0x0000(0x0229)
  *                                                                   SetExtension                                      //0x0000(0x0229)
  *                                                                   ScreenShotDir                                     //0x0000(0x0229)
  *                                                                   SandboxesDir                                      //0x0000(0x0229)
  *                                                                   RootDir                                           //0x0000(0x0229)
  *                                                                   RemoveDuplicateSlashes                            //0x0000(0x0229)
  *                                                                   ProjectUserDir                                    //0x0000(0x0229)
  *                                                                   ProjectSavedDir                                   //0x0000(0x0229)
  *                                                                   ProjectPluginsDir                                 //0x0000(0x0229)
  *                                                                   ProjectPersistentDownloadDir                      //0x0000(0x0229)
  *                                                                   ProjectModsDir                                    //0x0000(0x0229)
  *                                                                   ProjectLogDir                                     //0x0000(0x0229)
  *                                                                   ProjectIntermediateDir                            //0x0000(0x0229)
  *                                                                   ProjectDir                                        //0x0000(0x0229)
  *                                                                   ProjectContentDir                                 //0x0000(0x0229)
  *                                                                   ProjectConfigDir                                  //0x0000(0x0229)
  *                                                                   ProfilingDir                                      //0x0000(0x0229)
  *                                                                   NormalizeFilename                                 //0x0000(0x0229)
  *                                                                   NormalizeDirectoryName                            //0x0000(0x0229)
  *                                                                   MakeValidFileName                                 //0x0000(0x0229)
  *                                                                   MakeStandardFilename                              //0x0000(0x0229)
  *                                                                   MakePlatformFilename                              //0x0000(0x0229)
  *                                                                   MakePathRelativeTo                                //0x0000(0x0229)
  *                                                                   LaunchDir                                         //0x0000(0x0229)
  *                                                                   IsSamePath                                        //0x0000(0x0229)
  *                                                                   IsRestrictedPath                                  //0x0000(0x0229)
  *                                                                   IsRelative                                        //0x0000(0x0229)
  *                                                                   IsProjectFilePathSet                              //0x0000(0x0229)
  *                                                                   IsDrive                                           //0x0000(0x0229)
  *                                                                   HasProjectPersistentDownloadDir                   //0x0000(0x0229)
  *                                                                   GetToolTipLocalizationPaths                       //0x0000(0x0229)
  *                                                                   GetRestrictedFolderNames                          //0x0000(0x0229)
  *                                                                   GetRelativePathToRoot                             //0x0000(0x0229)
  *                                                                   GetPropertyNameLocalizationPaths                  //0x0000(0x0229)
  *                                                                   GetProjectFilePath                                //0x0000(0x0229)
  *                                                                   GetPath                                           //0x0000(0x0229)
  *                                                                   GetInvalidFileSystemChars                         //0x0000(0x0229)
  *                                                                   GetGameLocalizationPaths                          //0x0000(0x0229)
  *                                                                   GetExtension                                      //0x0000(0x0229)
  *                                                                   GetEngineLocalizationPaths                        //0x0000(0x0229)
  *                                                                   GetEditorLocalizationPaths                        //0x0000(0x0229)
  *                                                                   GetCleanFilename                                  //0x0000(0x0229)
  *                                                                   GetBaseFilename                                   //0x0000(0x0229)
  *                                                                   GeneratedConfigDir                                //0x0000(0x0229)
  *                                                                   GameUserDeveloperDir                              //0x0000(0x0229)
  *                                                                   GameSourceDir                                     //0x0000(0x0229)
  *                                                                   GameDevelopersDir                                 //0x0000(0x0229)
  *                                                                   GameAgnosticSavedDir                              //0x0000(0x0229)
  *                                                                   FileExists                                        //0x0000(0x0229)
  *                                                                   FeaturePackDir                                    //0x0000(0x0229)
  *                                                                   EnterprisePluginsDir                              //0x0000(0x0229)
  *                                                                   EnterpriseFeaturePackDir                          //0x0000(0x0229)
  *                                                                   EnterpriseDir                                     //0x0000(0x0229)
  *                                                                   EngineVersionAgnosticUserDir                      //0x0000(0x0229)
  *                                                                   EngineUserDir                                     //0x0000(0x0229)
  *                                                                   EngineSourceDir                                   //0x0000(0x0229)
  *                                                                   EngineSavedDir                                    //0x0000(0x0229)
  *                                                                   EnginePluginsDir                                  //0x0000(0x0229)
  *                                                                   EngineIntermediateDir                             //0x0000(0x0229)
  *                                                                   EngineDir                                         //0x0000(0x0229)
  *                                                                   EngineContentDir                                  //0x0000(0x0229)
  *                                                                   EngineConfigDir                                   //0x0000(0x0229)
  *                                                                   DirectoryExists                                   //0x0000(0x0229)
  *                                                                   DiffDir                                           //0x0000(0x0229)
  *                                                                   CreateTempFilename                                //0x0000(0x0229)
  *                                                                   ConvertToSandboxPath                              //0x0000(0x0229)
  *                                                                   ConvertRelativePathToFull                         //0x0000(0x0229)
  *                                                                   ConvertFromSandboxPath                            //0x0000(0x0229)
  *                                                                   Combine                                           //0x0000(0x0229)
  *                                                                   CollapseRelativeDirectories                       //0x0000(0x0229)
  *                                                                   CloudDir                                          //0x0000(0x0229)
  *                                                                   ChangeExtension                                   //0x0000(0x0229)
  *                                                                   BugItDir                                          //0x0000(0x0229)
  *                                                                   AutomationTransientDir                            //0x0000(0x0229)
  *                                                                   AutomationLogDir                                  //0x0000(0x0229)
  *                                                                   AutomationDir                                     //0x0000(0x0229)
};


class PlatformGameInstance : public GameInstance
{
  PlatformDelegate__DelegateSignature*                                ApplicationWillDeactivateDelegate                 //0x0168(0x0010)
  PlatformDelegate__DelegateSignature*                                ApplicationHasReactivatedDelegate                 //0x0178(0x0010)
  PlatformDelegate__DelegateSignature*                                ApplicationWillEnterBackgroundDelegate            //0x0188(0x0010)
  PlatformDelegate__DelegateSignature*                                ApplicationHasEnteredForegroundDelegate           //0x0198(0x0010)
  PlatformDelegate__DelegateSignature*                                ApplicationWillTerminateDelegate                  //0x01A8(0x0010)
  PlatformDelegate__DelegateSignature*                                ApplicationShouldUnloadResourcesDelegate          //0x01B8(0x0010)
  PlatformStartupArgumentsDelegate__DelegateSignature*                ApplicationReceivedStartupArgumentsDelegate       //0x01C8(0x0010)
  PlatformRegisteredForRemoteNotificationsDelegate__DelegateSignature*ApplicationRegisteredForRemoteNotificationsDelegate//0x01D8(0x0010)
  PlatformRegisteredForUserNotificationsDelegate__DelegateSignature*  ApplicationRegisteredForUserNotificationsDelegate //0x01E8(0x0010)
  PlatformFailedToRegisterForRemoteNotificationsDelegate__DelegateSignature*ApplicationFailedToRegisterForRemoteNotificationsDelegate//0x01F8(0x0010)
  PlatformReceivedRemoteNotificationDelegate__DelegateSignature*      ApplicationReceivedRemoteNotificationDelegate     //0x0208(0x0010)
  PlatformReceivedLocalNotificationDelegate__DelegateSignature*       ApplicationReceivedLocalNotificationDelegate      //0x0218(0x0010)
  PlatformScreenOrientationChangedDelegate__DelegateSignature*        ApplicationReceivedScreenOrientationChangedNotificationDelegate//0x0228(0x0010)
};


class BlueprintPlatformLibrary : public BlueprintFunctionLibrary
{
  *                                                                   ScheduleLocalNotificationFromNow                  //0x0000(0x0229)
  *                                                                   ScheduleLocalNotificationBadgeFromNow             //0x0000(0x0229)
  *                                                                   ScheduleLocalNotificationBadgeAtTime              //0x0000(0x0229)
  *                                                                   ScheduleLocalNotificationAtTime                   //0x0000(0x0229)
  *                                                                   GetLaunchNotification                             //0x0000(0x0229)
  *                                                                   GetDeviceOrientation                              //0x0000(0x0229)
  *                                                                   ClearAllLocalNotifications                        //0x0000(0x0229)
  *                                                                   CancelLocalNotificationById                       //0x0000(0x0229)
  *                                                                   CancelLocalNotification                           //0x0000(0x0229)
};


class BlueprintSetLibrary : public BlueprintFunctionLibrary
{
  Object*                                                             SetSetPropertyByName                              //0x0000(0x0229)
  *                                                                   Set_Union                                         //0x0000(0x0229)
  *                                                                   Set_ToArray                                       //0x0000(0x0229)
  *                                                                   Set_RemoveItems                                   //0x0000(0x0229)
  *                                                                   Set_Remove                                        //0x0000(0x0229)
  *                                                                   Set_Length                                        //0x0000(0x0229)
  *                                                                   Set_Intersection                                  //0x0000(0x0229)
  *                                                                   Set_Difference                                    //0x0000(0x0229)
  *                                                                   Set_Contains                                      //0x0000(0x0229)
  *                                                                   Set_Clear                                         //0x0000(0x0229)
  *                                                                   Set_AddItems                                      //0x0000(0x0229)
  *                                                                   Set_Add                                           //0x0000(0x0229)
};


class BodySetup : public Object
{
  KAggregateGeom*                                                     AggGeom                                           //0x0028(0x0058)
  *                                                                   BoneName                                          //0x0080(0x0008)
  EPhysicsType*                                                       PhysicsType                                       //0x0088(0x0001)
  *                                                                   bAlwaysFullAnimWeight                             //0x0089(0x0001)
  *                                                                   bConsiderForBounds                                //0x0089(0x0001)
  *                                                                   bMeshCollideAll                                   //0x0089(0x0001)
  *                                                                   bDoubleSidedGeometry                              //0x0089(0x0001)
  *                                                                   bGenerateNonMirroredCollision                     //0x0089(0x0001)
  *                                                                   bSharedCookedData                                 //0x0089(0x0001)
  *                                                                   bGenerateMirroredCollision                        //0x0089(0x0001)
  EBodyCollisionResponse*                                             CollisionReponse                                  //0x008B(0x0001)
  ECollisionTraceFlag*                                                CollisionTraceFlag                                //0x008C(0x0001)
  PhysicalMaterial*                                                   PhysMaterial                                      //0x0090(0x0008)
  WalkableSlopeOverride*                                              WalkableSlopeOverride                             //0x0098(0x0010)
  BodyInstance*                                                       DefaultInstance                                   //0x0110(0x0110)
  Vector*                                                             BuildScale3D                                      //0x0228(0x000C)
};


class BoneMaskFilter : public Object
{
  BlendPoses*                                                         BlendPoses                                        //0x0028(0x0010)
};


class BookmarkBase : public Object
{
};


class BookMark : public BookmarkBase
{
  Vector*                                                             Location                                          //0x0028(0x000C)
  Rotator*                                                            Rotation                                          //0x0034(0x000C)
  HiddenLevels*                                                       HiddenLevels                                      //0x0040(0x0010)
};


class BookMark2D : public BookmarkBase
{
  *                                                                   Zoom2D                                            //0x0028(0x0004)
  IntPoint*                                                           Location                                          //0x002C(0x0008)
};


class BoxComponent : public ShapeComponent
{
  Vector*                                                             BoxExtent                                         //0x03F0(0x000C)
  *                                                                   LineThickness                                     //0x03FC(0x0004)
  *                                                                   SetBoxExtent                                      //0x0000(0x0229)
  *                                                                   GetUnscaledBoxExtent                              //0x0000(0x0229)
  *                                                                   GetScaledBoxExtent                                //0x0000(0x0229)
};


class ReflectionCapture : public Actor
{
  ReflectionCaptureComponent*                                         CaptureComponent                                  //0x0218(0x0008)
};


class BoxReflectionCapture : public ReflectionCapture
{
};


class ReflectionCaptureComponent : public SceneComponent
{
  BillboardComponent*                                                 CaptureOffsetComponent                            //0x01F0(0x0008)
  UnderlyingType*                                                     ReflectionSourceType                              //0x01F8(0x0001)
  TextureCube*                                                        Cubemap                                           //0x0200(0x0008)
  *                                                                   SourceCubemapAngle                                //0x0208(0x0004)
  *                                                                   Brightness                                        //0x020C(0x0004)
  Vector*                                                             CaptureOffset                                     //0x0210(0x000C)
  Guid*                                                               MapBuildDataId                                    //0x021C(0x0010)
};


class BoxReflectionCaptureComponent : public ReflectionCaptureComponent
{
  *                                                                   BoxTransitionDistance                             //0x0268(0x0004)
  BoxComponent*                                                       PreviewInfluenceBox                               //0x0270(0x0008)
  BoxComponent*                                                       PreviewCaptureBox                                 //0x0278(0x0008)
};


class Breakpoint : public Object
{
  *                                                                   bEnabled                                          //0x0028(0x0001)
  EdGraphNode*                                                        Node                                              //0x0030(0x0008)
  *                                                                   bStepOnce                                         //0x0038(0x0001)
  *                                                                   bStepOnce_WasPreviouslyDisabled                   //0x0038(0x0001)
  *                                                                   bStepOnce_RemoveAfterHit                          //0x0038(0x0001)
};


class BrushBuilder : public Object
{
  *                                                                   BitmapFilename                                    //0x0028(0x0010)
  *                                                                   ToolTip                                           //0x0038(0x0010)
  *                                                                   NotifyBadParams                                   //0x0048(0x0001)
  Vertices*                                                           Vertices                                          //0x0050(0x0010)
  Polys*                                                              Polys                                             //0x0060(0x0010)
  *                                                                   Layer                                             //0x0070(0x0008)
  *                                                                   MergeCoplanars                                    //0x0078(0x0001)
};


class BrushComponent : public PrimitiveComponent
{
  Model*                                                              Brush                                             //0x03D8(0x0008)
  BodySetup*                                                          BrushBodySetup                                    //0x03E0(0x0008)
};


class BrushShape : public Brush
{
};


class ButtonStyleAsset : public Object
{
  ButtonStyle*                                                        ButtonStyle                                       //0x0028(0x0278)
};


class CameraAnim : public Object
{
  InterpGroup*                                                        CameraInterpGroup                                 //0x0028(0x0008)
  *                                                                   AnimLength                                        //0x0030(0x0004)
  Box*                                                                BoundingBox                                       //0x0034(0x001C)
  *                                                                   bRelativeToInitialTransform                       //0x0050(0x0001)
  *                                                                   bRelativeToInitialFOV                             //0x0050(0x0001)
  *                                                                   BaseFOV                                           //0x0054(0x0004)
  PostProcessSettings*                                                BasePostProcessSettings                           //0x0060(0x0530)
  *                                                                   BasePostProcessBlendWeight                        //0x0590(0x0004)
};


class CameraAnimInst : public Object
{
  CameraAnim*                                                         CamAnim                                           //0x0028(0x0008)
  InterpGroupInst*                                                    InterpGroupInst                                   //0x0030(0x0008)
  *                                                                   PlayRate                                          //0x0050(0x0004)
  InterpTrackMove*                                                    MoveTrack                                         //0x0068(0x0008)
  InterpTrackInstMove*                                                MoveInst                                          //0x0070(0x0008)
  ECameraAnimPlaySpace*                                               PlaySpace                                         //0x0078(0x0001)
  *                                                                   Stop                                              //0x0000(0x0229)
  *                                                                   SetScale                                          //0x0000(0x0229)
  *                                                                   SetDuration                                       //0x0000(0x0229)
};


class CameraBlockingVolume : public Volume
{
};


class CameraModifier : public Object
{
  *                                                                   bDebug                                            //0x0028(0x0001)
  *                                                                   bExclusive                                        //0x0028(0x0001)
  *                                                                   Priority                                          //0x002C(0x0001)
  PlayerCameraManager*                                                CameraOwner                                       //0x0030(0x0008)
  *                                                                   AlphaInTime                                       //0x0038(0x0004)
  *                                                                   AlphaOutTime                                      //0x003C(0x0004)
  *                                                                   Alpha                                             //0x0040(0x0004)
  *                                                                   IsDisabled                                        //0x0000(0x0229)
  ReturnValue*                                                        GetViewTarget                                     //0x0000(0x0229)
  *                                                                   EnableModifier                                    //0x0000(0x0229)
  *                                                                   DisableModifier                                   //0x0000(0x0229)
  PostProcessSettings*                                                BlueprintModifyPostProcess                        //0x0000(0x0229)
  *                                                                   BlueprintModifyCamera                             //0x0000(0x0229)
};


class CameraModifier_CameraShake : public CameraModifier
{
  ActiveShakes*                                                       ActiveShakes                                      //0x0048(0x0010)
  ExpiredPooledShakesMap_Key*                                         ExpiredPooledShakesMap                            //0x0058(0x0050)
  *                                                                   SplitScreenShakeScale                             //0x00A8(0x0004)
};


class CameraShake : public Object
{
  *                                                                   bSingleInstance                                   //0x0028(0x0001)
  *                                                                   OscillationDuration                               //0x002C(0x0004)
  *                                                                   OscillationBlendInTime                            //0x0030(0x0004)
  *                                                                   OscillationBlendOutTime                           //0x0034(0x0004)
  ROscillator*                                                        RotOscillation                                    //0x0038(0x0024)
  VOscillator*                                                        LocOscillation                                    //0x005C(0x0024)
  FOscillator*                                                        FOVOscillation                                    //0x0080(0x000C)
  *                                                                   AnimPlayRate                                      //0x008C(0x0004)
  *                                                                   AnimScale                                         //0x0090(0x0004)
  *                                                                   AnimBlendInTime                                   //0x0094(0x0004)
  *                                                                   AnimBlendOutTime                                  //0x0098(0x0004)
  *                                                                   RandomAnimSegmentDuration                         //0x009C(0x0004)
  CameraAnim*                                                         Anim                                              //0x00A0(0x0008)
  *                                                                   bRandomAnimSegment                                //0x00A8(0x0001)
  PlayerCameraManager*                                                CameraOwner                                       //0x00C0(0x0008)
  *                                                                   ShakeScale                                        //0x0148(0x0004)
  *                                                                   OscillatorTimeRemaining                           //0x014C(0x0004)
  CameraAnimInst*                                                     AnimInst                                          //0x0150(0x0008)
  *                                                                   ReceiveStopShake                                  //0x0000(0x0229)
  *                                                                   ReceivePlayShake                                  //0x0000(0x0229)
  *                                                                   ReceiveIsFinished                                 //0x0000(0x0229)
  POV*                                                                BlueprintUpdateCameraShake                        //0x0000(0x0229)
};


class Canvas : public Object
{
  *                                                                   OrgX                                              //0x0028(0x0004)
  *                                                                   OrgY                                              //0x002C(0x0004)
  *                                                                   ClipX                                             //0x0030(0x0004)
  *                                                                   ClipY                                             //0x0034(0x0004)
  Color*                                                              DrawColor                                         //0x0038(0x0004)
  *                                                                   bCenterX                                          //0x003C(0x0001)
  *                                                                   bCenterY                                          //0x003C(0x0001)
  *                                                                   bNoSmooth                                         //0x003C(0x0001)
  *                                                                   SizeX                                             //0x0040(0x0004)
  *                                                                   SizeY                                             //0x0044(0x0004)
  Plane*                                                              ColorModulate                                     //0x0050(0x0010)
  Texture2D*                                                          DefaultTexture                                    //0x0060(0x0008)
  Texture2D*                                                          GradientTexture0                                  //0x0068(0x0008)
  ReporterGraph*                                                      ReporterGraph                                     //0x0070(0x0008)
  RenderFont*                                                         K2_TextSize                                       //0x0000(0x0229)
  RenderFont*                                                         K2_StrLen                                         //0x0000(0x0229)
  *                                                                   K2_Project                                        //0x0000(0x0229)
  RenderTexture*                                                      K2_DrawTriangle                                   //0x0000(0x0229)
  RenderTexture*                                                      K2_DrawTexture                                    //0x0000(0x0229)
  RenderFont*                                                         K2_DrawText                                       //0x0000(0x0229)
  RenderTexture*                                                      K2_DrawPolygon                                    //0x0000(0x0229)
  RenderMaterial*                                                     K2_DrawMaterialTriangle                           //0x0000(0x0229)
  RenderMaterial*                                                     K2_DrawMaterial                                   //0x0000(0x0229)
  *                                                                   K2_DrawLine                                       //0x0000(0x0229)
  *                                                                   K2_DrawBox                                        //0x0000(0x0229)
  BorderTexture*                                                      K2_DrawBorder                                     //0x0000(0x0229)
  *                                                                   K2_Deproject                                      //0x0000(0x0229)
};


class TextureRenderTarget : public Texture
{
  *                                                                   TargetGamma                                       //0x00D0(0x0004)
};


class TextureRenderTarget2D : public TextureRenderTarget
{
  *                                                                   SizeX                                             //0x00D8(0x0004)
  *                                                                   SizeY                                             //0x00DC(0x0004)
  LinearColor*                                                        ClearColor                                        //0x00E0(0x0010)
  TextureAddress*                                                     AddressX                                          //0x00F0(0x0001)
  TextureAddress*                                                     AddressY                                          //0x00F1(0x0001)
  *                                                                   bForceLinearGamma                                 //0x00F2(0x0001)
  *                                                                   bHDR                                              //0x00F2(0x0001)
  *                                                                   bGPUSharedFlag                                    //0x00F2(0x0001)
  ETextureRenderTargetFormat*                                         RenderTargetFormat                                //0x00F3(0x0001)
  *                                                                   bAutoGenerateMips                                 //0x00F4(0x0001)
  TextureFilter*                                                      MipsSamplerFilter                                 //0x00F5(0x0001)
  TextureAddress*                                                     MipsAddressU                                      //0x00F6(0x0001)
  TextureAddress*                                                     MipsAddressV                                      //0x00F7(0x0001)
  EPixelFormat*                                                       OverrideFormat                                    //0x00F8(0x0001)
};


class CanvasRenderTarget2D : public TextureRenderTarget2D
{
  OnCanvasRenderTargetUpdate__DelegateSignature*                      OnCanvasRenderTargetUpdate                        //0x0100(0x0010)
  World*                                                              World                                             //0x0110(0x0008)
  *                                                                   bShouldClearRenderTargetOnReceiveUpdate           //0x0118(0x0001)
  *                                                                   UpdateResource                                    //0x0000(0x0229)
  Canvas*                                                             ReceiveUpdate                                     //0x0000(0x0229)
  *                                                                   GetSize                                           //0x0000(0x0229)
  WorldContextObject*                                                 CreateCanvasRenderTarget2D                        //0x0000(0x0229)
};


class ChaosPhysicalMaterial : public Object
{
  *                                                                   Friction                                          //0x0028(0x0004)
  *                                                                   Restitution                                       //0x002C(0x0004)
  *                                                                   SleepingLinearVelocityThreshold                   //0x0030(0x0004)
  *                                                                   SleepingAngularVelocityThreshold                  //0x0034(0x0004)
};


class CheatManager : public Object
{
  DebugCameraController*                                              DebugCameraControllerRef                          //0x0028(0x0008)
  Class*                                                              DebugCameraControllerClass                        //0x0030(0x0008)
  *                                                                   Walk                                              //0x0000(0x0229)
  *                                                                   ViewSelf                                          //0x0000(0x0229)
  *                                                                   ViewPlayer                                        //0x0000(0x0229)
  DesiredClass*                                                       ViewClass                                         //0x0000(0x0229)
  *                                                                   ViewActor                                         //0x0000(0x0229)
  *                                                                   UpdateSafeArea                                    //0x0000(0x0229)
  *                                                                   ToggleServerStatReplicatorUpdateStatNet           //0x0000(0x0229)
  *                                                                   ToggleServerStatReplicatorClientOverwrite         //0x0000(0x0229)
  *                                                                   ToggleDebugCamera                                 //0x0000(0x0229)
  *                                                                   ToggleAILogging                                   //0x0000(0x0229)
  *                                                                   TestCollisionDistance                             //0x0000(0x0229)
  *                                                                   teleport                                          //0x0000(0x0229)
  *                                                                   Summon                                            //0x0000(0x0229)
  *                                                                   StreamLevelOut                                    //0x0000(0x0229)
  *                                                                   StreamLevelIn                                     //0x0000(0x0229)
  *                                                                   SpawnServerStatReplicator                         //0x0000(0x0229)
  *                                                                   Slomo                                             //0x0000(0x0229)
  *                                                                   SetWorldOrigin                                    //0x0000(0x0229)
  *                                                                   SetMouseSensitivityToDefault                      //0x0000(0x0229)
  *                                                                   ServerToggleAILogging                             //0x0000(0x0229)
  *                                                                   ReceiveInitCheatManager                           //0x0000(0x0229)
  *                                                                   ReceiveEndPlay                                    //0x0000(0x0229)
  *                                                                   PlayersOnly                                       //0x0000(0x0229)
  *                                                                   OnlyLoadLevel                                     //0x0000(0x0229)
  *                                                                   LogLoc                                            //0x0000(0x0229)
  *                                                                   InvertMouse                                       //0x0000(0x0229)
  *                                                                   God                                               //0x0000(0x0229)
  *                                                                   Ghost                                             //0x0000(0x0229)
  *                                                                   FreezeFrame                                       //0x0000(0x0229)
  *                                                                   Fly                                               //0x0000(0x0229)
  *                                                                   FlushLog                                          //0x0000(0x0229)
  *                                                                   EnableDebugCamera                                 //0x0000(0x0229)
  *                                                                   DumpVoiceMutingState                              //0x0000(0x0229)
  *                                                                   DumpPartyState                                    //0x0000(0x0229)
  *                                                                   DumpOnlineSessionState                            //0x0000(0x0229)
  *                                                                   DumpChatState                                     //0x0000(0x0229)
  *                                                                   DisableDebugCamera                                //0x0000(0x0229)
  *                                                                   DestroyTarget                                     //0x0000(0x0229)
  *                                                                   DestroyServerStatReplicator                       //0x0000(0x0229)
  aClass*                                                             DestroyPawns                                      //0x0000(0x0229)
  *                                                                   DestroyAllPawnsExceptTarget                       //0x0000(0x0229)
  aClass*                                                             DestroyAll                                        //0x0000(0x0229)
  *                                                                   DebugCapsuleSweepSize                             //0x0000(0x0229)
  *                                                                   DebugCapsuleSweepPawn                             //0x0000(0x0229)
  *                                                                   DebugCapsuleSweepComplex                          //0x0000(0x0229)
  *                                                                   DebugCapsuleSweepClear                            //0x0000(0x0229)
  *                                                                   DebugCapsuleSweepChannel                          //0x0000(0x0229)
  *                                                                   DebugCapsuleSweepCapture                          //0x0000(0x0229)
  *                                                                   DebugCapsuleSweep                                 //0x0000(0x0229)
  *                                                                   DamageTarget                                      //0x0000(0x0229)
  *                                                                   CheatScript                                       //0x0000(0x0229)
  *                                                                   ChangeSize                                        //0x0000(0x0229)
  *                                                                   BugItStringCreator                                //0x0000(0x0229)
  *                                                                   BugItGo                                           //0x0000(0x0229)
  *                                                                   BugIt                                             //0x0000(0x0229)
};


class CheckBoxStyleAsset : public Object
{
  CheckBoxStyle*                                                      CheckBoxStyle                                     //0x0028(0x0580)
};


class ChildActorComponent : public SceneComponent
{
  Class*                                                              ChildActorClass                                   //0x01F0(0x0008)
  Actor*                                                              ChildActor                                        //0x01F8(0x0008)
  Actor*                                                              ChildActorTemplate                                //0x0200(0x0008)
  InClass*                                                            SetChildActorClass                                //0x0000(0x0229)
};


class ChildConnection : public NetConnection
{
  NetConnection*                                                      Parent                                            //0x19C0(0x0008)
};


class PlatformInterfaceBase : public Object
{
  AllDelegates*                                                       AllDelegates                                      //0x0028(0x0010)
};


class CloudStorageBase : public PlatformInterfaceBase
{
  LocalCloudFiles*                                                    LocalCloudFiles                                   //0x0038(0x0010)
  *                                                                   bSuppressDelegateCalls                            //0x0048(0x0001)
};


class CollisionProfile : public DeveloperSettings
{
  Profiles*                                                           Profiles                                          //0x0038(0x0010)
  DefaultChannelResponses*                                            DefaultChannelResponses                           //0x0048(0x0010)
  EditProfiles*                                                       EditProfiles                                      //0x0058(0x0010)
  ProfileRedirects*                                                   ProfileRedirects                                  //0x0068(0x0010)
  CollisionChannelRedirects*                                          CollisionChannelRedirects                         //0x0078(0x0010)
};


class Commandlet : public Object
{
  *                                                                   HelpDescription                                   //0x0028(0x0010)
  *                                                                   HelpUsage                                         //0x0038(0x0010)
  *                                                                   HelpWebLink                                       //0x0048(0x0010)
  HelpParamNames*                                                     HelpParamNames                                    //0x0058(0x0010)
  HelpParamDescriptions*                                              HelpParamDescriptions                             //0x0068(0x0010)
  *                                                                   IsServer                                          //0x0078(0x0001)
  *                                                                   IsClient                                          //0x0078(0x0001)
  *                                                                   IsEditor                                          //0x0078(0x0001)
  *                                                                   LogToConsole                                      //0x0078(0x0001)
  *                                                                   ShowErrorCount                                    //0x0078(0x0001)
  *                                                                   ShowProgress                                      //0x0078(0x0001)
};


class ComponentDelegateBinding : public DynamicBlueprintBinding
{
  ComponentDelegateBindings*                                          ComponentDelegateBindings                         //0x0028(0x0010)
};


class CurveTable : public Object
{
};


class CompositeCurveTable : public CurveTable
{
  ParentTables*                                                       ParentTables                                      //0x00A0(0x0010)
  OldParentTables*                                                    OldParentTables                                   //0x00B0(0x0010)
};


class DataTable : public Object
{
  ScriptStruct*                                                       RowStruct                                         //0x0028(0x0008)
  *                                                                   bStripFromClientBuilds                            //0x0080(0x0001)
  *                                                                   bIgnoreExtraFields                                //0x0080(0x0001)
  *                                                                   bIgnoreMissingFields                              //0x0080(0x0001)
  *                                                                   ImportKeyField                                    //0x0088(0x0010)
};


class CompositeDataTable : public DataTable
{
  ParentTables*                                                       ParentTables                                      //0x00C8(0x0010)
  OldParentTables*                                                    OldParentTables                                   //0x00D8(0x0010)
};


class Engine : public Object
{
  Font*                                                               TinyFont                                          //0x0030(0x0008)
  SoftObjectPath*                                                     TinyFontName                                      //0x0038(0x0018)
  Font*                                                               SmallFont                                         //0x0050(0x0008)
  SoftObjectPath*                                                     SmallFontName                                     //0x0058(0x0018)
  Font*                                                               MediumFont                                        //0x0070(0x0008)
  SoftObjectPath*                                                     MediumFontName                                    //0x0078(0x0018)
  Font*                                                               LargeFont                                         //0x0090(0x0008)
  SoftObjectPath*                                                     LargeFontName                                     //0x0098(0x0018)
  Font*                                                               SubtitleFont                                      //0x00B0(0x0008)
  SoftObjectPath*                                                     SubtitleFontName                                  //0x00B8(0x0018)
  AdditionalFonts*                                                    AdditionalFonts                                   //0x00D0(0x0010)
  AdditionalFontNames*                                                AdditionalFontNames                               //0x00E8(0x0010)
  Class*                                                              ConsoleClass                                      //0x00F8(0x0008)
  SoftClassPath*                                                      ConsoleClassName                                  //0x0100(0x0018)
  Class*                                                              GameViewportClientClass                           //0x0118(0x0008)
  SoftClassPath*                                                      GameViewportClientClassName                       //0x0120(0x0018)
  Class*                                                              LocalPlayerClass                                  //0x0138(0x0008)
  SoftClassPath*                                                      LocalPlayerClassName                              //0x0140(0x0018)
  Class*                                                              WorldSettingsClass                                //0x0158(0x0008)
  SoftClassPath*                                                      WorldSettingsClassName                            //0x0160(0x0018)
  SoftClassPath*                                                      NavigationSystemClassName                         //0x0178(0x0018)
  Class*                                                              NavigationSystemClass                             //0x0190(0x0008)
  SoftClassPath*                                                      NavigationSystemConfigClassName                   //0x0198(0x0018)
  Class*                                                              NavigationSystemConfigClass                       //0x01B0(0x0008)
  SoftClassPath*                                                      AvoidanceManagerClassName                         //0x01B8(0x0018)
  Class*                                                              AvoidanceManagerClass                             //0x01D0(0x0008)
  Class*                                                              PhysicsCollisionHandlerClass                      //0x01D8(0x0008)
  SoftClassPath*                                                      PhysicsCollisionHandlerClassName                  //0x01E0(0x0018)
  SoftClassPath*                                                      GameUserSettingsClassName                         //0x01F8(0x0018)
  Class*                                                              GameUserSettingsClass                             //0x0210(0x0008)
  SoftClassPath*                                                      AIControllerClassName                             //0x0218(0x0018)
  GameUserSettings*                                                   GameUserSettings                                  //0x0230(0x0008)
  Class*                                                              LevelScriptActorClass                             //0x0238(0x0008)
  SoftClassPath*                                                      LevelScriptActorClassName                         //0x0240(0x0018)
  SoftClassPath*                                                      DefaultBlueprintBaseClassName                     //0x0258(0x0018)
  SoftClassPath*                                                      GameSingletonClassName                            //0x0270(0x0018)
  Object*                                                             GameSingleton                                     //0x0288(0x0008)
  SoftClassPath*                                                      AssetManagerClassName                             //0x0290(0x0018)
  AssetManager*                                                       AssetManager                                      //0x02A8(0x0008)
  Texture2D*                                                          DefaultTexture                                    //0x02B0(0x0008)
  SoftObjectPath*                                                     DefaultTextureName                                //0x02B8(0x0018)
  Texture*                                                            DefaultDiffuseTexture                             //0x02D0(0x0008)
  SoftObjectPath*                                                     DefaultDiffuseTextureName                         //0x02D8(0x0018)
  Texture2D*                                                          DefaultBSPVertexTexture                           //0x02F0(0x0008)
  SoftObjectPath*                                                     DefaultBSPVertexTextureName                       //0x02F8(0x0018)
  Texture2D*                                                          HighFrequencyNoiseTexture                         //0x0310(0x0008)
  SoftObjectPath*                                                     HighFrequencyNoiseTextureName                     //0x0318(0x0018)
  Texture2D*                                                          DefaultBokehTexture                               //0x0330(0x0008)
  SoftObjectPath*                                                     DefaultBokehTextureName                           //0x0338(0x0018)
  Texture2D*                                                          DefaultBloomKernelTexture                         //0x0350(0x0008)
  SoftObjectPath*                                                     DefaultBloomKernelTextureName                     //0x0358(0x0018)
  Material*                                                           WireframeMaterial                                 //0x0370(0x0008)
  *                                                                   WireframeMaterialName                             //0x0378(0x0010)
  Material*                                                           HairDefaultMaterial                               //0x0388(0x0008)
  *                                                                   HairDefaultMaterialName                           //0x0390(0x0010)
  Material*                                                           HairDebugMaterial                                 //0x03A0(0x0008)
  *                                                                   HairDebugMaterialName                             //0x03A8(0x0010)
  Material*                                                           DebugMeshMaterial                                 //0x03B8(0x0008)
  SoftObjectPath*                                                     DebugMeshMaterialName                             //0x03C0(0x0018)
  Material*                                                           EmissiveMeshMaterial                              //0x03D8(0x0008)
  SoftObjectPath*                                                     EmissiveMeshMaterialName                          //0x03E0(0x0018)
  Material*                                                           LevelColorationLitMaterial                        //0x03F8(0x0008)
  *                                                                   LevelColorationLitMaterialName                    //0x0400(0x0010)
  Material*                                                           LevelColorationUnlitMaterial                      //0x0410(0x0008)
  *                                                                   LevelColorationUnlitMaterialName                  //0x0418(0x0010)
  Material*                                                           LightingTexelDensityMaterial                      //0x0428(0x0008)
  *                                                                   LightingTexelDensityName                          //0x0430(0x0010)
  Material*                                                           ShadedLevelColorationLitMaterial                  //0x0440(0x0008)
  *                                                                   ShadedLevelColorationLitMaterialName              //0x0448(0x0010)
  Material*                                                           ShadedLevelColorationUnlitMaterial                //0x0458(0x0008)
  *                                                                   ShadedLevelColorationUnlitMaterialName            //0x0460(0x0010)
  Material*                                                           RemoveSurfaceMaterial                             //0x0470(0x0008)
  SoftObjectPath*                                                     RemoveSurfaceMaterialName                         //0x0478(0x0018)
  Material*                                                           VertexColorMaterial                               //0x0490(0x0008)
  *                                                                   VertexColorMaterialName                           //0x0498(0x0010)
  Material*                                                           VertexColorViewModeMaterial_ColorOnly             //0x04A8(0x0008)
  *                                                                   VertexColorViewModeMaterialName_ColorOnly         //0x04B0(0x0010)
  Material*                                                           VertexColorViewModeMaterial_AlphaAsColor          //0x04C0(0x0008)
  *                                                                   VertexColorViewModeMaterialName_AlphaAsColor      //0x04C8(0x0010)
  Material*                                                           VertexColorViewModeMaterial_RedOnly               //0x04D8(0x0008)
  *                                                                   VertexColorViewModeMaterialName_RedOnly           //0x04E0(0x0010)
  Material*                                                           VertexColorViewModeMaterial_GreenOnly             //0x04F0(0x0008)
  *                                                                   VertexColorViewModeMaterialName_GreenOnly         //0x04F8(0x0010)
  Material*                                                           VertexColorViewModeMaterial_BlueOnly              //0x0508(0x0008)
  *                                                                   VertexColorViewModeMaterialName_BlueOnly          //0x0510(0x0010)
  SoftObjectPath*                                                     DebugEditorMaterialName                           //0x0520(0x0018)
  Material*                                                           ConstraintLimitMaterial                           //0x0538(0x0008)
  MaterialInstanceDynamic*                                            ConstraintLimitMaterialX                          //0x0540(0x0008)
  MaterialInstanceDynamic*                                            ConstraintLimitMaterialXAxis                      //0x0548(0x0008)
  MaterialInstanceDynamic*                                            ConstraintLimitMaterialY                          //0x0550(0x0008)
  MaterialInstanceDynamic*                                            ConstraintLimitMaterialYAxis                      //0x0558(0x0008)
  MaterialInstanceDynamic*                                            ConstraintLimitMaterialZ                          //0x0560(0x0008)
  MaterialInstanceDynamic*                                            ConstraintLimitMaterialZAxis                      //0x0568(0x0008)
  MaterialInstanceDynamic*                                            ConstraintLimitMaterialPrismatic                  //0x0570(0x0008)
  Material*                                                           InvalidLightmapSettingsMaterial                   //0x0578(0x0008)
  SoftObjectPath*                                                     InvalidLightmapSettingsMaterialName               //0x0580(0x0018)
  Material*                                                           PreviewShadowsIndicatorMaterial                   //0x0598(0x0008)
  SoftObjectPath*                                                     PreviewShadowsIndicatorMaterialName               //0x05A0(0x0018)
  Material*                                                           ArrowMaterial                                     //0x05B8(0x0008)
  MaterialInstanceDynamic*                                            ArrowMaterialYellow                               //0x05C0(0x0008)
  SoftObjectPath*                                                     ArrowMaterialName                                 //0x05C8(0x0018)
  LinearColor*                                                        LightingOnlyBrightness                            //0x05E0(0x0010)
  ShaderComplexityColors*                                             ShaderComplexityColors                            //0x05F0(0x0010)
  QuadComplexityColors*                                               QuadComplexityColors                              //0x0600(0x0010)
  LightComplexityColors*                                              LightComplexityColors                             //0x0610(0x0010)
  StationaryLightOverlapColors*                                       StationaryLightOverlapColors                      //0x0620(0x0010)
  LODColorationColors*                                                LODColorationColors                               //0x0630(0x0010)
  HLODColorationColors*                                               HLODColorationColors                              //0x0640(0x0010)
  StreamingAccuracyColors*                                            StreamingAccuracyColors                           //0x0650(0x0010)
  *                                                                   MaxPixelShaderAdditiveComplexityCount             //0x0660(0x0004)
  *                                                                   MaxES2PixelShaderAdditiveComplexityCount          //0x0664(0x0004)
  *                                                                   MaxES3PixelShaderAdditiveComplexityCount          //0x0668(0x0004)
  *                                                                   MinLightMapDensity                                //0x066C(0x0004)
  *                                                                   IdealLightMapDensity                              //0x0670(0x0004)
  *                                                                   MaxLightMapDensity                                //0x0674(0x0004)
  *                                                                   bRenderLightMapDensityGrayscale                   //0x0678(0x0001)
  *                                                                   RenderLightMapDensityGrayscaleScale               //0x067C(0x0004)
  *                                                                   RenderLightMapDensityColorScale                   //0x0680(0x0004)
  LinearColor*                                                        LightMapDensityVertexMappedColor                  //0x0684(0x0010)
  LinearColor*                                                        LightMapDensitySelectedColor                      //0x0694(0x0010)
  StatColorMappings*                                                  StatColorMappings                                 //0x06A8(0x0010)
  PhysicalMaterial*                                                   DefaultPhysMaterial                               //0x06B8(0x0008)
  SoftObjectPath*                                                     DefaultPhysMaterialName                           //0x06C0(0x0018)
  ActiveGameNameRedirects*                                            ActiveGameNameRedirects                           //0x06D8(0x0010)
  ActiveClassRedirects*                                               ActiveClassRedirects                              //0x06E8(0x0010)
  ActivePluginRedirects*                                              ActivePluginRedirects                             //0x06F8(0x0010)
  ActiveStructRedirects*                                              ActiveStructRedirects                             //0x0708(0x0010)
  Texture2D*                                                          PreIntegratedSkinBRDFTexture                      //0x0718(0x0008)
  SoftObjectPath*                                                     PreIntegratedSkinBRDFTextureName                  //0x0720(0x0018)
  Texture2D*                                                          BlueNoiseTexture                                  //0x0738(0x0008)
  SoftObjectPath*                                                     BlueNoiseTextureName                              //0x0740(0x0018)
  Texture2D*                                                          MiniFontTexture                                   //0x0758(0x0008)
  SoftObjectPath*                                                     MiniFontTextureName                               //0x0760(0x0018)
  Texture*                                                            WeightMapPlaceholderTexture                       //0x0778(0x0008)
  SoftObjectPath*                                                     WeightMapPlaceholderTextureName                   //0x0780(0x0018)
  Texture2D*                                                          LightMapDensityTexture                            //0x0798(0x0008)
  SoftObjectPath*                                                     LightMapDensityTextureName                        //0x07A0(0x0018)
  GameViewportClient*                                                 GameViewport                                      //0x07C0(0x0008)
  DeferredCommands*                                                   DeferredCommands                                  //0x07C8(0x0010)
  *                                                                   TickCycles                                        //0x07D8(0x0004)
  *                                                                   GameCycles                                        //0x07DC(0x0004)
  *                                                                   ClientCycles                                      //0x07E0(0x0004)
  *                                                                   NearClipPlane                                     //0x07E4(0x0004)
  *                                                                   bHardwareSurveyEnabled                            //0x07E8(0x0001)
  *                                                                   bSubtitlesEnabled                                 //0x07E8(0x0001)
  *                                                                   bSubtitlesForcedOff                               //0x07E8(0x0001)
  *                                                                   MaximumLoopIterationCount                         //0x07EC(0x0004)
  *                                                                   bCanBlueprintsTickByDefault                       //0x07F0(0x0001)
  *                                                                   bOptimizeAnimBlueprintMemberVariableAccess        //0x07F0(0x0001)
  *                                                                   bAllowMultiThreadedAnimationUpdate                //0x07F0(0x0001)
  *                                                                   bEnableEditorPSysRealtimeLOD                      //0x07F0(0x0001)
  *                                                                   bSmoothFrameRate                                  //0x07F0(0x0001)
  *                                                                   bUseFixedFrameRate                                //0x07F0(0x0001)
  *                                                                   FixedFrameRate                                    //0x07F4(0x0004)
  FloatRange*                                                         SmoothedFrameRateRange                            //0x07F8(0x0010)
  EngineCustomTimeStep*                                               DefaultCustomTimeStep                             //0x0808(0x0008)
  EngineCustomTimeStep*                                               CurrentCustomTimeStep                             //0x0810(0x0008)
  SoftClassPath*                                                      CustomTimeStepClassName                           //0x0818(0x0018)
  TimecodeProvider*                                                   DefaultTimecodeProvider                           //0x0830(0x0008)
  TimecodeProvider*                                                   CustomTimecodeProvider                            //0x0838(0x0008)
  SoftClassPath*                                                      DefaultTimecodeProviderClassName                  //0x0840(0x0018)
  SoftClassPath*                                                      TimecodeProviderClassName                         //0x0858(0x0018)
  FrameRate*                                                          DefaultTimecodeFrameRate                          //0x0870(0x0008)
  *                                                                   bCheckForMultiplePawnsSpawnedInAFrame             //0x0878(0x0001)
  *                                                                   NumPawnsAllowedToBeSpawnedInAFrame                //0x087C(0x0004)
  *                                                                   bShouldGenerateLowQualityLightmaps                //0x0880(0x0001)
  Color*                                                              C_WorldBox                                        //0x0884(0x0004)
  Color*                                                              C_BrushWire                                       //0x0888(0x0004)
  Color*                                                              C_AddWire                                         //0x088C(0x0004)
  Color*                                                              C_SubtractWire                                    //0x0890(0x0004)
  Color*                                                              C_SemiSolidWire                                   //0x0894(0x0004)
  Color*                                                              C_NonSolidWire                                    //0x0898(0x0004)
  Color*                                                              C_WireBackground                                  //0x089C(0x0004)
  Color*                                                              C_ScaleBoxHi                                      //0x08A0(0x0004)
  Color*                                                              C_VolumeCollision                                 //0x08A4(0x0004)
  Color*                                                              C_BSPCollision                                    //0x08A8(0x0004)
  Color*                                                              C_OrthoBackground                                 //0x08AC(0x0004)
  Color*                                                              C_Volume                                          //0x08B0(0x0004)
  Color*                                                              C_BrushShape                                      //0x08B4(0x0004)
  *                                                                   StreamingDistanceFactor                           //0x08B8(0x0004)
  DirectoryPath*                                                      GameScreenshotSaveDirectory                       //0x08C0(0x0010)
  UnderlyingType*                                                     TransitionType                                    //0x08D0(0x0001)
  *                                                                   TransitionDescription                             //0x08D8(0x0010)
  *                                                                   TransitionGameMode                                //0x08E8(0x0010)
  *                                                                   MeshLODRange                                      //0x08F8(0x0004)
  *                                                                   bAllowMatureLanguage                              //0x08FC(0x0001)
  *                                                                   CameraRotationThreshold                           //0x0900(0x0004)
  *                                                                   CameraTranslationThreshold                        //0x0904(0x0004)
  *                                                                   PrimitiveProbablyVisibleTime                      //0x0908(0x0004)
  *                                                                   MaxOcclusionPixelsFraction                        //0x090C(0x0004)
  *                                                                   bPauseOnLossOfFocus                               //0x0910(0x0001)
  *                                                                   MaxParticleResize                                 //0x0914(0x0004)
  *                                                                   MaxParticleResizeWarn                             //0x0918(0x0004)
  PendingDroppedNotes*                                                PendingDroppedNotes                               //0x0920(0x0010)
  *                                                                   NetClientTicksPerSecond                           //0x0930(0x0004)
  *                                                                   DisplayGamma                                      //0x0934(0x0004)
  *                                                                   MinDesiredFrameRate                               //0x0938(0x0004)
  LinearColor*                                                        DefaultSelectedMaterialColor                      //0x093C(0x0010)
  LinearColor*                                                        SelectedMaterialColor                             //0x094C(0x0010)
  LinearColor*                                                        SelectionOutlineColor                             //0x095C(0x0010)
  LinearColor*                                                        SubduedSelectionOutlineColor                      //0x096C(0x0010)
  LinearColor*                                                        SelectedMaterialColorOverride                     //0x097C(0x0010)
  *                                                                   bIsOverridingSelectedColor                        //0x098C(0x0001)
  *                                                                   bEnableOnScreenDebugMessages                      //0x0990(0x0001)
  *                                                                   bEnableOnScreenDebugMessagesDisplay               //0x0990(0x0001)
  *                                                                   bSuppressMapWarnings                              //0x0990(0x0001)
  *                                                                   bDisableAILogging                                 //0x0990(0x0001)
  *                                                                   bEnableVisualLogRecordingOnStart                  //0x0994(0x0004)
  *                                                                   ScreenSaverInhibitorSemaphore                     //0x099C(0x0004)
  *                                                                   bLockReadOnlyLevels                               //0x09A0(0x0001)
  *                                                                   ParticleEventManagerClassPath                     //0x09A8(0x0010)
  *                                                                   SelectionHighlightIntensity                       //0x09C8(0x0004)
  *                                                                   BSPSelectionHighlightIntensity                    //0x09CC(0x0004)
  *                                                                   SelectionHighlightIntensityBillboards             //0x09D0(0x0004)
  NetDriverDefinitions*                                               NetDriverDefinitions                              //0x0C00(0x0010)
  ServerActors*                                                       ServerActors                                      //0x0C10(0x0010)
  RuntimeServerActors*                                                RuntimeServerActors                               //0x0C20(0x0010)
  *                                                                   NetErrorLogInterval                               //0x0C30(0x0004)
  *                                                                   bStartedLoadMapMovie                              //0x0C34(0x0001)
  *                                                                   NextWorldContextHandle                            //0x0C50(0x0004)
};


class ScriptViewportClient : public Object
{
};


class GameViewportClient : public ScriptViewportClient
{
  Console*                                                            ViewportConsole                                   //0x0040(0x0008)
  DebugProperties*                                                    DebugProperties                                   //0x0048(0x0010)
  World*                                                              World                                             //0x0078(0x0008)
  GameInstance*                                                       GameInstance                                      //0x0080(0x0008)
  *                                                                   SSSwapControllers                                 //0x0000(0x0229)
  *                                                                   ShowTitleSafeArea                                 //0x0000(0x0229)
  *                                                                   SetConsoleTarget                                  //0x0000(0x0229)
};


class Console : public Object
{
  LocalPlayer*                                                        ConsoleTargetPlayer                               //0x0038(0x0008)
  Texture2D*                                                          DefaultTexture_Black                              //0x0040(0x0008)
  Texture2D*                                                          DefaultTexture_White                              //0x0048(0x0008)
  HistoryBuffer*                                                      HistoryBuffer                                     //0x0068(0x0010)
};


class ControlChannel : public Channel
{
};


class StreamingSettings : public DeveloperSettings
{
  *                                                                   AsyncLoadingThreadEnabled                         //0x0038(0x0001)
  *                                                                   WarnIfTimeLimitExceeded                           //0x0038(0x0001)
  *                                                                   TimeLimitExceededMultiplier                       //0x003C(0x0004)
  *                                                                   TimeLimitExceededMinTime                          //0x0040(0x0004)
  *                                                                   MinBulkDataSizeForAsyncLoading                    //0x0044(0x0004)
  *                                                                   UseBackgroundLevelStreaming                       //0x0048(0x0001)
  *                                                                   AsyncLoadingUseFullTimeLimit                      //0x0048(0x0001)
  *                                                                   AsyncLoadingTimeLimit                             //0x004C(0x0004)
  *                                                                   PriorityAsyncLoadingExtraTime                     //0x0050(0x0004)
  *                                                                   LevelStreamingActorsUpdateTimeLimit               //0x0054(0x0004)
  *                                                                   PriorityLevelStreamingActorsUpdateExtraTime       //0x0058(0x0004)
  *                                                                   LevelStreamingComponentsRegistrationGranularity   //0x005C(0x0004)
  *                                                                   LevelStreamingUnregisterComponentsTimeLimit       //0x0060(0x0004)
  *                                                                   LevelStreamingComponentsUnregistrationGranularity //0x0064(0x0004)
  *                                                                   EventDrivenLoaderEnabled                          //0x0068(0x0001)
  *                                                                   FlushStreamingOnExit                              //0x0068(0x0001)
};


class GarbageCollectionSettings : public DeveloperSettings
{
  *                                                                   TimeBetweenPurgingPendingKillObjects              //0x0038(0x0004)
  *                                                                   FlushStreamingOnGC                                //0x003C(0x0001)
  *                                                                   AllowParallelGC                                   //0x003C(0x0001)
  *                                                                   IncrementalBeginDestroyEnabled                    //0x003C(0x0001)
  *                                                                   MultithreadedDestructionEnabled                   //0x003C(0x0001)
  *                                                                   CreateGCClusters                                  //0x003C(0x0001)
  *                                                                   ActorClusteringEnabled                            //0x003C(0x0001)
  *                                                                   BlueprintClusteringEnabled                        //0x003C(0x0001)
  *                                                                   UseDisregardForGCOnDedicatedServers               //0x003C(0x0001)
  *                                                                   MinGCClusterSize                                  //0x0040(0x0004)
  *                                                                   NumRetriesBeforeForcingGC                         //0x0044(0x0004)
  *                                                                   MaxObjectsNotConsideredByGC                       //0x0048(0x0004)
  *                                                                   SizeOfPermanentObjectPool                         //0x004C(0x0004)
  *                                                                   MaxObjectsInGame                                  //0x0050(0x0004)
  *                                                                   MaxObjectsInEditor                                //0x0054(0x0004)
};


class CullDistanceVolume : public Volume
{
  CullDistances*                                                      CullDistances                                     //0x0250(0x0010)
  *                                                                   bEnabled                                          //0x0260(0x0001)
};


class CurveBase : public Object
{
  *                                                                   GetValueRange                                     //0x0000(0x0229)
  *                                                                   GetTimeRange                                      //0x0000(0x0229)
};


class CurveEdPresetCurve : public Object
{
};


class CurveFloat : public CurveBase
{
  RichCurve*                                                          FloatCurve                                        //0x0030(0x0080)
  *                                                                   bIsEventCurve                                     //0x00B0(0x0001)
  *                                                                   GetFloatValue                                     //0x0000(0x0229)
};


class CurveLinearColor : public CurveBase
{
  RichCurve*                                                          FloatCurves                                       //0x0030(0x0080)
  *                                                                   AdjustHue                                         //0x0230(0x0004)
  *                                                                   AdjustSaturation                                  //0x0234(0x0004)
  *                                                                   AdjustBrightness                                  //0x0238(0x0004)
  *                                                                   AdjustBrightnessCurve                             //0x023C(0x0004)
  *                                                                   AdjustVibrance                                    //0x0240(0x0004)
  *                                                                   AdjustMinAlpha                                    //0x0244(0x0004)
  *                                                                   AdjustMaxAlpha                                    //0x0248(0x0004)
  *                                                                   GetLinearColorValue                               //0x0000(0x0229)
  *                                                                   GetClampedLinearColorValue                        //0x0000(0x0229)
};


class Texture2D : public Texture
{
  *                                                                   LevelIndex                                        //0x00D0(0x0004)
  *                                                                   FirstResourceMemMip                               //0x00D4(0x0004)
  *                                                                   bTemporarilyDisableStreaming                      //0x00D8(0x0001)
  TextureAddress*                                                     AddressX                                          //0x00D9(0x0001)
  TextureAddress*                                                     AddressY                                          //0x00DA(0x0001)
  IntPoint*                                                           ImportedSize                                      //0x00DC(0x0008)
  *                                                                   Blueprint_GetSizeY                                //0x0000(0x0229)
  *                                                                   Blueprint_GetSizeX                                //0x0000(0x0229)
};


class CurveLinearColorAtlas : public Texture2D
{
  *                                                                   TextureSize                                       //0x0100(0x0004)
  GradientCurves*                                                     GradientCurves                                    //0x0108(0x0010)
  InCurve*                                                            GetCurvePosition                                  //0x0000(0x0229)
};


class CurveSourceInterface : public Interface
{
  *                                                                   GetCurveValue                                     //0x0000(0x0229)
  *                                                                   GetCurves                                         //0x0000(0x0229)
  *                                                                   GetBindingName                                    //0x0000(0x0229)
};


class CurveVector : public CurveBase
{
  RichCurve*                                                          FloatCurves                                       //0x0030(0x0080)
  *                                                                   GetVectorValue                                    //0x0000(0x0229)
};


class DamageType : public Object
{
  *                                                                   bCausedByWorld                                    //0x0028(0x0001)
  *                                                                   bScaleMomentumByMass                              //0x0028(0x0001)
  *                                                                   bRadialDamageVelChange                            //0x0028(0x0001)
  *                                                                   DamageImpulse                                     //0x002C(0x0004)
  *                                                                   DestructibleImpulse                               //0x0030(0x0004)
  *                                                                   DestructibleDamageSpreadScale                     //0x0034(0x0004)
  *                                                                   DamageFalloff                                     //0x0038(0x0004)
};


class PrimaryDataAsset : public DataAsset
{
};


class DataTableFunctionLibrary : public BlueprintFunctionLibrary
{
  Table*                                                              GetDataTableRowNames                              //0x0000(0x0229)
  Table*                                                              GetDataTableRowFromName                           //0x0000(0x0229)
  DataTable*                                                          GetDataTableColumnAsString                        //0x0000(0x0229)
  CurveTable*                                                         EvaluateCurveTableRow                             //0x0000(0x0229)
  Table*                                                              DoesDataTableRowExist                             //0x0000(0x0229)
};


class DebugCameraController : public PlayerController
{
  *                                                                   bShowSelectedInfo                                 //0x0568(0x0001)
  *                                                                   bIsFrozenRendering                                //0x0568(0x0001)
  *                                                                   bIsOrbitingSelectedActor                          //0x0568(0x0001)
  *                                                                   bOrbitPivotUseCenter                              //0x0568(0x0001)
  *                                                                   bEnableBufferVisualization                        //0x0568(0x0001)
  *                                                                   bEnableBufferVisualizationFullMode                //0x0568(0x0001)
  *                                                                   bIsBufferVisualizationInputSetup                  //0x0568(0x0001)
  *                                                                   bLastDisplayEnabled                               //0x0568(0x0001)
  DrawFrustumComponent*                                               DrawFrustum                                       //0x0570(0x0008)
  Actor*                                                              SelectedActor                                     //0x0578(0x0008)
  PrimitiveComponent*                                                 SelectedComponent                                 //0x0580(0x0008)
  HitResult*                                                          SelectedHitPoint                                  //0x0588(0x0088)
  PlayerController*                                                   OriginalControllerRef                             //0x0610(0x0008)
  Player*                                                             OriginalPlayer                                    //0x0618(0x0008)
  *                                                                   SpeedScale                                        //0x0620(0x0004)
  *                                                                   InitialMaxSpeed                                   //0x0624(0x0004)
  *                                                                   InitialAccel                                      //0x0628(0x0004)
  *                                                                   InitialDecel                                      //0x062C(0x0004)
  *                                                                   ToggleDisplay                                     //0x0000(0x0229)
  *                                                                   ShowDebugSelectedInfo                             //0x0000(0x0229)
  *                                                                   SetPawnMovementSpeedScale                         //0x0000(0x0229)
  RestoredPC*                                                         ReceiveOnDeactivate                               //0x0000(0x0229)
  NewSelectedActor*                                                   ReceiveOnActorSelected                            //0x0000(0x0229)
  OriginalPC*                                                         ReceiveOnActivate                                 //0x0000(0x0229)
  ReturnValue*                                                        GetSelectedActor                                  //0x0000(0x0229)
};


class DebugCameraControllerSettings : public DeveloperSettings
{
  CycleViewModes*                                                     CycleViewModes                                    //0x0038(0x0010)
};


class HUD : public Actor
{
  PlayerController*                                                   PlayerOwner                                       //0x0218(0x0008)
  *                                                                   bLostFocusPaused                                  //0x0220(0x0001)
  *                                                                   bShowHUD                                          //0x0220(0x0001)
  *                                                                   bShowDebugInfo                                    //0x0220(0x0001)
  *                                                                   CurrentTargetIndex                                //0x0224(0x0004)
  *                                                                   bShowHitBoxDebugInfo                              //0x0228(0x0001)
  *                                                                   bShowOverlays                                     //0x0228(0x0001)
  *                                                                   bEnableDebugTextShadow                            //0x0228(0x0001)
  PostRenderedActors*                                                 PostRenderedActors                                //0x0230(0x0010)
  DebugDisplay*                                                       DebugDisplay                                      //0x0248(0x0010)
  ToggledDebugCategories*                                             ToggledDebugCategories                            //0x0258(0x0010)
  Canvas*                                                             Canvas                                            //0x0268(0x0008)
  Canvas*                                                             DebugCanvas                                       //0x0270(0x0008)
  DebugTextList*                                                      DebugTextList                                     //0x0278(0x0010)
  Class*                                                              ShowDebugTargetDesiredClass                       //0x0288(0x0008)
  Actor*                                                              ShowDebugTargetActor                              //0x0290(0x0008)
  *                                                                   ShowHUD                                           //0x0000(0x0229)
  *                                                                   ShowDebugToggleSubCategory                        //0x0000(0x0229)
  DesiredClass*                                                       ShowDebugForReticleTargetToggle                   //0x0000(0x0229)
  *                                                                   ShowDebug                                         //0x0000(0x0229)
  SrcActor*                                                           RemoveDebugText                                   //0x0000(0x0229)
  *                                                                   RemoveAllDebugStrings                             //0x0000(0x0229)
  *                                                                   ReceiveHitBoxRelease                              //0x0000(0x0229)
  *                                                                   ReceiveHitBoxEndCursorOver                        //0x0000(0x0229)
  *                                                                   ReceiveHitBoxClick                                //0x0000(0x0229)
  *                                                                   ReceiveHitBoxBeginCursorOver                      //0x0000(0x0229)
  *                                                                   ReceiveDrawHUD                                    //0x0000(0x0229)
  *                                                                   Project                                           //0x0000(0x0229)
  *                                                                   PreviousDebugTarget                               //0x0000(0x0229)
  *                                                                   NextDebugTarget                                   //0x0000(0x0229)
  Font*                                                               GetTextSize                                       //0x0000(0x0229)
  ReturnValue*                                                        GetOwningPlayerController                         //0x0000(0x0229)
  ReturnValue*                                                        GetOwningPawn                                     //0x0000(0x0229)
  ClassFilter*                                                        GetActorsInSelectionRectangle                     //0x0000(0x0229)
  Texture*                                                            DrawTextureSimple                                 //0x0000(0x0229)
  Texture*                                                            DrawTexture                                       //0x0000(0x0229)
  Font*                                                               DrawText                                          //0x0000(0x0229)
  *                                                                   DrawRect                                          //0x0000(0x0229)
  Material*                                                           DrawMaterialTriangle                              //0x0000(0x0229)
  Material*                                                           DrawMaterialSimple                                //0x0000(0x0229)
  Material*                                                           DrawMaterial                                      //0x0000(0x0229)
  *                                                                   DrawLine                                          //0x0000(0x0229)
  *                                                                   Deproject                                         //0x0000(0x0229)
  *                                                                   AddHitBox                                         //0x0000(0x0229)
  SrcActor*                                                           AddDebugText                                      //0x0000(0x0229)
};


class DebugCameraHUD : public HUD
{
};


class DebugDrawService : public BlueprintFunctionLibrary
{
};


class DecalActor : public Actor
{
  DecalComponent*                                                     Decal                                             //0x0218(0x0008)
  NewDecalMaterial*                                                   SetDecalMaterial                                  //0x0000(0x0229)
  ReturnValue*                                                        GetDecalMaterial                                  //0x0000(0x0229)
  ReturnValue*                                                        CreateDynamicMaterialInstance                     //0x0000(0x0229)
};


class DecalComponent : public SceneComponent
{
  MaterialInterface*                                                  DecalMaterial                                     //0x01F0(0x0008)
  *                                                                   SortOrder                                         //0x01F8(0x0004)
  *                                                                   FadeScreenSize                                    //0x01FC(0x0004)
  *                                                                   FadeStartDelay                                    //0x0200(0x0004)
  *                                                                   FadeDuration                                      //0x0204(0x0004)
  *                                                                   FadeInDuration                                    //0x0208(0x0004)
  *                                                                   FadeInStartDelay                                  //0x020C(0x0004)
  *                                                                   bDestroyOwnerAfterFade                            //0x0210(0x0001)
  Vector*                                                             DecalSize                                         //0x0214(0x000C)
  *                                                                   SetSortOrder                                      //0x0000(0x0229)
  *                                                                   SetFadeScreenSize                                 //0x0000(0x0229)
  *                                                                   SetFadeOut                                        //0x0000(0x0229)
  *                                                                   SetFadeIn                                         //0x0000(0x0229)
  NewDecalMaterial*                                                   SetDecalMaterial                                  //0x0000(0x0229)
  *                                                                   GetFadeStartDelay                                 //0x0000(0x0229)
  *                                                                   GetFadeInStartDelay                               //0x0000(0x0229)
  *                                                                   GetFadeInDuration                                 //0x0000(0x0229)
  *                                                                   GetFadeDuration                                   //0x0000(0x0229)
  ReturnValue*                                                        GetDecalMaterial                                  //0x0000(0x0229)
  ReturnValue*                                                        CreateDynamicMaterialInstance                     //0x0000(0x0229)
};


class DefaultPawn : public Pawn
{
  *                                                                   BaseTurnRate                                      //0x0278(0x0004)
  *                                                                   BaseLookUpRate                                    //0x027C(0x0004)
  PawnMovementComponent*                                              MovementComponent                                 //0x0280(0x0008)
  SphereComponent*                                                    CollisionComponent                                //0x0288(0x0008)
  StaticMeshComponent*                                                MeshComponent                                     //0x0290(0x0008)
  *                                                                   bAddDefaultMovementBindings                       //0x0298(0x0001)
  *                                                                   TurnAtRate                                        //0x0000(0x0229)
  *                                                                   MoveUp_World                                      //0x0000(0x0229)
  *                                                                   MoveRight                                         //0x0000(0x0229)
  *                                                                   MoveForward                                       //0x0000(0x0229)
  *                                                                   LookUpAtRate                                      //0x0000(0x0229)
};


class PhysicsVolume : public Volume
{
  *                                                                   TerminalVelocity                                  //0x0250(0x0004)
  *                                                                   Priority                                          //0x0254(0x0004)
  *                                                                   FluidFriction                                     //0x0258(0x0004)
  *                                                                   bWaterVolume                                      //0x025C(0x0001)
  *                                                                   bPhysicsOnContact                                 //0x025C(0x0001)
};


class DefaultPhysicsVolume : public PhysicsVolume
{
};


class DemoNetConnection : public NetConnection
{
};


class DemoNetDriver : public NetDriver
{
  RollbackNetStartupActors_Key*                                       RollbackNetStartupActors                          //0x0800(0x0050)
  *                                                                   CheckpointSaveMaxMSPerFrame                       //0x0C14(0x0004)
  MulticastRecordOptions*                                             MulticastRecordOptions                            //0x0C48(0x0010)
  *                                                                   bIsLocalReplay                                    //0x0C58(0x0001)
  SpectatorControllers*                                               SpectatorControllers                              //0x0C60(0x0010)
};


class PendingNetGame : public Object
{
  NetDriver*                                                          NetDriver                                         //0x0030(0x0008)
  DemoNetDriver*                                                      DemoNetDriver                                     //0x0038(0x0008)
};


class DemoPendingNetGame : public PendingNetGame
{
};


class DestructibleInterface : public Interface
{
};


class TextureLODSettings : public Object
{
  TextureLODGroups*                                                   TextureLODGroups                                  //0x0028(0x0010)
};


class DeviceProfile : public TextureLODSettings
{
  *                                                                   DeviceType                                        //0x0038(0x0010)
  *                                                                   BaseProfileName                                   //0x0048(0x0010)
  Object*                                                             Parent                                            //0x0058(0x0008)
  CVars*                                                              CVars                                             //0x0078(0x0010)
};


class DeviceProfileManager : public Object
{
  Profiles*                                                           Profiles                                          //0x0028(0x0010)
};


class DialogueSoundWaveProxy : public SoundBase
{
};


class DialogueVoice : public Object
{
  EGrammaticalGender*                                                 Gender                                            //0x0028(0x0001)
  EGrammaticalNumber*                                                 Plurality                                         //0x0029(0x0001)
  Guid*                                                               LocalizationGUID                                  //0x002C(0x0010)
};


class DialogueWave : public Object
{
  *                                                                   bMature                                           //0x0028(0x0001)
  *                                                                   bOverride_SubtitleOverride                        //0x0028(0x0001)
  *                                                                   SpokenText                                        //0x0030(0x0010)
  *                                                                   SubtitleOverride                                  //0x0040(0x0010)
  ContextMappings*                                                    ContextMappings                                   //0x0050(0x0010)
  Guid*                                                               LocalizationGUID                                  //0x0060(0x0010)
};


class Light : public Actor
{
  LightComponent*                                                     LightComponent                                    //0x0218(0x0008)
  *                                                                   bEnabled                                          //0x0220(0x0001)
  *                                                                   ToggleEnabled                                     //0x0000(0x0229)
  *                                                                   SetLightFunctionScale                             //0x0000(0x0229)
  NewLightFunctionMaterial*                                           SetLightFunctionMaterial                          //0x0000(0x0229)
  *                                                                   SetLightFunctionFadeDistance                      //0x0000(0x0229)
  *                                                                   SetLightColor                                     //0x0000(0x0229)
  *                                                                   SetEnabled                                        //0x0000(0x0229)
  *                                                                   SetCastShadows                                    //0x0000(0x0229)
  *                                                                   SetBrightness                                     //0x0000(0x0229)
  *                                                                   SetAffectTranslucentLighting                      //0x0000(0x0229)
  *                                                                   OnRep_bEnabled                                    //0x0000(0x0229)
  *                                                                   IsEnabled                                         //0x0000(0x0229)
  *                                                                   GetLightColor                                     //0x0000(0x0229)
  *                                                                   GetBrightness                                     //0x0000(0x0229)
};


class DirectionalLight : public Light
{
};


class LightComponentBase : public SceneComponent
{
  Guid*                                                               LightGuid                                         //0x01F0(0x0010)
  *                                                                   Brightness                                        //0x0200(0x0004)
  *                                                                   Intensity                                         //0x0204(0x0004)
  Color*                                                              LightColor                                        //0x0208(0x0004)
  *                                                                   bAffectsWorld                                     //0x020C(0x0001)
  *                                                                   CastShadows                                       //0x020C(0x0001)
  *                                                                   CastStaticShadows                                 //0x020C(0x0001)
  *                                                                   CastDynamicShadows                                //0x020C(0x0001)
  *                                                                   bAffectTranslucentLighting                        //0x020C(0x0001)
  *                                                                   bTransmission                                     //0x020C(0x0001)
  *                                                                   bCastVolumetricShadow                             //0x020C(0x0001)
  *                                                                   bCastDeepShadow                                   //0x020C(0x0001)
  *                                                                   bCastRaytracedShadow                              //0x020D(0x0001)
  *                                                                   bAffectReflection                                 //0x020D(0x0001)
  *                                                                   bAffectGlobalIllumination                         //0x020D(0x0001)
  *                                                                   IndirectLightingIntensity                         //0x0210(0x0004)
  *                                                                   VolumetricScatteringIntensity                     //0x0214(0x0004)
  *                                                                   SamplesPerPixel                                   //0x0218(0x0004)
  *                                                                   SetSamplesPerPixel                                //0x0000(0x0229)
  *                                                                   SetCastVolumetricShadow                           //0x0000(0x0229)
  *                                                                   SetCastShadows                                    //0x0000(0x0229)
  *                                                                   SetCastRaytracedShadow                            //0x0000(0x0229)
  *                                                                   SetCastDeepShadow                                 //0x0000(0x0229)
  *                                                                   SetAffectReflection                               //0x0000(0x0229)
  *                                                                   SetAffectGlobalIllumination                       //0x0000(0x0229)
  *                                                                   GetLightColor                                     //0x0000(0x0229)
};


class LightComponent : public LightComponentBase
{
  *                                                                   Temperature                                       //0x0220(0x0004)
  *                                                                   MaxDrawDistance                                   //0x0224(0x0004)
  *                                                                   MaxDistanceFadeRange                              //0x0228(0x0004)
  *                                                                   bUseTemperature                                   //0x022C(0x0001)
  *                                                                   ShadowMapChannel                                  //0x0230(0x0004)
  *                                                                   MinRoughness                                      //0x0238(0x0004)
  *                                                                   SpecularScale                                     //0x023C(0x0004)
  *                                                                   ShadowResolutionScale                             //0x0240(0x0004)
  *                                                                   ShadowBias                                        //0x0244(0x0004)
  *                                                                   ShadowSlopeBias                                   //0x0248(0x0004)
  *                                                                   ShadowSharpen                                     //0x024C(0x0004)
  *                                                                   ContactShadowLength                               //0x0250(0x0004)
  *                                                                   ContactShadowLengthInWS                           //0x0254(0x0001)
  *                                                                   InverseSquaredFalloff                             //0x0254(0x0001)
  *                                                                   CastTranslucentShadows                            //0x0254(0x0001)
  *                                                                   bCastShadowsFromCinematicObjectsOnly              //0x0254(0x0001)
  *                                                                   bAffectDynamicIndirectLighting                    //0x0254(0x0001)
  *                                                                   bForceCachedShadowsForMovablePrimitives           //0x0254(0x0001)
  LightingChannels*                                                   LightingChannels                                  //0x0258(0x0001)
  MaterialInterface*                                                  LightFunctionMaterial                             //0x0260(0x0008)
  Vector*                                                             LightFunctionScale                                //0x0268(0x000C)
  TextureLightProfile*                                                IESTexture                                        //0x0278(0x0008)
  *                                                                   bUseIESBrightness                                 //0x0280(0x0001)
  *                                                                   IESBrightnessScale                                //0x0284(0x0004)
  *                                                                   LightFunctionFadeDistance                         //0x0288(0x0004)
  *                                                                   DisabledBrightness                                //0x028C(0x0004)
  *                                                                   bEnableLightShaftBloom                            //0x0290(0x0001)
  *                                                                   BloomScale                                        //0x0294(0x0004)
  *                                                                   BloomThreshold                                    //0x0298(0x0004)
  *                                                                   BloomMaxBrightness                                //0x029C(0x0004)
  Color*                                                              BloomTint                                         //0x02A0(0x0004)
  *                                                                   bUseRayTracedDistanceFieldShadows                 //0x02A4(0x0001)
  *                                                                   RayStartOffsetDepthScale                          //0x02A8(0x0004)
  *                                                                   SetVolumetricScatteringIntensity                  //0x0000(0x0229)
  *                                                                   SetUseIESBrightness                               //0x0000(0x0229)
  *                                                                   SetTransmission                                   //0x0000(0x0229)
  *                                                                   SetTemperature                                    //0x0000(0x0229)
  *                                                                   SetSpecularScale                                  //0x0000(0x0229)
  *                                                                   SetShadowSlopeBias                                //0x0000(0x0229)
  *                                                                   SetShadowBias                                     //0x0000(0x0229)
  *                                                                   SetLightFunctionScale                             //0x0000(0x0229)
  NewLightFunctionMaterial*                                           SetLightFunctionMaterial                          //0x0000(0x0229)
  *                                                                   SetLightFunctionFadeDistance                      //0x0000(0x0229)
  *                                                                   SetLightFunctionDisabledBrightness                //0x0000(0x0229)
  *                                                                   SetLightColor                                     //0x0000(0x0229)
  *                                                                   SetIntensity                                      //0x0000(0x0229)
  *                                                                   SetIndirectLightingIntensity                      //0x0000(0x0229)
  NewValue*                                                           SetIESTexture                                     //0x0000(0x0229)
  *                                                                   SetIESBrightnessScale                             //0x0000(0x0229)
  *                                                                   SetForceCachedShadowsForMovablePrimitives         //0x0000(0x0229)
  *                                                                   SetEnableLightShaftBloom                          //0x0000(0x0229)
  *                                                                   SetBloomTint                                      //0x0000(0x0229)
  *                                                                   SetBloomThreshold                                 //0x0000(0x0229)
  *                                                                   SetBloomScale                                     //0x0000(0x0229)
  *                                                                   SetBloomMaxBrightness                             //0x0000(0x0229)
  *                                                                   SetAffectTranslucentLighting                      //0x0000(0x0229)
  *                                                                   SetAffectDynamicIndirectLighting                  //0x0000(0x0229)
};


class DirectionalLightComponent : public LightComponent
{
  *                                                                   ShadowCascadeBiasDistribution                     //0x0338(0x0004)
  *                                                                   bEnableLightShaftOcclusion                        //0x033C(0x0001)
  *                                                                   OcclusionMaskDarkness                             //0x0340(0x0004)
  *                                                                   OcclusionDepthRange                               //0x0344(0x0004)
  Vector*                                                             LightShaftOverrideDirection                       //0x0348(0x000C)
  *                                                                   WholeSceneDynamicShadowRadius                     //0x0354(0x0004)
  *                                                                   DynamicShadowDistanceMovableLight                 //0x0358(0x0004)
  *                                                                   DynamicShadowDistanceStationaryLight              //0x035C(0x0004)
  *                                                                   DynamicShadowCascades                             //0x0360(0x0004)
  *                                                                   CascadeDistributionExponent                       //0x0364(0x0004)
  *                                                                   CascadeTransitionFraction                         //0x0368(0x0004)
  *                                                                   ShadowDistanceFadeoutFraction                     //0x036C(0x0004)
  *                                                                   bUseInsetShadowsForMovableObjects                 //0x0370(0x0001)
  *                                                                   FarShadowCascadeCount                             //0x0374(0x0004)
  *                                                                   FarShadowDistance                                 //0x0378(0x0004)
  *                                                                   DistanceFieldShadowDistance                       //0x037C(0x0004)
  *                                                                   LightSourceAngle                                  //0x0380(0x0004)
  *                                                                   LightSourceSoftAngle                              //0x0384(0x0004)
  *                                                                   TraceDistance                                     //0x0388(0x0004)
  LightmassDirectionalLightSettings*                                  LightmassSettings                                 //0x038C(0x0010)
  *                                                                   bCastModulatedShadows                             //0x039C(0x0001)
  Color*                                                              ModulatedShadowColor                              //0x03A0(0x0004)
  *                                                                   ShadowAmount                                      //0x03A4(0x0004)
  *                                                                   bUsedAsAtmosphereSunLight                         //0x03A8(0x0001)
  *                                                                   AtmosphereSunLightIndex                           //0x03AC(0x0004)
  *                                                                   SetShadowDistanceFadeoutFraction                  //0x0000(0x0229)
  *                                                                   SetShadowAmount                                   //0x0000(0x0229)
  *                                                                   SetOcclusionMaskDarkness                          //0x0000(0x0229)
  *                                                                   SetLightShaftOverrideDirection                    //0x0000(0x0229)
  *                                                                   SetEnableLightShaftOcclusion                      //0x0000(0x0229)
  *                                                                   SetDynamicShadowDistanceStationaryLight           //0x0000(0x0229)
  *                                                                   SetDynamicShadowDistanceMovableLight              //0x0000(0x0229)
  *                                                                   SetDynamicShadowCascades                          //0x0000(0x0229)
  *                                                                   SetCascadeTransitionFraction                      //0x0000(0x0229)
  *                                                                   SetCascadeDistributionExponent                    //0x0000(0x0229)
};


class Distribution : public Object
{
};


class DistributionFloat : public Distribution
{
  *                                                                   bCanBeBaked                                       //0x0030(0x0001)
  *                                                                   bBakedDataSuccesfully                             //0x0030(0x0001)
};


class DistributionFloatConstant : public DistributionFloat
{
  *                                                                   Constant                                          //0x0038(0x0004)
};


class DistributionFloatConstantCurve : public DistributionFloat
{
  InterpCurveFloat*                                                   ConstantCurve                                     //0x0038(0x0018)
};


class DistributionFloatParameterBase : public DistributionFloatConstant
{
  *                                                                   ParameterName                                     //0x0040(0x0008)
  *                                                                   MinInput                                          //0x0048(0x0004)
  *                                                                   MaxInput                                          //0x004C(0x0004)
  *                                                                   MinOutput                                         //0x0050(0x0004)
  *                                                                   MaxOutput                                         //0x0054(0x0004)
  DistributionParamMode*                                              ParamMode                                         //0x0058(0x0001)
};


class DistributionFloatParticleParameter : public DistributionFloatParameterBase
{
};


class DistributionFloatUniform : public DistributionFloat
{
  *                                                                   Min                                               //0x0038(0x0004)
  *                                                                   Max                                               //0x003C(0x0004)
};


class DistributionFloatUniformCurve : public DistributionFloat
{
  InterpCurveVector2D*                                                ConstantCurve                                     //0x0038(0x0018)
};


class DistributionVector : public Distribution
{
  *                                                                   bCanBeBaked                                       //0x0030(0x0001)
  *                                                                   bIsDirty                                          //0x0030(0x0001)
  *                                                                   bBakedDataSuccesfully                             //0x0030(0x0001)
};


class DistributionVectorConstant : public DistributionVector
{
  Vector*                                                             Constant                                          //0x0038(0x000C)
  *                                                                   bLockAxes                                         //0x0044(0x0001)
  EDistributionVectorLockFlags*                                       LockedAxes                                        //0x0048(0x0001)
};


class DistributionVectorConstantCurve : public DistributionVector
{
  InterpCurveVector*                                                  ConstantCurve                                     //0x0038(0x0018)
  *                                                                   bLockAxes                                         //0x0050(0x0001)
  EDistributionVectorLockFlags*                                       LockedAxes                                        //0x0054(0x0001)
};


class DistributionVectorParameterBase : public DistributionVectorConstant
{
  *                                                                   ParameterName                                     //0x0050(0x0008)
  Vector*                                                             MinInput                                          //0x0058(0x000C)
  Vector*                                                             MaxInput                                          //0x0064(0x000C)
  Vector*                                                             MinOutput                                         //0x0070(0x000C)
  Vector*                                                             MaxOutput                                         //0x007C(0x000C)
  DistributionParamMode*                                              ParamModes                                        //0x0088(0x0001)
};


class DistributionVectorParticleParameter : public DistributionVectorParameterBase
{
};


class DistributionVectorUniform : public DistributionVector
{
  Vector*                                                             Max                                               //0x0038(0x000C)
  Vector*                                                             Min                                               //0x0044(0x000C)
  *                                                                   bLockAxes                                         //0x0050(0x0001)
  EDistributionVectorLockFlags*                                       LockedAxes                                        //0x0054(0x0001)
  EDistributionVectorMirrorFlags*                                     MirrorFlags                                       //0x0055(0x0001)
  *                                                                   bUseExtremes                                      //0x0058(0x0001)
};


class DistributionVectorUniformCurve : public DistributionVector
{
  InterpCurveTwoVectors*                                              ConstantCurve                                     //0x0038(0x0018)
  *                                                                   bLockAxes1                                        //0x0050(0x0001)
  *                                                                   bLockAxes2                                        //0x0050(0x0001)
  EDistributionVectorLockFlags*                                       LockedAxes                                        //0x0054(0x0001)
  EDistributionVectorMirrorFlags*                                     MirrorFlags                                       //0x0056(0x0001)
  *                                                                   bUseExtremes                                      //0x005C(0x0001)
};


class DocumentationActor : public Actor
{
};


class DPICustomScalingRule : public Object
{
};


class DrawFrustumComponent : public PrimitiveComponent
{
  Color*                                                              FrustumColor                                      //0x03D8(0x0004)
  *                                                                   FrustumAngle                                      //0x03DC(0x0004)
  *                                                                   FrustumAspectRatio                                //0x03E0(0x0004)
  *                                                                   FrustumStartDist                                  //0x03E4(0x0004)
  *                                                                   FrustumEndDist                                    //0x03E8(0x0004)
  Texture*                                                            Texture                                           //0x03F0(0x0008)
};


class SphereComponent : public ShapeComponent
{
  *                                                                   SphereRadius                                      //0x03F0(0x0004)
  *                                                                   SetSphereRadius                                   //0x0000(0x0229)
  *                                                                   GetUnscaledSphereRadius                           //0x0000(0x0229)
  *                                                                   GetShapeScale                                     //0x0000(0x0229)
  *                                                                   GetScaledSphereRadius                             //0x0000(0x0229)
};


class DrawSphereComponent : public SphereComponent
{
};


class EdGraph : public Object
{
  Class*                                                              Schema                                            //0x0028(0x0008)
  Nodes*                                                              Nodes                                             //0x0030(0x0010)
  *                                                                   bEditable                                         //0x0040(0x0001)
  *                                                                   bAllowDeletion                                    //0x0040(0x0001)
  *                                                                   bAllowRenaming                                    //0x0040(0x0001)
};


class GraphNodeContextMenuContext : public Object
{
  Blueprint*                                                          Blueprint                                         //0x0028(0x0008)
  EdGraph*                                                            Graph                                             //0x0030(0x0008)
  EdGraphNode*                                                        Node                                              //0x0038(0x0008)
  *                                                                   bIsDebugging                                      //0x0048(0x0001)
};


class EdGraphNode : public Object
{
  DeprecatedPins*                                                     DeprecatedPins                                    //0x0038(0x0010)
  *                                                                   NodePosX                                          //0x0048(0x0004)
  *                                                                   NodePosY                                          //0x004C(0x0004)
  *                                                                   NodeWidth                                         //0x0050(0x0004)
  *                                                                   NodeHeight                                        //0x0054(0x0004)
  ENodeAdvancedPins*                                                  AdvancedPinDisplay                                //0x0058(0x0001)
  UnderlyingType*                                                     EnabledState                                      //0x0059(0x0001)
  *                                                                   bDisplayAsDisabled                                //0x005B(0x0001)
  *                                                                   bUserSetEnabledState                              //0x005B(0x0001)
  *                                                                   bIsNodeEnabled                                    //0x005B(0x0001)
  *                                                                   bHasCompilerMessage                               //0x005B(0x0001)
  *                                                                   NodeComment                                       //0x0060(0x0010)
  *                                                                   ErrorType                                         //0x0070(0x0004)
  *                                                                   ErrorMsg                                          //0x0078(0x0010)
  Guid*                                                               NodeGuid                                          //0x0088(0x0010)
};


class EdGraphNode_Documentation : public EdGraphNode
{
  *                                                                   Link                                              //0x0098(0x0010)
  *                                                                   Excerpt                                           //0x00A8(0x0010)
};


class EdGraphPin_Deprecated : public Object
{
  *                                                                   PinName                                           //0x0028(0x0010)
  *                                                                   PinToolTip                                        //0x0038(0x0010)
  EEdGraphPinDirection*                                               Direction                                         //0x0048(0x0001)
  EdGraphPinType*                                                     PinType                                           //0x0050(0x0058)
  *                                                                   DefaultValue                                      //0x00A8(0x0010)
  *                                                                   AutogeneratedDefaultValue                         //0x00B8(0x0010)
  Object*                                                             DefaultObject                                     //0x00C8(0x0008)
  *                                                                   DefaultTextValue                                  //0x00D0(0x0018)
  LinkedTo*                                                           LinkedTo                                          //0x00E8(0x0010)
  SubPins*                                                            SubPins                                           //0x00F8(0x0010)
  EdGraphPin_Deprecated*                                              ParentPin                                         //0x0108(0x0008)
  EdGraphPin_Deprecated*                                              ReferencePassThroughConnection                    //0x0110(0x0008)
};


class EdGraphSchema : public Object
{
};


class Emitter : public Actor
{
  ParticleSystemComponent*                                            ParticleSystemComponent                           //0x0218(0x0008)
  *                                                                   bDestroyOnSystemFinish                            //0x0220(0x0001)
  *                                                                   bPostUpdateTickGroup                              //0x0220(0x0001)
  *                                                                   bCurrentlyActive                                  //0x0220(0x0001)
  ParticleSpawnSignature__DelegateSignature*                          OnParticleSpawn                                   //0x0228(0x0010)
  ParticleBurstSignature__DelegateSignature*                          OnParticleBurst                                   //0x0238(0x0010)
  ParticleDeathSignature__DelegateSignature*                          OnParticleDeath                                   //0x0248(0x0010)
  ParticleCollisionSignature__DelegateSignature*                      OnParticleCollide                                 //0x0258(0x0010)
  *                                                                   ToggleActive                                      //0x0000(0x0229)
  *                                                                   SetVectorParameter                                //0x0000(0x0229)
  NewTemplate*                                                        SetTemplate                                       //0x0000(0x0229)
  Param*                                                              SetMaterialParameter                              //0x0000(0x0229)
  *                                                                   SetFloatParameter                                 //0x0000(0x0229)
  *                                                                   SetColorParameter                                 //0x0000(0x0229)
  Param*                                                              SetActorParameter                                 //0x0000(0x0229)
  *                                                                   OnRep_bCurrentlyActive                            //0x0000(0x0229)
  FinishedComponent*                                                  OnParticleSystemFinished                          //0x0000(0x0229)
  *                                                                   IsActive                                          //0x0000(0x0229)
  *                                                                   Deactivate                                        //0x0000(0x0229)
  *                                                                   Activate                                          //0x0000(0x0229)
};


class EmitterCameraLensEffectBase : public Emitter
{
  ParticleSystem*                                                     PS_CameraEffect                                   //0x0268(0x0008)
  ParticleSystem*                                                     PS_CameraEffectNonExtremeContent                  //0x0270(0x0008)
  PlayerCameraManager*                                                BaseCamera                                        //0x0278(0x0008)
  Transform*                                                          RelativeTransform                                 //0x0280(0x0030)
  *                                                                   BaseFOV                                           //0x02B0(0x0004)
  *                                                                   bAllowMultipleInstances                           //0x02B4(0x0001)
  *                                                                   bResetWhenRetriggered                             //0x02B4(0x0001)
  EmittersToTreatAsSame*                                              EmittersToTreatAsSame                             //0x02B8(0x0010)
  *                                                                   DistFromCamera                                    //0x02C8(0x0004)
};


class EngineBaseTypes : public Object
{
};


class EngineHandlerComponentFactory : public HandlerComponentFactory
{
};


class LocalMessage : public Object
{
};


class EngineMessage : public LocalMessage
{
  *                                                                   FailedPlaceMessage                                //0x0028(0x0010)
  *                                                                   MaxedOutMessage                                   //0x0038(0x0010)
  *                                                                   EnteredMessage                                    //0x0048(0x0010)
  *                                                                   LeftMessage                                       //0x0058(0x0010)
  *                                                                   GlobalNameChange                                  //0x0068(0x0010)
  *                                                                   SpecEnteredMessage                                //0x0078(0x0010)
  *                                                                   NewPlayerMessage                                  //0x0088(0x0010)
  *                                                                   NewSpecMessage                                    //0x0098(0x0010)
};


class EngineTypes : public Object
{
};


class ExponentialHeightFog : public Info
{
  ExponentialHeightFogComponent*                                      Component                                         //0x0218(0x0008)
  *                                                                   bEnabled                                          //0x0220(0x0001)
  *                                                                   OnRep_bEnabled                                    //0x0000(0x0229)
};


class ExponentialHeightFogComponent : public SceneComponent
{
  *                                                                   FogDensity                                        //0x01F0(0x0004)
  *                                                                   FogHeightFalloff                                  //0x01F4(0x0004)
  ExponentialHeightFogData*                                           SecondFogData                                     //0x01F8(0x000C)
  LinearColor*                                                        FogInscatteringColor                              //0x0204(0x0010)
  TextureCube*                                                        InscatteringColorCubemap                          //0x0218(0x0008)
  *                                                                   InscatteringColorCubemapAngle                     //0x0220(0x0004)
  LinearColor*                                                        InscatteringTextureTint                           //0x0224(0x0010)
  *                                                                   FullyDirectionalInscatteringColorDistance         //0x0234(0x0004)
  *                                                                   NonDirectionalInscatteringColorDistance           //0x0238(0x0004)
  *                                                                   DirectionalInscatteringExponent                   //0x023C(0x0004)
  *                                                                   DirectionalInscatteringStartDistance              //0x0240(0x0004)
  LinearColor*                                                        DirectionalInscatteringColor                      //0x0244(0x0010)
  *                                                                   FogMaxOpacity                                     //0x0254(0x0004)
  *                                                                   StartDistance                                     //0x0258(0x0004)
  *                                                                   FogCutoffDistance                                 //0x025C(0x0004)
  *                                                                   bEnableVolumetricFog                              //0x0260(0x0001)
  *                                                                   VolumetricFogScatteringDistribution               //0x0264(0x0004)
  Color*                                                              VolumetricFogAlbedo                               //0x0268(0x0004)
  LinearColor*                                                        VolumetricFogEmissive                             //0x026C(0x0010)
  *                                                                   VolumetricFogExtinctionScale                      //0x027C(0x0004)
  *                                                                   VolumetricFogDistance                             //0x0280(0x0004)
  *                                                                   VolumetricFogStaticLightingScatteringIntensity    //0x0284(0x0004)
  *                                                                   bOverrideLightColorsWithFogInscatteringColors     //0x0288(0x0001)
  *                                                                   SetVolumetricFogScatteringDistribution            //0x0000(0x0229)
  *                                                                   SetVolumetricFogExtinctionScale                   //0x0000(0x0229)
  *                                                                   SetVolumetricFogEmissive                          //0x0000(0x0229)
  *                                                                   SetVolumetricFogDistance                          //0x0000(0x0229)
  *                                                                   SetVolumetricFogAlbedo                            //0x0000(0x0229)
  *                                                                   SetVolumetricFog                                  //0x0000(0x0229)
  *                                                                   SetStartDistance                                  //0x0000(0x0229)
  *                                                                   SetNonDirectionalInscatteringColorDistance        //0x0000(0x0229)
  *                                                                   SetInscatteringTextureTint                        //0x0000(0x0229)
  *                                                                   SetInscatteringColorCubemapAngle                  //0x0000(0x0229)
  Value*                                                              SetInscatteringColorCubemap                       //0x0000(0x0229)
  *                                                                   SetFullyDirectionalInscatteringColorDistance      //0x0000(0x0229)
  *                                                                   SetFogMaxOpacity                                  //0x0000(0x0229)
  *                                                                   SetFogInscatteringColor                           //0x0000(0x0229)
  *                                                                   SetFogHeightFalloff                               //0x0000(0x0229)
  *                                                                   SetFogDensity                                     //0x0000(0x0229)
  *                                                                   SetFogCutoffDistance                              //0x0000(0x0229)
  *                                                                   SetDirectionalInscatteringStartDistance           //0x0000(0x0229)
  *                                                                   SetDirectionalInscatteringExponent                //0x0000(0x0229)
  *                                                                   SetDirectionalInscatteringColor                   //0x0000(0x0229)
};


class Exporter : public Object
{
  Class*                                                              SupportedClass                                    //0x0028(0x0008)
  Object*                                                             ExportRootScope                                   //0x0030(0x0008)
  FormatExtension*                                                    FormatExtension                                   //0x0038(0x0010)
  FormatDescription*                                                  FormatDescription                                 //0x0048(0x0010)
  *                                                                   PreferredFormatIndex                              //0x0058(0x0004)
  *                                                                   TextIndent                                        //0x005C(0x0004)
  *                                                                   bText                                             //0x0060(0x0001)
  *                                                                   bSelectedOnly                                     //0x0060(0x0001)
  *                                                                   bForceFileOperations                              //0x0060(0x0001)
  AssetExportTask*                                                    ExportTask                                        //0x0068(0x0008)
  Task*                                                               ScriptRunAssetExportTask                          //0x0000(0x0229)
  ExportTasks*                                                        RunAssetExportTasks                               //0x0000(0x0229)
  Task*                                                               RunAssetExportTask                                //0x0000(0x0229)
};


class FloatingPawnMovement : public PawnMovementComponent
{
  *                                                                   MaxSpeed                                          //0x0138(0x0004)
  *                                                                   Acceleration                                      //0x013C(0x0004)
  *                                                                   Deceleration                                      //0x0140(0x0004)
  *                                                                   TurningBoost                                      //0x0144(0x0004)
  *                                                                   bPositionCorrected                                //0x0148(0x0001)
};


class Font : public Object
{
  UnderlyingType*                                                     FontCacheType                                     //0x0030(0x0001)
  Characters*                                                         Characters                                        //0x0038(0x0010)
  Textures*                                                           Textures                                          //0x0048(0x0010)
  *                                                                   IsRemapped                                        //0x0058(0x0004)
  *                                                                   EmScale                                           //0x005C(0x0004)
  *                                                                   Ascent                                            //0x0060(0x0004)
  *                                                                   Descent                                           //0x0064(0x0004)
  *                                                                   Leading                                           //0x0068(0x0004)
  *                                                                   Kerning                                           //0x006C(0x0004)
  FontImportOptionsData*                                              ImportOptions                                     //0x0070(0x00B0)
  *                                                                   NumCharacters                                     //0x0120(0x0004)
  MaxCharHeight*                                                      MaxCharHeight                                     //0x0128(0x0010)
  *                                                                   ScalingFactor                                     //0x0138(0x0004)
  *                                                                   LegacyFontSize                                    //0x013C(0x0004)
  *                                                                   LegacyFontName                                    //0x0140(0x0008)
  CompositeFont*                                                      CompositeFont                                     //0x0148(0x0038)
};


class FontFace : public Object
{
  *                                                                   SourceFilename                                    //0x0030(0x0010)
  UnderlyingType*                                                     Hinting                                           //0x0040(0x0001)
  UnderlyingType*                                                     LoadingPolicy                                     //0x0041(0x0001)
  UnderlyingType*                                                     LayoutMethod                                      //0x0042(0x0001)
};


class FontImportOptions : public Object
{
  FontImportOptionsData*                                              Data                                              //0x0028(0x00B0)
};


class ForceFeedbackAttenuation : public Object
{
  ForceFeedbackAttenuationSettings*                                   Attenuation                                       //0x0028(0x00B0)
};


class ForceFeedbackComponent : public SceneComponent
{
  ForceFeedbackEffect*                                                ForceFeedbackEffect                               //0x01F0(0x0008)
  *                                                                   bAutoDestroy                                      //0x01F8(0x0001)
  *                                                                   bStopWhenOwnerDestroyed                           //0x01F8(0x0001)
  *                                                                   bLooping                                          //0x01F8(0x0001)
  *                                                                   bIgnoreTimeDilation                               //0x01F8(0x0001)
  *                                                                   bOverrideAttenuation                              //0x01F8(0x0001)
  *                                                                   IntensityMultiplier                               //0x01FC(0x0004)
  ForceFeedbackAttenuation*                                           AttenuationSettings                               //0x0200(0x0008)
  ForceFeedbackAttenuationSettings*                                   AttenuationOverrides                              //0x0208(0x00B0)
  OnForceFeedbackFinished__DelegateSignature*                         OnForceFeedbackFinished                           //0x02B8(0x0010)
  *                                                                   Stop                                              //0x0000(0x0229)
  *                                                                   SetIntensityMultiplier                            //0x0000(0x0229)
  NewForceFeedbackEffect*                                             SetForceFeedbackEffect                            //0x0000(0x0229)
  *                                                                   Play                                              //0x0000(0x0229)
  OutAttenuationSettings*                                             BP_GetAttenuationSettingsToApply                  //0x0000(0x0229)
  InAttenuationSettings*                                              AdjustAttenuation                                 //0x0000(0x0229)
};


class ForceFeedbackEffect : public Object
{
  ChannelDetails*                                                     ChannelDetails                                    //0x0028(0x0010)
  *                                                                   Duration                                          //0x0038(0x0004)
};


class GameEngine : public Engine
{
  *                                                                   MaxDeltaTime                                      //0x0DE8(0x0004)
  *                                                                   ServerFlushLogInterval                            //0x0DEC(0x0004)
  GameInstance*                                                       GameInstance                                      //0x0DF0(0x0008)
};


class GameNetworkManager : public Info
{
  *                                                                   BadPacketLossThreshold                            //0x0218(0x0004)
  *                                                                   SeverePacketLossThreshold                         //0x021C(0x0004)
  *                                                                   BadPingThreshold                                  //0x0220(0x0004)
  *                                                                   SeverePingThreshold                               //0x0224(0x0004)
  *                                                                   AdjustedNetSpeed                                  //0x0228(0x0004)
  *                                                                   LastNetSpeedUpdateTime                            //0x022C(0x0004)
  *                                                                   TotalNetBandwidth                                 //0x0230(0x0004)
  *                                                                   MinDynamicBandwidth                               //0x0234(0x0004)
  *                                                                   MaxDynamicBandwidth                               //0x0238(0x0004)
  *                                                                   bIsStandbyCheckingEnabled                         //0x023C(0x0001)
  *                                                                   bHasStandbyCheatTriggered                         //0x023C(0x0001)
  *                                                                   StandbyRxCheatTime                                //0x0240(0x0004)
  *                                                                   StandbyTxCheatTime                                //0x0244(0x0004)
  *                                                                   PercentMissingForRxStandby                        //0x0248(0x0004)
  *                                                                   PercentMissingForTxStandby                        //0x024C(0x0004)
  *                                                                   PercentForBadPing                                 //0x0250(0x0004)
  *                                                                   JoinInProgressStandbyWaitTime                     //0x0254(0x0004)
  *                                                                   MoveRepSize                                       //0x0258(0x0004)
  *                                                                   MAXPOSITIONERRORSQUARED                           //0x025C(0x0004)
  *                                                                   MAXNEARZEROVELOCITYSQUARED                        //0x0260(0x0004)
  *                                                                   CLIENTADJUSTUPDATECOST                            //0x0264(0x0004)
  *                                                                   MAXCLIENTUPDATEINTERVAL                           //0x0268(0x0004)
  *                                                                   MaxClientForcedUpdateDuration                     //0x026C(0x0004)
  *                                                                   ServerForcedUpdateHitchThreshold                  //0x0270(0x0004)
  *                                                                   ServerForcedUpdateHitchCooldown                   //0x0274(0x0004)
  *                                                                   MaxMoveDeltaTime                                  //0x0278(0x0004)
  *                                                                   MaxClientSmoothingDeltaTime                       //0x027C(0x0004)
  *                                                                   ClientNetSendMoveDeltaTime                        //0x0280(0x0004)
  *                                                                   ClientNetSendMoveDeltaTimeThrottled               //0x0284(0x0004)
  *                                                                   ClientNetSendMoveDeltaTimeStationary              //0x0288(0x0004)
  *                                                                   ClientNetSendMoveThrottleAtNetSpeed               //0x028C(0x0004)
  *                                                                   ClientNetSendMoveThrottleOverPlayerCount          //0x0290(0x0004)
  *                                                                   ClientAuthorativePosition                         //0x0294(0x0001)
  *                                                                   ClientErrorUpdateRateLimit                        //0x0298(0x0004)
  *                                                                   ClientNetCamUpdateDeltaTime                       //0x029C(0x0004)
  *                                                                   ClientNetCamUpdatePositionLimit                   //0x02A0(0x0004)
  *                                                                   bMovementTimeDiscrepancyDetection                 //0x02A4(0x0001)
  *                                                                   bMovementTimeDiscrepancyResolution                //0x02A5(0x0001)
  *                                                                   MovementTimeDiscrepancyMaxTimeMargin              //0x02A8(0x0004)
  *                                                                   MovementTimeDiscrepancyMinTimeMargin              //0x02AC(0x0004)
  *                                                                   MovementTimeDiscrepancyResolutionRate             //0x02B0(0x0004)
  *                                                                   MovementTimeDiscrepancyDriftAllowance             //0x02B4(0x0004)
  *                                                                   bMovementTimeDiscrepancyForceCorrectionsDuringResolution//0x02B8(0x0001)
  *                                                                   bUseDistanceBasedRelevancy                        //0x02B9(0x0001)
};


class GameplayStatics : public BlueprintFunctionLibrary
{
  WorldContextObject*                                                 UnloadStreamLevel                                 //0x0000(0x0229)
  WorldContextObject*                                                 SuggestProjectileVelocity_CustomArc               //0x0000(0x0229)
  Sound*                                                              SpawnSoundAttached                                //0x0000(0x0229)
  WorldContextObject*                                                 SpawnSoundAtLocation                              //0x0000(0x0229)
  WorldContextObject*                                                 SpawnSound2D                                      //0x0000(0x0229)
  ObjectClass*                                                        SpawnObject                                       //0x0000(0x0229)
  ForceFeedbackEffect*                                                SpawnForceFeedbackAttached                        //0x0000(0x0229)
  WorldContextObject*                                                 SpawnForceFeedbackAtLocation                      //0x0000(0x0229)
  EmitterTemplate*                                                    SpawnEmitterAttached                              //0x0000(0x0229)
  WorldContextObject*                                                 SpawnEmitterAtLocation                            //0x0000(0x0229)
  Dialogue*                                                           SpawnDialogueAttached                             //0x0000(0x0229)
  WorldContextObject*                                                 SpawnDialogueAtLocation                           //0x0000(0x0229)
  WorldContextObject*                                                 SpawnDialogue2D                                   //0x0000(0x0229)
  DecalMaterial*                                                      SpawnDecalAttached                                //0x0000(0x0229)
  WorldContextObject*                                                 SpawnDecalAtLocation                              //0x0000(0x0229)
  WorldContextObject*                                                 SetWorldOriginLocation                            //0x0000(0x0229)
  WorldContextObject*                                                 SetViewportMouseCaptureMode                       //0x0000(0x0229)
  *                                                                   SetSubtitlesEnabled                               //0x0000(0x0229)
  WorldContextObject*                                                 SetSoundMixClassOverride                          //0x0000(0x0229)
  Player*                                                             SetPlayerControllerID                             //0x0000(0x0229)
  WorldContextObject*                                                 SetMaxAudioChannelsScaled                         //0x0000(0x0229)
  WorldContextObject*                                                 SetGlobalTimeDilation                             //0x0000(0x0229)
  WorldContextObject*                                                 SetGlobalPitchModulation                          //0x0000(0x0229)
  WorldContextObject*                                                 SetGlobalListenerFocusParameters                  //0x0000(0x0229)
  WorldContextObject*                                                 SetGamePaused                                     //0x0000(0x0229)
  WorldContextObject*                                                 SetForceDisableSplitscreen                        //0x0000(0x0229)
  WorldContextObject*                                                 SetEnableWorldRendering                           //0x0000(0x0229)
  WorldContextObject*                                                 SetBaseSoundMix                                   //0x0000(0x0229)
  SaveGameObject*                                                     SaveGameToSlot                                    //0x0000(0x0229)
  Player*                                                             RemovePlayer                                      //0x0000(0x0229)
  WorldContextObject*                                                 RebaseZeroOriginOntoLocal                         //0x0000(0x0229)
  WorldContextObject*                                                 RebaseLocalOriginOntoZero                         //0x0000(0x0229)
  WorldContextObject*                                                 PushSoundMixModifier                              //0x0000(0x0229)
  Player*                                                             ProjectWorldToScreen                              //0x0000(0x0229)
  InSound*                                                            PrimeSound                                        //0x0000(0x0229)
  WorldContextObject*                                                 PopSoundMixModifier                               //0x0000(0x0229)
  WorldContextObject*                                                 PlayWorldCameraShake                              //0x0000(0x0229)
  WorldContextObject*                                                 PlaySoundAtLocation                               //0x0000(0x0229)
  WorldContextObject*                                                 PlaySound2D                                       //0x0000(0x0229)
  WorldContextObject*                                                 PlayDialogueAtLocation                            //0x0000(0x0229)
  WorldContextObject*                                                 PlayDialogue2D                                    //0x0000(0x0229)
  *                                                                   ParseOption                                       //0x0000(0x0229)
  WorldContextObject*                                                 OpenLevel                                         //0x0000(0x0229)
  PhysMat*                                                            MakeHitResult                                     //0x0000(0x0229)
  WorldContextObject*                                                 LoadStreamLevel                                   //0x0000(0x0229)
  ReturnValue*                                                        LoadGameFromSlot                                  //0x0000(0x0229)
  WorldContextObject*                                                 IsSplitscreenForceDisabled                        //0x0000(0x0229)
  WorldContextObject*                                                 IsGamePaused                                      //0x0000(0x0229)
  *                                                                   HasOption                                         //0x0000(0x0229)
  *                                                                   HasLaunchOption                                   //0x0000(0x0229)
  WorldContextObject*                                                 GrassOverlappingSphereCount                       //0x0000(0x0229)
  WorldContextObject*                                                 GetWorldOriginLocation                            //0x0000(0x0229)
  WorldContextObject*                                                 GetWorldDeltaSeconds                              //0x0000(0x0229)
  DesiredView*                                                        GetViewProjectionMatrix                           //0x0000(0x0229)
  WorldContextObject*                                                 GetViewportMouseCaptureMode                       //0x0000(0x0229)
  WorldContextObject*                                                 GetUnpausedTimeSeconds                            //0x0000(0x0229)
  WorldContextObject*                                                 GetTimeSeconds                                    //0x0000(0x0229)
  Hit*                                                                GetSurfaceType                                    //0x0000(0x0229)
  WorldContextObject*                                                 GetStreamingLevel                                 //0x0000(0x0229)
  WorldContextObject*                                                 GetRealTimeSeconds                                //0x0000(0x0229)
  WorldContextObject*                                                 GetPlayerPawn                                     //0x0000(0x0229)
  Player*                                                             GetPlayerControllerID                             //0x0000(0x0229)
  WorldContextObject*                                                 GetPlayerControllerFromID                         //0x0000(0x0229)
  WorldContextObject*                                                 GetPlayerController                               //0x0000(0x0229)
  WorldContextObject*                                                 GetPlayerCharacter                                //0x0000(0x0229)
  WorldContextObject*                                                 GetPlayerCameraManager                            //0x0000(0x0229)
  *                                                                   GetPlatformName                                   //0x0000(0x0229)
  Object*                                                             GetObjectClass                                    //0x0000(0x0229)
  WorldContextObject*                                                 GetMaxAudioChannelCount                           //0x0000(0x0229)
  *                                                                   GetKeyValue                                       //0x0000(0x0229)
  *                                                                   GetIntOption                                      //0x0000(0x0229)
  WorldContextObject*                                                 GetGlobalTimeDilation                             //0x0000(0x0229)
  WorldContextObject*                                                 GetGameState                                      //0x0000(0x0229)
  WorldContextObject*                                                 GetGameMode                                       //0x0000(0x0229)
  WorldContextObject*                                                 GetGameInstance                                   //0x0000(0x0229)
  WorldContextObject*                                                 GetEnableWorldRendering                           //0x0000(0x0229)
  WorldContextObject*                                                 GetCurrentReverbEffect                            //0x0000(0x0229)
  WorldContextObject*                                                 GetCurrentLevelName                               //0x0000(0x0229)
  WorldContextObject*                                                 GetAudioTimeSeconds                               //0x0000(0x0229)
  WorldContextObject*                                                 GetAllActorsWithTag                               //0x0000(0x0229)
  WorldContextObject*                                                 GetAllActorsWithInterface                         //0x0000(0x0229)
  WorldContextObject*                                                 GetAllActorsOfClassWithTag                        //0x0000(0x0229)
  WorldContextObject*                                                 GetAllActorsOfClass                               //0x0000(0x0229)
  WorldContextObject*                                                 GetActorOfClass                                   //0x0000(0x0229)
  Actors*                                                             GetActorArrayBounds                               //0x0000(0x0229)
  Actors*                                                             GetActorArrayAverageLocation                      //0x0000(0x0229)
  WorldContextObject*                                                 GetAccurateRealTime                               //0x0000(0x0229)
  WorldContextObject*                                                 FlushLevelStreaming                               //0x0000(0x0229)
  Actor*                                                              FinishSpawningActor                               //0x0000(0x0229)
  Hit*                                                                FindCollisionUV                                   //0x0000(0x0229)
  *                                                                   EnableLiveStreaming                               //0x0000(0x0229)
  *                                                                   DoesSaveGameExist                                 //0x0000(0x0229)
  Player*                                                             DeprojectScreenToWorld                            //0x0000(0x0229)
  *                                                                   DeleteGameInSlot                                  //0x0000(0x0229)
  WorldContextObject*                                                 DeactivateReverbEffect                            //0x0000(0x0229)
  WorldContextObject*                                                 CreateSound2D                                     //0x0000(0x0229)
  SaveGameClass*                                                      CreateSaveGameObject                              //0x0000(0x0229)
  WorldContextObject*                                                 CreatePlayer                                      //0x0000(0x0229)
  WorldContextObject*                                                 ClearSoundMixModifiers                            //0x0000(0x0229)
  WorldContextObject*                                                 ClearSoundMixClassOverride                        //0x0000(0x0229)
  *                                                                   CancelAsyncLoading                                //0x0000(0x0229)
  Hit*                                                                BreakHitResult                                    //0x0000(0x0229)
  WorldContextObject*                                                 BlueprintSuggestProjectileVelocity                //0x0000(0x0229)
  WorldContextObject*                                                 Blueprint_PredictProjectilePath_ByTraceChannel    //0x0000(0x0229)
  WorldContextObject*                                                 Blueprint_PredictProjectilePath_ByObjectType      //0x0000(0x0229)
  WorldContextObject*                                                 Blueprint_PredictProjectilePath_Advanced          //0x0000(0x0229)
  WorldContextObject*                                                 BeginSpawningActorFromClass                       //0x0000(0x0229)
  WorldContextObject*                                                 BeginSpawningActorFromBlueprint                   //0x0000(0x0229)
  WorldContextObject*                                                 BeginDeferredActorSpawnFromClass                  //0x0000(0x0229)
  *                                                                   AreSubtitlesEnabled                               //0x0000(0x0229)
  WorldContextObject*                                                 AreAnyListenersWithinRange                        //0x0000(0x0229)
  WorldContextObject*                                                 ApplyRadialDamageWithFalloff                      //0x0000(0x0229)
  WorldContextObject*                                                 ApplyRadialDamage                                 //0x0000(0x0229)
  DamagedActor*                                                       ApplyPointDamage                                  //0x0000(0x0229)
  DamagedActor*                                                       ApplyDamage                                       //0x0000(0x0229)
  WorldContextObject*                                                 ActivateReverbEffect                              //0x0000(0x0229)
};


class GameSession : public Info
{
  *                                                                   MaxSpectators                                     //0x0218(0x0004)
  *                                                                   MaxPlayers                                        //0x021C(0x0004)
  *                                                                   MaxPartySize                                      //0x0220(0x0004)
  *                                                                   MaxSplitscreensPerConnection                      //0x0224(0x0001)
  *                                                                   bRequiresPushToTalk                               //0x0225(0x0001)
  *                                                                   SessionName                                       //0x0228(0x0008)
};


class GameUserSettings : public Object
{
  *                                                                   bUseVSync                                         //0x0028(0x0001)
  *                                                                   bUseDynamicResolution                             //0x0029(0x0001)
  *                                                                   ResolutionSizeX                                   //0x0080(0x0004)
  *                                                                   ResolutionSizeY                                   //0x0084(0x0004)
  *                                                                   LastUserConfirmedResolutionSizeX                  //0x0088(0x0004)
  *                                                                   LastUserConfirmedResolutionSizeY                  //0x008C(0x0004)
  *                                                                   WindowPosX                                        //0x0090(0x0004)
  *                                                                   WindowPosY                                        //0x0094(0x0004)
  *                                                                   FullscreenMode                                    //0x0098(0x0004)
  *                                                                   LastConfirmedFullscreenMode                       //0x009C(0x0004)
  *                                                                   PreferredFullscreenMode                           //0x00A0(0x0004)
  *                                                                   version                                           //0x00A4(0x0004)
  *                                                                   AudioQualityLevel                                 //0x00A8(0x0004)
  *                                                                   LastConfirmedAudioQualityLevel                    //0x00AC(0x0004)
  *                                                                   FrameRateLimit                                    //0x00B0(0x0004)
  *                                                                   DesiredScreenWidth                                //0x00B8(0x0004)
  *                                                                   bUseDesiredScreenHeight                           //0x00BC(0x0001)
  *                                                                   DesiredScreenHeight                               //0x00C0(0x0004)
  *                                                                   LastUserConfirmedDesiredScreenWidth               //0x00C4(0x0004)
  *                                                                   LastUserConfirmedDesiredScreenHeight              //0x00C8(0x0004)
  *                                                                   LastRecommendedScreenWidth                        //0x00CC(0x0004)
  *                                                                   LastRecommendedScreenHeight                       //0x00D0(0x0004)
  *                                                                   LastCPUBenchmarkResult                            //0x00D4(0x0004)
  *                                                                   LastGPUBenchmarkResult                            //0x00D8(0x0004)
  LastCPUBenchmarkSteps*                                              LastCPUBenchmarkSteps                             //0x00E0(0x0010)
  LastGPUBenchmarkSteps*                                              LastGPUBenchmarkSteps                             //0x00F0(0x0010)
  *                                                                   LastGPUBenchmarkMultiplier                        //0x0100(0x0004)
  *                                                                   bUseHDRDisplayOutput                              //0x0104(0x0001)
  *                                                                   HDRDisplayOutputNits                              //0x0108(0x0004)
  OnGameUserSettingsUINeedsUpdate__DelegateSignature*                 OnGameUserSettingsUINeedsUpdate                   //0x0110(0x0010)
  *                                                                   ValidateSettings                                  //0x0000(0x0229)
  *                                                                   SupportsHDRDisplayOutput                          //0x0000(0x0229)
  *                                                                   SetVSyncEnabled                                   //0x0000(0x0229)
  *                                                                   SetVisualEffectQuality                            //0x0000(0x0229)
  *                                                                   SetViewDistanceQuality                            //0x0000(0x0229)
  *                                                                   SetToDefaults                                     //0x0000(0x0229)
  *                                                                   SetTextureQuality                                 //0x0000(0x0229)
  *                                                                   SetShadowQuality                                  //0x0000(0x0229)
  *                                                                   SetShadingQuality                                 //0x0000(0x0229)
  *                                                                   SetScreenResolution                               //0x0000(0x0229)
  *                                                                   SetResolutionScaleValueEx                         //0x0000(0x0229)
  *                                                                   SetResolutionScaleValue                           //0x0000(0x0229)
  *                                                                   SetResolutionScaleNormalized                      //0x0000(0x0229)
  *                                                                   SetPostProcessingQuality                          //0x0000(0x0229)
  *                                                                   SetOverallScalabilityLevel                        //0x0000(0x0229)
  *                                                                   SetFullscreenMode                                 //0x0000(0x0229)
  *                                                                   SetFrameRateLimit                                 //0x0000(0x0229)
  *                                                                   SetFoliageQuality                                 //0x0000(0x0229)
  *                                                                   SetDynamicResolutionEnabled                       //0x0000(0x0229)
  *                                                                   SetBenchmarkFallbackValues                        //0x0000(0x0229)
  *                                                                   SetAudioQualityLevel                              //0x0000(0x0229)
  *                                                                   SetAntiAliasingQuality                            //0x0000(0x0229)
  *                                                                   SaveSettings                                      //0x0000(0x0229)
  *                                                                   RunHardwareBenchmark                              //0x0000(0x0229)
  *                                                                   RevertVideoMode                                   //0x0000(0x0229)
  *                                                                   ResetToCurrentSettings                            //0x0000(0x0229)
  *                                                                   LoadSettings                                      //0x0000(0x0229)
  *                                                                   IsVSyncEnabled                                    //0x0000(0x0229)
  *                                                                   IsVSyncDirty                                      //0x0000(0x0229)
  *                                                                   IsScreenResolutionDirty                           //0x0000(0x0229)
  *                                                                   IsHDREnabled                                      //0x0000(0x0229)
  *                                                                   IsFullscreenModeDirty                             //0x0000(0x0229)
  *                                                                   IsDynamicResolutionEnabled                        //0x0000(0x0229)
  *                                                                   IsDynamicResolutionDirty                          //0x0000(0x0229)
  *                                                                   IsDirty                                           //0x0000(0x0229)
  *                                                                   GetVisualEffectQuality                            //0x0000(0x0229)
  *                                                                   GetViewDistanceQuality                            //0x0000(0x0229)
  *                                                                   GetTextureQuality                                 //0x0000(0x0229)
  *                                                                   GetSyncInterval                                   //0x0000(0x0229)
  *                                                                   GetShadowQuality                                  //0x0000(0x0229)
  *                                                                   GetShadingQuality                                 //0x0000(0x0229)
  *                                                                   GetScreenResolution                               //0x0000(0x0229)
  *                                                                   GetResolutionScaleNormalized                      //0x0000(0x0229)
  *                                                                   GetResolutionScaleInformationEx                   //0x0000(0x0229)
  *                                                                   GetResolutionScaleInformation                     //0x0000(0x0229)
  *                                                                   GetRecommendedResolutionScale                     //0x0000(0x0229)
  *                                                                   GetPreferredFullscreenMode                        //0x0000(0x0229)
  *                                                                   GetPostProcessingQuality                          //0x0000(0x0229)
  *                                                                   GetOverallScalabilityLevel                        //0x0000(0x0229)
  *                                                                   GetLastConfirmedScreenResolution                  //0x0000(0x0229)
  *                                                                   GetLastConfirmedFullscreenMode                    //0x0000(0x0229)
  ReturnValue*                                                        GetGameUserSettings                               //0x0000(0x0229)
  *                                                                   GetFullscreenMode                                 //0x0000(0x0229)
  *                                                                   GetFrameRateLimit                                 //0x0000(0x0229)
  *                                                                   GetFoliageQuality                                 //0x0000(0x0229)
  *                                                                   GetDesktopResolution                              //0x0000(0x0229)
  *                                                                   GetDefaultWindowPosition                          //0x0000(0x0229)
  *                                                                   GetDefaultWindowMode                              //0x0000(0x0229)
  *                                                                   GetDefaultResolutionScale                         //0x0000(0x0229)
  *                                                                   GetDefaultResolution                              //0x0000(0x0229)
  *                                                                   GetCurrentHDRDisplayNits                          //0x0000(0x0229)
  *                                                                   GetAudioQualityLevel                              //0x0000(0x0229)
  *                                                                   GetAntiAliasingQuality                            //0x0000(0x0229)
  *                                                                   EnableHDRDisplayOutput                            //0x0000(0x0229)
  *                                                                   ConfirmVideoMode                                  //0x0000(0x0229)
  *                                                                   ApplySettings                                     //0x0000(0x0229)
  *                                                                   ApplyResolutionSettings                           //0x0000(0x0229)
  *                                                                   ApplyNonResolutionSettings                        //0x0000(0x0229)
  *                                                                   ApplyHardwareBenchmarkResults                     //0x0000(0x0229)
};


class SpotLight : public Light
{
  SpotLightComponent*                                                 SpotLightComponent                                //0x0228(0x0008)
  *                                                                   SetOuterConeAngle                                 //0x0000(0x0229)
  *                                                                   SetInnerConeAngle                                 //0x0000(0x0229)
};


class GeneratedMeshAreaLight : public SpotLight
{
};


class HapticFeedbackEffect_Base : public Object
{
};


class HapticFeedbackEffect_Buffer : public HapticFeedbackEffect_Base
{
  Amplitudes*                                                         Amplitudes                                        //0x0028(0x0010)
  *                                                                   SampleRate                                        //0x0038(0x0004)
};


class HapticFeedbackEffect_Curve : public HapticFeedbackEffect_Base
{
  HapticFeedbackDetails_Curve*                                        HapticDetails                                     //0x0028(0x0110)
};


class HapticFeedbackEffect_SoundWave : public HapticFeedbackEffect_Base
{
  SoundWave*                                                          SoundWave                                         //0x0028(0x0008)
};


class HealthSnapshotBlueprintLibrary : public BlueprintFunctionLibrary
{
  *                                                                   StopPerformanceSnapshots                          //0x0000(0x0229)
  *                                                                   StartPerformanceSnapshots                         //0x0000(0x0229)
  *                                                                   LogPerformanceSnapshot                            //0x0000(0x0229)
};


class HLODProxy : public Object
{
  ProxyMeshes*                                                        ProxyMeshes                                       //0x0028(0x0010)
};


class AmbisonicsSubmixSettingsBase : public Object
{
};


class SpatializationPluginSourceSettingsBase : public Object
{
};


class OcclusionPluginSourceSettingsBase : public Object
{
};


class SoundModulationPluginSourceSettingsBase : public Object
{
};


class ReverbPluginSourceSettingsBase : public Object
{
};


class ImportanceSamplingLibrary : public BlueprintFunctionLibrary
{
  *                                                                   RandomSobolFloat                                  //0x0000(0x0229)
  *                                                                   RandomSobolCell3D                                 //0x0000(0x0229)
  *                                                                   RandomSobolCell2D                                 //0x0000(0x0229)
  *                                                                   NextSobolFloat                                    //0x0000(0x0229)
  *                                                                   NextSobolCell3D                                   //0x0000(0x0229)
  *                                                                   NextSobolCell2D                                   //0x0000(0x0229)
  Texture*                                                            MakeImportanceTexture                             //0x0000(0x0229)
  Texture*                                                            ImportanceSample                                  //0x0000(0x0229)
  ImportanceTexture*                                                  BreakImportanceTexture                            //0x0000(0x0229)
};


class ImportantToggleSettingInterface : public Interface
{
};


class InGameAdManager : public PlatformInterfaceBase
{
  *                                                                   bShouldPauseWhileAdOpen                           //0x0038(0x0001)
  ClickedBannerDelegates*                                             ClickedBannerDelegates                            //0x0040(0x0010)
  ClosedAdDelegates*                                                  ClosedAdDelegates                                 //0x0050(0x0010)
};


class InheritableComponentHandler : public Object
{
  Records*                                                            Records                                           //0x0028(0x0010)
  UnnecessaryComponents*                                              UnnecessaryComponents                             //0x0038(0x0010)
};


class InputDelegateBinding : public DynamicBlueprintBinding
{
};


class InputActionDelegateBinding : public InputDelegateBinding
{
  InputActionDelegateBindings*                                        InputActionDelegateBindings                       //0x0028(0x0010)
};


class InputAxisDelegateBinding : public InputDelegateBinding
{
  InputAxisDelegateBindings*                                          InputAxisDelegateBindings                         //0x0028(0x0010)
};


class InputAxisKeyDelegateBinding : public InputDelegateBinding
{
  InputAxisKeyDelegateBindings*                                       InputAxisKeyDelegateBindings                      //0x0028(0x0010)
};


class InputComponent : public ActorComponent
{
  CachedKeyToActionInfo*                                              CachedKeyToActionInfo                             //0x0120(0x0010)
  *                                                                   WasControllerKeyJustReleased                      //0x0000(0x0229)
  *                                                                   WasControllerKeyJustPressed                       //0x0000(0x0229)
  *                                                                   IsControllerKeyDown                               //0x0000(0x0229)
  *                                                                   GetTouchState                                     //0x0000(0x0229)
  *                                                                   GetControllerVectorKeyState                       //0x0000(0x0229)
  *                                                                   GetControllerMouseDelta                           //0x0000(0x0229)
  *                                                                   GetControllerKeyTimeDown                          //0x0000(0x0229)
  *                                                                   GetControllerAnalogStickState                     //0x0000(0x0229)
  *                                                                   GetControllerAnalogKeyState                       //0x0000(0x0229)
};


class InputKeyDelegateBinding : public InputDelegateBinding
{
  InputKeyDelegateBindings*                                           InputKeyDelegateBindings                          //0x0028(0x0010)
};


class InputSettings : public Object
{
  AxisConfig*                                                         AxisConfig                                        //0x0028(0x0010)
  *                                                                   bAltEnterTogglesFullscreen                        //0x0038(0x0001)
  *                                                                   bF11TogglesFullscreen                             //0x0038(0x0001)
  *                                                                   bUseMouseForTouch                                 //0x0038(0x0001)
  *                                                                   bEnableMouseSmoothing                             //0x0038(0x0001)
  *                                                                   bEnableFOVScaling                                 //0x0038(0x0001)
  *                                                                   bCaptureMouseOnLaunch                             //0x0038(0x0001)
  *                                                                   bDefaultViewportMouseLock                         //0x0038(0x0001)
  *                                                                   bAlwaysShowTouchInterface                         //0x0038(0x0001)
  *                                                                   bShowConsoleOnFourFingerTap                       //0x0039(0x0001)
  *                                                                   bEnableGestureRecognizer                          //0x0039(0x0001)
  *                                                                   bUseAutocorrect                                   //0x003A(0x0001)
  ExcludedAutocorrectOS*                                              ExcludedAutocorrectOS                             //0x0040(0x0010)
  ExcludedAutocorrectCultures*                                        ExcludedAutocorrectCultures                       //0x0050(0x0010)
  ExcludedAutocorrectDeviceModels*                                    ExcludedAutocorrectDeviceModels                   //0x0060(0x0010)
  UnderlyingType*                                                     DefaultViewportMouseCaptureMode                   //0x0070(0x0001)
  UnderlyingType*                                                     DefaultViewportMouseLockMode                      //0x0071(0x0001)
  *                                                                   FOVScale                                          //0x0074(0x0004)
  *                                                                   DoubleClickTime                                   //0x0078(0x0004)
  ActionMappings*                                                     ActionMappings                                    //0x0080(0x0010)
  AxisMappings*                                                       AxisMappings                                      //0x0090(0x0010)
  SpeechMappings*                                                     SpeechMappings                                    //0x00A0(0x0010)
  SoftObjectPath*                                                     DefaultTouchInterface                             //0x00B0(0x0018)
  Key*                                                                ConsoleKey                                        //0x00C8(0x0018)
  ConsoleKeys*                                                        ConsoleKeys                                       //0x00E0(0x0010)
  *                                                                   SaveKeyMappings                                   //0x0000(0x0229)
  *                                                                   RemoveAxisMapping                                 //0x0000(0x0229)
  *                                                                   RemoveActionMapping                               //0x0000(0x0229)
  ReturnValue*                                                        GetInputSettings                                  //0x0000(0x0229)
  *                                                                   GetAxisNames                                      //0x0000(0x0229)
  *                                                                   GetAxisMappingByName                              //0x0000(0x0229)
  *                                                                   GetActionNames                                    //0x0000(0x0229)
  *                                                                   GetActionMappingByName                            //0x0000(0x0229)
  *                                                                   ForceRebuildKeymaps                               //0x0000(0x0229)
  *                                                                   AddAxisMapping                                    //0x0000(0x0229)
  *                                                                   AddActionMapping                                  //0x0000(0x0229)
};


class InputTouchDelegateBinding : public InputDelegateBinding
{
  InputTouchDelegateBindings*                                         InputTouchDelegateBindings                        //0x0028(0x0010)
};


class InputVectorAxisDelegateBinding : public InputAxisKeyDelegateBinding
{
};


class Interface_AssetUserData : public Interface
{
};


class Interface_CollisionDataProvider : public Interface
{
};


class Interface_PostProcessVolume : public Interface
{
};


class Interface_PreviewMeshProvider : public Interface
{
};


class InterpCurveEdSetup : public Object
{
  Tabs*                                                               Tabs                                              //0x0028(0x0010)
  *                                                                   ActiveTab                                         //0x0038(0x0004)
};


class InterpData : public Object
{
  *                                                                   InterpLength                                      //0x0028(0x0004)
  *                                                                   PathBuildTime                                     //0x002C(0x0004)
  InterpGroups*                                                       InterpGroups                                      //0x0030(0x0010)
  InterpCurveEdSetup*                                                 CurveEdSetup                                      //0x0040(0x0008)
  *                                                                   EdSectionStart                                    //0x0048(0x0004)
  *                                                                   EdSectionEnd                                      //0x004C(0x0004)
  *                                                                   bShouldBakeAndPrune                               //0x0050(0x0001)
  InterpGroupDirector*                                                CachedDirectorGroup                               //0x0058(0x0008)
  AllEventNames*                                                      AllEventNames                                     //0x0060(0x0010)
};


class InterpFilter : public Object
{
  *                                                                   Caption                                           //0x0028(0x0010)
};


class InterpFilter_Classes : public InterpFilter
{
};


class InterpFilter_Custom : public InterpFilter
{
};


class InterpGroup : public Object
{
  InterpTracks*                                                       InterpTracks                                      //0x0030(0x0010)
  *                                                                   GroupName                                         //0x0040(0x0008)
  Color*                                                              GroupColor                                        //0x0048(0x0004)
  *                                                                   bCollapsed                                        //0x004C(0x0001)
  *                                                                   bVisible                                          //0x004C(0x0001)
  *                                                                   bIsFolder                                         //0x004C(0x0001)
  *                                                                   bIsParented                                       //0x004C(0x0001)
  *                                                                   bIsSelected                                       //0x004C(0x0001)
};


class InterpGroupCamera : public InterpGroup
{
  CameraAnim*                                                         CameraAnimInst                                    //0x0050(0x0008)
  *                                                                   CompressTolerance                                 //0x0058(0x0004)
};


class InterpGroupDirector : public InterpGroup
{
};


class InterpGroupInst : public Object
{
  InterpGroup*                                                        Group                                             //0x0028(0x0008)
  Actor*                                                              GroupActor                                        //0x0030(0x0008)
  TrackInst*                                                          TrackInst                                         //0x0038(0x0010)
};


class InterpGroupInstCamera : public InterpGroupInst
{
};


class InterpGroupInstDirector : public InterpGroupInst
{
};


class InterpToMovementComponent : public MovementComponent
{
  *                                                                   Duration                                          //0x00F0(0x0004)
  *                                                                   bPauseOnImpact                                    //0x00F4(0x0001)
  *                                                                   bSweep                                            //0x00F8(0x0001)
  UnderlyingType*                                                     TeleportType                                      //0x00F9(0x0001)
  UnderlyingType*                                                     BehaviourType                                     //0x00FA(0x0001)
  *                                                                   bCheckIfStillInWorld                              //0x00FB(0x0001)
  *                                                                   bForceSubStepping                                 //0x00FC(0x0001)
  OnInterpToReverseDelegate__DelegateSignature*                       OnInterpToReverse                                 //0x0100(0x0010)
  OnInterpToStopDelegate__DelegateSignature*                          OnInterpToStop                                    //0x0110(0x0010)
  OnInterpToWaitBeginDelegate__DelegateSignature*                     OnWaitBeginDelegate                               //0x0120(0x0010)
  OnInterpToWaitEndDelegate__DelegateSignature*                       OnWaitEndDelegate                                 //0x0130(0x0010)
  OnInterpToResetDelegate__DelegateSignature*                         OnResetDelegate                                   //0x0140(0x0010)
  *                                                                   MaxSimulationTimeStep                             //0x0150(0x0004)
  *                                                                   MaxSimulationIterations                           //0x0154(0x0004)
  ControlPoints*                                                      ControlPoints                                     //0x0158(0x0010)
  HitResult*                                                          StopSimulating                                    //0x0000(0x0229)
  *                                                                   RestartMovement                                   //0x0000(0x0229)
  ImpactResult*                                                       OnInterpToWaitEndDelegate__DelegateSignature      //0x0000(0x0229)
  ImpactResult*                                                       OnInterpToWaitBeginDelegate__DelegateSignature    //0x0000(0x0229)
  ImpactResult*                                                       OnInterpToStopDelegate__DelegateSignature         //0x0000(0x0229)
  ImpactResult*                                                       OnInterpToReverseDelegate__DelegateSignature      //0x0000(0x0229)
  ImpactResult*                                                       OnInterpToResetDelegate__DelegateSignature        //0x0000(0x0229)
  *                                                                   FinaliseControlPoints                             //0x0000(0x0229)
};


class InterpTrack : public Object
{
  SubTracks*                                                          SubTracks                                         //0x0038(0x0010)
  Class*                                                              TrackInstClass                                    //0x0048(0x0008)
  ETrackActiveCondition*                                              ActiveCondition                                   //0x0050(0x0001)
  *                                                                   TrackTitle                                        //0x0058(0x0010)
  *                                                                   bOnePerGroup                                      //0x0068(0x0001)
  *                                                                   bDirGroupOnly                                     //0x0068(0x0001)
  *                                                                   bDisableTrack                                     //0x0068(0x0001)
  *                                                                   bIsSelected                                       //0x0068(0x0001)
  *                                                                   bIsAnimControlTrack                               //0x0068(0x0001)
  *                                                                   bSubTrackOnly                                     //0x0068(0x0001)
  *                                                                   bVisible                                          //0x0068(0x0001)
  *                                                                   bIsRecording                                      //0x0068(0x0001)
};


class InterpTrackFloatBase : public InterpTrack
{
  InterpCurveFloat*                                                   FloatTrack                                        //0x0070(0x0018)
  *                                                                   CurveTension                                      //0x0088(0x0004)
};


class InterpTrackAnimControl : public InterpTrackFloatBase
{
  *                                                                   SlotName                                          //0x0090(0x0008)
  AnimSeqs*                                                           AnimSeqs                                          //0x0098(0x0010)
  *                                                                   bSkipAnimNotifiers                                //0x00A8(0x0001)
};


class InterpTrackVectorBase : public InterpTrack
{
  InterpCurveVector*                                                  VectorTrack                                       //0x0070(0x0018)
  *                                                                   CurveTension                                      //0x0088(0x0004)
};


class InterpTrackAudioMaster : public InterpTrackVectorBase
{
};


class InterpTrackBoolProp : public InterpTrack
{
  BoolTrack*                                                          BoolTrack                                         //0x0070(0x0010)
  *                                                                   PropertyName                                      //0x0080(0x0008)
};


class InterpTrackColorProp : public InterpTrackVectorBase
{
  *                                                                   PropertyName                                      //0x0090(0x0008)
};


class InterpTrackColorScale : public InterpTrackVectorBase
{
};


class InterpTrackDirector : public InterpTrack
{
  CutTrack*                                                           CutTrack                                          //0x0070(0x0010)
  *                                                                   bSimulateCameraCutsOnClients                      //0x0080(0x0001)
};


class InterpTrackEvent : public InterpTrack
{
  EventTrack*                                                         EventTrack                                        //0x0070(0x0010)
  *                                                                   bFireEventsWhenForwards                           //0x0080(0x0001)
  *                                                                   bFireEventsWhenBackwards                          //0x0080(0x0001)
  *                                                                   bFireEventsWhenJumpingForwards                    //0x0080(0x0001)
  *                                                                   bUseCustomEventName                               //0x0080(0x0001)
};


class InterpTrackFade : public InterpTrackFloatBase
{
  *                                                                   bPersistFade                                      //0x0090(0x0001)
  *                                                                   bFadeAudio                                        //0x0090(0x0001)
  LinearColor*                                                        FadeColor                                         //0x0094(0x0010)
};


class InterpTrackFloatAnimBPParam : public InterpTrackFloatBase
{
  AnimBlueprintGeneratedClass*                                        AnimBlueprintClass                                //0x0090(0x0008)
  Class*                                                              AnimClass                                         //0x0098(0x0008)
  *                                                                   ParamName                                         //0x00A0(0x0008)
};


class InterpTrackFloatMaterialParam : public InterpTrackFloatBase
{
  TargetMaterials*                                                    TargetMaterials                                   //0x0090(0x0010)
  *                                                                   ParamName                                         //0x00A0(0x0008)
};


class InterpTrackFloatParticleParam : public InterpTrackFloatBase
{
  *                                                                   ParamName                                         //0x0090(0x0008)
};


class InterpTrackFloatProp : public InterpTrackFloatBase
{
  *                                                                   PropertyName                                      //0x0090(0x0008)
};


class InterpTrackInst : public Object
{
};


class InterpTrackInstAnimControl : public InterpTrackInst
{
  *                                                                   LastUpdatePosition                                //0x0028(0x0004)
};


class InterpTrackInstAudioMaster : public InterpTrackInst
{
};


class InterpTrackInstProperty : public InterpTrackInst
{
  Property*                                                           InterpProperty                                    //0x0028(0x0008)
  Object*                                                             PropertyOuterObjectInst                           //0x0030(0x0008)
};


class InterpTrackInstBoolProp : public InterpTrackInstProperty
{
  BoolProperty*                                                       BoolProperty                                      //0x0040(0x0008)
  *                                                                   ResetBool                                         //0x0048(0x0001)
};


class InterpTrackInstColorProp : public InterpTrackInstProperty
{
  Color*                                                              ResetColor                                        //0x0040(0x0004)
};


class InterpTrackInstColorScale : public InterpTrackInst
{
};


class InterpTrackInstDirector : public InterpTrackInst
{
  Actor*                                                              OldViewTarget                                     //0x0028(0x0008)
};


class InterpTrackInstEvent : public InterpTrackInst
{
  *                                                                   LastUpdatePosition                                //0x0028(0x0004)
};


class InterpTrackInstFade : public InterpTrackInst
{
};


class InterpTrackInstFloatAnimBPParam : public InterpTrackInst
{
  AnimInstance*                                                       AnimScriptInstance                                //0x0028(0x0008)
  *                                                                   ResetFloat                                        //0x0030(0x0004)
};


class InterpTrackInstFloatMaterialParam : public InterpTrackInst
{
  MaterialInstances*                                                  MaterialInstances                                 //0x0028(0x0010)
  ResetFloats*                                                        ResetFloats                                       //0x0038(0x0010)
  PrimitiveMaterialRefs*                                              PrimitiveMaterialRefs                             //0x0048(0x0010)
  InterpTrackFloatMaterialParam*                                      InstancedTrack                                    //0x0058(0x0008)
};


class InterpTrackInstFloatParticleParam : public InterpTrackInst
{
  *                                                                   ResetFloat                                        //0x0028(0x0004)
};


class InterpTrackInstFloatProp : public InterpTrackInstProperty
{
  *                                                                   ResetFloat                                        //0x0040(0x0004)
};


class InterpTrackInstLinearColorProp : public InterpTrackInstProperty
{
  LinearColor*                                                        ResetColor                                        //0x0040(0x0010)
};


class InterpTrackInstMove : public InterpTrackInst
{
  Vector*                                                             ResetLocation                                     //0x0028(0x000C)
  Rotator*                                                            ResetRotation                                     //0x0034(0x000C)
};


class InterpTrackInstParticleReplay : public InterpTrackInst
{
  *                                                                   LastUpdatePosition                                //0x0028(0x0004)
};


class InterpTrackInstSlomo : public InterpTrackInst
{
  *                                                                   OldTimeDilation                                   //0x0028(0x0004)
};


class InterpTrackInstSound : public InterpTrackInst
{
  *                                                                   LastUpdatePosition                                //0x0028(0x0004)
  AudioComponent*                                                     PlayAudioComp                                     //0x0030(0x0008)
};


class InterpTrackInstToggle : public InterpTrackInst
{
  ETrackToggleAction*                                                 Action                                            //0x0028(0x0001)
  *                                                                   LastUpdatePosition                                //0x002C(0x0004)
  *                                                                   bSavedActiveState                                 //0x0030(0x0001)
};


class InterpTrackInstVectorMaterialParam : public InterpTrackInst
{
  MaterialInstances*                                                  MaterialInstances                                 //0x0028(0x0010)
  ResetVectors*                                                       ResetVectors                                      //0x0038(0x0010)
  PrimitiveMaterialRefs*                                              PrimitiveMaterialRefs                             //0x0048(0x0010)
  InterpTrackVectorMaterialParam*                                     InstancedTrack                                    //0x0058(0x0008)
};


class InterpTrackInstVectorProp : public InterpTrackInstProperty
{
  Vector*                                                             ResetVector                                       //0x0040(0x000C)
};


class InterpTrackInstVisibility : public InterpTrackInst
{
  EVisibilityTrackAction*                                             Action                                            //0x0028(0x0001)
  *                                                                   LastUpdatePosition                                //0x002C(0x0004)
};


class InterpTrackLinearColorBase : public InterpTrack
{
  InterpCurveLinearColor*                                             LinearColorTrack                                  //0x0070(0x0018)
  *                                                                   CurveTension                                      //0x0088(0x0004)
};


class InterpTrackLinearColorProp : public InterpTrackLinearColorBase
{
  *                                                                   PropertyName                                      //0x0090(0x0008)
};


class InterpTrackMove : public InterpTrack
{
  InterpCurveVector*                                                  PosTrack                                          //0x0070(0x0018)
  InterpCurveVector*                                                  EulerTrack                                        //0x0088(0x0018)
  InterpLookupTrack*                                                  LookupTrack                                       //0x00A0(0x0010)
  *                                                                   LookAtGroupName                                   //0x00B0(0x0008)
  *                                                                   LinCurveTension                                   //0x00B8(0x0004)
  *                                                                   AngCurveTension                                   //0x00BC(0x0004)
  *                                                                   bUseQuatInterpolation                             //0x00C0(0x0001)
  *                                                                   bShowArrowAtKeys                                  //0x00C0(0x0001)
  *                                                                   bDisableMovement                                  //0x00C0(0x0001)
  *                                                                   bShowTranslationOnCurveEd                         //0x00C0(0x0001)
  *                                                                   bShowRotationOnCurveEd                            //0x00C0(0x0001)
  *                                                                   bHide3DTrack                                      //0x00C0(0x0001)
  EInterpTrackMoveRotMode*                                            RotMode                                           //0x00C4(0x0001)
};


class InterpTrackMoveAxis : public InterpTrackFloatBase
{
  EInterpMoveAxis*                                                    MoveAxis                                          //0x0090(0x0001)
  InterpLookupTrack*                                                  LookupTrack                                       //0x0098(0x0010)
};


class InterpTrackParticleReplay : public InterpTrack
{
  TrackKeys*                                                          TrackKeys                                         //0x0070(0x0010)
};


class InterpTrackSlomo : public InterpTrackFloatBase
{
};


class InterpTrackSound : public InterpTrackVectorBase
{
  Sounds*                                                             Sounds                                            //0x0090(0x0010)
  *                                                                   bPlayOnReverse                                    //0x00A0(0x0001)
  *                                                                   bContinueSoundOnMatineeEnd                        //0x00A0(0x0001)
  *                                                                   bSuppressSubtitles                                //0x00A0(0x0001)
  *                                                                   bTreatAsDialogue                                  //0x00A0(0x0001)
  *                                                                   bAttach                                           //0x00A0(0x0001)
};


class InterpTrackToggle : public InterpTrack
{
  ToggleTrack*                                                        ToggleTrack                                       //0x0070(0x0010)
  *                                                                   bActivateSystemEachUpdate                         //0x0080(0x0001)
  *                                                                   bActivateWithJustAttachedFlag                     //0x0080(0x0001)
  *                                                                   bFireEventsWhenForwards                           //0x0080(0x0001)
  *                                                                   bFireEventsWhenBackwards                          //0x0080(0x0001)
  *                                                                   bFireEventsWhenJumpingForwards                    //0x0080(0x0001)
};


class InterpTrackVectorMaterialParam : public InterpTrackVectorBase
{
  TargetMaterials*                                                    TargetMaterials                                   //0x0090(0x0010)
  *                                                                   ParamName                                         //0x00A0(0x0008)
};


class InterpTrackVectorProp : public InterpTrackVectorBase
{
  *                                                                   PropertyName                                      //0x0090(0x0008)
};


class InterpTrackVisibility : public InterpTrack
{
  VisibilityTrack*                                                    VisibilityTrack                                   //0x0070(0x0010)
  *                                                                   bFireEventsWhenForwards                           //0x0080(0x0001)
  *                                                                   bFireEventsWhenBackwards                          //0x0080(0x0001)
  *                                                                   bFireEventsWhenJumpingForwards                    //0x0080(0x0001)
};


class IntSerialization : public Object
{
  *                                                                   UnsignedInt16Variable                             //0x0028(0x0002)
  *                                                                   UnsignedInt32Variable                             //0x002C(0x0004)
  *                                                                   UnsignedInt64Variable                             //0x0030(0x0008)
  *                                                                   SignedInt8Variable                                //0x0038(0x0001)
  *                                                                   SignedInt16Variable                               //0x003A(0x0002)
  *                                                                   SignedInt64Variable                               //0x0040(0x0008)
  *                                                                   UnsignedInt8Variable                              //0x0048(0x0001)
  *                                                                   SignedInt32Variable                               //0x004C(0x0004)
};


class KillZVolume : public PhysicsVolume
{
};


class KismetArrayLibrary : public BlueprintFunctionLibrary
{
  Object*                                                             SetArrayPropertyByName                            //0x0000(0x0229)
  TargetArray*                                                        FilterArray                                       //0x0000(0x0229)
  *                                                                   Array_Swap                                        //0x0000(0x0229)
  *                                                                   Array_Shuffle                                     //0x0000(0x0229)
  *                                                                   Array_Set                                         //0x0000(0x0229)
  *                                                                   Array_Resize                                      //0x0000(0x0229)
  *                                                                   Array_RemoveItem                                  //0x0000(0x0229)
  *                                                                   Array_Remove                                      //0x0000(0x0229)
  *                                                                   Array_Length                                      //0x0000(0x0229)
  *                                                                   Array_LastIndex                                   //0x0000(0x0229)
  *                                                                   Array_IsValidIndex                                //0x0000(0x0229)
  *                                                                   Array_Insert                                      //0x0000(0x0229)
  *                                                                   Array_Identical                                   //0x0000(0x0229)
  *                                                                   Array_Get                                         //0x0000(0x0229)
  *                                                                   Array_Find                                        //0x0000(0x0229)
  *                                                                   Array_Contains                                    //0x0000(0x0229)
  *                                                                   Array_Clear                                       //0x0000(0x0229)
  *                                                                   Array_Append                                      //0x0000(0x0229)
  *                                                                   Array_AddUnique                                   //0x0000(0x0229)
  *                                                                   Array_Add                                         //0x0000(0x0229)
};


class KismetGuidLibrary : public BlueprintFunctionLibrary
{
  *                                                                   Parse_StringToGuid                                //0x0000(0x0229)
  *                                                                   NotEqual_GuidGuid                                 //0x0000(0x0229)
  *                                                                   NewGuid                                           //0x0000(0x0229)
  *                                                                   IsValid_Guid                                      //0x0000(0x0229)
  *                                                                   Invalidate_Guid                                   //0x0000(0x0229)
  *                                                                   EqualEqual_GuidGuid                               //0x0000(0x0229)
  *                                                                   Conv_GuidToString                                 //0x0000(0x0229)
};


class KismetInputLibrary : public BlueprintFunctionLibrary
{
  *                                                                   PointerEvent_IsTouchEvent                         //0x0000(0x0229)
  *                                                                   PointerEvent_IsMouseButtonDown                    //0x0000(0x0229)
  *                                                                   PointerEvent_GetWheelDelta                        //0x0000(0x0229)
  *                                                                   PointerEvent_GetUserIndex                         //0x0000(0x0229)
  *                                                                   PointerEvent_GetTouchpadIndex                     //0x0000(0x0229)
  *                                                                   PointerEvent_GetScreenSpacePosition               //0x0000(0x0229)
  *                                                                   PointerEvent_GetPointerIndex                      //0x0000(0x0229)
  *                                                                   PointerEvent_GetLastScreenSpacePosition           //0x0000(0x0229)
  *                                                                   PointerEvent_GetGestureType                       //0x0000(0x0229)
  *                                                                   PointerEvent_GetGestureDelta                      //0x0000(0x0229)
  *                                                                   PointerEvent_GetEffectingButton                   //0x0000(0x0229)
  *                                                                   PointerEvent_GetCursorDelta                       //0x0000(0x0229)
  *                                                                   Key_IsVectorAxis                                  //0x0000(0x0229)
  *                                                                   Key_IsValid                                       //0x0000(0x0229)
  *                                                                   Key_IsMouseButton                                 //0x0000(0x0229)
  *                                                                   Key_IsModifierKey                                 //0x0000(0x0229)
  *                                                                   Key_IsKeyboardKey                                 //0x0000(0x0229)
  *                                                                   Key_IsGamepadKey                                  //0x0000(0x0229)
  *                                                                   Key_IsFloatAxis                                   //0x0000(0x0229)
  *                                                                   Key_GetNavigationDirectionFromKey                 //0x0000(0x0229)
  *                                                                   Key_GetNavigationDirectionFromAnalog              //0x0000(0x0229)
  *                                                                   Key_GetNavigationActionFromKey                    //0x0000(0x0229)
  *                                                                   Key_GetNavigationAction                           //0x0000(0x0229)
  *                                                                   Key_GetDisplayName                                //0x0000(0x0229)
  *                                                                   InputEvent_IsShiftDown                            //0x0000(0x0229)
  *                                                                   InputEvent_IsRightShiftDown                       //0x0000(0x0229)
  *                                                                   InputEvent_IsRightControlDown                     //0x0000(0x0229)
  *                                                                   InputEvent_IsRightCommandDown                     //0x0000(0x0229)
  *                                                                   InputEvent_IsRightAltDown                         //0x0000(0x0229)
  *                                                                   InputEvent_IsRepeat                               //0x0000(0x0229)
  *                                                                   InputEvent_IsLeftShiftDown                        //0x0000(0x0229)
  *                                                                   InputEvent_IsLeftControlDown                      //0x0000(0x0229)
  *                                                                   InputEvent_IsLeftCommandDown                      //0x0000(0x0229)
  *                                                                   InputEvent_IsLeftAltDown                          //0x0000(0x0229)
  *                                                                   InputEvent_IsControlDown                          //0x0000(0x0229)
  *                                                                   InputEvent_IsCommandDown                          //0x0000(0x0229)
  *                                                                   InputEvent_IsAltDown                              //0x0000(0x0229)
  *                                                                   InputChord_GetDisplayName                         //0x0000(0x0229)
  *                                                                   GetUserIndex                                      //0x0000(0x0229)
  *                                                                   GetKey                                            //0x0000(0x0229)
  *                                                                   GetAnalogValue                                    //0x0000(0x0229)
  *                                                                   EqualEqual_KeyKey                                 //0x0000(0x0229)
  *                                                                   EqualEqual_InputChordInputChord                   //0x0000(0x0229)
  *                                                                   CalibrateTilt                                     //0x0000(0x0229)
};


class KismetInternationalizationLibrary : public BlueprintFunctionLibrary
{
  *                                                                   SetCurrentLocale                                  //0x0000(0x0229)
  *                                                                   SetCurrentLanguageAndLocale                       //0x0000(0x0229)
  *                                                                   SetCurrentLanguage                                //0x0000(0x0229)
  *                                                                   SetCurrentCulture                                 //0x0000(0x0229)
  *                                                                   SetCurrentAssetGroupCulture                       //0x0000(0x0229)
  *                                                                   GetSuitableCulture                                //0x0000(0x0229)
  *                                                                   GetNativeCulture                                  //0x0000(0x0229)
  *                                                                   GetLocalizedCultures                              //0x0000(0x0229)
  *                                                                   GetCurrentLocale                                  //0x0000(0x0229)
  *                                                                   GetCurrentLanguage                                //0x0000(0x0229)
  *                                                                   GetCurrentCulture                                 //0x0000(0x0229)
  *                                                                   GetCurrentAssetGroupCulture                       //0x0000(0x0229)
  *                                                                   GetCultureDisplayName                             //0x0000(0x0229)
  *                                                                   ClearCurrentAssetGroupCulture                     //0x0000(0x0229)
};


class KismetMaterialLibrary : public BlueprintFunctionLibrary
{
  WorldContextObject*                                                 SetVectorParameterValue                           //0x0000(0x0229)
  WorldContextObject*                                                 SetScalarParameterValue                           //0x0000(0x0229)
  WorldContextObject*                                                 GetVectorParameterValue                           //0x0000(0x0229)
  WorldContextObject*                                                 GetScalarParameterValue                           //0x0000(0x0229)
  WorldContextObject*                                                 CreateDynamicMaterialInstance                     //0x0000(0x0229)
};


class KismetMathLibrary : public BlueprintFunctionLibrary
{
  *                                                                   Xor_IntInt                                        //0x0000(0x0229)
  *                                                                   Xor_Int64Int64                                    //0x0000(0x0229)
  *                                                                   WeightedMovingAverage_FVector                     //0x0000(0x0229)
  *                                                                   WeightedMovingAverage_FRotator                    //0x0000(0x0229)
  *                                                                   WeightedMovingAverage_Float                       //0x0000(0x0229)
  *                                                                   VSizeXYSquared                                    //0x0000(0x0229)
  *                                                                   VSizeXY                                           //0x0000(0x0229)
  *                                                                   VSizeSquared                                      //0x0000(0x0229)
  *                                                                   VSize2DSquared                                    //0x0000(0x0229)
  *                                                                   VSize2D                                           //0x0000(0x0229)
  *                                                                   VSize                                             //0x0000(0x0229)
  *                                                                   VLerp                                             //0x0000(0x0229)
  *                                                                   VInterpTo_Constant                                //0x0000(0x0229)
  *                                                                   VInterpTo                                         //0x0000(0x0229)
  *                                                                   VectorSpringInterp                                //0x0000(0x0229)
  *                                                                   Vector_Zero                                       //0x0000(0x0229)
  *                                                                   Vector_Up                                         //0x0000(0x0229)
  *                                                                   Vector_UnwindEuler                                //0x0000(0x0229)
  *                                                                   Vector_UnitCartesianToSpherical                   //0x0000(0x0229)
  *                                                                   Vector_ToRadians                                  //0x0000(0x0229)
  *                                                                   Vector_ToDegrees                                  //0x0000(0x0229)
  *                                                                   Vector_SnappedToGrid                              //0x0000(0x0229)
  *                                                                   Vector_Set                                        //0x0000(0x0229)
  *                                                                   Vector_Right                                      //0x0000(0x0229)
  *                                                                   Vector_Reciprocal                                 //0x0000(0x0229)
  *                                                                   Vector_ProjectOnToNormal                          //0x0000(0x0229)
  *                                                                   Vector_One                                        //0x0000(0x0229)
  *                                                                   Vector_NormalUnsafe                               //0x0000(0x0229)
  *                                                                   Vector_Normalize                                  //0x0000(0x0229)
  *                                                                   Vector_Normal2D                                   //0x0000(0x0229)
  *                                                                   Vector_MirrorByPlane                              //0x0000(0x0229)
  *                                                                   Vector_Left                                       //0x0000(0x0229)
  *                                                                   Vector_IsZero                                     //0x0000(0x0229)
  *                                                                   Vector_IsUnit                                     //0x0000(0x0229)
  *                                                                   Vector_IsUniform                                  //0x0000(0x0229)
  *                                                                   Vector_IsNormal                                   //0x0000(0x0229)
  *                                                                   Vector_IsNearlyZero                               //0x0000(0x0229)
  *                                                                   Vector_IsNAN                                      //0x0000(0x0229)
  *                                                                   Vector_HeadingAngle                               //0x0000(0x0229)
  *                                                                   Vector_GetSignVector                              //0x0000(0x0229)
  *                                                                   Vector_GetProjection                              //0x0000(0x0229)
  *                                                                   Vector_GetAbsMin                                  //0x0000(0x0229)
  *                                                                   Vector_GetAbsMax                                  //0x0000(0x0229)
  *                                                                   Vector_GetAbs                                     //0x0000(0x0229)
  *                                                                   Vector_Forward                                    //0x0000(0x0229)
  *                                                                   Vector_Down                                       //0x0000(0x0229)
  *                                                                   Vector_DistanceSquared                            //0x0000(0x0229)
  *                                                                   Vector_Distance2DSquared                          //0x0000(0x0229)
  *                                                                   Vector_Distance2D                                 //0x0000(0x0229)
  *                                                                   Vector_Distance                                   //0x0000(0x0229)
  *                                                                   Vector_CosineAngle2D                              //0x0000(0x0229)
  *                                                                   Vector_ComponentMin                               //0x0000(0x0229)
  *                                                                   Vector_ComponentMax                               //0x0000(0x0229)
  *                                                                   Vector_ClampSizeMax2D                             //0x0000(0x0229)
  *                                                                   Vector_ClampSizeMax                               //0x0000(0x0229)
  *                                                                   Vector_ClampSize2D                                //0x0000(0x0229)
  *                                                                   Vector_BoundedToCube                              //0x0000(0x0229)
  *                                                                   Vector_BoundedToBox                               //0x0000(0x0229)
  *                                                                   Vector_Backward                                   //0x0000(0x0229)
  *                                                                   Vector_Assign                                     //0x0000(0x0229)
  *                                                                   Vector_AddBounded                                 //0x0000(0x0229)
  *                                                                   Vector4_Zero                                      //0x0000(0x0229)
  *                                                                   Vector4_SizeSquared3                              //0x0000(0x0229)
  *                                                                   Vector4_SizeSquared                               //0x0000(0x0229)
  *                                                                   Vector4_Size3                                     //0x0000(0x0229)
  *                                                                   Vector4_Size                                      //0x0000(0x0229)
  *                                                                   Vector4_Set                                       //0x0000(0x0229)
  *                                                                   Vector4_NormalUnsafe3                             //0x0000(0x0229)
  *                                                                   Vector4_Normalize3                                //0x0000(0x0229)
  *                                                                   Vector4_Normal3                                   //0x0000(0x0229)
  *                                                                   Vector4_Negated                                   //0x0000(0x0229)
  *                                                                   Vector4_MirrorByVector3                           //0x0000(0x0229)
  *                                                                   Vector4_IsZero                                    //0x0000(0x0229)
  *                                                                   Vector4_IsUnit3                                   //0x0000(0x0229)
  *                                                                   Vector4_IsNormal3                                 //0x0000(0x0229)
  *                                                                   Vector4_IsNearlyZero3                             //0x0000(0x0229)
  *                                                                   Vector4_IsNAN                                     //0x0000(0x0229)
  *                                                                   Vector4_DotProduct3                               //0x0000(0x0229)
  *                                                                   Vector4_DotProduct                                //0x0000(0x0229)
  *                                                                   Vector4_CrossProduct3                             //0x0000(0x0229)
  *                                                                   Vector4_Assign                                    //0x0000(0x0229)
  *                                                                   Vector2DInterpTo_Constant                         //0x0000(0x0229)
  *                                                                   Vector2DInterpTo                                  //0x0000(0x0229)
  *                                                                   Vector2D_Zero                                     //0x0000(0x0229)
  *                                                                   Vector2D_Unit45Deg                                //0x0000(0x0229)
  *                                                                   Vector2D_One                                      //0x0000(0x0229)
  *                                                                   VEase                                             //0x0000(0x0229)
  *                                                                   UtcNow                                            //0x0000(0x0229)
  *                                                                   TransformRotation                                 //0x0000(0x0229)
  *                                                                   TransformLocation                                 //0x0000(0x0229)
  *                                                                   TransformDirection                                //0x0000(0x0229)
  *                                                                   Transform_Determinant                             //0x0000(0x0229)
  *                                                                   ToSign2D                                          //0x0000(0x0229)
  *                                                                   ToRounded2D                                       //0x0000(0x0229)
  *                                                                   ToDirectionAndLength2D                            //0x0000(0x0229)
  *                                                                   Today                                             //0x0000(0x0229)
  *                                                                   TLerp                                             //0x0000(0x0229)
  *                                                                   TInterpTo                                         //0x0000(0x0229)
  *                                                                   TimespanZeroValue                                 //0x0000(0x0229)
  *                                                                   TimespanRatio                                     //0x0000(0x0229)
  *                                                                   TimespanMinValue                                  //0x0000(0x0229)
  *                                                                   TimespanMaxValue                                  //0x0000(0x0229)
  *                                                                   TimespanFromString                                //0x0000(0x0229)
  *                                                                   TEase                                             //0x0000(0x0229)
  *                                                                   Tan                                               //0x0000(0x0229)
  *                                                                   Subtract_VectorVector                             //0x0000(0x0229)
  *                                                                   Subtract_VectorInt                                //0x0000(0x0229)
  *                                                                   Subtract_VectorFloat                              //0x0000(0x0229)
  *                                                                   Subtract_Vector4Vector4                           //0x0000(0x0229)
  *                                                                   Subtract_Vector2DVector2D                         //0x0000(0x0229)
  *                                                                   Subtract_Vector2DFloat                            //0x0000(0x0229)
  *                                                                   Subtract_TimespanTimespan                         //0x0000(0x0229)
  *                                                                   Subtract_QuatQuat                                 //0x0000(0x0229)
  *                                                                   Subtract_LinearColorLinearColor                   //0x0000(0x0229)
  *                                                                   Subtract_IntInt                                   //0x0000(0x0229)
  *                                                                   Subtract_Int64Int64                               //0x0000(0x0229)
  *                                                                   Subtract_FloatFloat                               //0x0000(0x0229)
  *                                                                   Subtract_DateTimeTimespan                         //0x0000(0x0229)
  *                                                                   Subtract_DateTimeDateTime                         //0x0000(0x0229)
  *                                                                   Subtract_ByteByte                                 //0x0000(0x0229)
  *                                                                   Square                                            //0x0000(0x0229)
  *                                                                   Sqrt                                              //0x0000(0x0229)
  *                                                                   Spherical2DToUnitCartesian                        //0x0000(0x0229)
  *                                                                   Sin                                               //0x0000(0x0229)
  *                                                                   SignOfInteger64                                   //0x0000(0x0229)
  *                                                                   SignOfInteger                                     //0x0000(0x0229)
  *                                                                   SignOfFloat                                       //0x0000(0x0229)
  *                                                                   SetRandomStreamSeed                               //0x0000(0x0229)
  *                                                                   Set2D                                             //0x0000(0x0229)
  *                                                                   SelectVector                                      //0x0000(0x0229)
  *                                                                   SelectTransform                                   //0x0000(0x0229)
  *                                                                   SelectString                                      //0x0000(0x0229)
  *                                                                   SelectRotator                                     //0x0000(0x0229)
  A*                                                                  SelectObject                                      //0x0000(0x0229)
  *                                                                   SelectInt                                         //0x0000(0x0229)
  *                                                                   SelectFloat                                       //0x0000(0x0229)
  *                                                                   SelectColor                                       //0x0000(0x0229)
  A*                                                                  SelectClass                                       //0x0000(0x0229)
  *                                                                   SeedRandomStream                                  //0x0000(0x0229)
  *                                                                   SafeDivide                                        //0x0000(0x0229)
  *                                                                   Round64                                           //0x0000(0x0229)
  *                                                                   Round                                             //0x0000(0x0229)
  *                                                                   RotatorFromAxisAndAngle                           //0x0000(0x0229)
  *                                                                   RotateAngleAxis                                   //0x0000(0x0229)
  *                                                                   RLerp                                             //0x0000(0x0229)
  *                                                                   RInterpTo_Constant                                //0x0000(0x0229)
  *                                                                   RInterpTo                                         //0x0000(0x0229)
  *                                                                   RGBToHSV_Vector                                   //0x0000(0x0229)
  *                                                                   RGBToHSV                                          //0x0000(0x0229)
  *                                                                   RGBLinearToHSV                                    //0x0000(0x0229)
  *                                                                   ResetVectorSpringState                            //0x0000(0x0229)
  *                                                                   ResetRandomStream                                 //0x0000(0x0229)
  *                                                                   ResetFloatSpringState                             //0x0000(0x0229)
  *                                                                   REase                                             //0x0000(0x0229)
  *                                                                   RandomUnitVectorInEllipticalConeInRadiansFromStream//0x0000(0x0229)
  *                                                                   RandomUnitVectorInEllipticalConeInRadians         //0x0000(0x0229)
  *                                                                   RandomUnitVectorInEllipticalConeInDegreesFromStream//0x0000(0x0229)
  *                                                                   RandomUnitVectorInEllipticalConeInDegrees         //0x0000(0x0229)
  *                                                                   RandomUnitVectorInConeInRadiansFromStream         //0x0000(0x0229)
  *                                                                   RandomUnitVectorInConeInRadians                   //0x0000(0x0229)
  *                                                                   RandomUnitVectorInConeInDegreesFromStream         //0x0000(0x0229)
  *                                                                   RandomUnitVectorInConeInDegrees                   //0x0000(0x0229)
  *                                                                   RandomUnitVectorFromStream                        //0x0000(0x0229)
  *                                                                   RandomUnitVector                                  //0x0000(0x0229)
  *                                                                   RandomRotatorFromStream                           //0x0000(0x0229)
  *                                                                   RandomRotator                                     //0x0000(0x0229)
  *                                                                   RandomPointInBoundingBox                          //0x0000(0x0229)
  *                                                                   RandomIntegerInRangeFromStream                    //0x0000(0x0229)
  *                                                                   RandomIntegerInRange                              //0x0000(0x0229)
  *                                                                   RandomIntegerFromStream                           //0x0000(0x0229)
  *                                                                   RandomInteger64InRange                            //0x0000(0x0229)
  *                                                                   RandomInteger64                                   //0x0000(0x0229)
  *                                                                   RandomInteger                                     //0x0000(0x0229)
  *                                                                   RandomFloatInRangeFromStream                      //0x0000(0x0229)
  *                                                                   RandomFloatInRange                                //0x0000(0x0229)
  *                                                                   RandomFloatFromStream                             //0x0000(0x0229)
  *                                                                   RandomFloat                                       //0x0000(0x0229)
  *                                                                   RandomBoolWithWeightFromStream                    //0x0000(0x0229)
  *                                                                   RandomBoolWithWeight                              //0x0000(0x0229)
  *                                                                   RandomBoolFromStream                              //0x0000(0x0229)
  *                                                                   RandomBool                                        //0x0000(0x0229)
  *                                                                   RadiansToDegrees                                  //0x0000(0x0229)
  *                                                                   Quat_VectorUp                                     //0x0000(0x0229)
  *                                                                   Quat_VectorRight                                  //0x0000(0x0229)
  *                                                                   Quat_VectorForward                                //0x0000(0x0229)
  *                                                                   Quat_UnrotateVector                               //0x0000(0x0229)
  *                                                                   Quat_SizeSquared                                  //0x0000(0x0229)
  *                                                                   Quat_Size                                         //0x0000(0x0229)
  *                                                                   Quat_SetFromEuler                                 //0x0000(0x0229)
  *                                                                   Quat_SetComponents                                //0x0000(0x0229)
  *                                                                   Quat_Rotator                                      //0x0000(0x0229)
  *                                                                   Quat_RotateVector                                 //0x0000(0x0229)
  *                                                                   Quat_Normalized                                   //0x0000(0x0229)
  *                                                                   Quat_Normalize                                    //0x0000(0x0229)
  *                                                                   Quat_MakeFromEuler                                //0x0000(0x0229)
  *                                                                   Quat_Log                                          //0x0000(0x0229)
  *                                                                   Quat_IsNormalized                                 //0x0000(0x0229)
  *                                                                   Quat_IsNonFinite                                  //0x0000(0x0229)
  *                                                                   Quat_IsIdentity                                   //0x0000(0x0229)
  *                                                                   Quat_IsFinite                                     //0x0000(0x0229)
  *                                                                   Quat_Inversed                                     //0x0000(0x0229)
  *                                                                   Quat_Identity                                     //0x0000(0x0229)
  *                                                                   Quat_GetRotationAxis                              //0x0000(0x0229)
  *                                                                   Quat_GetAxisZ                                     //0x0000(0x0229)
  *                                                                   Quat_GetAxisY                                     //0x0000(0x0229)
  *                                                                   Quat_GetAxisX                                     //0x0000(0x0229)
  *                                                                   Quat_GetAngle                                     //0x0000(0x0229)
  *                                                                   Quat_Exp                                          //0x0000(0x0229)
  *                                                                   Quat_Euler                                        //0x0000(0x0229)
  *                                                                   Quat_EnforceShortestArcWith                       //0x0000(0x0229)
  *                                                                   Quat_AngularDistance                              //0x0000(0x0229)
  *                                                                   ProjectVectorOnToVector                           //0x0000(0x0229)
  *                                                                   ProjectVectorOnToPlane                            //0x0000(0x0229)
  *                                                                   ProjectPointOnToPlane                             //0x0000(0x0229)
  *                                                                   PointsAreCoplanar                                 //0x0000(0x0229)
  *                                                                   PerlinNoise1D                                     //0x0000(0x0229)
  *                                                                   Percent_IntInt                                    //0x0000(0x0229)
  *                                                                   Percent_FloatFloat                                //0x0000(0x0229)
  *                                                                   Percent_ByteByte                                  //0x0000(0x0229)
  *                                                                   Or_IntInt                                         //0x0000(0x0229)
  *                                                                   Or_Int64Int64                                     //0x0000(0x0229)
  *                                                                   Now                                               //0x0000(0x0229)
  *                                                                   NotEqualExactly_VectorVector                      //0x0000(0x0229)
  *                                                                   NotEqualExactly_Vector4Vector4                    //0x0000(0x0229)
  *                                                                   NotEqualExactly_Vector2DVector2D                  //0x0000(0x0229)
  *                                                                   NotEqual_VectorVector                             //0x0000(0x0229)
  *                                                                   NotEqual_Vector4Vector4                           //0x0000(0x0229)
  *                                                                   NotEqual_Vector2DVector2D                         //0x0000(0x0229)
  *                                                                   NotEqual_TimespanTimespan                         //0x0000(0x0229)
  *                                                                   NotEqual_RotatorRotator                           //0x0000(0x0229)
  *                                                                   NotEqual_QuatQuat                                 //0x0000(0x0229)
  A*                                                                  NotEqual_ObjectObject                             //0x0000(0x0229)
  *                                                                   NotEqual_NameName                                 //0x0000(0x0229)
  *                                                                   NotEqual_MatrixMatrix                             //0x0000(0x0229)
  *                                                                   NotEqual_LinearColorLinearColor                   //0x0000(0x0229)
  *                                                                   NotEqual_IntInt                                   //0x0000(0x0229)
  *                                                                   NotEqual_Int64Int64                               //0x0000(0x0229)
  *                                                                   NotEqual_FloatFloat                               //0x0000(0x0229)
  *                                                                   NotEqual_DateTimeDateTime                         //0x0000(0x0229)
  A*                                                                  NotEqual_ClassClass                               //0x0000(0x0229)
  *                                                                   NotEqual_ByteByte                                 //0x0000(0x0229)
  *                                                                   NotEqual_BoolBool                                 //0x0000(0x0229)
  *                                                                   Not_PreBool                                       //0x0000(0x0229)
  *                                                                   Not_Int64                                         //0x0000(0x0229)
  *                                                                   Not_Int                                           //0x0000(0x0229)
  *                                                                   NormalSafe2D                                      //0x0000(0x0229)
  *                                                                   NormalizeToRange                                  //0x0000(0x0229)
  *                                                                   NormalizedDeltaRotator                            //0x0000(0x0229)
  *                                                                   NormalizeAxis                                     //0x0000(0x0229)
  *                                                                   Normalize2D                                       //0x0000(0x0229)
  *                                                                   Normal2D                                          //0x0000(0x0229)
  *                                                                   Normal                                            //0x0000(0x0229)
  *                                                                   NegateVector                                      //0x0000(0x0229)
  *                                                                   NegateRotator                                     //0x0000(0x0229)
  *                                                                   Negated2D                                         //0x0000(0x0229)
  *                                                                   NearlyEqual_TransformTransform                    //0x0000(0x0229)
  *                                                                   NearlyEqual_FloatFloat                            //0x0000(0x0229)
  *                                                                   MultiplyMultiply_FloatFloat                       //0x0000(0x0229)
  *                                                                   MultiplyByPi                                      //0x0000(0x0229)
  *                                                                   Multiply_VectorVector                             //0x0000(0x0229)
  *                                                                   Multiply_VectorInt                                //0x0000(0x0229)
  *                                                                   Multiply_VectorFloat                              //0x0000(0x0229)
  *                                                                   Multiply_Vector4Vector4                           //0x0000(0x0229)
  *                                                                   Multiply_Vector2DVector2D                         //0x0000(0x0229)
  *                                                                   Multiply_Vector2DFloat                            //0x0000(0x0229)
  *                                                                   Multiply_TimespanFloat                            //0x0000(0x0229)
  *                                                                   Multiply_RotatorInt                               //0x0000(0x0229)
  *                                                                   Multiply_RotatorFloat                             //0x0000(0x0229)
  *                                                                   Multiply_QuatQuat                                 //0x0000(0x0229)
  *                                                                   Multiply_MatrixMatrix                             //0x0000(0x0229)
  *                                                                   Multiply_MatrixFloat                              //0x0000(0x0229)
  *                                                                   Multiply_LinearColorLinearColor                   //0x0000(0x0229)
  *                                                                   Multiply_LinearColorFloat                         //0x0000(0x0229)
  *                                                                   Multiply_IntInt                                   //0x0000(0x0229)
  *                                                                   Multiply_IntFloat                                 //0x0000(0x0229)
  *                                                                   Multiply_Int64Int64                               //0x0000(0x0229)
  *                                                                   Multiply_FloatFloat                               //0x0000(0x0229)
  *                                                                   Multiply_ByteByte                                 //0x0000(0x0229)
  *                                                                   MirrorVectorByNormal                              //0x0000(0x0229)
  *                                                                   MinOfIntArray                                     //0x0000(0x0229)
  *                                                                   MinOfFloatArray                                   //0x0000(0x0229)
  *                                                                   MinOfByteArray                                    //0x0000(0x0229)
  *                                                                   MinInt64                                          //0x0000(0x0229)
  WorldContextObject*                                                 MinimumAreaRectangle                              //0x0000(0x0229)
  *                                                                   Min                                               //0x0000(0x0229)
  *                                                                   MaxOfIntArray                                     //0x0000(0x0229)
  *                                                                   MaxOfFloatArray                                   //0x0000(0x0229)
  *                                                                   MaxOfByteArray                                    //0x0000(0x0229)
  *                                                                   MaxInt64                                          //0x0000(0x0229)
  *                                                                   Max                                               //0x0000(0x0229)
  *                                                                   Matrix_TransformVector4                           //0x0000(0x0229)
  *                                                                   Matrix_TransformVector                            //0x0000(0x0229)
  *                                                                   Matrix_TransformPosition                          //0x0000(0x0229)
  *                                                                   Matrix_ToQuat                                     //0x0000(0x0229)
  *                                                                   Matrix_SetOrigin                                  //0x0000(0x0229)
  *                                                                   Matrix_SetColumn                                  //0x0000(0x0229)
  *                                                                   Matrix_SetAxis                                    //0x0000(0x0229)
  *                                                                   Matrix_ScaleTranslation                           //0x0000(0x0229)
  *                                                                   Matrix_RemoveTranslation                          //0x0000(0x0229)
  *                                                                   Matrix_RemoveScaling                              //0x0000(0x0229)
  *                                                                   Matrix_Mirror                                     //0x0000(0x0229)
  *                                                                   Matrix_InverseTransformVector                     //0x0000(0x0229)
  *                                                                   Matrix_InverseTransformPosition                   //0x0000(0x0229)
  *                                                                   Matrix_Identity                                   //0x0000(0x0229)
  *                                                                   Matrix_GetUnitAxis                                //0x0000(0x0229)
  *                                                                   Matrix_GetUnitAxes                                //0x0000(0x0229)
  *                                                                   Matrix_GetTransposed                              //0x0000(0x0229)
  *                                                                   Matrix_GetTransposeAdjoint                        //0x0000(0x0229)
  *                                                                   Matrix_GetScaleVector                             //0x0000(0x0229)
  *                                                                   Matrix_GetScaledAxis                              //0x0000(0x0229)
  *                                                                   Matrix_GetScaledAxes                              //0x0000(0x0229)
  *                                                                   Matrix_GetRotDeterminant                          //0x0000(0x0229)
  *                                                                   Matrix_GetRotator                                 //0x0000(0x0229)
  *                                                                   Matrix_GetOrigin                                  //0x0000(0x0229)
  *                                                                   Matrix_GetMaximumAxisScale                        //0x0000(0x0229)
  *                                                                   Matrix_GetMatrixWithoutScale                      //0x0000(0x0229)
  *                                                                   Matrix_GetInverse                                 //0x0000(0x0229)
  *                                                                   Matrix_GetFrustumTopPlane                         //0x0000(0x0229)
  *                                                                   Matrix_GetFrustumRightPlane                       //0x0000(0x0229)
  *                                                                   Matrix_GetFrustumNearPlane                        //0x0000(0x0229)
  *                                                                   Matrix_GetFrustumLeftPlane                        //0x0000(0x0229)
  *                                                                   Matrix_GetFrustumFarPlane                         //0x0000(0x0229)
  *                                                                   Matrix_GetFrustumBottomPlane                      //0x0000(0x0229)
  *                                                                   Matrix_GetDeterminant                             //0x0000(0x0229)
  *                                                                   Matrix_GetColumn                                  //0x0000(0x0229)
  *                                                                   Matrix_ContainsNaN                                //0x0000(0x0229)
  *                                                                   Matrix_ConcatenateTranslation                     //0x0000(0x0229)
  *                                                                   Matrix_ApplyScale                                 //0x0000(0x0229)
  *                                                                   MapRangeUnclamped                                 //0x0000(0x0229)
  *                                                                   MapRangeClamped                                   //0x0000(0x0229)
  *                                                                   MakeVector4                                       //0x0000(0x0229)
  *                                                                   MakeVector2D                                      //0x0000(0x0229)
  *                                                                   MakeVector                                        //0x0000(0x0229)
  *                                                                   MakeTransform                                     //0x0000(0x0229)
  *                                                                   MakeTimespan2                                     //0x0000(0x0229)
  *                                                                   MakeTimespan                                      //0x0000(0x0229)
  *                                                                   MakeRotFromZY                                     //0x0000(0x0229)
  *                                                                   MakeRotFromZX                                     //0x0000(0x0229)
  *                                                                   MakeRotFromZ                                      //0x0000(0x0229)
  *                                                                   MakeRotFromYZ                                     //0x0000(0x0229)
  *                                                                   MakeRotFromYX                                     //0x0000(0x0229)
  *                                                                   MakeRotFromY                                      //0x0000(0x0229)
  *                                                                   MakeRotFromXZ                                     //0x0000(0x0229)
  *                                                                   MakeRotFromXY                                     //0x0000(0x0229)
  *                                                                   MakeRotFromX                                      //0x0000(0x0229)
  *                                                                   MakeRotator                                       //0x0000(0x0229)
  *                                                                   MakeRotationFromAxes                              //0x0000(0x0229)
  *                                                                   MakeRelativeTransform                             //0x0000(0x0229)
  *                                                                   MakeRandomStream                                  //0x0000(0x0229)
  *                                                                   MakeQualifiedFrameTime                            //0x0000(0x0229)
  *                                                                   MakePulsatingValue                                //0x0000(0x0229)
  *                                                                   MakePlaneFromPointAndNormal                       //0x0000(0x0229)
  *                                                                   MakeFrameRate                                     //0x0000(0x0229)
  *                                                                   MakeDateTime                                      //0x0000(0x0229)
  *                                                                   MakeColor                                         //0x0000(0x0229)
  *                                                                   MakeBox2D                                         //0x0000(0x0229)
  *                                                                   MakeBox                                           //0x0000(0x0229)
  *                                                                   Loge                                              //0x0000(0x0229)
  *                                                                   Log                                               //0x0000(0x0229)
  *                                                                   LinePlaneIntersection_OriginNormal                //0x0000(0x0229)
  *                                                                   LinePlaneIntersection                             //0x0000(0x0229)
  *                                                                   LinearColorLerpUsingHSV                           //0x0000(0x0229)
  *                                                                   LinearColorLerp                                   //0x0000(0x0229)
  *                                                                   LinearColor_Yellow                                //0x0000(0x0229)
  *                                                                   LinearColor_White                                 //0x0000(0x0229)
  *                                                                   LinearColor_Transparent                           //0x0000(0x0229)
  *                                                                   LinearColor_ToRGBE                                //0x0000(0x0229)
  *                                                                   LinearColor_ToNewOpacity                          //0x0000(0x0229)
  *                                                                   LinearColor_SetTemperature                        //0x0000(0x0229)
  *                                                                   LinearColor_SetRGBA                               //0x0000(0x0229)
  *                                                                   LinearColor_SetRandomHue                          //0x0000(0x0229)
  *                                                                   LinearColor_SetFromSRGB                           //0x0000(0x0229)
  *                                                                   LinearColor_SetFromPow22                          //0x0000(0x0229)
  *                                                                   LinearColor_SetFromHSV                            //0x0000(0x0229)
  *                                                                   LinearColor_Set                                   //0x0000(0x0229)
  *                                                                   LinearColor_Red                                   //0x0000(0x0229)
  *                                                                   LinearColor_QuantizeRound                         //0x0000(0x0229)
  *                                                                   LinearColor_Quantize                              //0x0000(0x0229)
  *                                                                   LinearColor_IsNearEqual                           //0x0000(0x0229)
  *                                                                   LinearColor_Green                                 //0x0000(0x0229)
  *                                                                   LinearColor_Gray                                  //0x0000(0x0229)
  *                                                                   LinearColor_GetMin                                //0x0000(0x0229)
  *                                                                   LinearColor_GetMax                                //0x0000(0x0229)
  *                                                                   LinearColor_GetLuminance                          //0x0000(0x0229)
  *                                                                   LinearColor_Distance                              //0x0000(0x0229)
  *                                                                   LinearColor_Desaturated                           //0x0000(0x0229)
  *                                                                   LinearColor_Blue                                  //0x0000(0x0229)
  *                                                                   LinearColor_Black                                 //0x0000(0x0229)
  *                                                                   LessLess_VectorRotator                            //0x0000(0x0229)
  *                                                                   LessEqual_TimespanTimespan                        //0x0000(0x0229)
  *                                                                   LessEqual_IntInt                                  //0x0000(0x0229)
  *                                                                   LessEqual_Int64Int64                              //0x0000(0x0229)
  *                                                                   LessEqual_FloatFloat                              //0x0000(0x0229)
  *                                                                   LessEqual_DateTimeDateTime                        //0x0000(0x0229)
  *                                                                   LessEqual_ByteByte                                //0x0000(0x0229)
  *                                                                   Less_TimespanTimespan                             //0x0000(0x0229)
  *                                                                   Less_IntInt                                       //0x0000(0x0229)
  *                                                                   Less_Int64Int64                                   //0x0000(0x0229)
  *                                                                   Less_FloatFloat                                   //0x0000(0x0229)
  *                                                                   Less_DateTimeDateTime                             //0x0000(0x0229)
  *                                                                   Less_ByteByte                                     //0x0000(0x0229)
  *                                                                   Lerp                                              //0x0000(0x0229)
  *                                                                   IsZero2D                                          //0x0000(0x0229)
  *                                                                   IsPointInBoxWithTransform                         //0x0000(0x0229)
  *                                                                   IsPointInBox                                      //0x0000(0x0229)
  *                                                                   IsNearlyZero2D                                    //0x0000(0x0229)
  *                                                                   IsMorning                                         //0x0000(0x0229)
  *                                                                   IsLeapYear                                        //0x0000(0x0229)
  *                                                                   IsAfternoon                                       //0x0000(0x0229)
  *                                                                   InvertTransform                                   //0x0000(0x0229)
  *                                                                   InverseTransformRotation                          //0x0000(0x0229)
  *                                                                   InverseTransformLocation                          //0x0000(0x0229)
  *                                                                   InverseTransformDirection                         //0x0000(0x0229)
  *                                                                   InRange_IntInt                                    //0x0000(0x0229)
  *                                                                   InRange_Int64Int64                                //0x0000(0x0229)
  *                                                                   InRange_FloatFloat                                //0x0000(0x0229)
  *                                                                   Hypotenuse                                        //0x0000(0x0229)
  *                                                                   HSVToRGBLinear                                    //0x0000(0x0229)
  *                                                                   HSVToRGB_Vector                                   //0x0000(0x0229)
  *                                                                   HSVToRGB                                          //0x0000(0x0229)
  *                                                                   GridSnap_Float                                    //0x0000(0x0229)
  *                                                                   GreaterGreater_VectorRotator                      //0x0000(0x0229)
  *                                                                   GreaterEqual_TimespanTimespan                     //0x0000(0x0229)
  *                                                                   GreaterEqual_IntInt                               //0x0000(0x0229)
  *                                                                   GreaterEqual_Int64Int64                           //0x0000(0x0229)
  *                                                                   GreaterEqual_FloatFloat                           //0x0000(0x0229)
  *                                                                   GreaterEqual_DateTimeDateTime                     //0x0000(0x0229)
  *                                                                   GreaterEqual_ByteByte                             //0x0000(0x0229)
  *                                                                   Greater_TimespanTimespan                          //0x0000(0x0229)
  *                                                                   Greater_IntInt                                    //0x0000(0x0229)
  *                                                                   Greater_Int64Int64                                //0x0000(0x0229)
  *                                                                   Greater_FloatFloat                                //0x0000(0x0229)
  *                                                                   Greater_DateTimeDateTime                          //0x0000(0x0229)
  *                                                                   Greater_ByteByte                                  //0x0000(0x0229)
  *                                                                   GetYear                                           //0x0000(0x0229)
  *                                                                   GetYawPitchFromVector                             //0x0000(0x0229)
  *                                                                   GetVectorArrayAverage                             //0x0000(0x0229)
  *                                                                   GetUpVector                                       //0x0000(0x0229)
  *                                                                   GetTotalSeconds                                   //0x0000(0x0229)
  *                                                                   GetTotalMinutes                                   //0x0000(0x0229)
  *                                                                   GetTotalMilliseconds                              //0x0000(0x0229)
  *                                                                   GetTotalHours                                     //0x0000(0x0229)
  *                                                                   GetTotalDays                                      //0x0000(0x0229)
  *                                                                   GetTimeOfDay                                      //0x0000(0x0229)
  *                                                                   GetTAU                                            //0x0000(0x0229)
  *                                                                   GetSlopeDegreeAngles                              //0x0000(0x0229)
  *                                                                   GetSeconds                                        //0x0000(0x0229)
  *                                                                   GetSecond                                         //0x0000(0x0229)
  *                                                                   GetRotated2D                                      //0x0000(0x0229)
  *                                                                   GetRightVector                                    //0x0000(0x0229)
  *                                                                   GetReflectionVector                               //0x0000(0x0229)
  *                                                                   GetPointDistanceToSegment                         //0x0000(0x0229)
  *                                                                   GetPointDistanceToLine                            //0x0000(0x0229)
  *                                                                   GetPI                                             //0x0000(0x0229)
  *                                                                   GetMonth                                          //0x0000(0x0229)
  *                                                                   GetMinutes                                        //0x0000(0x0229)
  *                                                                   GetMinute                                         //0x0000(0x0229)
  *                                                                   GetMinElement                                     //0x0000(0x0229)
  *                                                                   GetMin2D                                          //0x0000(0x0229)
  *                                                                   GetMilliseconds                                   //0x0000(0x0229)
  *                                                                   GetMillisecond                                    //0x0000(0x0229)
  *                                                                   GetMaxElement                                     //0x0000(0x0229)
  *                                                                   GetMax2D                                          //0x0000(0x0229)
  *                                                                   GetHours                                          //0x0000(0x0229)
  *                                                                   GetHour12                                         //0x0000(0x0229)
  *                                                                   GetHour                                           //0x0000(0x0229)
  *                                                                   GetForwardVector                                  //0x0000(0x0229)
  *                                                                   GetDuration                                       //0x0000(0x0229)
  *                                                                   GetDirectionUnitVector                            //0x0000(0x0229)
  *                                                                   GetDays                                           //0x0000(0x0229)
  *                                                                   GetDayOfYear                                      //0x0000(0x0229)
  *                                                                   GetDay                                            //0x0000(0x0229)
  *                                                                   GetDate                                           //0x0000(0x0229)
  *                                                                   GetAzimuthAndElevation                            //0x0000(0x0229)
  *                                                                   GetAxes                                           //0x0000(0x0229)
  *                                                                   GetAbsMax2D                                       //0x0000(0x0229)
  *                                                                   GetAbs2D                                          //0x0000(0x0229)
  *                                                                   FTruncVector                                      //0x0000(0x0229)
  *                                                                   FTrunc64                                          //0x0000(0x0229)
  *                                                                   FTrunc                                            //0x0000(0x0229)
  *                                                                   FromSeconds                                       //0x0000(0x0229)
  *                                                                   FromMinutes                                       //0x0000(0x0229)
  *                                                                   FromMilliseconds                                  //0x0000(0x0229)
  *                                                                   FromHours                                         //0x0000(0x0229)
  *                                                                   FromDays                                          //0x0000(0x0229)
  *                                                                   Fraction                                          //0x0000(0x0229)
  *                                                                   FMod                                              //0x0000(0x0229)
  *                                                                   FMin                                              //0x0000(0x0229)
  *                                                                   FMax                                              //0x0000(0x0229)
  *                                                                   FloatSpringInterp                                 //0x0000(0x0229)
  *                                                                   FixedTurn                                         //0x0000(0x0229)
  *                                                                   FInterpTo_Constant                                //0x0000(0x0229)
  *                                                                   FInterpTo                                         //0x0000(0x0229)
  *                                                                   FInterpEaseInOut                                  //0x0000(0x0229)
  *                                                                   FindNearestPointsOnLineSegments                   //0x0000(0x0229)
  *                                                                   FindLookAtRotation                                //0x0000(0x0229)
  *                                                                   FindClosestPointOnSegment                         //0x0000(0x0229)
  *                                                                   FindClosestPointOnLine                            //0x0000(0x0229)
  *                                                                   FFloor64                                          //0x0000(0x0229)
  *                                                                   FFloor                                            //0x0000(0x0229)
  *                                                                   FClamp                                            //0x0000(0x0229)
  *                                                                   FCeil64                                           //0x0000(0x0229)
  *                                                                   FCeil                                             //0x0000(0x0229)
  *                                                                   Exp                                               //0x0000(0x0229)
  *                                                                   EqualExactly_VectorVector                         //0x0000(0x0229)
  *                                                                   EqualExactly_Vector4Vector4                       //0x0000(0x0229)
  *                                                                   EqualExactly_Vector2DVector2D                     //0x0000(0x0229)
  *                                                                   EqualEqual_VectorVector                           //0x0000(0x0229)
  *                                                                   EqualEqual_Vector4Vector4                         //0x0000(0x0229)
  *                                                                   EqualEqual_Vector2DVector2D                       //0x0000(0x0229)
  *                                                                   EqualEqual_TransformTransform                     //0x0000(0x0229)
  *                                                                   EqualEqual_TimespanTimespan                       //0x0000(0x0229)
  *                                                                   EqualEqual_RotatorRotator                         //0x0000(0x0229)
  *                                                                   EqualEqual_QuatQuat                               //0x0000(0x0229)
  A*                                                                  EqualEqual_ObjectObject                           //0x0000(0x0229)
  *                                                                   EqualEqual_NameName                               //0x0000(0x0229)
  *                                                                   EqualEqual_MatrixMatrix                           //0x0000(0x0229)
  *                                                                   EqualEqual_LinearColorLinearColor                 //0x0000(0x0229)
  *                                                                   EqualEqual_IntInt                                 //0x0000(0x0229)
  *                                                                   EqualEqual_Int64Int64                             //0x0000(0x0229)
  *                                                                   EqualEqual_FloatFloat                             //0x0000(0x0229)
  *                                                                   EqualEqual_DateTimeDateTime                       //0x0000(0x0229)
  A*                                                                  EqualEqual_ClassClass                             //0x0000(0x0229)
  *                                                                   EqualEqual_ByteByte                               //0x0000(0x0229)
  *                                                                   EqualEqual_BoolBool                               //0x0000(0x0229)
  *                                                                   Ease                                              //0x0000(0x0229)
  *                                                                   DynamicWeightedMovingAverage_FVector              //0x0000(0x0229)
  *                                                                   DynamicWeightedMovingAverage_FRotator             //0x0000(0x0229)
  *                                                                   DynamicWeightedMovingAverage_Float                //0x0000(0x0229)
  *                                                                   DotProduct2D                                      //0x0000(0x0229)
  *                                                                   Dot_VectorVector                                  //0x0000(0x0229)
  *                                                                   Divide_VectorVector                               //0x0000(0x0229)
  *                                                                   Divide_VectorInt                                  //0x0000(0x0229)
  *                                                                   Divide_VectorFloat                                //0x0000(0x0229)
  *                                                                   Divide_Vector4Vector4                             //0x0000(0x0229)
  *                                                                   Divide_Vector2DVector2D                           //0x0000(0x0229)
  *                                                                   Divide_Vector2DFloat                              //0x0000(0x0229)
  *                                                                   Divide_TimespanFloat                              //0x0000(0x0229)
  *                                                                   Divide_LinearColorLinearColor                     //0x0000(0x0229)
  *                                                                   Divide_IntInt                                     //0x0000(0x0229)
  *                                                                   Divide_Int64Int64                                 //0x0000(0x0229)
  *                                                                   Divide_FloatFloat                                 //0x0000(0x0229)
  *                                                                   Divide_ByteByte                                   //0x0000(0x0229)
  *                                                                   DistanceSquared2D                                 //0x0000(0x0229)
  *                                                                   Distance2D                                        //0x0000(0x0229)
  *                                                                   DegTan                                            //0x0000(0x0229)
  *                                                                   DegSin                                            //0x0000(0x0229)
  *                                                                   DegreesToRadians                                  //0x0000(0x0229)
  *                                                                   DegCos                                            //0x0000(0x0229)
  *                                                                   DegAtan2                                          //0x0000(0x0229)
  *                                                                   DegAtan                                           //0x0000(0x0229)
  *                                                                   DegAsin                                           //0x0000(0x0229)
  *                                                                   DegAcos                                           //0x0000(0x0229)
  *                                                                   DaysInYear                                        //0x0000(0x0229)
  *                                                                   DaysInMonth                                       //0x0000(0x0229)
  *                                                                   DateTimeMinValue                                  //0x0000(0x0229)
  *                                                                   DateTimeMaxValue                                  //0x0000(0x0229)
  *                                                                   DateTimeFromString                                //0x0000(0x0229)
  *                                                                   DateTimeFromIsoString                             //0x0000(0x0229)
  *                                                                   CrossProduct2D                                    //0x0000(0x0229)
  *                                                                   Cross_VectorVector                                //0x0000(0x0229)
  *                                                                   CreateVectorFromYawPitch                          //0x0000(0x0229)
  *                                                                   Cos                                               //0x0000(0x0229)
  *                                                                   ConvertTransformToRelative                        //0x0000(0x0229)
  *                                                                   Conv_VectorToVector2D                             //0x0000(0x0229)
  *                                                                   Conv_VectorToTransform                            //0x0000(0x0229)
  *                                                                   Conv_VectorToRotator                              //0x0000(0x0229)
  *                                                                   Conv_VectorToQuaterion                            //0x0000(0x0229)
  *                                                                   Conv_VectorToLinearColor                          //0x0000(0x0229)
  *                                                                   Conv_Vector4ToVector                              //0x0000(0x0229)
  *                                                                   Conv_Vector4ToRotator                             //0x0000(0x0229)
  *                                                                   Conv_Vector4ToQuaterion                           //0x0000(0x0229)
  *                                                                   Conv_Vector2DToVector                             //0x0000(0x0229)
  *                                                                   Conv_Vector2DToIntPoint                           //0x0000(0x0229)
  *                                                                   Conv_TransformToMatrix                            //0x0000(0x0229)
  *                                                                   Conv_RotatorToVector                              //0x0000(0x0229)
  *                                                                   Conv_RotatorToTransform                           //0x0000(0x0229)
  *                                                                   Conv_MatrixToTransform                            //0x0000(0x0229)
  *                                                                   Conv_MatrixToRotator                              //0x0000(0x0229)
  *                                                                   Conv_LinearColorToVector                          //0x0000(0x0229)
  *                                                                   Conv_LinearColorToColor                           //0x0000(0x0229)
  *                                                                   Conv_IntVectorToVector                            //0x0000(0x0229)
  *                                                                   Conv_IntToIntVector                               //0x0000(0x0229)
  *                                                                   Conv_IntToInt64                                   //0x0000(0x0229)
  *                                                                   Conv_IntToFloat                                   //0x0000(0x0229)
  *                                                                   Conv_IntToByte                                    //0x0000(0x0229)
  *                                                                   Conv_IntToBool                                    //0x0000(0x0229)
  *                                                                   Conv_FloatToVector                                //0x0000(0x0229)
  *                                                                   Conv_FloatToLinearColor                           //0x0000(0x0229)
  *                                                                   Conv_ColorToLinearColor                           //0x0000(0x0229)
  *                                                                   Conv_ByteToInt                                    //0x0000(0x0229)
  *                                                                   Conv_ByteToFloat                                  //0x0000(0x0229)
  *                                                                   Conv_BoolToInt                                    //0x0000(0x0229)
  *                                                                   Conv_BoolToFloat                                  //0x0000(0x0229)
  *                                                                   Conv_BoolToByte                                   //0x0000(0x0229)
  *                                                                   ComposeTransforms                                 //0x0000(0x0229)
  *                                                                   ComposeRotators                                   //0x0000(0x0229)
  TestClass*                                                          ClassIsChildOf                                    //0x0000(0x0229)
  *                                                                   ClampVectorSize                                   //0x0000(0x0229)
  *                                                                   ClampInt64                                        //0x0000(0x0229)
  *                                                                   ClampAxis                                         //0x0000(0x0229)
  *                                                                   ClampAxes2D                                       //0x0000(0x0229)
  *                                                                   ClampAngle                                        //0x0000(0x0229)
  *                                                                   Clamp                                             //0x0000(0x0229)
  *                                                                   CInterpTo                                         //0x0000(0x0229)
  *                                                                   BreakVector4                                      //0x0000(0x0229)
  *                                                                   BreakVector2D                                     //0x0000(0x0229)
  *                                                                   BreakVector                                       //0x0000(0x0229)
  *                                                                   BreakTransform                                    //0x0000(0x0229)
  *                                                                   BreakTimespan2                                    //0x0000(0x0229)
  *                                                                   BreakTimespan                                     //0x0000(0x0229)
  *                                                                   BreakRotIntoAxes                                  //0x0000(0x0229)
  *                                                                   BreakRotator                                      //0x0000(0x0229)
  *                                                                   BreakRandomStream                                 //0x0000(0x0229)
  *                                                                   BreakQualifiedFrameTime                           //0x0000(0x0229)
  *                                                                   BreakFrameRate                                    //0x0000(0x0229)
  *                                                                   BreakDateTime                                     //0x0000(0x0229)
  *                                                                   BreakColor                                        //0x0000(0x0229)
  *                                                                   BooleanXOR                                        //0x0000(0x0229)
  *                                                                   BooleanOR                                         //0x0000(0x0229)
  *                                                                   BooleanNOR                                        //0x0000(0x0229)
  *                                                                   BooleanNAND                                       //0x0000(0x0229)
  *                                                                   BooleanAND                                        //0x0000(0x0229)
  *                                                                   BMin                                              //0x0000(0x0229)
  *                                                                   BMax                                              //0x0000(0x0229)
  *                                                                   Atan2                                             //0x0000(0x0229)
  *                                                                   Atan                                              //0x0000(0x0229)
  *                                                                   Asin                                              //0x0000(0x0229)
  *                                                                   And_IntInt                                        //0x0000(0x0229)
  *                                                                   And_Int64Int64                                    //0x0000(0x0229)
  *                                                                   Add_VectorVector                                  //0x0000(0x0229)
  *                                                                   Add_VectorInt                                     //0x0000(0x0229)
  *                                                                   Add_VectorFloat                                   //0x0000(0x0229)
  *                                                                   Add_Vector4Vector4                                //0x0000(0x0229)
  *                                                                   Add_Vector2DVector2D                              //0x0000(0x0229)
  *                                                                   Add_Vector2DFloat                                 //0x0000(0x0229)
  *                                                                   Add_TimespanTimespan                              //0x0000(0x0229)
  *                                                                   Add_QuatQuat                                      //0x0000(0x0229)
  *                                                                   Add_MatrixMatrix                                  //0x0000(0x0229)
  *                                                                   Add_LinearColorLinearColor                        //0x0000(0x0229)
  *                                                                   Add_IntInt                                        //0x0000(0x0229)
  *                                                                   Add_Int64Int64                                    //0x0000(0x0229)
  *                                                                   Add_FloatFloat                                    //0x0000(0x0229)
  *                                                                   Add_DateTimeTimespan                              //0x0000(0x0229)
  *                                                                   Add_DateTimeDateTime                              //0x0000(0x0229)
  *                                                                   Add_ByteByte                                      //0x0000(0x0229)
  *                                                                   Acos                                              //0x0000(0x0229)
  *                                                                   Abs_Int64                                         //0x0000(0x0229)
  *                                                                   Abs_Int                                           //0x0000(0x0229)
  *                                                                   Abs                                               //0x0000(0x0229)
};


class KismetNodeHelperLibrary : public BlueprintFunctionLibrary
{
  *                                                                   MarkBit                                           //0x0000(0x0229)
  *                                                                   HasUnmarkedBit                                    //0x0000(0x0229)
  *                                                                   HasMarkedBit                                      //0x0000(0x0229)
  Enum*                                                               GetValidValue                                     //0x0000(0x0229)
  *                                                                   GetUnmarkedBit                                    //0x0000(0x0229)
  *                                                                   GetRandomUnmarkedBit                              //0x0000(0x0229)
  *                                                                   GetFirstUnmarkedBit                               //0x0000(0x0229)
  Enum*                                                               GetEnumeratorValueFromIndex                       //0x0000(0x0229)
  Enum*                                                               GetEnumeratorUserFriendlyName                     //0x0000(0x0229)
  Enum*                                                               GetEnumeratorName                                 //0x0000(0x0229)
  *                                                                   ClearBit                                          //0x0000(0x0229)
  *                                                                   ClearAllBits                                      //0x0000(0x0229)
  *                                                                   BitIsMarked                                       //0x0000(0x0229)
};


class KismetRenderingLibrary : public BlueprintFunctionLibrary
{
  PrimitiveComponent*                                                 SetCastInsetShadowForAllAttachments               //0x0000(0x0229)
  RenderTarget*                                                       RenderTargetCreateStaticTexture2DEditorOnly       //0x0000(0x0229)
  TextureRenderTarget*                                                ReleaseRenderTarget2D                             //0x0000(0x0229)
  WorldContextObject*                                                 ReadRenderTargetUV                                //0x0000(0x0229)
  WorldContextObject*                                                 ReadRenderTargetRawUV                             //0x0000(0x0229)
  WorldContextObject*                                                 ReadRenderTargetRawPixel                          //0x0000(0x0229)
  WorldContextObject*                                                 ReadRenderTargetPixel                             //0x0000(0x0229)
  *                                                                   MakeSkinWeightInfo                                //0x0000(0x0229)
  WorldContextObject*                                                 ImportFileAsTexture2D                             //0x0000(0x0229)
  WorldContextObject*                                                 ImportBufferAsTexture2D                           //0x0000(0x0229)
  WorldContextObject*                                                 ExportTexture2D                                   //0x0000(0x0229)
  WorldContextObject*                                                 ExportRenderTarget                                //0x0000(0x0229)
  WorldContextObject*                                                 EndDrawCanvasToRenderTarget                       //0x0000(0x0229)
  WorldContextObject*                                                 DrawMaterialToRenderTarget                        //0x0000(0x0229)
  WorldContextObject*                                                 CreateRenderTarget2D                              //0x0000(0x0229)
  WorldContextObject*                                                 ConvertRenderTargetToTexture2DEditorOnly          //0x0000(0x0229)
  WorldContextObject*                                                 ClearRenderTarget2D                               //0x0000(0x0229)
  *                                                                   BreakSkinWeightInfo                               //0x0000(0x0229)
  WorldContextObject*                                                 BeginDrawCanvasToRenderTarget                     //0x0000(0x0229)
};


class KismetStringLibrary : public BlueprintFunctionLibrary
{
  *                                                                   TrimTrailing                                      //0x0000(0x0229)
  *                                                                   Trim                                              //0x0000(0x0229)
  *                                                                   ToUpper                                           //0x0000(0x0229)
  *                                                                   ToLower                                           //0x0000(0x0229)
  *                                                                   TimeSecondsToString                               //0x0000(0x0229)
  *                                                                   StartsWith                                        //0x0000(0x0229)
  *                                                                   Split                                             //0x0000(0x0229)
  *                                                                   RightPad                                          //0x0000(0x0229)
  *                                                                   RightChop                                         //0x0000(0x0229)
  *                                                                   Right                                             //0x0000(0x0229)
  *                                                                   Reverse                                           //0x0000(0x0229)
  *                                                                   ReplaceInline                                     //0x0000(0x0229)
  *                                                                   Replace                                           //0x0000(0x0229)
  *                                                                   ParseIntoArray                                    //0x0000(0x0229)
  *                                                                   NotEqual_StrStr                                   //0x0000(0x0229)
  *                                                                   NotEqual_StriStri                                 //0x0000(0x0229)
  *                                                                   Mid                                               //0x0000(0x0229)
  *                                                                   MatchesWildcard                                   //0x0000(0x0229)
  *                                                                   Len                                               //0x0000(0x0229)
  *                                                                   LeftPad                                           //0x0000(0x0229)
  *                                                                   LeftChop                                          //0x0000(0x0229)
  *                                                                   Left                                              //0x0000(0x0229)
  *                                                                   JoinStringArray                                   //0x0000(0x0229)
  *                                                                   IsNumeric                                         //0x0000(0x0229)
  *                                                                   GetSubstring                                      //0x0000(0x0229)
  *                                                                   GetCharacterAsNumber                              //0x0000(0x0229)
  *                                                                   GetCharacterArrayFromString                       //0x0000(0x0229)
  *                                                                   FindSubstring                                     //0x0000(0x0229)
  *                                                                   EqualEqual_StrStr                                 //0x0000(0x0229)
  *                                                                   EqualEqual_StriStri                               //0x0000(0x0229)
  *                                                                   EndsWith                                          //0x0000(0x0229)
  *                                                                   CullArray                                         //0x0000(0x0229)
  *                                                                   Conv_VectorToString                               //0x0000(0x0229)
  *                                                                   Conv_Vector2dToString                             //0x0000(0x0229)
  *                                                                   Conv_TransformToString                            //0x0000(0x0229)
  *                                                                   Conv_StringToVector2D                             //0x0000(0x0229)
  *                                                                   Conv_StringToVector                               //0x0000(0x0229)
  *                                                                   Conv_StringToRotator                              //0x0000(0x0229)
  *                                                                   Conv_StringToName                                 //0x0000(0x0229)
  *                                                                   Conv_StringToInt                                  //0x0000(0x0229)
  *                                                                   Conv_StringToFloat                                //0x0000(0x0229)
  *                                                                   Conv_StringToColor                                //0x0000(0x0229)
  *                                                                   Conv_RotatorToString                              //0x0000(0x0229)
  InObj*                                                              Conv_ObjectToString                               //0x0000(0x0229)
  *                                                                   Conv_NameToString                                 //0x0000(0x0229)
  *                                                                   Conv_MatrixToString                               //0x0000(0x0229)
  *                                                                   Conv_IntVectorToString                            //0x0000(0x0229)
  *                                                                   Conv_IntToString                                  //0x0000(0x0229)
  *                                                                   Conv_FloatToString                                //0x0000(0x0229)
  *                                                                   Conv_ColorToString                                //0x0000(0x0229)
  *                                                                   Conv_ByteToString                                 //0x0000(0x0229)
  *                                                                   Conv_BoolToString                                 //0x0000(0x0229)
  *                                                                   Contains                                          //0x0000(0x0229)
  *                                                                   Concat_StrStr                                     //0x0000(0x0229)
  *                                                                   BuildString_Vector2d                              //0x0000(0x0229)
  *                                                                   BuildString_Vector                                //0x0000(0x0229)
  *                                                                   BuildString_Rotator                               //0x0000(0x0229)
  InObj*                                                              BuildString_Object                                //0x0000(0x0229)
  *                                                                   BuildString_Name                                  //0x0000(0x0229)
  *                                                                   BuildString_IntVector                             //0x0000(0x0229)
  *                                                                   BuildString_Int                                   //0x0000(0x0229)
  *                                                                   BuildString_Float                                 //0x0000(0x0229)
  *                                                                   BuildString_Color                                 //0x0000(0x0229)
  *                                                                   BuildString_Bool                                  //0x0000(0x0229)
};


class KismetStringTableLibrary : public BlueprintFunctionLibrary
{
  *                                                                   IsRegisteredTableId                               //0x0000(0x0229)
  *                                                                   IsRegisteredTableEntry                            //0x0000(0x0229)
  *                                                                   GetTableNamespace                                 //0x0000(0x0229)
  *                                                                   GetTableEntrySourceString                         //0x0000(0x0229)
  *                                                                   GetTableEntryMetaData                             //0x0000(0x0229)
  *                                                                   GetRegisteredStringTables                         //0x0000(0x0229)
  *                                                                   GetMetaDataIdsFromStringTableEntry                //0x0000(0x0229)
  *                                                                   GetKeysFromStringTable                            //0x0000(0x0229)
};


class KismetSystemLibrary : public BlueprintFunctionLibrary
{
  *                                                                   UnregisterForRemoteNotifications                  //0x0000(0x0229)
  *                                                                   UnloadPrimaryAssetList                            //0x0000(0x0229)
  *                                                                   UnloadPrimaryAsset                                //0x0000(0x0229)
  Object*                                                             TransactObject                                    //0x0000(0x0229)
  *                                                                   StackTrace                                        //0x0000(0x0229)
  WorldContextObject*                                                 SphereTraceSingleForObjects                       //0x0000(0x0229)
  WorldContextObject*                                                 SphereTraceSingleByProfile                        //0x0000(0x0229)
  WorldContextObject*                                                 SphereTraceSingle                                 //0x0000(0x0229)
  WorldContextObject*                                                 SphereTraceMultiForObjects                        //0x0000(0x0229)
  WorldContextObject*                                                 SphereTraceMultiByProfile                         //0x0000(0x0229)
  WorldContextObject*                                                 SphereTraceMulti                                  //0x0000(0x0229)
  WorldContextObject*                                                 SphereOverlapComponents                           //0x0000(0x0229)
  WorldContextObject*                                                 SphereOverlapActors                               //0x0000(0x0229)
  Object*                                                             SnapshotObject                                    //0x0000(0x0229)
  *                                                                   ShowPlatformSpecificLeaderboardScreen             //0x0000(0x0229)
  SpecificPlayer*                                                     ShowPlatformSpecificAchievementsScreen            //0x0000(0x0229)
  *                                                                   ShowInterstitialAd                                //0x0000(0x0229)
  *                                                                   ShowAdBanner                                      //0x0000(0x0229)
  *                                                                   SetWindowTitle                                    //0x0000(0x0229)
  *                                                                   SetVolumeButtonsHandledBySystem                   //0x0000(0x0229)
  Object*                                                             SetVectorPropertyByName                           //0x0000(0x0229)
  *                                                                   SetUserActivity                                   //0x0000(0x0229)
  Object*                                                             SetTransformPropertyByName                        //0x0000(0x0229)
  Object*                                                             SetTextPropertyByName                             //0x0000(0x0229)
  WorldContextObject*                                                 SetSuppressViewportTransitionMessage              //0x0000(0x0229)
  Object*                                                             SetStructurePropertyByName                        //0x0000(0x0229)
  Object*                                                             SetStringPropertyByName                           //0x0000(0x0229)
  Object*                                                             SetSoftObjectPropertyByName                       //0x0000(0x0229)
  Object*                                                             SetSoftClassPropertyByName                        //0x0000(0x0229)
  Object*                                                             SetRotatorPropertyByName                          //0x0000(0x0229)
  Object*                                                             SetObjectPropertyByName                           //0x0000(0x0229)
  Object*                                                             SetNamePropertyByName                             //0x0000(0x0229)
  Object*                                                             SetLinearColorPropertyByName                      //0x0000(0x0229)
  Object*                                                             SetIntPropertyByName                              //0x0000(0x0229)
  Object*                                                             SetInterfacePropertyByName                        //0x0000(0x0229)
  Object*                                                             SetInt64PropertyByName                            //0x0000(0x0229)
  Object*                                                             SetFloatPropertyByName                            //0x0000(0x0229)
  Object*                                                             SetCollisionProfileNameProperty                   //0x0000(0x0229)
  Object*                                                             SetClassPropertyByName                            //0x0000(0x0229)
  Object*                                                             SetBytePropertyByName                             //0x0000(0x0229)
  Object*                                                             SetBoolPropertyByName                             //0x0000(0x0229)
  WorldContextObject*                                                 RetriggerableDelay                                //0x0000(0x0229)
  *                                                                   ResetGamepadAssignmentToController                //0x0000(0x0229)
  *                                                                   ResetGamepadAssignments                           //0x0000(0x0229)
  *                                                                   RegisterForRemoteNotifications                    //0x0000(0x0229)
  WorldContextObject*                                                 QuitGame                                          //0x0000(0x0229)
  *                                                                   PrintWarning                                      //0x0000(0x0229)
  WorldContextObject*                                                 PrintText                                         //0x0000(0x0229)
  WorldContextObject*                                                 PrintString                                       //0x0000(0x0229)
  Loaded*                                                             OnAssetLoaded__DelegateSignature                  //0x0000(0x0229)
  Loaded*                                                             OnAssetClassLoaded__DelegateSignature             //0x0000(0x0229)
  A*                                                                  NotEqual_SoftObjectReference                      //0x0000(0x0229)
  A*                                                                  NotEqual_SoftClassReference                       //0x0000(0x0229)
  *                                                                   NotEqual_PrimaryAssetType                         //0x0000(0x0229)
  *                                                                   NotEqual_PrimaryAssetId                           //0x0000(0x0229)
  *                                                                   NormalizeFilename                                 //0x0000(0x0229)
  Component*                                                          MoveComponentTo                                   //0x0000(0x0229)
  *                                                                   MakeSoftObjectPath                                //0x0000(0x0229)
  *                                                                   MakeSoftClassPath                                 //0x0000(0x0229)
  *                                                                   MakeLiteralText                                   //0x0000(0x0229)
  *                                                                   MakeLiteralString                                 //0x0000(0x0229)
  *                                                                   MakeLiteralName                                   //0x0000(0x0229)
  *                                                                   MakeLiteralInt                                    //0x0000(0x0229)
  *                                                                   MakeLiteralFloat                                  //0x0000(0x0229)
  *                                                                   MakeLiteralByte                                   //0x0000(0x0229)
  *                                                                   MakeLiteralBool                                   //0x0000(0x0229)
  *                                                                   LoadInterstitialAd                                //0x0000(0x0229)
  AssetClass*                                                         LoadClassAsset_Blocking                           //0x0000(0x0229)
  WorldContextObject*                                                 LoadAssetClass                                    //0x0000(0x0229)
  Asset*                                                              LoadAsset_Blocking                                //0x0000(0x0229)
  WorldContextObject*                                                 LoadAsset                                         //0x0000(0x0229)
  WorldContextObject*                                                 LineTraceSingleForObjects                         //0x0000(0x0229)
  WorldContextObject*                                                 LineTraceSingleByProfile                          //0x0000(0x0229)
  WorldContextObject*                                                 LineTraceSingle                                   //0x0000(0x0229)
  WorldContextObject*                                                 LineTraceMultiForObjects                          //0x0000(0x0229)
  WorldContextObject*                                                 LineTraceMultiByProfile                           //0x0000(0x0229)
  WorldContextObject*                                                 LineTraceMulti                                    //0x0000(0x0229)
  *                                                                   LaunchURL                                         //0x0000(0x0229)
  WorldContextObject*                                                 K2_UnPauseTimerHandle                             //0x0000(0x0229)
  Delegate*                                                           K2_UnPauseTimerDelegate                           //0x0000(0x0229)
  Object*                                                             K2_UnPauseTimer                                   //0x0000(0x0229)
  WorldContextObject*                                                 K2_TimerExistsHandle                              //0x0000(0x0229)
  Delegate*                                                           K2_TimerExistsDelegate                            //0x0000(0x0229)
  Object*                                                             K2_TimerExists                                    //0x0000(0x0229)
  Delegate*                                                           K2_SetTimerDelegate                               //0x0000(0x0229)
  Object*                                                             K2_SetTimer                                       //0x0000(0x0229)
  WorldContextObject*                                                 K2_PauseTimerHandle                               //0x0000(0x0229)
  Delegate*                                                           K2_PauseTimerDelegate                             //0x0000(0x0229)
  Object*                                                             K2_PauseTimer                                     //0x0000(0x0229)
  *                                                                   K2_IsValidTimerHandle                             //0x0000(0x0229)
  WorldContextObject*                                                 K2_IsTimerPausedHandle                            //0x0000(0x0229)
  Delegate*                                                           K2_IsTimerPausedDelegate                          //0x0000(0x0229)
  Object*                                                             K2_IsTimerPaused                                  //0x0000(0x0229)
  WorldContextObject*                                                 K2_IsTimerActiveHandle                            //0x0000(0x0229)
  Delegate*                                                           K2_IsTimerActiveDelegate                          //0x0000(0x0229)
  Object*                                                             K2_IsTimerActive                                  //0x0000(0x0229)
  *                                                                   K2_InvalidateTimerHandle                          //0x0000(0x0229)
  WorldContextObject*                                                 K2_GetTimerRemainingTimeHandle                    //0x0000(0x0229)
  Delegate*                                                           K2_GetTimerRemainingTimeDelegate                  //0x0000(0x0229)
  Object*                                                             K2_GetTimerRemainingTime                          //0x0000(0x0229)
  WorldContextObject*                                                 K2_GetTimerElapsedTimeHandle                      //0x0000(0x0229)
  Delegate*                                                           K2_GetTimerElapsedTimeDelegate                    //0x0000(0x0229)
  Object*                                                             K2_GetTimerElapsedTime                            //0x0000(0x0229)
  WorldContextObject*                                                 K2_ClearTimerHandle                               //0x0000(0x0229)
  Delegate*                                                           K2_ClearTimerDelegate                             //0x0000(0x0229)
  Object*                                                             K2_ClearTimer                                     //0x0000(0x0229)
  WorldContextObject*                                                 K2_ClearAndInvalidateTimerHandle                  //0x0000(0x0229)
  SoftObjectReference*                                                IsValidSoftObjectReference                        //0x0000(0x0229)
  SoftClassReference*                                                 IsValidSoftClassReference                         //0x0000(0x0229)
  *                                                                   IsValidPrimaryAssetType                           //0x0000(0x0229)
  *                                                                   IsValidPrimaryAssetId                             //0x0000(0x0229)
  Class*                                                              IsValidClass                                      //0x0000(0x0229)
  Object*                                                             IsValid                                           //0x0000(0x0229)
  *                                                                   IsUnattended                                      //0x0000(0x0229)
  WorldContextObject*                                                 IsStandalone                                      //0x0000(0x0229)
  WorldContextObject*                                                 IsServer                                          //0x0000(0x0229)
  *                                                                   IsScreensaverEnabled                              //0x0000(0x0229)
  *                                                                   IsPackagedForDistribution                         //0x0000(0x0229)
  SpecificPlayer*                                                     IsLoggedIn                                        //0x0000(0x0229)
  *                                                                   IsInterstitialAdRequested                         //0x0000(0x0229)
  *                                                                   IsInterstitialAdAvailable                         //0x0000(0x0229)
  WorldContextObject*                                                 IsDedicatedServer                                 //0x0000(0x0229)
  *                                                                   IsControllerAssignedToGamepad                     //0x0000(0x0229)
  *                                                                   HideAdBanner                                      //0x0000(0x0229)
  *                                                                   GetVolumeButtonsHandledBySystem                   //0x0000(0x0229)
  *                                                                   GetUniqueDeviceId                                 //0x0000(0x0229)
  *                                                                   GetSupportedFullscreenResolutions                 //0x0000(0x0229)
  ReturnValue*                                                        GetSoftObjectReferenceFromPrimaryAssetId          //0x0000(0x0229)
  ReturnValue*                                                        GetSoftClassReferenceFromPrimaryAssetId           //0x0000(0x0229)
  *                                                                   GetRenderingMaterialQualityLevel                  //0x0000(0x0229)
  *                                                                   GetRenderingDetailMode                            //0x0000(0x0229)
  *                                                                   GetProjectSavedDirectory                          //0x0000(0x0229)
  *                                                                   GetProjectDirectory                               //0x0000(0x0229)
  *                                                                   GetProjectContentDirectory                        //0x0000(0x0229)
  *                                                                   GetPrimaryAssetsWithBundleState                   //0x0000(0x0229)
  *                                                                   GetPrimaryAssetIdList                             //0x0000(0x0229)
  SoftObjectReference*                                                GetPrimaryAssetIdFromSoftObjectReference          //0x0000(0x0229)
  SoftClassReference*                                                 GetPrimaryAssetIdFromSoftClassReference           //0x0000(0x0229)
  Object*                                                             GetPrimaryAssetIdFromObject                       //0x0000(0x0229)
  Class*                                                              GetPrimaryAssetIdFromClass                        //0x0000(0x0229)
  *                                                                   GetPreferredLanguages                             //0x0000(0x0229)
  *                                                                   GetPlatformUserName                               //0x0000(0x0229)
  Object*                                                             GetPathName                                       //0x0000(0x0229)
  Object*                                                             GetOuterObject                                    //0x0000(0x0229)
  Object*                                                             GetObjectName                                     //0x0000(0x0229)
  ReturnValue*                                                        GetObjectFromPrimaryAssetId                       //0x0000(0x0229)
  *                                                                   GetMinYResolutionForUI                            //0x0000(0x0229)
  *                                                                   GetMinYResolutionFor3DView                        //0x0000(0x0229)
  *                                                                   GetLocalCurrencySymbol                            //0x0000(0x0229)
  *                                                                   GetLocalCurrencyCode                              //0x0000(0x0229)
  WorldContextObject*                                                 GetGameTimeInSeconds                              //0x0000(0x0229)
  *                                                                   GetGamepadControllerName                          //0x0000(0x0229)
  *                                                                   GetGameName                                       //0x0000(0x0229)
  *                                                                   GetGameBundleId                                   //0x0000(0x0229)
  *                                                                   GetFrameCount                                     //0x0000(0x0229)
  *                                                                   GetEngineVersion                                  //0x0000(0x0229)
  Object*                                                             GetDisplayName                                    //0x0000(0x0229)
  *                                                                   GetDeviceId                                       //0x0000(0x0229)
  *                                                                   GetDefaultLocale                                  //0x0000(0x0229)
  *                                                                   GetDefaultLanguage                                //0x0000(0x0229)
  *                                                                   GetCurrentBundleState                             //0x0000(0x0229)
  *                                                                   GetConvenientWindowedResolutions                  //0x0000(0x0229)
  *                                                                   GetConsoleVariableIntValue                        //0x0000(0x0229)
  *                                                                   GetConsoleVariableFloatValue                      //0x0000(0x0229)
  *                                                                   GetConsoleVariableBoolValue                       //0x0000(0x0229)
  Component*                                                          GetComponentBounds                                //0x0000(0x0229)
  *                                                                   GetCommandLine                                    //0x0000(0x0229)
  ReturnValue*                                                        GetClassFromPrimaryAssetId                        //0x0000(0x0229)
  Class*                                                              GetClassDisplayName                               //0x0000(0x0229)
  *                                                                   GetAdIDCount                                      //0x0000(0x0229)
  ComponentList*                                                      GetActorListFromComponentList                     //0x0000(0x0229)
  Actor*                                                              GetActorBounds                                    //0x0000(0x0229)
  *                                                                   ForceCloseAdBanner                                //0x0000(0x0229)
  WorldContextObject*                                                 FlushPersistentDebugLines                         //0x0000(0x0229)
  WorldContextObject*                                                 FlushDebugStrings                                 //0x0000(0x0229)
  WorldContextObject*                                                 ExecuteConsoleCommand                             //0x0000(0x0229)
  A*                                                                  EqualEqual_SoftObjectReference                    //0x0000(0x0229)
  A*                                                                  EqualEqual_SoftClassReference                     //0x0000(0x0229)
  *                                                                   EqualEqual_PrimaryAssetType                       //0x0000(0x0229)
  *                                                                   EqualEqual_PrimaryAssetId                         //0x0000(0x0229)
  *                                                                   EndTransaction                                    //0x0000(0x0229)
  WorldContextObject*                                                 DrawDebugString                                   //0x0000(0x0229)
  WorldContextObject*                                                 DrawDebugSphere                                   //0x0000(0x0229)
  WorldContextObject*                                                 DrawDebugPoint                                    //0x0000(0x0229)
  WorldContextObject*                                                 DrawDebugPlane                                    //0x0000(0x0229)
  WorldContextObject*                                                 DrawDebugLine                                     //0x0000(0x0229)
  WorldContextObject*                                                 DrawDebugFrustum                                  //0x0000(0x0229)
  WorldContextObject*                                                 DrawDebugFloatHistoryTransform                    //0x0000(0x0229)
  WorldContextObject*                                                 DrawDebugFloatHistoryLocation                     //0x0000(0x0229)
  WorldContextObject*                                                 DrawDebugCylinder                                 //0x0000(0x0229)
  WorldContextObject*                                                 DrawDebugCoordinateSystem                         //0x0000(0x0229)
  WorldContextObject*                                                 DrawDebugConeInDegrees                            //0x0000(0x0229)
  WorldContextObject*                                                 DrawDebugCone                                     //0x0000(0x0229)
  WorldContextObject*                                                 DrawDebugCircle                                   //0x0000(0x0229)
  WorldContextObject*                                                 DrawDebugCapsule                                  //0x0000(0x0229)
  CameraActor*                                                        DrawDebugCamera                                   //0x0000(0x0229)
  WorldContextObject*                                                 DrawDebugBox                                      //0x0000(0x0229)
  WorldContextObject*                                                 DrawDebugArrow                                    //0x0000(0x0229)
  TestObject*                                                         DoesImplementInterface                            //0x0000(0x0229)
  WorldContextObject*                                                 Delay                                             //0x0000(0x0229)
  ObjectToModify*                                                     CreateCopyForUndoBuffer                           //0x0000(0x0229)
  *                                                                   ConvertToRelativePath                             //0x0000(0x0229)
  *                                                                   ConvertToAbsolutePath                             //0x0000(0x0229)
  ReturnValue*                                                        Conv_SoftObjPathToSoftObjRef                      //0x0000(0x0229)
  SoftObjectReference*                                                Conv_SoftObjectReferenceToString                  //0x0000(0x0229)
  SoftObject*                                                         Conv_SoftObjectReferenceToObject                  //0x0000(0x0229)
  SoftClassReference*                                                 Conv_SoftClassReferenceToString                   //0x0000(0x0229)
  SoftClass*                                                          Conv_SoftClassReferenceToClass                    //0x0000(0x0229)
  ReturnValue*                                                        Conv_SoftClassPathToSoftClassRef                  //0x0000(0x0229)
  *                                                                   Conv_PrimaryAssetTypeToString                     //0x0000(0x0229)
  *                                                                   Conv_PrimaryAssetIdToString                       //0x0000(0x0229)
  Object*                                                             Conv_ObjectToSoftObjectReference                  //0x0000(0x0229)
  Interface*                                                          Conv_InterfaceToObject                            //0x0000(0x0229)
  Class*                                                              Conv_ClassToSoftClassReference                    //0x0000(0x0229)
  *                                                                   ControlScreensaver                                //0x0000(0x0229)
  Component*                                                          ComponentOverlapComponents                        //0x0000(0x0229)
  Component*                                                          ComponentOverlapActors                            //0x0000(0x0229)
  *                                                                   CollectGarbage                                    //0x0000(0x0229)
  WorldContextObject*                                                 CapsuleTraceSingleForObjects                      //0x0000(0x0229)
  WorldContextObject*                                                 CapsuleTraceSingleByProfile                       //0x0000(0x0229)
  WorldContextObject*                                                 CapsuleTraceSingle                                //0x0000(0x0229)
  WorldContextObject*                                                 CapsuleTraceMultiForObjects                       //0x0000(0x0229)
  WorldContextObject*                                                 CapsuleTraceMultiByProfile                        //0x0000(0x0229)
  WorldContextObject*                                                 CapsuleTraceMulti                                 //0x0000(0x0229)
  WorldContextObject*                                                 CapsuleOverlapComponents                          //0x0000(0x0229)
  WorldContextObject*                                                 CapsuleOverlapActors                              //0x0000(0x0229)
  *                                                                   CanLaunchURL                                      //0x0000(0x0229)
  *                                                                   CancelTransaction                                 //0x0000(0x0229)
  *                                                                   BreakSoftObjectPath                               //0x0000(0x0229)
  *                                                                   BreakSoftClassPath                                //0x0000(0x0229)
  WorldContextObject*                                                 BoxTraceSingleForObjects                          //0x0000(0x0229)
  WorldContextObject*                                                 BoxTraceSingleByProfile                           //0x0000(0x0229)
  WorldContextObject*                                                 BoxTraceSingle                                    //0x0000(0x0229)
  WorldContextObject*                                                 BoxTraceMultiForObjects                           //0x0000(0x0229)
  WorldContextObject*                                                 BoxTraceMultiByProfile                            //0x0000(0x0229)
  WorldContextObject*                                                 BoxTraceMulti                                     //0x0000(0x0229)
  WorldContextObject*                                                 BoxOverlapComponents                              //0x0000(0x0229)
  WorldContextObject*                                                 BoxOverlapActors                                  //0x0000(0x0229)
  PrimaryObject*                                                      BeginTransaction                                  //0x0000(0x0229)
  *                                                                   AddFloatHistorySample                             //0x0000(0x0229)
};


class KismetTextLibrary : public BlueprintFunctionLibrary
{
  *                                                                   TextTrimTrailing                                  //0x0000(0x0229)
  *                                                                   TextTrimPrecedingAndTrailing                      //0x0000(0x0229)
  *                                                                   TextTrimPreceding                                 //0x0000(0x0229)
  *                                                                   TextToUpper                                       //0x0000(0x0229)
  *                                                                   TextToLower                                       //0x0000(0x0229)
  *                                                                   TextIsTransient                                   //0x0000(0x0229)
  *                                                                   TextIsFromStringTable                             //0x0000(0x0229)
  *                                                                   TextIsEmpty                                       //0x0000(0x0229)
  *                                                                   TextIsCultureInvariant                            //0x0000(0x0229)
  *                                                                   TextFromStringTable                               //0x0000(0x0229)
  *                                                                   StringTableIdAndKeyFromText                       //0x0000(0x0229)
  *                                                                   PolyglotDataToText                                //0x0000(0x0229)
  *                                                                   NotEqual_TextText                                 //0x0000(0x0229)
  *                                                                   NotEqual_IgnoreCase_TextText                      //0x0000(0x0229)
  *                                                                   IsPolyglotDataValid                               //0x0000(0x0229)
  *                                                                   GetEmptyText                                      //0x0000(0x0229)
  *                                                                   Format                                            //0x0000(0x0229)
  *                                                                   FindTextInLocalizationTable                       //0x0000(0x0229)
  *                                                                   EqualEqual_TextText                               //0x0000(0x0229)
  *                                                                   EqualEqual_IgnoreCase_TextText                    //0x0000(0x0229)
  *                                                                   Conv_VectorToText                                 //0x0000(0x0229)
  *                                                                   Conv_Vector2dToText                               //0x0000(0x0229)
  *                                                                   Conv_TransformToText                              //0x0000(0x0229)
  *                                                                   Conv_TextToString                                 //0x0000(0x0229)
  *                                                                   Conv_StringToText                                 //0x0000(0x0229)
  *                                                                   Conv_RotatorToText                                //0x0000(0x0229)
  InObj*                                                              Conv_ObjectToText                                 //0x0000(0x0229)
  *                                                                   Conv_NameToText                                   //0x0000(0x0229)
  *                                                                   Conv_IntToText                                    //0x0000(0x0229)
  *                                                                   Conv_Int64ToText                                  //0x0000(0x0229)
  *                                                                   Conv_FloatToText                                  //0x0000(0x0229)
  *                                                                   Conv_ColorToText                                  //0x0000(0x0229)
  *                                                                   Conv_ByteToText                                   //0x0000(0x0229)
  *                                                                   Conv_BoolToText                                   //0x0000(0x0229)
  *                                                                   AsTimeZoneTime_DateTime                           //0x0000(0x0229)
  *                                                                   AsTimeZoneDateTime_DateTime                       //0x0000(0x0229)
  *                                                                   AsTimeZoneDate_DateTime                           //0x0000(0x0229)
  *                                                                   AsTimespan_Timespan                               //0x0000(0x0229)
  *                                                                   AsTime_DateTime                                   //0x0000(0x0229)
  *                                                                   AsPercent_Float                                   //0x0000(0x0229)
  *                                                                   AsDateTime_DateTime                               //0x0000(0x0229)
  *                                                                   AsDate_DateTime                                   //0x0000(0x0229)
  *                                                                   AsCurrencyBase                                    //0x0000(0x0229)
  *                                                                   AsCurrency_Integer                                //0x0000(0x0229)
  *                                                                   AsCurrency_Float                                  //0x0000(0x0229)
};


class Layer : public Object
{
  *                                                                   LayerName                                         //0x0028(0x0008)
  *                                                                   bIsVisible                                        //0x0030(0x0001)
  ActorStats*                                                         ActorStats                                        //0x0038(0x0010)
};


class Level : public Object
{
  World*                                                              OwningWorld                                       //0x00B8(0x0008)
  Model*                                                              Model                                             //0x00C0(0x0008)
  ModelComponents*                                                    ModelComponents                                   //0x00C8(0x0010)
  LevelActorContainer*                                                ActorCluster                                      //0x00D8(0x0008)
  *                                                                   NumTextureStreamingUnbuiltComponents              //0x00E0(0x0004)
  *                                                                   NumTextureStreamingDirtyResources                 //0x00E4(0x0004)
  LevelScriptActor*                                                   LevelScriptActor                                  //0x00E8(0x0008)
  NavigationObjectBase*                                               NavListStart                                      //0x00F0(0x0008)
  NavigationObjectBase*                                               NavListEnd                                        //0x00F8(0x0008)
  NavDataChunks*                                                      NavDataChunks                                     //0x0100(0x0010)
  *                                                                   LightmapTotalSize                                 //0x0110(0x0004)
  *                                                                   ShadowmapTotalSize                                //0x0114(0x0004)
  StaticNavigableGeometry*                                            StaticNavigableGeometry                           //0x0118(0x0010)
  StreamingTextureGuids*                                              StreamingTextureGuids                             //0x0128(0x0010)
  Guid*                                                               LevelBuildDataId                                  //0x01D0(0x0010)
  MapBuildDataRegistry*                                               MapBuildData                                      //0x01E0(0x0008)
  IntVector*                                                          LightBuildLevelOffset                             //0x01E8(0x000C)
  *                                                                   bIsLightingScenario                               //0x01F4(0x0001)
  *                                                                   bTextureStreamingRotationChanged                  //0x01F4(0x0001)
  *                                                                   bStaticComponentsRegisteredInStreamingManager     //0x01F4(0x0001)
  *                                                                   bIsVisible                                        //0x01F4(0x0001)
  WorldSettings*                                                      WorldSettings                                     //0x0240(0x0008)
  AssetUserData*                                                      AssetUserData                                     //0x0250(0x0010)
  DestroyedReplicatedStaticActors*                                    DestroyedReplicatedStaticActors                   //0x0270(0x0010)
};


class LevelActorContainer : public Object
{
  Actors*                                                             Actors                                            //0x0028(0x0010)
};


class LevelBounds : public Actor
{
  *                                                                   bAutoUpdateBounds                                 //0x0218(0x0001)
};


class LevelScriptActor : public Actor
{
  *                                                                   bInputEnabled                                     //0x0218(0x0001)
  *                                                                   WorldOriginLocationChanged                        //0x0000(0x0229)
  *                                                                   SetCinematicMode                                  //0x0000(0x0229)
  *                                                                   RemoteEvent                                       //0x0000(0x0229)
  *                                                                   LevelReset                                        //0x0000(0x0229)
};


class LevelScriptBlueprint : public Blueprint
{
};


class World : public Object
{
  Level*                                                              PersistentLevel                                   //0x0030(0x0008)
  NetDriver*                                                          NetDriver                                         //0x0038(0x0008)
  LineBatchComponent*                                                 LineBatcher                                       //0x0040(0x0008)
  LineBatchComponent*                                                 PersistentLineBatcher                             //0x0048(0x0008)
  LineBatchComponent*                                                 ForegroundLineBatcher                             //0x0050(0x0008)
  GameNetworkManager*                                                 NetworkManager                                    //0x0058(0x0008)
  PhysicsCollisionHandler*                                            PhysicsCollisionHandler                           //0x0060(0x0008)
  ExtraReferencedObjects*                                             ExtraReferencedObjects                            //0x0068(0x0010)
  PerModuleDataObjects*                                               PerModuleDataObjects                              //0x0078(0x0010)
  LevelSequenceActors*                                                LevelSequenceActors                               //0x0088(0x0010)
  StreamingLevels*                                                    StreamingLevels                                   //0x0098(0x0010)
  StreamingLevelsToConsider*                                          StreamingLevelsToConsider                         //0x00A8(0x0028)
  *                                                                   StreamingLevelsPrefix                             //0x00D0(0x0010)
  Level*                                                              CurrentLevelPendingVisibility                     //0x00E0(0x0008)
  Level*                                                              CurrentLevelPendingInvisibility                   //0x00E8(0x0008)
  DemoNetDriver*                                                      DemoNetDriver                                     //0x00F0(0x0008)
  ParticleEventManager*                                               MyParticleEventManager                            //0x00F8(0x0008)
  PhysicsVolume*                                                      DefaultPhysicsVolume                              //0x0100(0x0008)
  *                                                                   bAreConstraintsDirty                              //0x011E(0x0001)
  NavigationSystemBase*                                               NavigationSystem                                  //0x0120(0x0008)
  GameModeBase*                                                       AuthorityGameMode                                 //0x0128(0x0008)
  GameStateBase*                                                      GameState                                         //0x0130(0x0008)
  AISystemBase*                                                       AISystem                                          //0x0138(0x0008)
  AvoidanceManager*                                                   AvoidanceManager                                  //0x0140(0x0008)
  Levels*                                                             Levels                                            //0x0148(0x0010)
  LevelCollections*                                                   LevelCollections                                  //0x0158(0x0010)
  GameInstance*                                                       OwningGameInstance                                //0x0170(0x0008) //当前示例  
  ParameterCollectionInstances*                                       ParameterCollectionInstances                      //0x0178(0x0010)
  Canvas*                                                             CanvasForRenderingToTarget                        //0x0188(0x0008)
  Canvas*                                                             CanvasForDrawMaterialToRenderTarget               //0x0190(0x0008)
  ComponentsThatNeedEndOfFrameUpdate*                                 ComponentsThatNeedEndOfFrameUpdate                //0x01E8(0x0010)
  ComponentsThatNeedEndOfFrameUpdate_OnGameThread*                    ComponentsThatNeedEndOfFrameUpdate_OnGameThread   //0x01F8(0x0010)
  WorldComposition*                                                   WorldComposition                                  //0x0548(0x0008)
  WorldPSCPool*                                                       PSCPool                                           //0x05C0(0x0058)
  ReturnValue*                                                        K2_GetWorldSettings                               //0x0000(0x0229)
  *                                                                   HandleTimelineScrubbed                            //0x0000(0x0229)
};


class LevelStreaming : public Object
{
  World*                                                              WorldAsset                                        //0x0028(0x0028)
  *                                                                   PackageNameToLoad                                 //0x0050(0x0008)
  LODPackageNames*                                                    LODPackageNames                                   //0x0058(0x0010)
  Transform*                                                          LevelTransform                                    //0x0080(0x0030)
  *                                                                   LevelLODIndex                                     //0x00B0(0x0004)
  *                                                                   StreamingPriority                                 //0x00B4(0x0004)
  *                                                                   bShouldBeVisible                                  //0x00BA(0x0001)
  *                                                                   bShouldBeLoaded                                   //0x00BA(0x0001)
  *                                                                   bLocked                                           //0x00BA(0x0001)
  *                                                                   bIsStatic                                         //0x00BA(0x0001)
  *                                                                   bShouldBlockOnLoad                                //0x00BA(0x0001)
  *                                                                   bShouldBlockOnUnload                              //0x00BB(0x0001)
  *                                                                   bDisableDistanceStreaming                         //0x00BB(0x0001)
  *                                                                   bDrawOnLevelStatusMap                             //0x00BB(0x0001)
  LinearColor*                                                        LevelColor                                        //0x00BC(0x0010)
  EditorStreamingVolumes*                                             EditorStreamingVolumes                            //0x00D0(0x0010)
  *                                                                   MinTimeBetweenVolumeUnloadRequests                //0x00E0(0x0004)
  LevelStreamingLoadedStatus__DelegateSignature*                      OnLevelLoaded                                     //0x00E8(0x0010)
  LevelStreamingLoadedStatus__DelegateSignature*                      OnLevelUnloaded                                   //0x00F8(0x0010)
  LevelStreamingVisibilityStatus__DelegateSignature*                  OnLevelShown                                      //0x0108(0x0010)
  LevelStreamingVisibilityStatus__DelegateSignature*                  OnLevelHidden                                     //0x0118(0x0010)
  Level*                                                              LoadedLevel                                       //0x0128(0x0008)
  Level*                                                              PendingUnloadLevel                                //0x0130(0x0008)
  *                                                                   ShouldBeLoaded                                    //0x0000(0x0229)
  *                                                                   SetShouldBeVisible                                //0x0000(0x0229)
  *                                                                   SetShouldBeLoaded                                 //0x0000(0x0229)
  *                                                                   SetPriority                                       //0x0000(0x0229)
  *                                                                   SetLevelLODIndex                                  //0x0000(0x0229)
  *                                                                   IsStreamingStatePending                           //0x0000(0x0229)
  *                                                                   IsLevelVisible                                    //0x0000(0x0229)
  *                                                                   IsLevelLoaded                                     //0x0000(0x0229)
  *                                                                   GetWorldAssetPackageFName                         //0x0000(0x0229)
  ReturnValue*                                                        GetLoadedLevel                                    //0x0000(0x0229)
  ReturnValue*                                                        GetLevelScriptActor                               //0x0000(0x0229)
  ReturnValue*                                                        CreateInstance                                    //0x0000(0x0229)
};


class LevelStreamingAlwaysLoaded : public LevelStreaming
{
};


class LevelStreamingDynamic : public LevelStreaming
{
  *                                                                   bInitiallyLoaded                                  //0x0148(0x0001)
  *                                                                   bInitiallyVisible                                 //0x0148(0x0001)
  WorldContextObject*                                                 LoadLevelInstanceBySoftObjectPtr                  //0x0000(0x0229)
  WorldContextObject*                                                 LoadLevelInstance                                 //0x0000(0x0229)
};


class LevelStreamingPersistent : public LevelStreaming
{
};


class LevelStreamingVolume : public Volume
{
  StreamingLevelNames*                                                StreamingLevelNames                               //0x0250(0x0010)
  *                                                                   bEditorPreVisOnly                                 //0x0260(0x0001)
  *                                                                   bDisabled                                         //0x0260(0x0001)
  EStreamingVolumeUsage*                                              StreamingUsage                                    //0x0264(0x0001)
};


class LightmappedSurfaceCollection : public Object
{
  Model*                                                              SourceModel                                       //0x0028(0x0008)
  Surfaces*                                                           Surfaces                                          //0x0030(0x0010)
};


class LightMapTexture2D : public Texture2D
{
};


class LightmassCharacterIndirectDetailVolume : public Volume
{
};


class LightmassImportanceVolume : public Volume
{
};


class LightmassPortal : public Actor
{
  LightmassPortalComponent*                                           PortalComponent                                   //0x0218(0x0008)
};


class LightmassPortalComponent : public SceneComponent
{
  BoxComponent*                                                       PreviewBox                                        //0x01F0(0x0008)
};


class LightmassPrimitiveSettingsObject : public Object
{
  LightmassPrimitiveSettings*                                         LightmassSettings                                 //0x0028(0x0018)
};


class LineBatchComponent : public PrimitiveComponent
{
};


class LocalLightComponent : public LightComponent
{
  UnderlyingType*                                                     IntensityUnits                                    //0x0338(0x0001)
  *                                                                   Radius                                            //0x033C(0x0004)
  *                                                                   AttenuationRadius                                 //0x0340(0x0004)
  LightmassPointLightSettings*                                        LightmassSettings                                 //0x0344(0x000C)
  *                                                                   SetIntensityUnits                                 //0x0000(0x0229)
  *                                                                   SetAttenuationRadius                              //0x0000(0x0229)
  *                                                                   GetUnitsConversionFactor                          //0x0000(0x0229)
};


class LocalPlayer : public Player
{
  GameViewportClient*                                                 ViewportClient                                    //0x0070(0x0008)
  EAspectRatioAxisConstraint*                                         AspectRatioAxisConstraint                         //0x0094(0x0001)
  Class*                                                              PendingLevelPlayerControllerClass                 //0x0098(0x0008)
  *                                                                   bSentSplitJoin                                    //0x00A0(0x0001)
  *                                                                   ControllerId                                      //0x00B8(0x0004)
};


class LocalPlayerSubsystem : public Subsystem
{
};


class LODActor : public Actor
{
  StaticMeshComponent*                                                StaticMeshComponent                               //0x0218(0x0008)
  ImpostersStaticMeshComponents_Key*                                  ImpostersStaticMeshComponents                     //0x0220(0x0050)
  HLODProxy*                                                          Proxy                                             //0x0270(0x0008)
  *                                                                   Key                                               //0x0278(0x0008)
  *                                                                   LODDrawDistance                                   //0x0280(0x0004)
  *                                                                   LODLevel                                          //0x0284(0x0004)
  SubActors*                                                          SubActors                                         //0x0288(0x0010)
  *                                                                   CachedNumHLODLevels                               //0x0298(0x0001)
};


class MapBuildDataRegistry : public Object
{
  ELightingBuildQuality*                                              LevelLightingQuality                              //0x0028(0x0001)
};


class Material : public MaterialInterface
{
  PhysicalMaterial*                                                   PhysMaterial                                      //0x0088(0x0008)
  ScalarMaterialInput*                                                Metallic                                          //0x0090(0x000C)
  ScalarMaterialInput*                                                Specular                                          //0x00A4(0x000C)
  VectorMaterialInput*                                                Normal                                            //0x00B8(0x000C)
  ColorMaterialInput*                                                 EmissiveColor                                     //0x00CC(0x000C)
  EMaterialDomain*                                                    MaterialDomain                                    //0x00E0(0x0001)
  EBlendMode*                                                         BlendMode                                         //0x00E1(0x0001)
  EDecalBlendMode*                                                    DecalBlendMode                                    //0x00E2(0x0001)
  EMaterialDecalResponse*                                             MaterialDecalResponse                             //0x00E3(0x0001)
  EMaterialShadingModel*                                              ShadingModel                                      //0x00E4(0x0001)
  *                                                                   bCastDynamicShadowAsMasked                        //0x00E5(0x0001)
  MaterialShadingModelField*                                          ShadingModels                                     //0x00E6(0x0002)
  *                                                                   OpacityMaskClipValue                              //0x00E8(0x0004)
  VectorMaterialInput*                                                WorldPositionOffset                               //0x00EC(0x000C)
  ScalarMaterialInput*                                                Refraction                                        //0x0100(0x000C)
  MaterialAttributesInput*                                            MaterialAttributes                                //0x0114(0x0010)
  ScalarMaterialInput*                                                PixelDepthOffset                                  //0x012C(0x000C)
  ShadingModelMaterialInput*                                          ShadingModelFromMaterialExpression                //0x0140(0x000C)
  *                                                                   bEnableSeparateTranslucency                       //0x0154(0x0001)
  *                                                                   bEnableResponsiveAA                               //0x0154(0x0001)
  *                                                                   bScreenSpaceReflections                           //0x0154(0x0001)
  *                                                                   bContactShadows                                   //0x0154(0x0001)
  *                                                                   TwoSided                                          //0x0154(0x0001)
  *                                                                   DitheredLODTransition                             //0x0154(0x0001)
  *                                                                   DitherOpacityMask                                 //0x0154(0x0001)
  *                                                                   bAllowNegativeEmissiveColor                       //0x0154(0x0001)
  ETranslucencyLightingMode*                                          TranslucencyLightingMode                          //0x0155(0x0001)
  *                                                                   bEnableMobileSeparateTranslucency                 //0x0156(0x0001)
  *                                                                   NumCustomizedUVs                                  //0x0158(0x0004)
  *                                                                   TranslucencyDirectionalLightingIntensity          //0x015C(0x0004)
  *                                                                   TranslucentShadowDensityScale                     //0x0160(0x0004)
  *                                                                   TranslucentSelfShadowDensityScale                 //0x0164(0x0004)
  *                                                                   TranslucentSelfShadowSecondDensityScale           //0x0168(0x0004)
  *                                                                   TranslucentSelfShadowSecondOpacity                //0x016C(0x0004)
  *                                                                   TranslucentBackscatteringExponent                 //0x0170(0x0004)
  LinearColor*                                                        TranslucentMultipleScatteringExtinction           //0x0174(0x0010)
  *                                                                   TranslucentShadowStartOffset                      //0x0184(0x0004)
  *                                                                   bDisableDepthTest                                 //0x0188(0x0001)
  *                                                                   bWriteOnlyAlpha                                   //0x0188(0x0001)
  *                                                                   bGenerateSphericalParticleNormals                 //0x0188(0x0001)
  *                                                                   bTangentSpaceNormal                               //0x0188(0x0001)
  *                                                                   bUseEmissiveForDynamicAreaLighting                //0x0188(0x0001)
  *                                                                   bBlockGI                                          //0x0188(0x0001)
  *                                                                   bUsedAsSpecialEngineMaterial                      //0x0188(0x0001)
  *                                                                   bUsedWithSkeletalMesh                             //0x0188(0x0001)
  *                                                                   bUsedWithEditorCompositing                        //0x0189(0x0001)
  *                                                                   bUsedWithParticleSprites                          //0x0189(0x0001)
  *                                                                   bUsedWithBeamTrails                               //0x0189(0x0001)
  *                                                                   bUsedWithMeshParticles                            //0x0189(0x0001)
  *                                                                   bUsedWithNiagaraSprites                           //0x0189(0x0001)
  *                                                                   bUsedWithNiagaraRibbons                           //0x0189(0x0001)
  *                                                                   bUsedWithNiagaraMeshParticles                     //0x0189(0x0001)
  *                                                                   bUsedWithGeometryCache                            //0x0189(0x0001)
  *                                                                   bUsedWithStaticLighting                           //0x018A(0x0001)
  *                                                                   bUsedWithMorphTargets                             //0x018A(0x0001)
  *                                                                   bUsedWithSplineMeshes                             //0x018A(0x0001)
  *                                                                   bUsedWithInstancedStaticMeshes                    //0x018A(0x0001)
  *                                                                   bUsedWithGeometryCollections                      //0x018A(0x0001)
  *                                                                   bUsesDistortion                                   //0x018A(0x0001)
  *                                                                   bUsedWithClothing                                 //0x018A(0x0001)
  *                                                                   bUsedWithWater                                    //0x018C(0x0001)
  *                                                                   bUsedWithHairStrands                              //0x018C(0x0001)
  *                                                                   bUsedWithUI                                       //0x0190(0x0001)
  *                                                                   bAutomaticallySetUsageInEditor                    //0x0190(0x0001)
  *                                                                   bFullyRough                                       //0x0190(0x0001)
  *                                                                   bUseFullPrecision                                 //0x0190(0x0001)
  *                                                                   bUseLightmapDirectionality                        //0x0190(0x0001)
  *                                                                   bUseHQForwardReflections                          //0x0190(0x0001)
  *                                                                   bUsePlanarForwardReflections                      //0x0190(0x0001)
  *                                                                   bNormalCurvatureToRoughness                       //0x0190(0x0001)
  EMaterialTessellationMode*                                          D3D11TessellationMode                             //0x0191(0x0001)
  *                                                                   bEnableCrackFreeDisplacement                      //0x0192(0x0001)
  *                                                                   bEnableAdaptiveTessellation                       //0x0192(0x0001)
  *                                                                   AllowTranslucentCustomDepthWrites                 //0x0192(0x0001)
  *                                                                   Wireframe                                         //0x0192(0x0001)
  *                                                                   bOutputVelocityOnBasePass                         //0x0192(0x0001)
  Expressions*                                                        Expressions                                       //0x0198(0x0010)
  MaterialFunctionInfos*                                              MaterialFunctionInfos                             //0x01A8(0x0010)
  MaterialParameterCollectionInfos*                                   MaterialParameterCollectionInfos                  //0x01B8(0x0010)
  *                                                                   bCanMaskedBeAssumedOpaque                         //0x01C8(0x0001)
  *                                                                   bIsMasked                                         //0x01C8(0x0001)
  *                                                                   bIsPreviewMaterial                                //0x01C8(0x0001)
  *                                                                   bIsFunctionPreviewMaterial                        //0x01C8(0x0001)
  *                                                                   bUseMaterialAttributes                            //0x01C8(0x0001)
  *                                                                   bCastRayTracedShadows                             //0x01C8(0x0001)
  *                                                                   bUseTranslucencyVertexFog                         //0x01C8(0x0001)
  *                                                                   bIsSky                                            //0x01C8(0x0001)
  *                                                                   bComputeFogPerPixel                               //0x01C9(0x0001)
  *                                                                   bOutputTranslucentVelocity                        //0x01C9(0x0001)
  *                                                                   bAllowDevelopmentShaderCompile                    //0x01C9(0x0001)
  *                                                                   bIsMaterialEditorStatsMaterial                    //0x01C9(0x0001)
  EBlendableLocation*                                                 BlendableLocation                                 //0x01CA(0x0001)
  *                                                                   BlendableOutputAlpha                              //0x01CB(0x0001)
  *                                                                   bEnableStencilTest                                //0x01CB(0x0001)
  EMaterialStencilCompare*                                            StencilCompare                                    //0x01CC(0x0001)
  *                                                                   StencilRefValue                                   //0x01CD(0x0001)
  ERefractionMode*                                                    RefractionMode                                    //0x01CE(0x0001)
  *                                                                   BlendablePriority                                 //0x01D0(0x0004)
  *                                                                   UsageFlagWarnings                                 //0x01D4(0x0004)
  *                                                                   RefractionDepthBias                               //0x01D8(0x0004)
  Guid*                                                               StateId                                           //0x01DC(0x0010)
  *                                                                   MaxDisplacement                                   //0x01EC(0x0004)
  CachedQualityLevelsUsed*                                            CachedQualityLevelsUsed                           //0x01F8(0x0010)
  ExpressionTextureReferences*                                        ExpressionTextureReferences                       //0x0288(0x0010)
};


class MaterialBillboardComponent : public PrimitiveComponent
{
  Elements*                                                           Elements                                          //0x03D8(0x0010)
  NewElements*                                                        SetElements                                       //0x0000(0x0229)
  Material*                                                           AddElement                                        //0x0000(0x0229)
};


class MaterialExpressionAbs : public MaterialExpression
{
  ExpressionInput*                                                    Input                                             //0x0040(0x000C)
};


class MaterialExpressionActorPositionWS : public MaterialExpression
{
};


class MaterialExpressionAdd : public MaterialExpression
{
  ExpressionInput*                                                    A                                                 //0x0040(0x000C)
  ExpressionInput*                                                    B                                                 //0x0054(0x000C)
  *                                                                   ConstA                                            //0x0068(0x0004)
  *                                                                   ConstB                                            //0x006C(0x0004)
};


class MaterialExpressionAntialiasedTextureMask : public MaterialExpressionTextureSampleParameter2D
{
  *                                                                   Threshold                                         //0x00F0(0x0004)
  ETextureColorChannel*                                               Channel                                           //0x00F4(0x0001)
};


class MaterialExpressionAppendVector : public MaterialExpression
{
  ExpressionInput*                                                    A                                                 //0x0040(0x000C)
  ExpressionInput*                                                    B                                                 //0x0054(0x000C)
};


class MaterialExpressionArccosine : public MaterialExpression
{
  ExpressionInput*                                                    Input                                             //0x0040(0x000C)
};


class MaterialExpressionArccosineFast : public MaterialExpression
{
  ExpressionInput*                                                    Input                                             //0x0040(0x000C)
};


class MaterialExpressionArcsine : public MaterialExpression
{
  ExpressionInput*                                                    Input                                             //0x0040(0x000C)
};


class MaterialExpressionArcsineFast : public MaterialExpression
{
  ExpressionInput*                                                    Input                                             //0x0040(0x000C)
};


class MaterialExpressionArctangent : public MaterialExpression
{
  ExpressionInput*                                                    Input                                             //0x0040(0x000C)
};


class MaterialExpressionArctangent2 : public MaterialExpression
{
  ExpressionInput*                                                    Y                                                 //0x0040(0x000C)
  ExpressionInput*                                                    X                                                 //0x0054(0x000C)
};


class MaterialExpressionArctangent2Fast : public MaterialExpression
{
  ExpressionInput*                                                    Y                                                 //0x0040(0x000C)
  ExpressionInput*                                                    X                                                 //0x0054(0x000C)
};


class MaterialExpressionArctangentFast : public MaterialExpression
{
  ExpressionInput*                                                    Input                                             //0x0040(0x000C)
};


class MaterialExpressionAtmosphericFogColor : public MaterialExpression
{
  ExpressionInput*                                                    WorldPosition                                     //0x0040(0x000C)
};


class MaterialExpressionAtmosphericLightColor : public MaterialExpression
{
};


class MaterialExpressionAtmosphericLightVector : public MaterialExpression
{
};


class MaterialExpressionBentNormalCustomOutput : public MaterialExpressionCustomOutput
{
  ExpressionInput*                                                    Input                                             //0x0040(0x000C)
};


class MaterialExpressionBlackBody : public MaterialExpression
{
  ExpressionInput*                                                    Temp                                              //0x0040(0x000C)
};


class MaterialExpressionBlendMaterialAttributes : public MaterialExpression
{
  MaterialAttributesInput*                                            A                                                 //0x0040(0x0010)
  MaterialAttributesInput*                                            B                                                 //0x0058(0x0010)
  ExpressionInput*                                                    Alpha                                             //0x0070(0x000C)
  EMaterialAttributeBlend*                                            PixelAttributeBlendType                           //0x0084(0x0001)
  EMaterialAttributeBlend*                                            VertexAttributeBlendType                          //0x0085(0x0001)
};


class MaterialExpressionBreakMaterialAttributes : public MaterialExpression
{
  MaterialAttributesInput*                                            MaterialAttributes                                //0x0040(0x0010)
};


class MaterialExpressionBumpOffset : public MaterialExpression
{
  ExpressionInput*                                                    Coordinate                                        //0x0040(0x000C)
  ExpressionInput*                                                    Height                                            //0x0054(0x000C)
  ExpressionInput*                                                    HeightRatioInput                                  //0x0068(0x000C)
  *                                                                   HeightRatio                                       //0x007C(0x0004)
  *                                                                   ReferencePlane                                    //0x0080(0x0004)
  *                                                                   ConstCoordinate                                   //0x0084(0x0004)
};


class MaterialExpressionCameraPositionWS : public MaterialExpression
{
};


class MaterialExpressionCameraVectorWS : public MaterialExpression
{
};


class MaterialExpressionCeil : public MaterialExpression
{
  ExpressionInput*                                                    Input                                             //0x0040(0x000C)
};


class MaterialExpressionParameter : public MaterialExpression
{
  *                                                                   ParameterName                                     //0x0040(0x0008)
  Guid*                                                               ExpressionGUID                                    //0x0048(0x0010)
};


class MaterialExpressionVectorParameter : public MaterialExpressionParameter
{
  LinearColor*                                                        DefaultValue                                      //0x0058(0x0010)
  *                                                                   bUseCustomPrimitiveData                           //0x0068(0x0001)
  *                                                                   PrimitiveDataIndex                                //0x0069(0x0001)
};


class MaterialExpressionChannelMaskParameter : public MaterialExpressionVectorParameter
{
  EChannelMaskParameterColor*                                         MaskChannel                                       //0x0070(0x0001)
  ExpressionInput*                                                    Input                                             //0x0074(0x000C)
};


class MaterialExpressionClamp : public MaterialExpression
{
  ExpressionInput*                                                    Input                                             //0x0040(0x000C)
  ExpressionInput*                                                    Min                                               //0x0054(0x000C)
  ExpressionInput*                                                    Max                                               //0x0068(0x000C)
  EClampMode*                                                         ClampMode                                         //0x007C(0x0001)
  *                                                                   MinDefault                                        //0x0080(0x0004)
  *                                                                   MaxDefault                                        //0x0084(0x0004)
};


class MaterialExpressionClearCoatNormalCustomOutput : public MaterialExpressionCustomOutput
{
  ExpressionInput*                                                    Input                                             //0x0040(0x000C)
};


class MaterialExpressionCollectionParameter : public MaterialExpression
{
  MaterialParameterCollection*                                        Collection                                        //0x0040(0x0008)
  *                                                                   ParameterName                                     //0x0048(0x0008)
  Guid*                                                               ParameterId                                       //0x0050(0x0010)
};


class MaterialExpressionComment : public MaterialExpression
{
  *                                                                   SizeX                                             //0x0040(0x0004)
  *                                                                   SizeY                                             //0x0044(0x0004)
  *                                                                   Text                                              //0x0048(0x0010)
  LinearColor*                                                        CommentColor                                      //0x0058(0x0010)
  *                                                                   FontSize                                          //0x0068(0x0004)
};


class MaterialExpressionComponentMask : public MaterialExpression
{
  ExpressionInput*                                                    Input                                             //0x0040(0x000C)
  *                                                                   R                                                 //0x0054(0x0001)
  *                                                                   G                                                 //0x0054(0x0001)
  *                                                                   B                                                 //0x0054(0x0001)
  *                                                                   A                                                 //0x0054(0x0001)
};


class MaterialExpressionConstant : public MaterialExpression
{
  *                                                                   R                                                 //0x0040(0x0004)
};


class MaterialExpressionConstant2Vector : public MaterialExpression
{
  *                                                                   R                                                 //0x0040(0x0004)
  *                                                                   G                                                 //0x0044(0x0004)
};


class MaterialExpressionConstant3Vector : public MaterialExpression
{
  LinearColor*                                                        Constant                                          //0x0040(0x0010)
};


class MaterialExpressionConstant4Vector : public MaterialExpression
{
  LinearColor*                                                        Constant                                          //0x0040(0x0010)
};


class MaterialExpressionConstantBiasScale : public MaterialExpression
{
  ExpressionInput*                                                    Input                                             //0x0040(0x000C)
  *                                                                   Bias                                              //0x0054(0x0004)
  *                                                                   Scale                                             //0x0058(0x0004)
};


class MaterialExpressionCosine : public MaterialExpression
{
  ExpressionInput*                                                    Input                                             //0x0040(0x000C)
  *                                                                   Period                                            //0x0054(0x0004)
};


class MaterialExpressionCrossProduct : public MaterialExpression
{
  ExpressionInput*                                                    A                                                 //0x0040(0x000C)
  ExpressionInput*                                                    B                                                 //0x0054(0x000C)
};


class MaterialExpressionScalarParameter : public MaterialExpressionParameter
{
  *                                                                   DefaultValue                                      //0x0058(0x0004)
  *                                                                   bUseCustomPrimitiveData                           //0x005C(0x0001)
  *                                                                   PrimitiveDataIndex                                //0x005D(0x0001)
};


class MaterialExpressionCurveAtlasRowParameter : public MaterialExpressionScalarParameter
{
  CurveLinearColor*                                                   Curve                                             //0x0060(0x0008)
  CurveLinearColorAtlas*                                              Atlas                                             //0x0068(0x0008)
  ExpressionInput*                                                    InputTime                                         //0x0070(0x000C)
};


class MaterialExpressionCustom : public MaterialExpression
{
  *                                                                   Code                                              //0x0040(0x0010)
  ECustomMaterialOutputType*                                          OutputType                                        //0x0050(0x0001)
  *                                                                   Description                                       //0x0058(0x0010)
  Inputs*                                                             Inputs                                            //0x0068(0x0010)
};


class MaterialExpressionDDX : public MaterialExpression
{
  ExpressionInput*                                                    Value                                             //0x0040(0x000C)
};


class MaterialExpressionDDY : public MaterialExpression
{
  ExpressionInput*                                                    Value                                             //0x0040(0x000C)
};


class MaterialExpressionDecalDerivative : public MaterialExpression
{
};


class MaterialExpressionDecalLifetimeOpacity : public MaterialExpression
{
};


class MaterialExpressionDecalMipmapLevel : public MaterialExpression
{
  ExpressionInput*                                                    TextureSize                                       //0x0040(0x000C)
  *                                                                   ConstWidth                                        //0x0054(0x0004)
  *                                                                   ConstHeight                                       //0x0058(0x0004)
};


class MaterialExpressionDeltaTime : public MaterialExpression
{
};


class MaterialExpressionDepthFade : public MaterialExpression
{
  ExpressionInput*                                                    InOpacity                                         //0x0040(0x000C)
  ExpressionInput*                                                    FadeDistance                                      //0x0054(0x000C)
  *                                                                   OpacityDefault                                    //0x0068(0x0004)
  *                                                                   FadeDistanceDefault                               //0x006C(0x0004)
};


class MaterialExpressionDepthOfFieldFunction : public MaterialExpression
{
  EDepthOfFieldFunctionValue*                                         FunctionValue                                     //0x0040(0x0001)
  ExpressionInput*                                                    Depth                                             //0x0044(0x000C)
};


class MaterialExpressionDeriveNormalZ : public MaterialExpression
{
  ExpressionInput*                                                    InXY                                              //0x0040(0x000C)
};


class MaterialExpressionDesaturation : public MaterialExpression
{
  ExpressionInput*                                                    Input                                             //0x0040(0x000C)
  ExpressionInput*                                                    Fraction                                          //0x0054(0x000C)
  LinearColor*                                                        LuminanceFactors                                  //0x0068(0x0010)
};


class MaterialExpressionDistance : public MaterialExpression
{
  ExpressionInput*                                                    A                                                 //0x0040(0x000C)
  ExpressionInput*                                                    B                                                 //0x0054(0x000C)
};


class MaterialExpressionDistanceCullFade : public MaterialExpression
{
};


class MaterialExpressionDistanceFieldGradient : public MaterialExpression
{
  ExpressionInput*                                                    Position                                          //0x0040(0x000C)
};


class MaterialExpressionDistanceToNearestSurface : public MaterialExpression
{
  ExpressionInput*                                                    Position                                          //0x0040(0x000C)
};


class MaterialExpressionDivide : public MaterialExpression
{
  ExpressionInput*                                                    A                                                 //0x0040(0x000C)
  ExpressionInput*                                                    B                                                 //0x0054(0x000C)
  *                                                                   ConstA                                            //0x0068(0x0004)
  *                                                                   ConstB                                            //0x006C(0x0004)
};


class MaterialExpressionDotProduct : public MaterialExpression
{
  ExpressionInput*                                                    A                                                 //0x0040(0x000C)
  ExpressionInput*                                                    B                                                 //0x0054(0x000C)
};


class MaterialExpressionDynamicParameter : public MaterialExpression
{
  ParamNames*                                                         ParamNames                                        //0x0040(0x0010)
  LinearColor*                                                        DefaultValue                                      //0x0050(0x0010)
  *                                                                   ParameterIndex                                    //0x0060(0x0004)
};


class MaterialExpressionEyeAdaptation : public MaterialExpression
{
};


class MaterialExpressionFeatureLevelSwitch : public MaterialExpression
{
  ExpressionInput*                                                    Default                                           //0x0040(0x000C)
  ExpressionInput*                                                    Inputs                                            //0x0054(0x000C)
};


class MaterialExpressionFloor : public MaterialExpression
{
  ExpressionInput*                                                    Input                                             //0x0040(0x000C)
};


class MaterialExpressionFmod : public MaterialExpression
{
  ExpressionInput*                                                    A                                                 //0x0040(0x000C)
  ExpressionInput*                                                    B                                                 //0x0054(0x000C)
};


class MaterialExpressionFontSample : public MaterialExpression
{
  Font*                                                               Font                                              //0x0040(0x0008)
  *                                                                   FontTexturePage                                   //0x0048(0x0004)
};


class MaterialExpressionFontSampleParameter : public MaterialExpressionFontSample
{
  *                                                                   ParameterName                                     //0x0050(0x0008)
  Guid*                                                               ExpressionGUID                                    //0x0058(0x0010)
  *                                                                   Group                                             //0x0068(0x0008)
};


class MaterialExpressionFrac : public MaterialExpression
{
  ExpressionInput*                                                    Input                                             //0x0040(0x000C)
};


class MaterialExpressionFresnel : public MaterialExpression
{
  ExpressionInput*                                                    ExponentIn                                        //0x0040(0x000C)
  *                                                                   Exponent                                          //0x0054(0x0004)
  ExpressionInput*                                                    BaseReflectFractionIn                             //0x0058(0x000C)
  *                                                                   BaseReflectFraction                               //0x006C(0x0004)
  ExpressionInput*                                                    Normal                                            //0x0070(0x000C)
};


class MaterialExpressionFunctionInput : public MaterialExpression
{
  ExpressionInput*                                                    Preview                                           //0x0040(0x000C)
  *                                                                   InputName                                         //0x0054(0x0008)
  *                                                                   Description                                       //0x0060(0x0010)
  Guid*                                                               ID                                                //0x0070(0x0010)
  EFunctionInputType*                                                 InputType                                         //0x0080(0x0001)
  Vector4*                                                            PreviewValue                                      //0x0090(0x0010)
  *                                                                   bUsePreviewValueAsDefault                         //0x00A0(0x0001)
  *                                                                   SortPriority                                      //0x00A4(0x0004)
  *                                                                   bCompilingFunctionPreview                         //0x00A8(0x0001)
};


class MaterialExpressionFunctionOutput : public MaterialExpression
{
  *                                                                   OutputName                                        //0x0040(0x0008)
  *                                                                   Description                                       //0x0048(0x0010)
  *                                                                   SortPriority                                      //0x0058(0x0004)
  ExpressionInput*                                                    A                                                 //0x005C(0x000C)
  *                                                                   bLastPreviewed                                    //0x0070(0x0001)
  Guid*                                                               ID                                                //0x0074(0x0010)
};


class MaterialExpressionGetMaterialAttributes : public MaterialExpression
{
  MaterialAttributesInput*                                            MaterialAttributes                                //0x0040(0x0010)
  AttributeGetTypes*                                                  AttributeGetTypes                                 //0x0058(0x0010)
};


class MaterialExpressionGIReplace : public MaterialExpression
{
  ExpressionInput*                                                    Default                                           //0x0040(0x000C)
  ExpressionInput*                                                    StaticIndirect                                    //0x0054(0x000C)
  ExpressionInput*                                                    DynamicIndirect                                   //0x0068(0x000C)
};


class MaterialExpressionHairAttributes : public MaterialExpression
{
};


class MaterialExpressionIf : public MaterialExpression
{
  ExpressionInput*                                                    A                                                 //0x0040(0x000C)
  ExpressionInput*                                                    B                                                 //0x0054(0x000C)
  ExpressionInput*                                                    AGreaterThanB                                     //0x0068(0x000C)
  ExpressionInput*                                                    AEqualsB                                          //0x007C(0x000C)
  ExpressionInput*                                                    ALessThanB                                        //0x0090(0x000C)
  *                                                                   EqualsThreshold                                   //0x00A4(0x0004)
  *                                                                   ConstB                                            //0x00A8(0x0004)
  *                                                                   ConstAEqualsB                                     //0x00AC(0x0004)
};


class MaterialExpressionLightmapUVs : public MaterialExpression
{
};


class MaterialExpressionLightmassReplace : public MaterialExpression
{
  ExpressionInput*                                                    Realtime                                          //0x0040(0x000C)
  ExpressionInput*                                                    Lightmass                                         //0x0054(0x000C)
};


class MaterialExpressionLightVector : public MaterialExpression
{
};


class MaterialExpressionLinearInterpolate : public MaterialExpression
{
  ExpressionInput*                                                    A                                                 //0x0040(0x000C)
  ExpressionInput*                                                    B                                                 //0x0054(0x000C)
  ExpressionInput*                                                    Alpha                                             //0x0068(0x000C)
  *                                                                   ConstA                                            //0x007C(0x0004)
  *                                                                   ConstB                                            //0x0080(0x0004)
  *                                                                   ConstAlpha                                        //0x0084(0x0004)
};


class MaterialExpressionLogarithm10 : public MaterialExpression
{
  ExpressionInput*                                                    X                                                 //0x0040(0x000C)
};


class MaterialExpressionLogarithm2 : public MaterialExpression
{
  ExpressionInput*                                                    X                                                 //0x0040(0x000C)
};


class MaterialExpressionMakeMaterialAttributes : public MaterialExpression
{
  ExpressionInput*                                                    BaseColor                                         //0x0040(0x000C)
  ExpressionInput*                                                    Metallic                                          //0x0054(0x000C)
  ExpressionInput*                                                    Specular                                          //0x0068(0x000C)
  ExpressionInput*                                                    Roughness                                         //0x007C(0x000C)
  ExpressionInput*                                                    EmissiveColor                                     //0x0090(0x000C)
  ExpressionInput*                                                    Opacity                                           //0x00A4(0x000C)
  ExpressionInput*                                                    OpacityMask                                       //0x00B8(0x000C)
  ExpressionInput*                                                    Normal                                            //0x00CC(0x000C)
  ExpressionInput*                                                    WorldPositionOffset                               //0x00E0(0x000C)
  ExpressionInput*                                                    WorldDisplacement                                 //0x00F4(0x000C)
  ExpressionInput*                                                    TessellationMultiplier                            //0x0108(0x000C)
  ExpressionInput*                                                    SubsurfaceColor                                   //0x011C(0x000C)
  ExpressionInput*                                                    ClearCoat                                         //0x0130(0x000C)
  ExpressionInput*                                                    ClearCoatRoughness                                //0x0144(0x000C)
  ExpressionInput*                                                    AmbientOcclusion                                  //0x0158(0x000C)
  ExpressionInput*                                                    Refraction                                        //0x016C(0x000C)
  ExpressionInput*                                                    CustomizedUVs                                     //0x0180(0x000C)
  ExpressionInput*                                                    PixelDepthOffset                                  //0x0220(0x000C)
  ExpressionInput*                                                    ShadingModel                                      //0x0234(0x000C)
};


class MaterialExpressionMapARPassthroughCameraUV : public MaterialExpression
{
  ExpressionInput*                                                    Coordinates                                       //0x0040(0x000C)
};


class MaterialExpressionMaterialAttributeLayers : public MaterialExpression
{
  *                                                                   ParameterName                                     //0x0040(0x0008)
  Guid*                                                               ExpressionGUID                                    //0x0048(0x0010)
  MaterialAttributesInput*                                            Input                                             //0x0058(0x0010)
  MaterialLayersFunctions*                                            DefaultLayers                                     //0x0070(0x0040)
  LayerCallers*                                                       LayerCallers                                      //0x00B0(0x0010)
  *                                                                   NumActiveLayerCallers                             //0x00C0(0x0004)
  BlendCallers*                                                       BlendCallers                                      //0x00C8(0x0010)
  *                                                                   NumActiveBlendCallers                             //0x00D8(0x0004)
  *                                                                   bIsLayerGraphBuilt                                //0x00DC(0x0001)
};


class MaterialExpressionMaterialFunctionCall : public MaterialExpression
{
  MaterialFunctionInterface*                                          MaterialFunction                                  //0x0040(0x0008)
  MaterialParameterInfo*                                              FunctionParameterInfo                             //0x0048(0x0010)
};


class MaterialExpressionMaterialLayerOutput : public MaterialExpressionFunctionOutput
{
};


class MaterialExpressionMaterialProxyReplace : public MaterialExpression
{
  ExpressionInput*                                                    Realtime                                          //0x0040(0x000C)
  ExpressionInput*                                                    MaterialProxy                                     //0x0054(0x000C)
};


class MaterialExpressionMax : public MaterialExpression
{
  ExpressionInput*                                                    A                                                 //0x0040(0x000C)
  ExpressionInput*                                                    B                                                 //0x0054(0x000C)
  *                                                                   ConstA                                            //0x0068(0x0004)
  *                                                                   ConstB                                            //0x006C(0x0004)
};


class MaterialExpressionMin : public MaterialExpression
{
  ExpressionInput*                                                    A                                                 //0x0040(0x000C)
  ExpressionInput*                                                    B                                                 //0x0054(0x000C)
  *                                                                   ConstA                                            //0x0068(0x0004)
  *                                                                   ConstB                                            //0x006C(0x0004)
};


class MaterialExpressionMultiply : public MaterialExpression
{
  ExpressionInput*                                                    A                                                 //0x0040(0x000C)
  ExpressionInput*                                                    B                                                 //0x0054(0x000C)
  *                                                                   ConstA                                            //0x0068(0x0004)
  *                                                                   ConstB                                            //0x006C(0x0004)
};


class MaterialExpressionNoise : public MaterialExpression
{
  ExpressionInput*                                                    Position                                          //0x0040(0x000C)
  ExpressionInput*                                                    FilterWidth                                       //0x0054(0x000C)
  *                                                                   Scale                                             //0x0068(0x0004)
  *                                                                   Quality                                           //0x006C(0x0004)
  ENoiseFunction*                                                     NoiseFunction                                     //0x0070(0x0001)
  *                                                                   bTurbulence                                       //0x0074(0x0001)
  *                                                                   Levels                                            //0x0078(0x0004)
  *                                                                   OutputMin                                         //0x007C(0x0004)
  *                                                                   OutputMax                                         //0x0080(0x0004)
  *                                                                   LevelScale                                        //0x0084(0x0004)
  *                                                                   bTiling                                           //0x0088(0x0001)
  *                                                                   RepeatSize                                        //0x008C(0x0004)
};


class MaterialExpressionNormalize : public MaterialExpression
{
  ExpressionInput*                                                    VectorInput                                       //0x0040(0x000C)
};


class MaterialExpressionObjectBounds : public MaterialExpression
{
};


class MaterialExpressionObjectOrientation : public MaterialExpression
{
};


class MaterialExpressionObjectPositionWS : public MaterialExpression
{
};


class MaterialExpressionObjectRadius : public MaterialExpression
{
};


class MaterialExpressionOneMinus : public MaterialExpression
{
  ExpressionInput*                                                    Input                                             //0x0040(0x000C)
};


class MaterialExpressionPanner : public MaterialExpression
{
  ExpressionInput*                                                    Coordinate                                        //0x0040(0x000C)
  ExpressionInput*                                                    Time                                              //0x0054(0x000C)
  ExpressionInput*                                                    Speed                                             //0x0068(0x000C)
  *                                                                   SpeedX                                            //0x007C(0x0004)
  *                                                                   SpeedY                                            //0x0080(0x0004)
  *                                                                   ConstCoordinate                                   //0x0084(0x0004)
  *                                                                   bFractionalPart                                   //0x0088(0x0001)
};


class MaterialExpressionParticleColor : public MaterialExpression
{
};


class MaterialExpressionParticleDirection : public MaterialExpression
{
};


class MaterialExpressionParticleMacroUV : public MaterialExpression
{
};


class MaterialExpressionParticleMotionBlurFade : public MaterialExpression
{
};


class MaterialExpressionParticlePositionWS : public MaterialExpression
{
};


class MaterialExpressionParticleRadius : public MaterialExpression
{
};


class MaterialExpressionParticleRandom : public MaterialExpression
{
};


class MaterialExpressionParticleRelativeTime : public MaterialExpression
{
};


class MaterialExpressionParticleSize : public MaterialExpression
{
};


class MaterialExpressionParticleSpeed : public MaterialExpression
{
};


class MaterialExpressionParticleSubUV : public MaterialExpressionTextureSample
{
  *                                                                   bBlend                                            //0x00D0(0x0001)
};


class MaterialExpressionParticleSubUVProperties : public MaterialExpression
{
};


class MaterialExpressionPerInstanceFadeAmount : public MaterialExpression
{
};


class MaterialExpressionPerInstanceRandom : public MaterialExpression
{
};


class MaterialExpressionPixelDepth : public MaterialExpression
{
};


class MaterialExpressionPixelNormalWS : public MaterialExpression
{
};


class MaterialExpressionPower : public MaterialExpression
{
  ExpressionInput*                                                    Base                                              //0x0040(0x000C)
  ExpressionInput*                                                    Exponent                                          //0x0054(0x000C)
  *                                                                   ConstExponent                                     //0x0068(0x0004)
};


class MaterialExpressionPrecomputedAOMask : public MaterialExpression
{
};


class MaterialExpressionPreSkinnedLocalBounds : public MaterialExpression
{
};


class MaterialExpressionPreSkinnedNormal : public MaterialExpression
{
};


class MaterialExpressionPreSkinnedPosition : public MaterialExpression
{
};


class MaterialExpressionPreviousFrameSwitch : public MaterialExpression
{
  ExpressionInput*                                                    CurrentFrame                                      //0x0040(0x000C)
  ExpressionInput*                                                    PreviousFrame                                     //0x0054(0x000C)
};


class MaterialExpressionQualitySwitch : public MaterialExpression
{
  ExpressionInput*                                                    Default                                           //0x0040(0x000C)
  ExpressionInput*                                                    Inputs                                            //0x0054(0x000C)
};


class MaterialExpressionRayTracingQualitySwitch : public MaterialExpression
{
  ExpressionInput*                                                    Normal                                            //0x0040(0x000C)
  ExpressionInput*                                                    RayTraced                                         //0x0054(0x000C)
};


class MaterialExpressionReflectionVectorWS : public MaterialExpression
{
  ExpressionInput*                                                    CustomWorldNormal                                 //0x0040(0x000C)
  *                                                                   bNormalizeCustomWorldNormal                       //0x0054(0x0001)
};


class MaterialExpressionReroute : public MaterialExpression
{
  ExpressionInput*                                                    Input                                             //0x0040(0x000C)
};


class MaterialExpressionRotateAboutAxis : public MaterialExpression
{
  ExpressionInput*                                                    NormalizedRotationAxis                            //0x0040(0x000C)
  ExpressionInput*                                                    RotationAngle                                     //0x0054(0x000C)
  ExpressionInput*                                                    PivotPoint                                        //0x0068(0x000C)
  ExpressionInput*                                                    Position                                          //0x007C(0x000C)
  *                                                                   Period                                            //0x0090(0x0004)
};


class MaterialExpressionRotator : public MaterialExpression
{
  ExpressionInput*                                                    Coordinate                                        //0x0040(0x000C)
  ExpressionInput*                                                    Time                                              //0x0054(0x000C)
  *                                                                   CenterX                                           //0x0068(0x0004)
  *                                                                   CenterY                                           //0x006C(0x0004)
  *                                                                   Speed                                             //0x0070(0x0004)
  *                                                                   ConstCoordinate                                   //0x0074(0x0004)
};


class MaterialExpressionRound : public MaterialExpression
{
  ExpressionInput*                                                    Input                                             //0x0040(0x000C)
};


class MaterialExpressionRuntimeVirtualTextureOutput : public MaterialExpressionCustomOutput
{
  ExpressionInput*                                                    BaseColor                                         //0x0040(0x000C)
  ExpressionInput*                                                    Specular                                          //0x0054(0x000C)
  ExpressionInput*                                                    Roughness                                         //0x0068(0x000C)
  ExpressionInput*                                                    Normal                                            //0x007C(0x000C)
  ExpressionInput*                                                    WorldHeight                                       //0x0090(0x000C)
  ExpressionInput*                                                    Opacity                                           //0x00A4(0x000C)
};


class MaterialExpressionRuntimeVirtualTextureReplace : public MaterialExpression
{
  ExpressionInput*                                                    Default                                           //0x0040(0x000C)
  ExpressionInput*                                                    VirtualTextureOutput                              //0x0054(0x000C)
};


class MaterialExpressionRuntimeVirtualTextureSample : public MaterialExpression
{
  ExpressionInput*                                                    Coordinates                                       //0x0040(0x000C)
  ExpressionInput*                                                    MipValue                                          //0x0054(0x000C)
  RuntimeVirtualTexture*                                              VirtualTexture                                    //0x0068(0x0008)
  UnderlyingType*                                                     MaterialType                                      //0x0070(0x0001)
  *                                                                   bSinglePhysicalSpace                              //0x0071(0x0001)
  ERuntimeVirtualTextureMipValueMode*                                 MipValueMode                                      //0x0072(0x0001)
};


class MaterialExpressionRuntimeVirtualTextureSampleParameter : public MaterialExpressionRuntimeVirtualTextureSample
{
  *                                                                   ParameterName                                     //0x0078(0x0008)
  Guid*                                                               ExpressionGUID                                    //0x0080(0x0010)
  *                                                                   Group                                             //0x0090(0x0008)
};


class MaterialExpressionSaturate : public MaterialExpression
{
  ExpressionInput*                                                    Input                                             //0x0040(0x000C)
};


class MaterialExpressionSceneColor : public MaterialExpression
{
  EMaterialSceneAttributeInputMode*                                   InputMode                                         //0x0040(0x0001)
  ExpressionInput*                                                    Input                                             //0x0044(0x000C)
  ExpressionInput*                                                    OffsetFraction                                    //0x0058(0x000C)
  Vector2D*                                                           ConstInput                                        //0x006C(0x0008)
};


class MaterialExpressionSceneDepth : public MaterialExpression
{
  EMaterialSceneAttributeInputMode*                                   InputMode                                         //0x0040(0x0001)
  ExpressionInput*                                                    Input                                             //0x0044(0x000C)
  ExpressionInput*                                                    Coordinates                                       //0x0058(0x000C)
  Vector2D*                                                           ConstInput                                        //0x006C(0x0008)
};


class MaterialExpressionSceneTexelSize : public MaterialExpression
{
};


class MaterialExpressionSceneTexture : public MaterialExpression
{
  ExpressionInput*                                                    Coordinates                                       //0x0040(0x000C)
  ESceneTextureId*                                                    SceneTextureId                                    //0x0054(0x0001)
  *                                                                   bFiltered                                         //0x0055(0x0001)
};


class MaterialExpressionScreenPosition : public MaterialExpression
{
};


class MaterialExpressionSetMaterialAttributes : public MaterialExpression
{
  Inputs*                                                             Inputs                                            //0x0040(0x0010)
  AttributeSetTypes*                                                  AttributeSetTypes                                 //0x0050(0x0010)
};


class MaterialExpressionShaderStageSwitch : public MaterialExpression
{
  ExpressionInput*                                                    PixelShader                                       //0x0040(0x000C)
  ExpressionInput*                                                    VertexShader                                      //0x0054(0x000C)
};


class MaterialExpressionShadingModel : public MaterialExpression
{
  EMaterialShadingModel*                                              ShadingModel                                      //0x0040(0x0001)
};


class MaterialExpressionShadingPathSwitch : public MaterialExpression
{
  ExpressionInput*                                                    Default                                           //0x0040(0x000C)
  ExpressionInput*                                                    Inputs                                            //0x0054(0x000C)
};


class MaterialExpressionShadowReplace : public MaterialExpression
{
  ExpressionInput*                                                    Default                                           //0x0040(0x000C)
  ExpressionInput*                                                    Shadow                                            //0x0054(0x000C)
};


class MaterialExpressionSign : public MaterialExpression
{
  ExpressionInput*                                                    Input                                             //0x0040(0x000C)
};


class MaterialExpressionSine : public MaterialExpression
{
  ExpressionInput*                                                    Input                                             //0x0040(0x000C)
  *                                                                   Period                                            //0x0054(0x0004)
};


class MaterialExpressionSingleLayerWaterMaterialOutput : public MaterialExpressionCustomOutput
{
  ExpressionInput*                                                    ScatteringCoefficients                            //0x0040(0x000C)
  ExpressionInput*                                                    AbsorptionCoefficients                            //0x0054(0x000C)
  ExpressionInput*                                                    PhaseG                                            //0x0068(0x000C)
};


class MaterialExpressionSkyAtmosphereLightDirection : public MaterialExpression
{
  *                                                                   LightIndex                                        //0x0040(0x0004)
};


class MaterialExpressionSkyAtmosphereLightIlluminance : public MaterialExpression
{
  *                                                                   LightIndex                                        //0x0040(0x0004)
  ExpressionInput*                                                    WorldPosition                                     //0x0044(0x000C)
};


class MaterialExpressionSkyAtmosphereLightDiskLuminance : public MaterialExpression
{
  *                                                                   LightIndex                                        //0x0040(0x0004)
};


class MaterialExpressionSkyAtmosphereAerialPerspective : public MaterialExpression
{
  ExpressionInput*                                                    WorldPosition                                     //0x0040(0x000C)
};


class MaterialExpressionSkyAtmosphereDistantLightScatteredLuminance : public MaterialExpression
{
};


class MaterialExpressionSkyAtmosphereViewLuminance : public MaterialExpression
{
};


class MaterialExpressionSobol : public MaterialExpression
{
  ExpressionInput*                                                    Cell                                              //0x0040(0x000C)
  ExpressionInput*                                                    Index                                             //0x0054(0x000C)
  ExpressionInput*                                                    Seed                                              //0x0068(0x000C)
  *                                                                   ConstIndex                                        //0x007C(0x0004)
  Vector2D*                                                           ConstSeed                                         //0x0080(0x0008)
};


class MaterialExpressionSpeedTree : public MaterialExpression
{
  ExpressionInput*                                                    GeometryInput                                     //0x0040(0x000C)
  ExpressionInput*                                                    WindInput                                         //0x0054(0x000C)
  ExpressionInput*                                                    LODInput                                          //0x0068(0x000C)
  ExpressionInput*                                                    ExtraBendWS                                       //0x007C(0x000C)
  ESpeedTreeGeometryType*                                             GeometryType                                      //0x0090(0x0001)
  ESpeedTreeWindType*                                                 WindType                                          //0x0091(0x0001)
  ESpeedTreeLODType*                                                  LODType                                           //0x0092(0x0001)
  *                                                                   BillboardThreshold                                //0x0094(0x0004)
  *                                                                   bAccurateWindVelocities                           //0x0098(0x0001)
};


class MaterialExpressionSphereMask : public MaterialExpression
{
  ExpressionInput*                                                    A                                                 //0x0040(0x000C)
  ExpressionInput*                                                    B                                                 //0x0054(0x000C)
  ExpressionInput*                                                    Radius                                            //0x0068(0x000C)
  ExpressionInput*                                                    Hardness                                          //0x007C(0x000C)
  *                                                                   AttenuationRadius                                 //0x0090(0x0004)
  *                                                                   HardnessPercent                                   //0x0094(0x0004)
};


class MaterialExpressionSphericalParticleOpacity : public MaterialExpression
{
  ExpressionInput*                                                    Density                                           //0x0040(0x000C)
  *                                                                   ConstantDensity                                   //0x0054(0x0004)
};


class MaterialExpressionSquareRoot : public MaterialExpression
{
  ExpressionInput*                                                    Input                                             //0x0040(0x000C)
};


class MaterialExpressionStaticBool : public MaterialExpression
{
  *                                                                   Value                                             //0x0040(0x0001)
};


class MaterialExpressionStaticBoolParameter : public MaterialExpressionParameter
{
  *                                                                   DefaultValue                                      //0x0058(0x0001)
};


class MaterialExpressionStaticComponentMaskParameter : public MaterialExpressionParameter
{
  ExpressionInput*                                                    Input                                             //0x0058(0x000C)
  *                                                                   DefaultR                                          //0x006C(0x0001)
  *                                                                   DefaultG                                          //0x006C(0x0001)
  *                                                                   DefaultB                                          //0x006C(0x0001)
  *                                                                   DefaultA                                          //0x006C(0x0001)
};


class MaterialExpressionStaticSwitch : public MaterialExpression
{
  *                                                                   DefaultValue                                      //0x0040(0x0001)
  ExpressionInput*                                                    A                                                 //0x0044(0x000C)
  ExpressionInput*                                                    B                                                 //0x0058(0x000C)
  ExpressionInput*                                                    Value                                             //0x006C(0x000C)
};


class MaterialExpressionStaticSwitchParameter : public MaterialExpressionStaticBoolParameter
{
  ExpressionInput*                                                    A                                                 //0x0060(0x000C)
  ExpressionInput*                                                    B                                                 //0x0074(0x000C)
};


class MaterialExpressionSubtract : public MaterialExpression
{
  ExpressionInput*                                                    A                                                 //0x0040(0x000C)
  ExpressionInput*                                                    B                                                 //0x0054(0x000C)
  *                                                                   ConstA                                            //0x0068(0x0004)
  *                                                                   ConstB                                            //0x006C(0x0004)
};


class MaterialExpressionTangent : public MaterialExpression
{
  ExpressionInput*                                                    Input                                             //0x0040(0x000C)
  *                                                                   Period                                            //0x0054(0x0004)
};


class MaterialExpressionTangentOutput : public MaterialExpressionCustomOutput
{
  ExpressionInput*                                                    Input                                             //0x0040(0x000C)
};


class MaterialExpressionTemporalSobol : public MaterialExpression
{
  ExpressionInput*                                                    Index                                             //0x0040(0x000C)
  ExpressionInput*                                                    Seed                                              //0x0054(0x000C)
  *                                                                   ConstIndex                                        //0x0068(0x0004)
  Vector2D*                                                           ConstSeed                                         //0x006C(0x0008)
};


class MaterialExpressionTextureCoordinate : public MaterialExpression
{
  *                                                                   CoordinateIndex                                   //0x0040(0x0004)
  *                                                                   UTiling                                           //0x0044(0x0004)
  *                                                                   VTiling                                           //0x0048(0x0004)
  *                                                                   UnMirrorU                                         //0x004C(0x0001)
  *                                                                   UnMirrorV                                         //0x004C(0x0001)
};


class MaterialExpressionTextureObject : public MaterialExpressionTextureBase
{
};


class MaterialExpressionTextureObjectParameter : public MaterialExpressionTextureSampleParameter
{
};


class MaterialExpressionTextureProperty : public MaterialExpression
{
  ExpressionInput*                                                    TextureObject                                     //0x0040(0x000C)
  EMaterialExposedTextureProperty*                                    Property                                          //0x0054(0x0001)
};


class MaterialExpressionTextureSampleParameter2DArray : public MaterialExpressionTextureSampleParameter
{
};


class MaterialExpressionTextureSampleParameterCube : public MaterialExpressionTextureSampleParameter
{
};


class MaterialExpressionTextureSampleParameterSubUV : public MaterialExpressionTextureSampleParameter2D
{
  *                                                                   bBlend                                            //0x00F0(0x0001)
};


class MaterialExpressionTextureSampleParameterVolume : public MaterialExpressionTextureSampleParameter
{
};


class MaterialExpressionTime : public MaterialExpression
{
  *                                                                   bIgnorePause                                      //0x0040(0x0001)
  *                                                                   bOverride_Period                                  //0x0040(0x0001)
  *                                                                   Period                                            //0x0044(0x0004)
};


class MaterialExpressionTransform : public MaterialExpression
{
  ExpressionInput*                                                    Input                                             //0x0040(0x000C)
  EMaterialVectorCoordTransformSource*                                TransformSourceType                               //0x0054(0x0001)
  EMaterialVectorCoordTransform*                                      TransformType                                     //0x0055(0x0001)
};


class MaterialExpressionTransformPosition : public MaterialExpression
{
  ExpressionInput*                                                    Input                                             //0x0040(0x000C)
  EMaterialPositionTransformSource*                                   TransformSourceType                               //0x0054(0x0001)
  EMaterialPositionTransformSource*                                   TransformType                                     //0x0055(0x0001)
};


class MaterialExpressionTruncate : public MaterialExpression
{
  ExpressionInput*                                                    Input                                             //0x0040(0x000C)
};


class MaterialExpressionTwoSidedSign : public MaterialExpression
{
};


class MaterialExpressionVectorNoise : public MaterialExpression
{
  ExpressionInput*                                                    Position                                          //0x0040(0x000C)
  EVectorNoiseFunction*                                               NoiseFunction                                     //0x0054(0x0001)
  *                                                                   Quality                                           //0x0058(0x0004)
  *                                                                   bTiling                                           //0x005C(0x0001)
  *                                                                   TileSize                                          //0x0060(0x0004)
};


class MaterialExpressionVertexColor : public MaterialExpression
{
};


class MaterialExpressionVertexInterpolator : public MaterialExpressionCustomOutput
{
  ExpressionInput*                                                    Input                                             //0x0040(0x000C)
};


class MaterialExpressionVertexNormalWS : public MaterialExpression
{
};


class MaterialExpressionViewProperty : public MaterialExpression
{
  EMaterialExposedViewProperty*                                       Property                                          //0x0040(0x0001)
};


class MaterialExpressionViewSize : public MaterialExpression
{
};


class MaterialExpressionVirtualTextureFeatureSwitch : public MaterialExpression
{
  ExpressionInput*                                                    No                                                //0x0040(0x000C)
  ExpressionInput*                                                    Yes                                               //0x0054(0x000C)
};


class MaterialExpressionWorldPosition : public MaterialExpression
{
  EWorldPositionIncludedOffsets*                                      WorldPositionShaderOffset                         //0x0040(0x0001)
};


class MaterialFunctionInterface : public Object
{
  Guid*                                                               StateId                                           //0x0028(0x0010)
  UnderlyingType*                                                     MaterialFunctionUsage                             //0x0038(0x0001)
};


class MaterialFunction : public MaterialFunctionInterface
{
  *                                                                   Description                                       //0x0040(0x0010)
  FunctionExpressions*                                                FunctionExpressions                               //0x0050(0x0010)
  *                                                                   bExposeToLibrary                                  //0x0060(0x0001)
  *                                                                   bPrefixParameterNames                             //0x0060(0x0001)
  *                                                                   bReentrantFlag                                    //0x0060(0x0001)
};


class MaterialFunctionInstance : public MaterialFunctionInterface
{
  MaterialFunctionInterface*                                          Parent                                            //0x0040(0x0008)
  MaterialFunctionInterface*                                          Base                                              //0x0048(0x0008)
  ScalarParameterValues*                                              ScalarParameterValues                             //0x0050(0x0010)
  VectorParameterValues*                                              VectorParameterValues                             //0x0060(0x0010)
  TextureParameterValues*                                             TextureParameterValues                            //0x0070(0x0010)
  FontParameterValues*                                                FontParameterValues                               //0x0080(0x0010)
  StaticSwitchParameterValues*                                        StaticSwitchParameterValues                       //0x0090(0x0010)
  StaticComponentMaskParameterValues*                                 StaticComponentMaskParameterValues                //0x00A0(0x0010)
  RuntimeVirtualTextureParameterValues*                               RuntimeVirtualTextureParameterValues              //0x00B0(0x0010)
};


class MaterialFunctionMaterialLayer : public MaterialFunction
{
};


class MaterialFunctionMaterialLayerInstance : public MaterialFunctionInstance
{
};


class MaterialFunctionMaterialLayerBlend : public MaterialFunction
{
};


class MaterialFunctionMaterialLayerBlendInstance : public MaterialFunctionInstance
{
};


class MaterialInstanceActor : public Actor
{
  TargetActors*                                                       TargetActors                                      //0x0218(0x0010)
};


class MaterialInstanceDynamic : public MaterialInstance
{
  *                                                                   SetVectorParameterValue                           //0x0000(0x0229)
  Value*                                                              SetTextureParameterValue                          //0x0000(0x0229)
  *                                                                   SetScalarParameterValue                           //0x0000(0x0229)
  SourceA*                                                            K2_InterpolateMaterialInstanceParams              //0x0000(0x0229)
  *                                                                   K2_GetVectorParameterValue                        //0x0000(0x0229)
  ReturnValue*                                                        K2_GetTextureParameterValue                       //0x0000(0x0229)
  *                                                                   K2_GetScalarParameterValue                        //0x0000(0x0229)
  Source*                                                             K2_CopyMaterialInstanceParameters                 //0x0000(0x0229)
  MaterialInstance*                                                   CopyParameterOverrides                            //0x0000(0x0229)
  Source*                                                             CopyInterpParameters                              //0x0000(0x0229)
};


class MaterialParameterCollection : public Object
{
  Guid*                                                               StateId                                           //0x0028(0x0010)
  ScalarParameters*                                                   ScalarParameters                                  //0x0038(0x0010)
  VectorParameters*                                                   VectorParameters                                  //0x0048(0x0010)
};


class MaterialParameterCollectionInstance : public Object
{
  MaterialParameterCollection*                                        Collection                                        //0x0030(0x0008)
};


class MatineeActor : public Actor
{
  InterpData*                                                         MatineeData                                       //0x0218(0x0008)
  *                                                                   MatineeControllerName                             //0x0220(0x0008)
  *                                                                   PlayRate                                          //0x0228(0x0004)
  *                                                                   bPlayOnLevelLoad                                  //0x022C(0x0001)
  *                                                                   bForceStartPos                                    //0x022C(0x0001)
  *                                                                   ForceStartPosition                                //0x0230(0x0004)
  *                                                                   bLooping                                          //0x0234(0x0001)
  *                                                                   bRewindOnPlay                                     //0x0234(0x0001)
  *                                                                   bNoResetOnRewind                                  //0x0234(0x0001)
  *                                                                   bRewindIfAlreadyPlaying                           //0x0234(0x0001)
  *                                                                   bDisableRadioFilter                               //0x0234(0x0001)
  *                                                                   bClientSideOnly                                   //0x0234(0x0001)
  *                                                                   bSkipUpdateIfNotVisible                           //0x0234(0x0001)
  *                                                                   bIsSkippable                                      //0x0234(0x0001)
  *                                                                   PreferredSplitScreenNum                           //0x0238(0x0004)
  *                                                                   bDisableMovementInput                             //0x023C(0x0001)
  *                                                                   bDisableLookAtInput                               //0x023C(0x0001)
  *                                                                   bHidePlayer                                       //0x023C(0x0001)
  *                                                                   bHideHud                                          //0x023C(0x0001)
  GroupActorInfos*                                                    GroupActorInfos                                   //0x0240(0x0010)
  *                                                                   bShouldShowGore                                   //0x0250(0x0001)
  GroupInst*                                                          GroupInst                                         //0x0258(0x0010)
  CameraCuts*                                                         CameraCuts                                        //0x0268(0x0010)
  *                                                                   bIsPlaying                                        //0x0278(0x0001)
  *                                                                   bReversePlayback                                  //0x0278(0x0001)
  *                                                                   bPaused                                           //0x0278(0x0001)
  *                                                                   bPendingStop                                      //0x0278(0x0001)
  *                                                                   InterpPosition                                    //0x027C(0x0004)
  *                                                                   ReplicationForceIsPlaying                         //0x0284(0x0001)
  OnMatineeEvent__DelegateSignature*                                  OnPlay                                            //0x0288(0x0010)
  OnMatineeEvent__DelegateSignature*                                  OnStop                                            //0x0298(0x0010)
  OnMatineeEvent__DelegateSignature*                                  OnPause                                           //0x02A8(0x0010)
  *                                                                   Stop                                              //0x0000(0x0229)
  *                                                                   SetPosition                                       //0x0000(0x0229)
  *                                                                   SetLoopingState                                   //0x0000(0x0229)
  *                                                                   Reverse                                           //0x0000(0x0229)
  *                                                                   Play                                              //0x0000(0x0229)
  *                                                                   Pause                                             //0x0000(0x0229)
  *                                                                   EnableGroupByName                                 //0x0000(0x0229)
  *                                                                   ChangePlaybackDirection                           //0x0000(0x0229)
};


class MatineeActorCameraAnim : public MatineeActor
{
  CameraAnim*                                                         CameraAnim                                        //0x02C0(0x0008)
};


class MatineeAnimInterface : public Interface
{
};


class MatineeInterface : public Interface
{
};


class MeshMergeCullingVolume : public Volume
{
};


class MeshSimplificationSettings : public DeveloperSettings
{
  *                                                                   MeshReductionModuleName                           //0x0038(0x0008)
};


class MeshVertexPainterKismetLibrary : public BlueprintFunctionLibrary
{
  StaticMeshComponent*                                                RemovePaintedVertices                             //0x0000(0x0229)
  StaticMeshComponent*                                                PaintVerticesSingleColor                          //0x0000(0x0229)
  StaticMeshComponent*                                                PaintVerticesLerpAlongAxis                        //0x0000(0x0229)
};


class MicroTransactionBase : public PlatformInterfaceBase
{
  AvailableProducts*                                                  AvailableProducts                                 //0x0038(0x0010)
  *                                                                   LastError                                         //0x0048(0x0010)
  *                                                                   LastErrorSolution                                 //0x0058(0x0010)
};


class ModelComponent : public PrimitiveComponent
{
  BodySetup*                                                          ModelBodySetup                                    //0x03F0(0x0008)
};


class MorphTarget : public Object
{
  SkeletalMesh*                                                       BaseSkelMesh                                      //0x0028(0x0008)
};


class NavAgentInterface : public Interface
{
};


class NavAreaBase : public Object
{
};


class NavCollisionBase : public Object
{
  *                                                                   bIsDynamicObstacle                                //0x0028(0x0001)
};


class NavEdgeProviderInterface : public Interface
{
};


class NavigationDataChunk : public Object
{
  *                                                                   NavigationDataName                                //0x0028(0x0008)
};


class NavigationDataInterface : public Interface
{
};


class NavigationObjectBase : public Actor
{
  CapsuleComponent*                                                   CapsuleComponent                                  //0x0220(0x0008)
  BillboardComponent*                                                 GoodSprite                                        //0x0228(0x0008)
  BillboardComponent*                                                 BadSprite                                         //0x0230(0x0008)
  *                                                                   bIsPIEPlayerStart                                 //0x0238(0x0001)
};


class NavigationSystemBase : public Object
{
};


class NavigationSystemConfig : public Object
{
  SoftClassPath*                                                      NavigationSystemClass                             //0x0028(0x0018)
  NavAgentSelector*                                                   SupportedAgentsMask                               //0x0040(0x0004)
  *                                                                   DefaultAgentName                                  //0x0044(0x0008)
  *                                                                   bIsOverriden                                      //0x004C(0x0001)
};


class NullNavSysConfig : public NavigationSystemConfig
{
};


class NavLinkDefinition : public Object
{
  Links*                                                              Links                                             //0x0028(0x0010)
  SegmentLinks*                                                       SegmentLinks                                      //0x0038(0x0010)
};


class NavPathObserverInterface : public Interface
{
};


class NavRelevantInterface : public Interface
{
};


class SimulatedClientNetConnection : public NetConnection
{
};


class NetworkPredictionInterface : public Interface
{
};


class NetworkSettings : public DeveloperSettings
{
  *                                                                   bVerifyPeer                                       //0x0038(0x0001)
  *                                                                   bEnableMultiplayerWorldOriginRebasing             //0x0038(0x0001)
  *                                                                   MaxRepArraySize                                   //0x003C(0x0004)
  *                                                                   MaxRepArrayMemory                                 //0x0040(0x0004)
  NetworkEmulationProfiles*                                           NetworkEmulationProfiles                          //0x0048(0x0010)
};


class NodeMappingContainer : public Object
{
  SourceItems_Key*                                                    SourceItems                                       //0x0028(0x0050)
  TargetItems_Key*                                                    TargetItems                                       //0x0078(0x0050)
  SourceToTarget_Key*                                                 SourceToTarget                                    //0x00C8(0x0050)
  Object*                                                             SourceAsset                                       //0x0118(0x0028)
  Object*                                                             TargetAsset                                       //0x0140(0x0028)
};


class NodeMappingProviderInterface : public Interface
{
};


class Note : public Actor
{
};


class ObjectLibrary : public Object
{
  Class*                                                              ObjectBaseClass                                   //0x0028(0x0008)
  *                                                                   bHasBlueprintClasses                              //0x0030(0x0001)
  Objects*                                                            Objects                                           //0x0038(0x0010)
  WeakObjects*                                                        WeakObjects                                       //0x0048(0x0010)
  *                                                                   bUseWeakReferences                                //0x0058(0x0001)
  *                                                                   bIsFullyLoaded                                    //0x0059(0x0001)
};


class ObjectReferencer : public Object
{
  ReferencedObjects*                                                  ReferencedObjects                                 //0x0028(0x0010)
};


class PackageMapClient : public PackageMap
{
};


class PainCausingVolume : public PhysicsVolume
{
  *                                                                   bPainCausing                                      //0x0260(0x0001)
  *                                                                   DamagePerSec                                      //0x0264(0x0004)
  Class*                                                              DamageType                                        //0x0268(0x0008)
  *                                                                   PainInterval                                      //0x0270(0x0004)
  *                                                                   bEntryPain                                        //0x0274(0x0001)
  *                                                                   BACKUP_bPainCausing                               //0x0274(0x0001)
  Controller*                                                         DamageInstigator                                  //0x0278(0x0008)
};


class ParticleEmitter : public Object
{
  *                                                                   EmitterName                                       //0x0028(0x0008)
  *                                                                   SubUVDataOffset                                   //0x0030(0x0004)
  EEmitterRenderMode*                                                 EmitterRenderMode                                 //0x0034(0x0001)
  UnderlyingType*                                                     SignificanceLevel                                 //0x0035(0x0001)
  *                                                                   bUseLegacySpawningBehavior                        //0x0037(0x0001)
  *                                                                   ConvertedModules                                  //0x0037(0x0001)
  *                                                                   bIsSoloing                                        //0x0037(0x0001)
  *                                                                   bCookedOut                                        //0x0037(0x0001)
  *                                                                   bDisabledLODsKeepEmitterAlive                     //0x0037(0x0001)
  *                                                                   bDisableWhenInsignficant                          //0x0038(0x0001)
  LODLevels*                                                          LODLevels                                         //0x0040(0x0010)
  *                                                                   PeakActiveParticles                               //0x0050(0x0004)
  *                                                                   InitialAllocationCount                            //0x0054(0x0004)
  *                                                                   QualityLevelSpawnRateScale                        //0x0058(0x0004)
  *                                                                   DetailModeBitmask                                 //0x005C(0x0004)
};


class ParticleEventManager : public Actor
{
};


class ParticleLODLevel : public Object
{
  *                                                                   Level                                             //0x0028(0x0004)
  *                                                                   bEnabled                                          //0x002C(0x0001)
  ParticleModuleRequired*                                             RequiredModule                                    //0x0030(0x0008)
  Modules*                                                            Modules                                           //0x0038(0x0010)
  ParticleModuleTypeDataBase*                                         TypeDataModule                                    //0x0048(0x0008)
  ParticleModuleSpawn*                                                SpawnModule                                       //0x0050(0x0008)
  ParticleModuleEventGenerator*                                       EventGenerator                                    //0x0058(0x0008)
  SpawningModules*                                                    SpawningModules                                   //0x0060(0x0010)
  SpawnModules*                                                       SpawnModules                                      //0x0070(0x0010)
  UpdateModules*                                                      UpdateModules                                     //0x0080(0x0010)
  OrbitModules*                                                       OrbitModules                                      //0x0090(0x0010)
  EventReceiverModules*                                               EventReceiverModules                              //0x00A0(0x0010)
  *                                                                   ConvertedModules                                  //0x00B0(0x0001)
  *                                                                   PeakActiveParticles                               //0x00B4(0x0004)
};


class ParticleModule : public Object
{
  *                                                                   bSpawnModule                                      //0x0028(0x0001)
  *                                                                   bUpdateModule                                     //0x0028(0x0001)
  *                                                                   bFinalUpdateModule                                //0x0028(0x0001)
  *                                                                   bUpdateForGPUEmitter                              //0x0028(0x0001)
  *                                                                   bCurvesAsColor                                    //0x0028(0x0001)
  *                                                                   b3DDrawMode                                       //0x0028(0x0001)
  *                                                                   bSupported3DDrawMode                              //0x0028(0x0001)
  *                                                                   bEnabled                                          //0x0028(0x0001)
  *                                                                   bEditable                                         //0x0029(0x0001)
  *                                                                   LODDuplicate                                      //0x0029(0x0001)
  *                                                                   bSupportsRandomSeed                               //0x0029(0x0001)
  *                                                                   bRequiresLoopingNotification                      //0x0029(0x0001)
  *                                                                   LODValidity                                       //0x002A(0x0001)
};


class ParticleModuleAccelerationBase : public ParticleModule
{
  *                                                                   bAlwaysInWorldSpace                               //0x0030(0x0001)
};


class ParticleModuleAcceleration : public ParticleModuleAccelerationBase
{
  RawDistributionVector*                                              Acceleration                                      //0x0038(0x0048)
  *                                                                   bApplyOwnerScale                                  //0x0080(0x0001)
};


class ParticleModuleAccelerationConstant : public ParticleModuleAccelerationBase
{
  Vector*                                                             Acceleration                                      //0x0038(0x000C)
};


class ParticleModuleAccelerationDrag : public ParticleModuleAccelerationBase
{
  DistributionFloat*                                                  DragCoefficient                                   //0x0038(0x0008)
  RawDistributionFloat*                                               DragCoefficientRaw                                //0x0040(0x0030)
};


class ParticleModuleAccelerationDragScaleOverLife : public ParticleModuleAccelerationBase
{
  DistributionFloat*                                                  DragScale                                         //0x0038(0x0008)
  RawDistributionFloat*                                               DragScaleRaw                                      //0x0040(0x0030)
};


class ParticleModuleAccelerationOverLifetime : public ParticleModuleAccelerationBase
{
  RawDistributionVector*                                              AccelOverLife                                     //0x0038(0x0048)
};


class ParticleModuleAttractorBase : public ParticleModule
{
};


class ParticleModuleAttractorLine : public ParticleModuleAttractorBase
{
  Vector*                                                             EndPoint0                                         //0x0030(0x000C)
  Vector*                                                             EndPoint1                                         //0x003C(0x000C)
  RawDistributionFloat*                                               Range                                             //0x0048(0x0030)
  RawDistributionFloat*                                               Strength                                          //0x0078(0x0030)
};


class ParticleModuleAttractorParticle : public ParticleModuleAttractorBase
{
  *                                                                   EmitterName                                       //0x0030(0x0008)
  RawDistributionFloat*                                               Range                                             //0x0038(0x0030)
  *                                                                   bStrengthByDistance                               //0x0068(0x0001)
  RawDistributionFloat*                                               Strength                                          //0x0070(0x0030)
  *                                                                   bAffectBaseVelocity                               //0x00A0(0x0001)
  EAttractorParticleSelectionMethod*                                  SelectionMethod                                   //0x00A4(0x0001)
  *                                                                   bRenewSource                                      //0x00A8(0x0001)
  *                                                                   bInheritSourceVel                                 //0x00A8(0x0001)
  *                                                                   LastSelIndex                                      //0x00AC(0x0004)
};


class ParticleModuleAttractorPoint : public ParticleModuleAttractorBase
{
  RawDistributionVector*                                              Position                                          //0x0030(0x0048)
  RawDistributionFloat*                                               Range                                             //0x0078(0x0030)
  RawDistributionFloat*                                               Strength                                          //0x00A8(0x0030)
  *                                                                   StrengthByDistance                                //0x00D8(0x0001)
  *                                                                   bAffectBaseVelocity                               //0x00D8(0x0001)
  *                                                                   bOverrideVelocity                                 //0x00D8(0x0001)
  *                                                                   bUseWorldSpacePosition                            //0x00D8(0x0001)
  *                                                                   Positive_X                                        //0x00D8(0x0001)
  *                                                                   Positive_Y                                        //0x00D8(0x0001)
  *                                                                   Positive_Z                                        //0x00D8(0x0001)
  *                                                                   Negative_X                                        //0x00D8(0x0001)
  *                                                                   Negative_Y                                        //0x00D9(0x0001)
  *                                                                   Negative_Z                                        //0x00D9(0x0001)
};


class ParticleModuleAttractorPointGravity : public ParticleModuleAttractorBase
{
  Vector*                                                             Position                                          //0x0030(0x000C)
  *                                                                   Radius                                            //0x003C(0x0004)
  DistributionFloat*                                                  Strength                                          //0x0040(0x0008)
  RawDistributionFloat*                                               StrengthRaw                                       //0x0048(0x0030)
};


class ParticleModuleBeamBase : public ParticleModule
{
};


class ParticleModuleBeamModifier : public ParticleModuleBeamBase
{
  BeamModifierType*                                                   ModifierType                                      //0x0030(0x0001)
  BeamModifierOptions*                                                PositionOptions                                   //0x0034(0x0004)
  RawDistributionVector*                                              Position                                          //0x0038(0x0048)
  BeamModifierOptions*                                                TangentOptions                                    //0x0080(0x0004)
  RawDistributionVector*                                              Tangent                                           //0x0088(0x0048)
  *                                                                   bAbsoluteTangent                                  //0x00D0(0x0001)
  BeamModifierOptions*                                                StrengthOptions                                   //0x00D4(0x0004)
  RawDistributionFloat*                                               Strength                                          //0x00D8(0x0030)
};


class ParticleModuleBeamNoise : public ParticleModuleBeamBase
{
  *                                                                   bLowFreq_Enabled                                  //0x0030(0x0001)
  *                                                                   Frequency                                         //0x0034(0x0004)
  *                                                                   Frequency_LowRange                                //0x0038(0x0004)
  RawDistributionVector*                                              NoiseRange                                        //0x0040(0x0048)
  RawDistributionFloat*                                               NoiseRangeScale                                   //0x0088(0x0030)
  *                                                                   bNRScaleEmitterTime                               //0x00B8(0x0001)
  RawDistributionVector*                                              NoiseSpeed                                        //0x00C0(0x0048)
  *                                                                   bSmooth                                           //0x0108(0x0001)
  *                                                                   NoiseLockRadius                                   //0x010C(0x0004)
  *                                                                   bNoiseLock                                        //0x0110(0x0001)
  *                                                                   bOscillate                                        //0x0110(0x0001)
  *                                                                   NoiseLockTime                                     //0x0114(0x0004)
  *                                                                   NoiseTension                                      //0x0118(0x0004)
  *                                                                   bUseNoiseTangents                                 //0x011C(0x0001)
  RawDistributionFloat*                                               NoiseTangentStrength                              //0x0120(0x0030)
  *                                                                   NoiseTessellation                                 //0x0150(0x0004)
  *                                                                   bTargetNoise                                      //0x0154(0x0001)
  *                                                                   FrequencyDistance                                 //0x0158(0x0004)
  *                                                                   bApplyNoiseScale                                  //0x015C(0x0001)
  RawDistributionFloat*                                               NoiseScale                                        //0x0160(0x0030)
};


class ParticleModuleBeamSource : public ParticleModuleBeamBase
{
  Beam2SourceTargetMethod*                                            SourceMethod                                      //0x0030(0x0001)
  *                                                                   SourceName                                        //0x0034(0x0008)
  *                                                                   bSourceAbsolute                                   //0x003C(0x0001)
  RawDistributionVector*                                              Source                                            //0x0040(0x0048)
  *                                                                   bLockSource                                       //0x0088(0x0001)
  Beam2SourceTargetTangentMethod*                                     SourceTangentMethod                               //0x008C(0x0001)
  RawDistributionVector*                                              SourceTangent                                     //0x0090(0x0048)
  *                                                                   bLockSourceTangent                                //0x00D8(0x0001)
  RawDistributionFloat*                                               SourceStrength                                    //0x00E0(0x0030)
  *                                                                   bLockSourceStength                                //0x0110(0x0001)
};


class ParticleModuleBeamTarget : public ParticleModuleBeamBase
{
  Beam2SourceTargetMethod*                                            TargetMethod                                      //0x0030(0x0001)
  *                                                                   TargetName                                        //0x0034(0x0008)
  RawDistributionVector*                                              Target                                            //0x0040(0x0048)
  *                                                                   bTargetAbsolute                                   //0x0088(0x0001)
  *                                                                   bLockTarget                                       //0x0088(0x0001)
  Beam2SourceTargetTangentMethod*                                     TargetTangentMethod                               //0x008C(0x0001)
  RawDistributionVector*                                              TargetTangent                                     //0x0090(0x0048)
  *                                                                   bLockTargetTangent                                //0x00D8(0x0001)
  RawDistributionFloat*                                               TargetStrength                                    //0x00E0(0x0030)
  *                                                                   bLockTargetStength                                //0x0110(0x0001)
  *                                                                   LockRadius                                        //0x0114(0x0004)
};


class ParticleModuleCameraBase : public ParticleModule
{
};


class ParticleModuleCameraOffset : public ParticleModuleCameraBase
{
  RawDistributionFloat*                                               CameraOffset                                      //0x0030(0x0030)
  *                                                                   bSpawnTimeOnly                                    //0x0060(0x0001)
  EParticleCameraOffsetUpdateMethod*                                  UpdateMethod                                      //0x0064(0x0001)
};


class ParticleModuleCollisionBase : public ParticleModule
{
};


class ParticleModuleCollision : public ParticleModuleCollisionBase
{
  RawDistributionVector*                                              DampingFactor                                     //0x0030(0x0048)
  RawDistributionVector*                                              DampingFactorRotation                             //0x0078(0x0048)
  RawDistributionFloat*                                               MaxCollisions                                     //0x00C0(0x0030)
  EParticleCollisionComplete*                                         CollisionCompletionOption                         //0x00F0(0x0001)
  CollisionTypes*                                                     CollisionTypes                                    //0x00F8(0x0010)
  *                                                                   bApplyPhysics                                     //0x0110(0x0001)
  *                                                                   bIgnoreTriggerVolumes                             //0x0110(0x0001)
  RawDistributionFloat*                                               ParticleMass                                      //0x0118(0x0030)
  *                                                                   DirScalar                                         //0x0148(0x0004)
  *                                                                   bPawnsDoNotDecrementCount                         //0x014C(0x0001)
  *                                                                   bOnlyVerticalNormalsDecrementCount                //0x014C(0x0001)
  *                                                                   VerticalFudgeFactor                               //0x0150(0x0004)
  RawDistributionFloat*                                               DelayAmount                                       //0x0158(0x0030)
  *                                                                   bDropDetail                                       //0x0188(0x0001)
  *                                                                   bCollideOnlyIfVisible                             //0x0188(0x0001)
  *                                                                   bIgnoreSourceActor                                //0x0188(0x0001)
  *                                                                   MaxCollisionDistance                              //0x018C(0x0004)
};


class ParticleModuleCollisionGPU : public ParticleModuleCollisionBase
{
  RawDistributionFloat*                                               Resilience                                        //0x0030(0x0030)
  RawDistributionFloat*                                               ResilienceScaleOverLife                           //0x0060(0x0030)
  *                                                                   Friction                                          //0x0090(0x0004)
  *                                                                   RandomSpread                                      //0x0094(0x0004)
  *                                                                   RandomDistribution                                //0x0098(0x0004)
  *                                                                   RadiusScale                                       //0x009C(0x0004)
  *                                                                   RadiusBias                                        //0x00A0(0x0004)
  EParticleCollisionResponse*                                         Response                                          //0x00A4(0x0001)
  EParticleCollisionMode*                                             CollisionMode                                     //0x00A5(0x0001)
};


class ParticleModuleColorBase : public ParticleModule
{
};


class ParticleModuleColor : public ParticleModuleColorBase
{
  RawDistributionVector*                                              StartColor                                        //0x0030(0x0048)
  RawDistributionFloat*                                               StartAlpha                                        //0x0078(0x0030)
  *                                                                   bClampAlpha                                       //0x00A8(0x0001)
};


class ParticleModuleColor_Seeded : public ParticleModuleColor
{
  ParticleRandomSeedInfo*                                             RandomSeedInfo                                    //0x00B0(0x0020)
};


class ParticleModuleColorOverLife : public ParticleModuleColorBase
{
  RawDistributionVector*                                              ColorOverLife                                     //0x0030(0x0048)
  RawDistributionFloat*                                               AlphaOverLife                                     //0x0078(0x0030)
  *                                                                   bClampAlpha                                       //0x00A8(0x0001)
};


class ParticleModuleColorScaleOverLife : public ParticleModuleColorBase
{
  RawDistributionVector*                                              ColorScaleOverLife                                //0x0030(0x0048)
  RawDistributionFloat*                                               AlphaScaleOverLife                                //0x0078(0x0030)
  *                                                                   bEmitterTime                                      //0x00A8(0x0001)
};


class ParticleModuleEventBase : public ParticleModule
{
};


class ParticleModuleEventGenerator : public ParticleModuleEventBase
{
  Events*                                                             Events                                            //0x0030(0x0010)
};


class ParticleModuleEventReceiverBase : public ParticleModuleEventBase
{
  EParticleEventType*                                                 EventGeneratorType                                //0x0030(0x0001)
  *                                                                   EventName                                         //0x0034(0x0008)
};


class ParticleModuleEventReceiverKillParticles : public ParticleModuleEventReceiverBase
{
  *                                                                   bStopSpawning                                     //0x0040(0x0001)
};


class ParticleModuleEventReceiverSpawn : public ParticleModuleEventReceiverBase
{
  RawDistributionFloat*                                               SpawnCount                                        //0x0040(0x0030)
  *                                                                   bUseParticleTime                                  //0x0070(0x0001)
  *                                                                   bUsePSysLocation                                  //0x0070(0x0001)
  *                                                                   bInheritVelocity                                  //0x0070(0x0001)
  RawDistributionVector*                                              InheritVelocityScale                              //0x0078(0x0048)
  PhysicalMaterials*                                                  PhysicalMaterials                                 //0x00C0(0x0010)
  *                                                                   bBanPhysicalMaterials                             //0x00D0(0x0001)
};


class ParticleModuleEventSendToGame : public Object
{
};


class ParticleModuleKillBase : public ParticleModule
{
};


class ParticleModuleKillBox : public ParticleModuleKillBase
{
  RawDistributionVector*                                              LowerLeftCorner                                   //0x0030(0x0048)
  RawDistributionVector*                                              UpperRightCorner                                  //0x0078(0x0048)
  *                                                                   bAbsolute                                         //0x00C0(0x0001)
  *                                                                   bKillInside                                       //0x00C0(0x0001)
  *                                                                   bAxisAlignedAndFixedSize                          //0x00C0(0x0001)
};


class ParticleModuleKillHeight : public ParticleModuleKillBase
{
  RawDistributionFloat*                                               Height                                            //0x0030(0x0030)
  *                                                                   bAbsolute                                         //0x0060(0x0001)
  *                                                                   bFloor                                            //0x0060(0x0001)
  *                                                                   bApplyPSysScale                                   //0x0060(0x0001)
};


class ParticleModuleLifetimeBase : public ParticleModule
{
};


class ParticleModuleLifetime : public ParticleModuleLifetimeBase
{
  RawDistributionFloat*                                               LifeTime                                          //0x0030(0x0030)
};


class ParticleModuleLifetime_Seeded : public ParticleModuleLifetime
{
  ParticleRandomSeedInfo*                                             RandomSeedInfo                                    //0x0060(0x0020)
};


class ParticleModuleLightBase : public ParticleModule
{
};


class ParticleModuleLight : public ParticleModuleLightBase
{
  *                                                                   bUseInverseSquaredFalloff                         //0x0030(0x0001)
  *                                                                   bAffectsTranslucency                              //0x0031(0x0001)
  *                                                                   bPreviewLightRadius                               //0x0032(0x0001)
  *                                                                   SpawnFraction                                     //0x0034(0x0004)
  RawDistributionVector*                                              ColorScaleOverLife                                //0x0038(0x0048)
  RawDistributionFloat*                                               BrightnessOverLife                                //0x0080(0x0030)
  RawDistributionFloat*                                               RadiusScale                                       //0x00B0(0x0030)
  RawDistributionFloat*                                               LightExponent                                     //0x00E0(0x0030)
  LightingChannels*                                                   LightingChannels                                  //0x0110(0x0001)
  *                                                                   VolumetricScatteringIntensity                     //0x0114(0x0004)
  *                                                                   bHighQualityLights                                //0x0118(0x0001)
  *                                                                   bShadowCastingLights                              //0x0119(0x0001)
};


class ParticleModuleLight_Seeded : public ParticleModuleLight
{
  ParticleRandomSeedInfo*                                             RandomSeedInfo                                    //0x0120(0x0020)
};


class ParticleModuleLocationBase : public ParticleModule
{
};


class ParticleModuleLocation : public ParticleModuleLocationBase
{
  RawDistributionVector*                                              StartLocation                                     //0x0030(0x0048)
  *                                                                   DistributeOverNPoints                             //0x0078(0x0004)
  *                                                                   DistributeThreshold                               //0x007C(0x0004)
};


class ParticleModuleLocation_Seeded : public ParticleModuleLocation
{
  ParticleRandomSeedInfo*                                             RandomSeedInfo                                    //0x0080(0x0020)
};


class ParticleModuleLocationBoneSocket : public ParticleModuleLocationBase
{
  ELocationBoneSocketSource*                                          SourceType                                        //0x0030(0x0001)
  Vector*                                                             UniversalOffset                                   //0x0034(0x000C)
  SourceLocations*                                                    SourceLocations                                   //0x0040(0x0010)
  ELocationBoneSocketSelectionMethod*                                 SelectionMethod                                   //0x0050(0x0001)
  *                                                                   bUpdatePositionEachFrame                          //0x0054(0x0001)
  *                                                                   bOrientMeshEmitters                               //0x0054(0x0001)
  *                                                                   bInheritBoneVelocity                              //0x0054(0x0001)
  *                                                                   InheritVelocityScale                              //0x0058(0x0004)
  *                                                                   SkelMeshActorParamName                            //0x005C(0x0008)
  *                                                                   NumPreSelectedIndices                             //0x0064(0x0004)
};


class ParticleModuleLocationDirect : public ParticleModuleLocationBase
{
  RawDistributionVector*                                              Location                                          //0x0030(0x0048)
  RawDistributionVector*                                              LocationOffset                                    //0x0078(0x0048)
  RawDistributionVector*                                              ScaleFactor                                       //0x00C0(0x0048)
  RawDistributionVector*                                              Direction                                         //0x0108(0x0048)
};


class ParticleModuleLocationEmitter : public ParticleModuleLocationBase
{
  *                                                                   EmitterName                                       //0x0030(0x0008)
  ELocationEmitterSelectionMethod*                                    SelectionMethod                                   //0x0038(0x0001)
  *                                                                   InheritSourceVelocity                             //0x003C(0x0001)
  *                                                                   InheritSourceVelocityScale                        //0x0040(0x0004)
  *                                                                   bInheritSourceRotation                            //0x0044(0x0001)
  *                                                                   InheritSourceRotationScale                        //0x0048(0x0004)
};


class ParticleModuleLocationEmitterDirect : public ParticleModuleLocationBase
{
  *                                                                   EmitterName                                       //0x0030(0x0008)
};


class ParticleModuleLocationPrimitiveBase : public ParticleModuleLocationBase
{
  *                                                                   Positive_X                                        //0x0030(0x0001)
  *                                                                   Positive_Y                                        //0x0030(0x0001)
  *                                                                   Positive_Z                                        //0x0030(0x0001)
  *                                                                   Negative_X                                        //0x0030(0x0001)
  *                                                                   Negative_Y                                        //0x0030(0x0001)
  *                                                                   Negative_Z                                        //0x0030(0x0001)
  *                                                                   SurfaceOnly                                       //0x0030(0x0001)
  *                                                                   Velocity                                          //0x0030(0x0001)
  RawDistributionFloat*                                               VelocityScale                                     //0x0038(0x0030)
  RawDistributionVector*                                              StartLocation                                     //0x0068(0x0048)
};


class ParticleModuleLocationPrimitiveCylinder : public ParticleModuleLocationPrimitiveBase
{
  *                                                                   RadialVelocity                                    //0x00B0(0x0001)
  RawDistributionFloat*                                               StartRadius                                       //0x00B8(0x0030)
  RawDistributionFloat*                                               StartHeight                                       //0x00E8(0x0030)
  CylinderHeightAxis*                                                 HeightAxis                                        //0x0118(0x0001)
};


class ParticleModuleLocationPrimitiveCylinder_Seeded : public ParticleModuleLocationPrimitiveCylinder
{
  ParticleRandomSeedInfo*                                             RandomSeedInfo                                    //0x0120(0x0020)
};


class ParticleModuleLocationPrimitiveSphere : public ParticleModuleLocationPrimitiveBase
{
  RawDistributionFloat*                                               StartRadius                                       //0x00B0(0x0030)
};


class ParticleModuleLocationPrimitiveSphere_Seeded : public ParticleModuleLocationPrimitiveSphere
{
  ParticleRandomSeedInfo*                                             RandomSeedInfo                                    //0x00E0(0x0020)
};


class ParticleModuleLocationPrimitiveTriangle : public ParticleModuleLocationBase
{
  RawDistributionVector*                                              StartOffset                                       //0x0030(0x0048)
  RawDistributionFloat*                                               Height                                            //0x0078(0x0030)
  RawDistributionFloat*                                               Angle                                             //0x00A8(0x0030)
  RawDistributionFloat*                                               Thickness                                         //0x00D8(0x0030)
};


class ParticleModuleLocationSkelVertSurface : public ParticleModuleLocationBase
{
  ELocationSkelVertSurfaceSource*                                     SourceType                                        //0x0030(0x0001)
  Vector*                                                             UniversalOffset                                   //0x0034(0x000C)
  *                                                                   bUpdatePositionEachFrame                          //0x0040(0x0001)
  *                                                                   bOrientMeshEmitters                               //0x0040(0x0001)
  *                                                                   bInheritBoneVelocity                              //0x0040(0x0001)
  *                                                                   InheritVelocityScale                              //0x0044(0x0004)
  *                                                                   SkelMeshActorParamName                            //0x0048(0x0008)
  ValidAssociatedBones*                                               ValidAssociatedBones                              //0x0050(0x0010)
  *                                                                   bEnforceNormalCheck                               //0x0060(0x0001)
  Vector*                                                             NormalToCompare                                   //0x0064(0x000C)
  *                                                                   NormalCheckToleranceDegrees                       //0x0070(0x0004)
  *                                                                   NormalCheckTolerance                              //0x0074(0x0004)
  ValidMaterialIndices*                                               ValidMaterialIndices                              //0x0078(0x0010)
  *                                                                   bInheritVertexColor                               //0x0088(0x0001)
  *                                                                   bInheritUV                                        //0x0088(0x0001)
  *                                                                   InheritUVChannel                                  //0x008C(0x0004)
};


class ParticleModuleLocationWorldOffset : public ParticleModuleLocation
{
};


class ParticleModuleLocationWorldOffset_Seeded : public ParticleModuleLocationWorldOffset
{
  ParticleRandomSeedInfo*                                             RandomSeedInfo                                    //0x0080(0x0020)
};


class ParticleModuleMaterialBase : public ParticleModule
{
};


class ParticleModuleMeshMaterial : public ParticleModuleMaterialBase
{
  MeshMaterials*                                                      MeshMaterials                                     //0x0030(0x0010)
};


class ParticleModuleRotationBase : public ParticleModule
{
};


class ParticleModuleMeshRotation : public ParticleModuleRotationBase
{
  RawDistributionVector*                                              StartRotation                                     //0x0030(0x0048)
  *                                                                   bInheritParent                                    //0x0078(0x0001)
};


class ParticleModuleMeshRotation_Seeded : public ParticleModuleMeshRotation
{
  ParticleRandomSeedInfo*                                             RandomSeedInfo                                    //0x0080(0x0020)
};


class ParticleModuleRotationRateBase : public ParticleModule
{
};


class ParticleModuleMeshRotationRate : public ParticleModuleRotationRateBase
{
  RawDistributionVector*                                              StartRotationRate                                 //0x0030(0x0048)
};


class ParticleModuleMeshRotationRate_Seeded : public ParticleModuleMeshRotationRate
{
  ParticleRandomSeedInfo*                                             RandomSeedInfo                                    //0x0078(0x0020)
};


class ParticleModuleMeshRotationRateMultiplyLife : public ParticleModuleRotationRateBase
{
  RawDistributionVector*                                              LifeMultiplier                                    //0x0030(0x0048)
};


class ParticleModuleMeshRotationRateOverLife : public ParticleModuleRotationRateBase
{
  RawDistributionVector*                                              RotRate                                           //0x0030(0x0048)
  *                                                                   bScaleRotRate                                     //0x0078(0x0001)
};


class ParticleModuleOrbitBase : public ParticleModule
{
  *                                                                   bUseEmitterTime                                   //0x0030(0x0001)
};


class ParticleModuleOrbit : public ParticleModuleOrbitBase
{
  EOrbitChainMode*                                                    ChainMode                                         //0x0038(0x0001)
  RawDistributionVector*                                              OffsetAmount                                      //0x0040(0x0048)
  OrbitOptions*                                                       OffsetOptions                                     //0x0088(0x0004)
  RawDistributionVector*                                              RotationAmount                                    //0x0090(0x0048)
  OrbitOptions*                                                       RotationOptions                                   //0x00D8(0x0004)
  RawDistributionVector*                                              RotationRateAmount                                //0x00E0(0x0048)
  OrbitOptions*                                                       RotationRateOptions                               //0x0128(0x0004)
};


class ParticleModuleOrientationBase : public ParticleModule
{
};


class ParticleModuleOrientationAxisLock : public ParticleModuleOrientationBase
{
  EParticleAxisLock*                                                  LockAxisFlags                                     //0x0030(0x0001)
};


class ParticleModuleParameterBase : public ParticleModule
{
};


class ParticleModuleParameterDynamic : public ParticleModuleParameterBase
{
  DynamicParams*                                                      DynamicParams                                     //0x0030(0x0010)
  *                                                                   UpdateFlags                                       //0x0040(0x0004)
  *                                                                   bUsesVelocity                                     //0x0044(0x0001)
};


class ParticleModuleParameterDynamic_Seeded : public ParticleModuleParameterDynamic
{
  ParticleRandomSeedInfo*                                             RandomSeedInfo                                    //0x0048(0x0020)
};


class ParticleModulePivotOffset : public ParticleModuleLocationBase
{
  Vector2D*                                                           PivotOffset                                       //0x0030(0x0008)
};


class ParticleModuleRequired : public ParticleModule
{
  MaterialInterface*                                                  Material                                          //0x0030(0x0008)
  *                                                                   MinFacingCameraBlendDistance                      //0x0038(0x0004)
  *                                                                   MaxFacingCameraBlendDistance                      //0x003C(0x0004)
  Vector*                                                             EmitterOrigin                                     //0x0040(0x000C)
  Rotator*                                                            EmitterRotation                                   //0x004C(0x000C)
  EParticleScreenAlignment*                                           ScreenAlignment                                   //0x0058(0x0001)
  *                                                                   bUseLocalSpace                                    //0x0059(0x0001)
  *                                                                   bKillOnDeactivate                                 //0x0059(0x0001)
  *                                                                   bKillOnCompleted                                  //0x0059(0x0001)
  EParticleSortMode*                                                  SortMode                                          //0x005A(0x0001)
  *                                                                   bUseLegacyEmitterTime                             //0x005B(0x0001)
  *                                                                   bRemoveHMDRoll                                    //0x005B(0x0001)
  *                                                                   bEmitterDurationUseRange                          //0x005B(0x0001)
  *                                                                   EmitterDuration                                   //0x005C(0x0004)
  RawDistributionFloat*                                               SpawnRate                                         //0x0060(0x0030)
  BurstList*                                                          BurstList                                         //0x0090(0x0010)
  *                                                                   EmitterDelay                                      //0x00A0(0x0004)
  *                                                                   EmitterDelayLow                                   //0x00A4(0x0004)
  *                                                                   bDelayFirstLoopOnly                               //0x00A8(0x0001)
  EParticleSubUVInterpMethod*                                         InterpolationMethod                               //0x00A9(0x0001)
  *                                                                   bScaleUV                                          //0x00AA(0x0001)
  *                                                                   bEmitterDelayUseRange                             //0x00AA(0x0001)
  EParticleBurstMethod*                                               ParticleBurstMethod                               //0x00AB(0x0001)
  *                                                                   bOverrideSystemMacroUV                            //0x00AC(0x0001)
  *                                                                   bUseMaxDrawCount                                  //0x00AC(0x0001)
  EOpacitySourceMode*                                                 OpacitySourceMode                                 //0x00AD(0x0001)
  EEmitterNormalsMode*                                                EmitterNormalsMode                                //0x00AE(0x0001)
  *                                                                   bOrbitModuleAffectsVelocityAlignment              //0x00AF(0x0001)
  *                                                                   SubImages_Horizontal                              //0x00B0(0x0004)
  *                                                                   SubImages_Vertical                                //0x00B4(0x0004)
  *                                                                   RandomImageTime                                   //0x00B8(0x0004)
  *                                                                   RandomImageChanges                                //0x00BC(0x0004)
  Vector*                                                             MacroUVPosition                                   //0x00C0(0x000C)
  *                                                                   MacroUVRadius                                     //0x00CC(0x0004)
  UnderlyingType*                                                     UVFlippingMode                                    //0x00D0(0x0001)
  ESubUVBoundingVertexCount*                                          BoundingMode                                      //0x00D1(0x0001)
  *                                                                   bDurationRecalcEachLoop                           //0x00D2(0x0001)
  Vector*                                                             NormalsSphereCenter                               //0x00D4(0x000C)
  *                                                                   AlphaThreshold                                    //0x00E0(0x0004)
  *                                                                   EmitterLoops                                      //0x00E4(0x0004)
  Texture2D*                                                          CutoutTexture                                     //0x00E8(0x0008)
  *                                                                   MaxDrawCount                                      //0x00F0(0x0004)
  *                                                                   EmitterDurationLow                                //0x00F4(0x0004)
  Vector*                                                             NormalsCylinderDirection                          //0x00F8(0x000C)
  NamedMaterialOverrides*                                             NamedMaterialOverrides                            //0x0108(0x0010)
};


class ParticleModuleRotation : public ParticleModuleRotationBase
{
  RawDistributionFloat*                                               StartRotation                                     //0x0030(0x0030)
};


class ParticleModuleRotation_Seeded : public ParticleModuleRotation
{
  ParticleRandomSeedInfo*                                             RandomSeedInfo                                    //0x0060(0x0020)
};


class ParticleModuleRotationOverLifetime : public ParticleModuleRotationBase
{
  RawDistributionFloat*                                               RotationOverLife                                  //0x0030(0x0030)
  *                                                                   Scale                                             //0x0060(0x0001)
};


class ParticleModuleRotationRate : public ParticleModuleRotationRateBase
{
  RawDistributionFloat*                                               StartRotationRate                                 //0x0030(0x0030)
};


class ParticleModuleRotationRate_Seeded : public ParticleModuleRotationRate
{
  ParticleRandomSeedInfo*                                             RandomSeedInfo                                    //0x0060(0x0020)
};


class ParticleModuleRotationRateMultiplyLife : public ParticleModuleRotationRateBase
{
  RawDistributionFloat*                                               LifeMultiplier                                    //0x0030(0x0030)
};


class ParticleModuleSizeBase : public ParticleModule
{
};


class ParticleModuleSize : public ParticleModuleSizeBase
{
  RawDistributionVector*                                              StartSize                                         //0x0030(0x0048)
};


class ParticleModuleSize_Seeded : public ParticleModuleSize
{
  ParticleRandomSeedInfo*                                             RandomSeedInfo                                    //0x0078(0x0020)
};


class ParticleModuleSizeMultiplyLife : public ParticleModuleSizeBase
{
  RawDistributionVector*                                              LifeMultiplier                                    //0x0030(0x0048)
  *                                                                   MultiplyX                                         //0x0078(0x0001)
  *                                                                   MultiplyY                                         //0x0078(0x0001)
  *                                                                   MultiplyZ                                         //0x0078(0x0001)
};


class ParticleModuleSizeScale : public ParticleModuleSizeBase
{
  RawDistributionVector*                                              SizeScale                                         //0x0030(0x0048)
  *                                                                   EnableX                                           //0x0078(0x0001)
  *                                                                   EnableY                                           //0x0078(0x0001)
  *                                                                   EnableZ                                           //0x0078(0x0001)
};


class ParticleModuleSizeScaleBySpeed : public ParticleModuleSizeBase
{
  Vector2D*                                                           SpeedScale                                        //0x0030(0x0008)
  Vector2D*                                                           MaxScale                                          //0x0038(0x0008)
};


class ParticleModuleSourceMovement : public ParticleModuleLocationBase
{
  RawDistributionVector*                                              SourceMovementScale                               //0x0030(0x0048)
};


class ParticleModuleSpawnBase : public ParticleModule
{
  *                                                                   bProcessSpawnRate                                 //0x0030(0x0001)
  *                                                                   bProcessBurstList                                 //0x0030(0x0001)
};


class ParticleModuleSpawn : public ParticleModuleSpawnBase
{
  RawDistributionFloat*                                               Rate                                              //0x0038(0x0030)
  RawDistributionFloat*                                               RateScale                                         //0x0068(0x0030)
  EParticleBurstMethod*                                               ParticleBurstMethod                               //0x0098(0x0001)
  BurstList*                                                          BurstList                                         //0x00A0(0x0010)
  RawDistributionFloat*                                               BurstScale                                        //0x00B0(0x0030)
  *                                                                   bApplyGlobalSpawnRateScale                        //0x00E0(0x0001)
};


class ParticleModuleSpawnPerUnit : public ParticleModuleSpawnBase
{
  *                                                                   UnitScalar                                        //0x0038(0x0004)
  *                                                                   MovementTolerance                                 //0x003C(0x0004)
  RawDistributionFloat*                                               SpawnPerUnit                                      //0x0040(0x0030)
  *                                                                   MaxFrameDistance                                  //0x0070(0x0004)
  *                                                                   bIgnoreSpawnRateWhenMoving                        //0x0074(0x0001)
  *                                                                   bIgnoreMovementAlongX                             //0x0074(0x0001)
  *                                                                   bIgnoreMovementAlongY                             //0x0074(0x0001)
  *                                                                   bIgnoreMovementAlongZ                             //0x0074(0x0001)
};


class ParticleModuleSubUVBase : public ParticleModule
{
};


class ParticleModuleSubUV : public ParticleModuleSubUVBase
{
  SubUVAnimation*                                                     Animation                                         //0x0030(0x0008)
  RawDistributionFloat*                                               SubImageIndex                                     //0x0038(0x0030)
  *                                                                   bUseRealTime                                      //0x0068(0x0001)
};


class ParticleModuleSubUVMovie : public ParticleModuleSubUV
{
  *                                                                   bUseEmitterTime                                   //0x0070(0x0001)
  RawDistributionFloat*                                               FrameRate                                         //0x0078(0x0030)
  *                                                                   StartingFrame                                     //0x00A8(0x0004)
};


class ParticleModuleTrailBase : public ParticleModule
{
};


class ParticleModuleTrailSource : public ParticleModuleTrailBase
{
  ETrail2SourceMethod*                                                SourceMethod                                      //0x0030(0x0001)
  *                                                                   SourceName                                        //0x0034(0x0008)
  RawDistributionFloat*                                               SourceStrength                                    //0x0040(0x0030)
  *                                                                   bLockSourceStength                                //0x0070(0x0001)
  *                                                                   SourceOffsetCount                                 //0x0074(0x0004)
  SourceOffsetDefaults*                                               SourceOffsetDefaults                              //0x0078(0x0010)
  EParticleSourceSelectionMethod*                                     SelectionMethod                                   //0x0088(0x0001)
  *                                                                   bInheritRotation                                  //0x008C(0x0001)
};


class ParticleModuleTypeDataBase : public ParticleModule
{
};


class ParticleModuleTypeDataAnimTrail : public ParticleModuleTypeDataBase
{
  *                                                                   bDeadTrailsOnDeactivate                           //0x0030(0x0001)
  *                                                                   bEnablePreviousTangentRecalculation               //0x0030(0x0001)
  *                                                                   bTangentRecalculationEveryFrame                   //0x0030(0x0001)
  *                                                                   TilingDistance                                    //0x0034(0x0004)
  *                                                                   DistanceTessellationStepSize                      //0x0038(0x0004)
  *                                                                   TangentTessellationStepSize                       //0x003C(0x0004)
  *                                                                   WidthTessellationStepSize                         //0x0040(0x0004)
};


class ParticleModuleTypeDataBeam2 : public ParticleModuleTypeDataBase
{
  EBeam2Method*                                                       BeamMethod                                        //0x0030(0x0001)
  *                                                                   TextureTile                                       //0x0034(0x0004)
  *                                                                   TextureTileDistance                               //0x0038(0x0004)
  *                                                                   Sheets                                            //0x003C(0x0004)
  *                                                                   MaxBeamCount                                      //0x0040(0x0004)
  *                                                                   Speed                                             //0x0044(0x0004)
  *                                                                   InterpolationPoints                               //0x0048(0x0004)
  *                                                                   bAlwaysOn                                         //0x004C(0x0001)
  *                                                                   UpVectorStepSize                                  //0x0050(0x0004)
  *                                                                   BranchParentName                                  //0x0054(0x0008)
  RawDistributionFloat*                                               Distance                                          //0x0060(0x0030)
  EBeamTaperMethod*                                                   TaperMethod                                       //0x0090(0x0001)
  RawDistributionFloat*                                               TaperFactor                                       //0x0098(0x0030)
  RawDistributionFloat*                                               TaperScale                                        //0x00C8(0x0030)
  *                                                                   RenderGeometry                                    //0x00F8(0x0001)
  *                                                                   RenderDirectLine                                  //0x00F8(0x0001)
  *                                                                   RenderLines                                       //0x00F8(0x0001)
  *                                                                   RenderTessellation                                //0x00F8(0x0001)
};


class ParticleModuleTypeDataGpu : public ParticleModuleTypeDataBase
{
  GPUSpriteEmitterInfo*                                               EmitterInfo                                       //0x0030(0x0280)
  GPUSpriteResourceData*                                              ResourceData                                      //0x02B0(0x0160)
  *                                                                   CameraMotionBlurAmount                            //0x0410(0x0004)
  *                                                                   bClearExistingParticlesOnInit                     //0x0414(0x0001)
};


class ParticleModuleTypeDataMesh : public ParticleModuleTypeDataBase
{
  StaticMesh*                                                         Mesh                                              //0x0030(0x0008)
  *                                                                   LODSizeScale                                      //0x0040(0x0004)
  *                                                                   bUseStaticMeshLODs                                //0x0044(0x0001)
  *                                                                   CastShadows                                       //0x0044(0x0001)
  *                                                                   DoCollisions                                      //0x0044(0x0001)
  EMeshScreenAlignment*                                               MeshAlignment                                     //0x0045(0x0001)
  *                                                                   bOverrideMaterial                                 //0x0046(0x0001)
  *                                                                   bOverrideDefaultMotionBlurSettings                //0x0046(0x0001)
  *                                                                   bEnableMotionBlur                                 //0x0046(0x0001)
  RawDistributionVector*                                              RollPitchYawRange                                 //0x0048(0x0048)
  EParticleAxisLock*                                                  AxisLockOption                                    //0x0090(0x0001)
  *                                                                   bCameraFacing                                     //0x0091(0x0001)
  EMeshCameraFacingUpAxis*                                            CameraFacingUpAxisOption                          //0x0092(0x0001)
  EMeshCameraFacingOptions*                                           CameraFacingOption                                //0x0093(0x0001)
  *                                                                   bApplyParticleRotationAsSpin                      //0x0094(0x0001)
  *                                                                   bFaceCameraDirectionRatherThanPosition            //0x0094(0x0001)
  *                                                                   bCollisionsConsiderPartilceSize                   //0x0094(0x0001)
};


class ParticleModuleTypeDataRibbon : public ParticleModuleTypeDataBase
{
  *                                                                   MaxTessellationBetweenParticles                   //0x0030(0x0004)
  *                                                                   SheetsPerTrail                                    //0x0034(0x0004)
  *                                                                   MaxTrailCount                                     //0x0038(0x0004)
  *                                                                   MaxParticleInTrailCount                           //0x003C(0x0004)
  *                                                                   bDeadTrailsOnDeactivate                           //0x0040(0x0001)
  *                                                                   bDeadTrailsOnSourceLoss                           //0x0040(0x0001)
  *                                                                   bClipSourceSegement                               //0x0040(0x0001)
  *                                                                   bEnablePreviousTangentRecalculation               //0x0040(0x0001)
  *                                                                   bTangentRecalculationEveryFrame                   //0x0040(0x0001)
  *                                                                   bSpawnInitialParticle                             //0x0040(0x0001)
  ETrailsRenderAxisOption*                                            RenderAxis                                        //0x0044(0x0001)
  *                                                                   TangentSpawningScalar                             //0x0048(0x0004)
  *                                                                   bRenderGeometry                                   //0x004C(0x0001)
  *                                                                   bRenderSpawnPoints                                //0x004C(0x0001)
  *                                                                   bRenderTangents                                   //0x004C(0x0001)
  *                                                                   bRenderTessellation                               //0x004C(0x0001)
  *                                                                   TilingDistance                                    //0x0050(0x0004)
  *                                                                   DistanceTessellationStepSize                      //0x0054(0x0004)
  *                                                                   bEnableTangentDiffInterpScale                     //0x0058(0x0001)
  *                                                                   TangentTessellationScalar                         //0x005C(0x0004)
};


class ParticleModuleVectorFieldBase : public ParticleModule
{
};


class ParticleModuleVectorFieldGlobal : public ParticleModuleVectorFieldBase
{
  *                                                                   bOverrideGlobalVectorFieldTightness               //0x0030(0x0001)
  *                                                                   GlobalVectorFieldScale                            //0x0034(0x0004)
  *                                                                   GlobalVectorFieldTightness                        //0x0038(0x0004)
};


class ParticleModuleVectorFieldLocal : public ParticleModuleVectorFieldBase
{
  VectorField*                                                        VectorField                                       //0x0030(0x0008)
  Vector*                                                             RelativeTranslation                               //0x0038(0x000C)
  Rotator*                                                            RelativeRotation                                  //0x0044(0x000C)
  Vector*                                                             RelativeScale3D                                   //0x0050(0x000C)
  *                                                                   Intensity                                         //0x005C(0x0004)
  *                                                                   Tightness                                         //0x0060(0x0004)
  *                                                                   bIgnoreComponentTransform                         //0x0064(0x0001)
  *                                                                   bTileX                                            //0x0064(0x0001)
  *                                                                   bTileY                                            //0x0064(0x0001)
  *                                                                   bTileZ                                            //0x0064(0x0001)
  *                                                                   bUseFixDT                                         //0x0064(0x0001)
};


class ParticleModuleVectorFieldRotation : public ParticleModuleVectorFieldBase
{
  Vector*                                                             MinInitialRotation                                //0x0030(0x000C)
  Vector*                                                             MaxInitialRotation                                //0x003C(0x000C)
};


class ParticleModuleVectorFieldRotationRate : public ParticleModuleVectorFieldBase
{
  Vector*                                                             RotationRate                                      //0x0030(0x000C)
};


class ParticleModuleVectorFieldScale : public ParticleModuleVectorFieldBase
{
  DistributionFloat*                                                  VectorFieldScale                                  //0x0030(0x0008)
  RawDistributionFloat*                                               VectorFieldScaleRaw                               //0x0038(0x0030)
};


class ParticleModuleVectorFieldScaleOverLife : public ParticleModuleVectorFieldBase
{
  DistributionFloat*                                                  VectorFieldScaleOverLife                          //0x0030(0x0008)
  RawDistributionFloat*                                               VectorFieldScaleOverLifeRaw                       //0x0038(0x0030)
};


class ParticleModuleVelocityBase : public ParticleModule
{
  *                                                                   bInWorldSpace                                     //0x0030(0x0001)
  *                                                                   bApplyOwnerScale                                  //0x0030(0x0001)
};


class ParticleModuleVelocity : public ParticleModuleVelocityBase
{
  RawDistributionVector*                                              StartVelocity                                     //0x0038(0x0048)
  RawDistributionFloat*                                               StartVelocityRadial                               //0x0080(0x0030)
};


class ParticleModuleVelocity_Seeded : public ParticleModuleVelocity
{
  ParticleRandomSeedInfo*                                             RandomSeedInfo                                    //0x00B0(0x0020)
};


class ParticleModuleVelocityCone : public ParticleModuleVelocityBase
{
  RawDistributionFloat*                                               Angle                                             //0x0038(0x0030)
  RawDistributionFloat*                                               Velocity                                          //0x0068(0x0030)
  Vector*                                                             Direction                                         //0x0098(0x000C)
};


class ParticleModuleVelocityInheritParent : public ParticleModuleVelocityBase
{
  RawDistributionVector*                                              Scale                                             //0x0038(0x0048)
};


class ParticleModuleVelocityOverLifetime : public ParticleModuleVelocityBase
{
  RawDistributionVector*                                              VelOverLife                                       //0x0038(0x0048)
  *                                                                   absolute                                          //0x0080(0x0001)
};


class ParticleSpriteEmitter : public ParticleEmitter
{
};


class ParticleSystem : public FXSystemAsset
{
  *                                                                   UpdateTime_FPS                                    //0x0030(0x0004)
  *                                                                   UpdateTime_Delta                                  //0x0034(0x0004)
  *                                                                   WarmupTime                                        //0x0038(0x0004)
  *                                                                   WarmupTickRate                                    //0x003C(0x0004)
  Emitters*                                                           Emitters                                          //0x0040(0x0010)
  ParticleSystemComponent*                                            PreviewComponent                                  //0x0050(0x0008)
  InterpCurveEdSetup*                                                 CurveEdSetup                                      //0x0058(0x0008)
  *                                                                   LODDistanceCheckTime                              //0x0060(0x0004)
  *                                                                   MacroUVRadius                                     //0x0064(0x0004)
  LODDistances*                                                       LODDistances                                      //0x0068(0x0010)
  LODSettings*                                                        LODSettings                                       //0x0078(0x0010)
  Box*                                                                FixedRelativeBoundingBox                          //0x0088(0x001C)
  *                                                                   SecondsBeforeInactive                             //0x00A4(0x0004)
  *                                                                   Delay                                             //0x00A8(0x0004)
  *                                                                   DelayLow                                          //0x00AC(0x0004)
  *                                                                   bOrientZAxisTowardCamera                          //0x00B0(0x0001)
  *                                                                   bUseFixedRelativeBoundingBox                      //0x00B0(0x0001)
  *                                                                   bShouldResetPeakCounts                            //0x00B0(0x0001)
  *                                                                   bHasPhysics                                       //0x00B0(0x0001)
  *                                                                   bUseRealtimeThumbnail                             //0x00B0(0x0001)
  *                                                                   ThumbnailImageOutOfDate                           //0x00B0(0x0001)
  *                                                                   bUseDelayRange                                    //0x00B1(0x0001)
  *                                                                   bAllowManagedTicking                              //0x00B1(0x0001)
  *                                                                   bAutoDeactivate                                   //0x00B1(0x0001)
  *                                                                   bRegenerateLODDuplicate                           //0x00B1(0x0001)
  EParticleSystemUpdateMode*                                          SystemUpdateMode                                  //0x00B2(0x0001)
  ParticleSystemLODMethod*                                            LODMethod                                         //0x00B3(0x0001)
  UnderlyingType*                                                     InsignificantReaction                             //0x00B4(0x0001)
  EParticleSystemOcclusionBoundsMethod*                               OcclusionBoundsMethod                             //0x00B5(0x0001)
  UnderlyingType*                                                     MaxSignificanceLevel                              //0x00B7(0x0001)
  *                                                                   MinTimeBetweenTicks                               //0x00B8(0x0004)
  *                                                                   InsignificanceDelay                               //0x00BC(0x0004)
  Vector*                                                             MacroUVPosition                                   //0x00C0(0x000C)
  Box*                                                                CustomOcclusionBounds                             //0x00CC(0x001C)
  SoloTracking*                                                       SoloTracking                                      //0x00E8(0x0010)
  NamedMaterialSlots*                                                 NamedMaterialSlots                                //0x00F8(0x0010)
  TypeData*                                                           ContainsEmitterType                               //0x0000(0x0229)
};


class ParticleSystemComponent : public FXSystemComponent
{
  ParticleSystem*                                                     Template                                          //0x03D8(0x0008)
  EmitterMaterials*                                                   EmitterMaterials                                  //0x03E0(0x0010)
  SkelMeshComponents*                                                 SkelMeshComponents                                //0x03F0(0x0010)
  *                                                                   bResetOnDetach                                    //0x0401(0x0001)
  *                                                                   bUpdateOnDedicatedServer                          //0x0401(0x0001)
  *                                                                   bAllowRecycling                                   //0x0401(0x0001)
  *                                                                   bAutoManageAttachment                             //0x0401(0x0001)
  *                                                                   bWarmingUp                                        //0x0402(0x0001)
  *                                                                   bOverrideLODMethod                                //0x0402(0x0001)
  *                                                                   bSkipUpdateDynamicDataDuringTick                  //0x0402(0x0001)
  ParticleSystemLODMethod*                                            LODMethod                                         //0x040D(0x0001)
  UnderlyingType*                                                     RequiredSignificance                              //0x040E(0x0001)
  InstanceParameters*                                                 InstanceParameters                                //0x0410(0x0010)
  ParticleSpawnSignature__DelegateSignature*                          OnParticleSpawn                                   //0x0420(0x0010)
  ParticleBurstSignature__DelegateSignature*                          OnParticleBurst                                   //0x0430(0x0010)
  ParticleDeathSignature__DelegateSignature*                          OnParticleDeath                                   //0x0440(0x0010)
  ParticleCollisionSignature__DelegateSignature*                      OnParticleCollide                                 //0x0450(0x0010)
  Vector*                                                             OldPosition                                       //0x0460(0x000C)
  Vector*                                                             PartSysVelocity                                   //0x046C(0x000C)
  *                                                                   WarmupTime                                        //0x0478(0x0004)
  *                                                                   WarmupTickRate                                    //0x047C(0x0004)
  *                                                                   SecondsBeforeInactive                             //0x0484(0x0004)
  *                                                                   MaxTimeBeforeForceUpdateTransform                 //0x048C(0x0004)
  ReplayClips*                                                        ReplayClips                                       //0x04B0(0x0010)
  *                                                                   CustomTimeDilation                                //0x04C8(0x0004)
  SceneComponent*                                                     AutoAttachParent                                  //0x0520(0x0008)
  *                                                                   AutoAttachSocketName                              //0x0528(0x0008)
  UnderlyingType*                                                     AutoAttachLocationRule                            //0x0530(0x0001)
  UnderlyingType*                                                     AutoAttachRotationRule                            //0x0531(0x0001)
  UnderlyingType*                                                     AutoAttachScaleRule                               //0x0532(0x0001)
  OnSystemFinished__DelegateSignature*                                OnSystemFinished                                  //0x0560(0x0010)
  *                                                                   SetTrailSourceData                                //0x0000(0x0229)
  NewTemplate*                                                        SetTemplate                                       //0x0000(0x0229)
  Param*                                                              SetMaterialParameter                              //0x0000(0x0229)
  *                                                                   SetBeamTargetTangent                              //0x0000(0x0229)
  *                                                                   SetBeamTargetStrength                             //0x0000(0x0229)
  *                                                                   SetBeamTargetPoint                                //0x0000(0x0229)
  *                                                                   SetBeamSourceTangent                              //0x0000(0x0229)
  *                                                                   SetBeamSourceStrength                             //0x0000(0x0229)
  *                                                                   SetBeamSourcePoint                                //0x0000(0x0229)
  *                                                                   SetBeamEndPoint                                   //0x0000(0x0229)
  Parent*                                                             SetAutoAttachParams                               //0x0000(0x0229)
  *                                                                   GetNumActiveParticles                             //0x0000(0x0229)
  ReturnValue*                                                        GetNamedMaterial                                  //0x0000(0x0229)
  *                                                                   GetBeamTargetTangent                              //0x0000(0x0229)
  *                                                                   GetBeamTargetStrength                             //0x0000(0x0229)
  *                                                                   GetBeamTargetPoint                                //0x0000(0x0229)
  *                                                                   GetBeamSourceTangent                              //0x0000(0x0229)
  *                                                                   GetBeamSourceStrength                             //0x0000(0x0229)
  *                                                                   GetBeamSourcePoint                                //0x0000(0x0229)
  *                                                                   GetBeamEndPoint                                   //0x0000(0x0229)
  *                                                                   GenerateParticleEvent                             //0x0000(0x0229)
  *                                                                   EndTrails                                         //0x0000(0x0229)
  SourceMaterial*                                                     CreateNamedDynamicMaterialInstance                //0x0000(0x0229)
  *                                                                   BeginTrails                                       //0x0000(0x0229)
};


class ParticleSystemReplay : public Object
{
  *                                                                   ClipIDNumber                                      //0x0028(0x0004)
};


class PathFollowingAgentInterface : public Interface
{
};


class PawnNoiseEmitterComponent : public ActorComponent
{
  *                                                                   bAIPerceptionSystemCompatibilityMode              //0x00B0(0x0001)
  Vector*                                                             LastRemoteNoisePosition                           //0x00B4(0x000C)
  *                                                                   NoiseLifetime                                     //0x00C0(0x0004)
  *                                                                   LastRemoteNoiseVolume                             //0x00C4(0x0004)
  *                                                                   LastRemoteNoiseTime                               //0x00C8(0x0004)
  *                                                                   LastLocalNoiseVolume                              //0x00CC(0x0004)
  *                                                                   LastLocalNoiseTime                                //0x00D0(0x0004)
  NoiseMaker*                                                         MakeNoise                                         //0x0000(0x0229)
};


class PhysicalAnimationComponent : public ActorComponent
{
  *                                                                   StrengthMultiplyer                                //0x00B0(0x0004)
  SkeletalMeshComponent*                                              SkeletalMeshComponent                             //0x00B8(0x0008)
  *                                                                   SetStrengthMultiplyer                             //0x0000(0x0229)
  InSkeletalMeshComponent*                                            SetSkeletalMeshComponent                          //0x0000(0x0229)
  *                                                                   GetBodyTargetTransform                            //0x0000(0x0229)
  *                                                                   ApplyPhysicalAnimationSettingsBelow               //0x0000(0x0229)
  *                                                                   ApplyPhysicalAnimationSettings                    //0x0000(0x0229)
  *                                                                   ApplyPhysicalAnimationProfileBelow                //0x0000(0x0229)
};


class PhysicalMaterial : public Object
{
  *                                                                   Friction                                          //0x0028(0x0004)
  EFrictionCombineMode*                                               FrictionCombineMode                               //0x002C(0x0001)
  *                                                                   bOverrideFrictionCombineMode                      //0x002D(0x0001)
  *                                                                   Restitution                                       //0x0030(0x0004)
  EFrictionCombineMode*                                               RestitutionCombineMode                            //0x0034(0x0001)
  *                                                                   bOverrideRestitutionCombineMode                   //0x0035(0x0001)
  *                                                                   Density                                           //0x0038(0x0004)
  *                                                                   RaiseMassToPower                                  //0x003C(0x0004)
  *                                                                   DestructibleDamageThresholdScale                  //0x0040(0x0004)
  PhysicalMaterialPropertyBase*                                       PhysicalMaterialProperty                          //0x0048(0x0008)
  EPhysicalSurface*                                                   SurfaceType                                       //0x0050(0x0001)
  *                                                                   TireFrictionScale                                 //0x0054(0x0004)
  TireFrictionScales*                                                 TireFrictionScales                                //0x0058(0x0010)
};


class PhysicalMaterialPropertyBase : public Object
{
};


class PhysicsAsset : public Object
{
  BoundsBodies*                                                       BoundsBodies                                      //0x0030(0x0010)
  SkeletalBodySetups*                                                 SkeletalBodySetups                                //0x0040(0x0010)
  ConstraintSetup*                                                    ConstraintSetup                                   //0x0050(0x0010)
  *                                                                   bNotForDedicatedServer                            //0x0060(0x0001)
  ThumbnailInfo*                                                      ThumbnailInfo                                     //0x0108(0x0008)
  BodySetup*                                                          BodySetup                                         //0x0110(0x0010)
};


class SkeletalBodySetup : public BodySetup
{
  *                                                                   bSkipScaleFromAnimation                           //0x0240(0x0001)
  PhysicalAnimationData*                                              PhysicalAnimationData                             //0x0248(0x0010)
};


class PhysicsCollisionHandler : public Object
{
  *                                                                   ImpactThreshold                                   //0x0028(0x0004)
  *                                                                   ImpactReFireDelay                                 //0x002C(0x0004)
  SoundBase*                                                          DefaultImpactSound                                //0x0030(0x0008)
  *                                                                   LastImpactSoundTime                               //0x0038(0x0004)
};


class RigidBodyBase : public Actor
{
};


class PhysicsConstraintActor : public RigidBodyBase
{
  PhysicsConstraintComponent*                                         ConstraintComp                                    //0x0218(0x0008)
  Actor*                                                              ConstraintActor1                                  //0x0220(0x0008)
  Actor*                                                              ConstraintActor2                                  //0x0228(0x0008)
  *                                                                   bDisableCollision                                 //0x0230(0x0001)
};


class PhysicsConstraintComponent : public SceneComponent
{
  Actor*                                                              ConstraintActor1                                  //0x01F0(0x0008)
  ConstrainComponentPropName*                                         ComponentName1                                    //0x01F8(0x0008)
  Actor*                                                              ConstraintActor2                                  //0x0200(0x0008)
  ConstrainComponentPropName*                                         ComponentName2                                    //0x0208(0x0008)
  PhysicsConstraintTemplate*                                          ConstraintSetup                                   //0x0220(0x0008)
  ConstraintBrokenSignature__DelegateSignature*                       OnConstraintBroken                                //0x0228(0x0010)
  ConstraintInstance*                                                 ConstraintInstance                                //0x0238(0x01B8)
  *                                                                   SetOrientationDriveTwistAndSwing                  //0x0000(0x0229)
  *                                                                   SetOrientationDriveSLERP                          //0x0000(0x0229)
  *                                                                   SetLinearZLimit                                   //0x0000(0x0229)
  *                                                                   SetLinearYLimit                                   //0x0000(0x0229)
  *                                                                   SetLinearXLimit                                   //0x0000(0x0229)
  *                                                                   SetLinearVelocityTarget                           //0x0000(0x0229)
  *                                                                   SetLinearVelocityDrive                            //0x0000(0x0229)
  *                                                                   SetLinearPositionTarget                           //0x0000(0x0229)
  *                                                                   SetLinearPositionDrive                            //0x0000(0x0229)
  *                                                                   SetLinearDriveParams                              //0x0000(0x0229)
  *                                                                   SetLinearBreakable                                //0x0000(0x0229)
  *                                                                   SetDisableCollision                               //0x0000(0x0229)
  *                                                                   SetConstraintReferencePosition                    //0x0000(0x0229)
  *                                                                   SetConstraintReferenceOrientation                 //0x0000(0x0229)
  *                                                                   SetConstraintReferenceFrame                       //0x0000(0x0229)
  Component1*                                                         SetConstrainedComponents                          //0x0000(0x0229)
  *                                                                   SetAngularVelocityTarget                          //0x0000(0x0229)
  *                                                                   SetAngularVelocityDriveTwistAndSwing              //0x0000(0x0229)
  *                                                                   SetAngularVelocityDriveSLERP                      //0x0000(0x0229)
  *                                                                   SetAngularVelocityDrive                           //0x0000(0x0229)
  *                                                                   SetAngularTwistLimit                              //0x0000(0x0229)
  *                                                                   SetAngularSwing2Limit                             //0x0000(0x0229)
  *                                                                   SetAngularSwing1Limit                             //0x0000(0x0229)
  *                                                                   SetAngularOrientationTarget                       //0x0000(0x0229)
  *                                                                   SetAngularOrientationDrive                        //0x0000(0x0229)
  *                                                                   SetAngularDriveParams                             //0x0000(0x0229)
  *                                                                   SetAngularDriveMode                               //0x0000(0x0229)
  *                                                                   SetAngularBreakable                               //0x0000(0x0229)
  *                                                                   IsBroken                                          //0x0000(0x0229)
  *                                                                   GetCurrentTwist                                   //0x0000(0x0229)
  *                                                                   GetCurrentSwing2                                  //0x0000(0x0229)
  *                                                                   GetCurrentSwing1                                  //0x0000(0x0229)
  *                                                                   GetConstraintForce                                //0x0000(0x0229)
  *                                                                   BreakConstraint                                   //0x0000(0x0229)
};


class PhysicsConstraintTemplate : public Object
{
  ConstraintInstance*                                                 DefaultInstance                                   //0x0028(0x01B8)
  ProfileHandles*                                                     ProfileHandles                                    //0x01E0(0x0010)
  ConstraintProfileProperties*                                        DefaultProfile                                    //0x01F0(0x0104)
};


class PhysicsHandleComponent : public ActorComponent
{
  PrimitiveComponent*                                                 GrabbedComponent                                  //0x00B0(0x0008)
  *                                                                   bSoftAngularConstraint                            //0x00C0(0x0001)
  *                                                                   bSoftLinearConstraint                             //0x00C0(0x0001)
  *                                                                   bInterpolateTarget                                //0x00C0(0x0001)
  *                                                                   LinearDamping                                     //0x00C4(0x0004)
  *                                                                   LinearStiffness                                   //0x00C8(0x0004)
  *                                                                   AngularDamping                                    //0x00CC(0x0004)
  *                                                                   AngularStiffness                                  //0x00D0(0x0004)
  *                                                                   InterpolationSpeed                                //0x0140(0x0004)
  *                                                                   SetTargetRotation                                 //0x0000(0x0229)
  *                                                                   SetTargetLocationAndRotation                      //0x0000(0x0229)
  *                                                                   SetTargetLocation                                 //0x0000(0x0229)
  *                                                                   SetLinearStiffness                                //0x0000(0x0229)
  *                                                                   SetLinearDamping                                  //0x0000(0x0229)
  *                                                                   SetInterpolationSpeed                             //0x0000(0x0229)
  *                                                                   SetAngularStiffness                               //0x0000(0x0229)
  *                                                                   SetAngularDamping                                 //0x0000(0x0229)
  *                                                                   ReleaseComponent                                  //0x0000(0x0229)
  Component*                                                          GrabComponentAtLocationWithRotation               //0x0000(0x0229)
  Component*                                                          GrabComponentAtLocation                           //0x0000(0x0229)
  Component*                                                          GrabComponent                                     //0x0000(0x0229)
  *                                                                   GetTargetLocationAndRotation                      //0x0000(0x0229)
  ReturnValue*                                                        GetGrabbedComponent                               //0x0000(0x0229)
};


class PhysicsSettings : public DeveloperSettings
{
  *                                                                   DefaultGravityZ                                   //0x0038(0x0004)
  *                                                                   DefaultTerminalVelocity                           //0x003C(0x0004)
  *                                                                   DefaultFluidFriction                              //0x0040(0x0004)
  *                                                                   SimulateScratchMemorySize                         //0x0044(0x0004)
  *                                                                   RagdollAggregateThreshold                         //0x0048(0x0004)
  *                                                                   TriangleMeshTriangleMinAreaThreshold              //0x004C(0x0004)
  *                                                                   bEnableShapeSharing                               //0x0050(0x0001)
  *                                                                   bEnablePCM                                        //0x0051(0x0001)
  *                                                                   bEnableStabilization                              //0x0052(0x0001)
  *                                                                   bWarnMissingLocks                                 //0x0053(0x0001)
  *                                                                   bEnable2DPhysics                                  //0x0054(0x0001)
  RigidBodyErrorCorrection*                                           PhysicErrorCorrection                             //0x0058(0x0034)
  ESettingsLockedAxis*                                                LockedAxis                                        //0x008C(0x0001)
  ESettingsDOF*                                                       DefaultDegreesOfFreedom                           //0x008D(0x0001)
  *                                                                   BounceThresholdVelocity                           //0x0090(0x0004)
  EFrictionCombineMode*                                               FrictionCombineMode                               //0x0094(0x0001)
  EFrictionCombineMode*                                               RestitutionCombineMode                            //0x0095(0x0001)
  *                                                                   MaxAngularVelocity                                //0x0098(0x0004)
  *                                                                   MaxDepenetrationVelocity                          //0x009C(0x0004)
  *                                                                   ContactOffsetMultiplier                           //0x00A0(0x0004)
  *                                                                   MinContactOffset                                  //0x00A4(0x0004)
  *                                                                   MaxContactOffset                                  //0x00A8(0x0004)
  *                                                                   bSimulateSkeletalMeshOnDedicatedServer            //0x00AC(0x0001)
  ECollisionTraceFlag*                                                DefaultShapeComplexity                            //0x00AD(0x0001)
  *                                                                   bDefaultHasComplexCollision                       //0x00AE(0x0001)
  *                                                                   bSuppressFaceRemapTable                           //0x00AF(0x0001)
  *                                                                   bSupportUVFromHitResults                          //0x00B0(0x0001)
  *                                                                   bDisableActiveActors                              //0x00B1(0x0001)
  *                                                                   bDisableKinematicStaticPairs                      //0x00B2(0x0001)
  *                                                                   bDisableKinematicKinematicPairs                   //0x00B3(0x0001)
  *                                                                   bDisableCCD                                       //0x00B4(0x0001)
  *                                                                   bEnableEnhancedDeterminism                        //0x00B5(0x0001)
  *                                                                   AnimPhysicsMinDeltaTime                           //0x00B8(0x0004)
  *                                                                   bSimulateAnimPhysicsAfterReset                    //0x00BC(0x0001)
  *                                                                   MaxPhysicsDeltaTime                               //0x00C0(0x0004)
  *                                                                   bSubstepping                                      //0x00C4(0x0001)
  *                                                                   bSubsteppingAsync                                 //0x00C5(0x0001)
  *                                                                   MaxSubstepDeltaTime                               //0x00C8(0x0004)
  *                                                                   MaxSubsteps                                       //0x00CC(0x0004)
  *                                                                   SyncSceneSmoothingFactor                          //0x00D0(0x0004)
  *                                                                   InitialAverageFrameRate                           //0x00D4(0x0004)
  *                                                                   PhysXTreeRebuildRate                              //0x00D8(0x0004)
  PhysicalSurfaces*                                                   PhysicalSurfaces                                  //0x00E0(0x0010)
  BroadphaseSettings*                                                 DefaultBroadphaseSettings                         //0x00F0(0x0040)
  ChaosPhysicsSettings*                                               ChaosSettings                                     //0x0130(0x0003)
};


class PhysicsSpringComponent : public SceneComponent
{
  *                                                                   SpringStiffness                                   //0x01F0(0x0004)
  *                                                                   SpringDamping                                     //0x01F4(0x0004)
  *                                                                   SpringLengthAtRest                                //0x01F8(0x0004)
  *                                                                   SpringRadius                                      //0x01FC(0x0004)
  ECollisionChannel*                                                  SpringChannel                                     //0x0200(0x0001)
  *                                                                   bIgnoreSelf                                       //0x0201(0x0001)
  *                                                                   SpringCompression                                 //0x0204(0x0004)
  *                                                                   GetSpringRestingPoint                             //0x0000(0x0229)
  *                                                                   GetSpringDirection                                //0x0000(0x0229)
  *                                                                   GetSpringCurrentEndPoint                          //0x0000(0x0229)
  *                                                                   GetNormalizedCompressionScalar                    //0x0000(0x0229)
};


class PhysicsThruster : public RigidBodyBase
{
  PhysicsThrusterComponent*                                           ThrusterComponent                                 //0x0218(0x0008)
};


class PhysicsThrusterComponent : public SceneComponent
{
  *                                                                   ThrustStrength                                    //0x01F0(0x0004)
};


class SceneCapture : public Actor
{
  StaticMeshComponent*                                                MeshComp                                          //0x0218(0x0008)
  SceneComponent*                                                     SceneComponent                                    //0x0220(0x0008)
};


class PlanarReflection : public SceneCapture
{
  PlanarReflectionComponent*                                          PlanarReflectionComponent                         //0x0228(0x0008)
  *                                                                   bShowPreviewPlane                                 //0x0230(0x0001)
  *                                                                   OnInterpToggle                                    //0x0000(0x0229)
};


class SceneCaptureComponent : public SceneComponent
{
  UnderlyingType*                                                     PrimitiveRenderMode                               //0x01F0(0x0001)
  ESceneCaptureSource*                                                CaptureSource                                     //0x01F1(0x0001)
  HiddenComponents*                                                   HiddenComponents                                  //0x01F8(0x0010)
  HiddenActors*                                                       HiddenActors                                      //0x0208(0x0010)
  ShowOnlyComponents*                                                 ShowOnlyComponents                                //0x0218(0x0010)
  ShowOnlyActors*                                                     ShowOnlyActors                                    //0x0228(0x0010)
  *                                                                   bCaptureEveryFrame                                //0x0238(0x0001)
  *                                                                   bCaptureOnMovement                                //0x0239(0x0001)
  *                                                                   bAlwaysPersistRenderingState                      //0x023A(0x0001)
  *                                                                   LODDistanceFactor                                 //0x023C(0x0004)
  *                                                                   MaxViewDistanceOverride                           //0x0240(0x0004)
  *                                                                   CaptureSortPriority                               //0x0244(0x0004)
  ShowFlagSettings*                                                   ShowFlagSettings                                  //0x0248(0x0010)
  *                                                                   ProfilingEventName                                //0x0268(0x0010)
  InComponent*                                                        ShowOnlyComponent                                 //0x0000(0x0229)
  InActor*                                                            ShowOnlyActorComponents                           //0x0000(0x0229)
  *                                                                   SetCaptureSortPriority                            //0x0000(0x0229)
  InComponent*                                                        RemoveShowOnlyComponent                           //0x0000(0x0229)
  InActor*                                                            RemoveShowOnlyActorComponents                     //0x0000(0x0229)
  InComponent*                                                        HideComponent                                     //0x0000(0x0229)
  InActor*                                                            HideActorComponents                               //0x0000(0x0229)
  *                                                                   ClearShowOnlyComponents                           //0x0000(0x0229)
  *                                                                   ClearHiddenComponents                             //0x0000(0x0229)
};


class PlanarReflectionComponent : public SceneCaptureComponent
{
  BoxComponent*                                                       PreviewBox                                        //0x0288(0x0008)
  *                                                                   NormalDistortionStrength                          //0x0290(0x0004)
  *                                                                   PrefilterRoughness                                //0x0294(0x0004)
  *                                                                   PrefilterRoughnessDistance                        //0x0298(0x0004)
  *                                                                   ScreenPercentage                                  //0x029C(0x0004)
  *                                                                   ExtraFOV                                          //0x02A0(0x0004)
  *                                                                   DistanceFromPlaneFadeStart                        //0x02A4(0x0004)
  *                                                                   DistanceFromPlaneFadeEnd                          //0x02A8(0x0004)
  *                                                                   DistanceFromPlaneFadeoutStart                     //0x02AC(0x0004)
  *                                                                   DistanceFromPlaneFadeoutEnd                       //0x02B0(0x0004)
  *                                                                   AngleFromPlaneFadeStart                           //0x02B4(0x0004)
  *                                                                   AngleFromPlaneFadeEnd                             //0x02B8(0x0004)
  *                                                                   bShowPreviewPlane                                 //0x02BC(0x0001)
  *                                                                   bRenderSceneTwoSided                              //0x02BD(0x0001)
};


class PlaneReflectionCapture : public ReflectionCapture
{
};


class PlaneReflectionCaptureComponent : public ReflectionCaptureComponent
{
  *                                                                   InfluenceRadiusScale                              //0x0268(0x0004)
  DrawSphereComponent*                                                PreviewInfluenceRadius                            //0x0270(0x0008)
  BoxComponent*                                                       PreviewCaptureBox                                 //0x0278(0x0008)
};


class PlatformEventsComponent : public ActorComponent
{
  PlatformEventDelegate__DelegateSignature*                           PlatformChangedToLaptopModeDelegate               //0x00B0(0x0010)
  PlatformEventDelegate__DelegateSignature*                           PlatformChangedToTabletModeDelegate               //0x00C0(0x0010)
  *                                                                   SupportsConvertibleLaptops                        //0x0000(0x0229)
  *                                                                   PlatformEventDelegate__DelegateSignature          //0x0000(0x0229)
  *                                                                   IsInTabletMode                                    //0x0000(0x0229)
  *                                                                   IsInLaptopMode                                    //0x0000(0x0229)
};


class PlatformInterfaceWebResponse : public Object
{
  *                                                                   OriginalURL                                       //0x0028(0x0010)
  *                                                                   ResponseCode                                      //0x0038(0x0004)
  *                                                                   Tag                                               //0x003C(0x0004)
  *                                                                   StringResponse                                    //0x0040(0x0010)
  BinaryResponse*                                                     BinaryResponse                                    //0x0050(0x0010)
  *                                                                   GetNumHeaders                                     //0x0000(0x0229)
  *                                                                   GetHeaderValue                                    //0x0000(0x0229)
  *                                                                   GetHeader                                         //0x0000(0x0229)
};


class PlayerCameraManager : public Actor
{
  PlayerController*                                                   PCOwner                                           //0x0218(0x0008)
  SceneComponent*                                                     TransformComponent                                //0x0220(0x0008)
  *                                                                   DefaultFOV                                        //0x0230(0x0004)
  *                                                                   DefaultOrthoWidth                                 //0x0238(0x0004)
  *                                                                   DefaultAspectRatio                                //0x0240(0x0004)
  CameraCacheEntry*                                                   CameraCache                                       //0x0290(0x05D0)
  CameraCacheEntry*                                                   LastFrameCameraCache                              //0x0860(0x05D0)
  TViewTarget*                                                        ViewTarget                                        //0x0E30(0x05E0)
  TViewTarget*                                                        PendingViewTarget                                 //0x1410(0x05E0)
  CameraCacheEntry*                                                   CameraCachePrivate                                //0x1A10(0x05D0)
  CameraCacheEntry*                                                   LastFrameCameraCachePrivate                       //0x1FE0(0x05D0)
  ModifierList*                                                       ModifierList                                      //0x25B0(0x0010)
  DefaultModifiers*                                                   DefaultModifiers                                  //0x25C0(0x0010)
  *                                                                   FreeCamDistance                                   //0x25D0(0x0004)
  Vector*                                                             FreeCamOffset                                     //0x25D4(0x000C)
  Vector*                                                             ViewTargetOffset                                  //0x25E0(0x000C)
  CameraLensEffects*                                                  CameraLensEffects                                 //0x2600(0x0010)
  CameraModifier_CameraShake*                                         CachedCameraShakeMod                              //0x2610(0x0008)
  CameraAnimInst*                                                     AnimInstPool                                      //0x2618(0x0008)
  PostProcessBlendCache*                                              PostProcessBlendCache                             //0x2658(0x0010)
  ActiveAnims*                                                        ActiveAnims                                       //0x2678(0x0010)
  FreeAnims*                                                          FreeAnims                                         //0x2688(0x0010)
  CameraActor*                                                        AnimCameraActor                                   //0x2698(0x0008)
  *                                                                   bIsOrthographic                                   //0x26A0(0x0001)
  *                                                                   bDefaultConstrainAspectRatio                      //0x26A0(0x0001)
  *                                                                   bClientSimulatingViewTarget                       //0x26A0(0x0001)
  *                                                                   bUseClientSideCameraUpdates                       //0x26A0(0x0001)
  *                                                                   bGameCameraCutThisFrame                           //0x26A1(0x0001)
  *                                                                   ViewPitchMin                                      //0x26A4(0x0004)
  *                                                                   ViewPitchMax                                      //0x26A8(0x0004)
  *                                                                   ViewYawMin                                        //0x26AC(0x0004)
  *                                                                   ViewYawMax                                        //0x26B0(0x0004)
  *                                                                   ViewRollMin                                       //0x26B4(0x0004)
  *                                                                   ViewRollMax                                       //0x26B8(0x0004)
  *                                                                   ServerUpdateCameraTimeout                         //0x26C0(0x0004)
  ShakeInstance*                                                      StopCameraShake                                   //0x0000(0x0229)
  *                                                                   StopCameraFade                                    //0x0000(0x0229)
  AnimInst*                                                           StopCameraAnimInst                                //0x0000(0x0229)
  Shake*                                                              StopAllInstancesOfCameraShake                     //0x0000(0x0229)
  Anim*                                                               StopAllInstancesOfCameraAnim                      //0x0000(0x0229)
  *                                                                   StopAllCameraShakes                               //0x0000(0x0229)
  *                                                                   StopAllCameraAnims                                //0x0000(0x0229)
  *                                                                   StartCameraFade                                   //0x0000(0x0229)
  *                                                                   SetManualCameraFade                               //0x0000(0x0229)
  *                                                                   SetGameCameraCutThisFrame                         //0x0000(0x0229)
  ModifierToRemove*                                                   RemoveCameraModifier                              //0x0000(0x0229)
  Emitter*                                                            RemoveCameraLensEffect                            //0x0000(0x0229)
  ShakeClass*                                                         PlayCameraShake                                   //0x0000(0x0229)
  Anim*                                                               PlayCameraAnim                                    //0x0000(0x0229)
  *                                                                   PhotographyCameraModify                           //0x0000(0x0229)
  *                                                                   OnPhotographySessionStart                         //0x0000(0x0229)
  *                                                                   OnPhotographySessionEnd                           //0x0000(0x0229)
  *                                                                   OnPhotographyMultiPartCaptureStart                //0x0000(0x0229)
  *                                                                   OnPhotographyMultiPartCaptureEnd                  //0x0000(0x0229)
  ReturnValue*                                                        GetOwningPlayerController                         //0x0000(0x0229)
  *                                                                   GetFOVAngle                                       //0x0000(0x0229)
  *                                                                   GetCameraRotation                                 //0x0000(0x0229)
  *                                                                   GetCameraLocation                                 //0x0000(0x0229)
  ModifierClass*                                                      FindCameraModifierByClass                         //0x0000(0x0229)
  *                                                                   ClearCameraLensEffects                            //0x0000(0x0229)
  CameraTarget*                                                       BlueprintUpdateCamera                             //0x0000(0x0229)
  ModifierClass*                                                      AddNewCameraModifier                              //0x0000(0x0229)
  LensEffectEmitterClass*                                             AddCameraLensEffect                               //0x0000(0x0229)
};


class PlayerInput : public Object
{
  DebugExecBindings*                                                  DebugExecBindings                                 //0x0120(0x0010)
  InvertedAxis*                                                       InvertedAxis                                      //0x0160(0x0010)
  *                                                                   SetMouseSensitivity                               //0x0000(0x0229)
  *                                                                   SetBind                                           //0x0000(0x0229)
  *                                                                   InvertAxisKey                                     //0x0000(0x0229)
  *                                                                   InvertAxis                                        //0x0000(0x0229)
  *                                                                   ClearSmoothing                                    //0x0000(0x0229)
};


class PlayerStart : public NavigationObjectBase
{
  *                                                                   PlayerStartTag                                    //0x0240(0x0008)
};


class PlayerStartPIE : public PlayerStart
{
};


class PlayerState : public Info
{
  *                                                                   Score                                             //0x0218(0x0004)
  *                                                                   PlayerName                                        //0x0220(0x0010)
  *                                                                   PlayerId                                          //0x0240(0x0004)
  *                                                                   Ping                                              //0x0244(0x0001)
  *                                                                   bShouldUpdateReplicatedPing                       //0x0246(0x0001)
  *                                                                   bIsSpectator                                      //0x0246(0x0001)
  *                                                                   bOnlySpectator                                    //0x0246(0x0001)
  *                                                                   bIsABot                                           //0x0246(0x0001)
  *                                                                   bIsInactive                                       //0x0246(0x0001)
  *                                                                   bFromPreviousLevel                                //0x0246(0x0001)
  *                                                                   StartTime                                         //0x0248(0x0004)
  Class*                                                              EngineMessageClass                                //0x0250(0x0008)
  *                                                                   SavedNetworkAddress                               //0x0260(0x0010)
  UniqueNetIdRepl*                                                    UniqueId                                          //0x0270(0x0028)
  Pawn*                                                               PawnPrivate                                       //0x02A0(0x0008)
  *                                                                   PlayerNamePrivate                                 //0x0320(0x0010)
  OldPlayerState*                                                     ReceiveOverrideWith                               //0x0000(0x0229)
  NewPlayerState*                                                     ReceiveCopyProperties                             //0x0000(0x0229)
  *                                                                   OnRep_UniqueId                                    //0x0000(0x0229)
  *                                                                   OnRep_Score                                       //0x0000(0x0229)
  *                                                                   OnRep_PlayerName                                  //0x0000(0x0229)
  *                                                                   OnRep_PlayerId                                    //0x0000(0x0229)
  *                                                                   OnRep_bIsInactive                                 //0x0000(0x0229)
  *                                                                   GetPlayerName                                     //0x0000(0x0229)
};


class PluginCommandlet : public Commandlet
{
};


class PointLight : public Light
{
  PointLightComponent*                                                PointLightComponent                               //0x0228(0x0008)
  *                                                                   SetRadius                                         //0x0000(0x0229)
  *                                                                   SetLightFalloffExponent                           //0x0000(0x0229)
};


class PointLightComponent : public LocalLightComponent
{
  *                                                                   bUseInverseSquaredFalloff                         //0x0350(0x0001)
  *                                                                   LightFalloffExponent                              //0x0354(0x0004)
  *                                                                   SourceRadius                                      //0x0358(0x0004)
  *                                                                   SoftSourceRadius                                  //0x035C(0x0004)
  *                                                                   SourceLength                                      //0x0360(0x0004)
  *                                                                   SetSourceRadius                                   //0x0000(0x0229)
  *                                                                   SetSourceLength                                   //0x0000(0x0229)
  *                                                                   SetSoftSourceRadius                               //0x0000(0x0229)
  *                                                                   SetLightFalloffExponent                           //0x0000(0x0229)
};


class Polys : public Object
{
};


class PoseableMeshComponent : public SkinnedMeshComponent
{
  *                                                                   SetBoneTransformByName                            //0x0000(0x0229)
  *                                                                   SetBoneScaleByName                                //0x0000(0x0229)
  *                                                                   SetBoneRotationByName                             //0x0000(0x0229)
  *                                                                   SetBoneLocationByName                             //0x0000(0x0229)
  *                                                                   ResetBoneTransformByName                          //0x0000(0x0229)
  *                                                                   GetBoneTransformByName                            //0x0000(0x0229)
  *                                                                   GetBoneScaleByName                                //0x0000(0x0229)
  *                                                                   GetBoneRotationByName                             //0x0000(0x0229)
  *                                                                   GetBoneLocationByName                             //0x0000(0x0229)
  InComponentToCopy*                                                  CopyPoseFromSkeletalComponent                     //0x0000(0x0229)
};


class PoseAsset : public AnimationAsset
{
  PoseDataContainer*                                                  PoseContainer                                     //0x0080(0x0090)
  *                                                                   bAdditivePose                                     //0x0110(0x0001)
  *                                                                   BasePoseIndex                                     //0x0114(0x0004)
  *                                                                   RetargetSource                                    //0x0118(0x0008)
};


class PoseWatch : public Object
{
  EdGraphNode*                                                        Node                                              //0x0028(0x0008)
  Color*                                                              PoseWatchColour                                   //0x0030(0x0004)
};


class PostProcessComponent : public SceneComponent
{
  PostProcessSettings*                                                Settings                                          //0x0200(0x0530)
  *                                                                   Priority                                          //0x0730(0x0004)
  *                                                                   BlendRadius                                       //0x0734(0x0004)
  *                                                                   BlendWeight                                       //0x0738(0x0004)
  *                                                                   bEnabled                                          //0x073C(0x0001)
  *                                                                   bUnbound                                          //0x073C(0x0001)
  InBlendableObject*                                                  AddOrUpdateBlendable                              //0x0000(0x0229)
};


class PostProcessVolume : public Volume
{
  PostProcessSettings*                                                Settings                                          //0x0260(0x0530)
  *                                                                   Priority                                          //0x0790(0x0004)
  *                                                                   BlendRadius                                       //0x0794(0x0004)
  *                                                                   BlendWeight                                       //0x0798(0x0004)
  *                                                                   bEnabled                                          //0x079C(0x0001)
  *                                                                   bUnbound                                          //0x079C(0x0001)
  InBlendableObject*                                                  AddOrUpdateBlendable                              //0x0000(0x0229)
};


class PrecomputedVisibilityOverrideVolume : public Volume
{
  OverrideVisibleActors*                                              OverrideVisibleActors                             //0x0250(0x0010)
  OverrideInvisibleActors*                                            OverrideInvisibleActors                           //0x0260(0x0010)
  OverrideInvisibleLevels*                                            OverrideInvisibleLevels                           //0x0270(0x0010)
};


class PrecomputedVisibilityVolume : public Volume
{
};


class PreviewCollectionInterface : public Interface
{
};


class PreviewMeshCollection : public DataAsset
{
  Skeleton*                                                           Skeleton                                          //0x0038(0x0008)
  SkeletalMeshes*                                                     SkeletalMeshes                                    //0x0040(0x0010)
};


class PrimaryAssetLabel : public PrimaryDataAsset
{
  PrimaryAssetRules*                                                  Rules                                             //0x0030(0x000C)
  *                                                                   bLabelAssetsInMyDirectory                         //0x003C(0x0001)
  *                                                                   bIsRuntimeLabel                                   //0x003C(0x0001)
  ExplicitAssets*                                                     ExplicitAssets                                    //0x0040(0x0010)
  ExplicitBlueprints*                                                 ExplicitBlueprints                                //0x0050(0x0010)
  CollectionReference*                                                AssetCollection                                   //0x0060(0x0008)
};


class ProjectileMovementComponent : public MovementComponent
{
  *                                                                   InitialSpeed                                      //0x00F0(0x0004)
  *                                                                   MaxSpeed                                          //0x00F4(0x0004)
  *                                                                   bRotationFollowsVelocity                          //0x00F8(0x0001)
  *                                                                   bRotationRemainsVertical                          //0x00F8(0x0001)
  *                                                                   bShouldBounce                                     //0x00F8(0x0001)
  *                                                                   bInitialVelocityInLocalSpace                      //0x00F8(0x0001)
  *                                                                   bForceSubStepping                                 //0x00F8(0x0001)
  *                                                                   bSimulationEnabled                                //0x00F8(0x0001)
  *                                                                   bSweepCollision                                   //0x00F8(0x0001)
  *                                                                   bIsHomingProjectile                               //0x00F8(0x0001)
  *                                                                   bBounceAngleAffectsFriction                       //0x00F9(0x0001)
  *                                                                   bIsSliding                                        //0x00F9(0x0001)
  *                                                                   bInterpMovement                                   //0x00F9(0x0001)
  *                                                                   bInterpRotation                                   //0x00F9(0x0001)
  *                                                                   PreviousHitTime                                   //0x00FC(0x0004)
  Vector*                                                             PreviousHitNormal                                 //0x0100(0x000C)
  *                                                                   ProjectileGravityScale                            //0x010C(0x0004)
  *                                                                   Buoyancy                                          //0x0110(0x0004)
  *                                                                   Bounciness                                        //0x0114(0x0004)
  *                                                                   Friction                                          //0x0118(0x0004)
  *                                                                   BounceVelocityStopSimulatingThreshold             //0x011C(0x0004)
  *                                                                   MinFrictionFraction                               //0x0120(0x0004)
  OnProjectileBounceDelegate__DelegateSignature*                      OnProjectileBounce                                //0x0128(0x0010)
  OnProjectileStopDelegate__DelegateSignature*                        OnProjectileStop                                  //0x0138(0x0010)
  *                                                                   HomingAccelerationMagnitude                       //0x0148(0x0004)
  SceneComponent*                                                     HomingTargetComponent                             //0x014C(0x0008)
  *                                                                   MaxSimulationTimeStep                             //0x0154(0x0004)
  *                                                                   MaxSimulationIterations                           //0x0158(0x0004)
  *                                                                   BounceAdditionalIterations                        //0x015C(0x0004)
  *                                                                   InterpLocationTime                                //0x0160(0x0004)
  *                                                                   InterpRotationTime                                //0x0164(0x0004)
  *                                                                   InterpLocationMaxLagDistance                      //0x0168(0x0004)
  *                                                                   InterpLocationSnapToTargetDistance                //0x016C(0x0004)
  HitResult*                                                          StopSimulating                                    //0x0000(0x0229)
  *                                                                   SetVelocityInLocalSpace                           //0x0000(0x0229)
  Component*                                                          SetInterpolatedComponent                          //0x0000(0x0229)
  *                                                                   ResetInterpolation                                //0x0000(0x0229)
  ImpactResult*                                                       OnProjectileStopDelegate__DelegateSignature       //0x0000(0x0229)
  ImpactResult*                                                       OnProjectileBounceDelegate__DelegateSignature     //0x0000(0x0229)
  *                                                                   MoveInterpolationTarget                           //0x0000(0x0229)
  *                                                                   LimitVelocity                                     //0x0000(0x0229)
  *                                                                   IsVelocityUnderSimulationThreshold                //0x0000(0x0229)
  *                                                                   IsInterpolationComplete                           //0x0000(0x0229)
};


class ProxyLODMeshSimplificationSettings : public DeveloperSettings
{
  *                                                                   ProxyLODMeshReductionModuleName                   //0x0038(0x0008)
};


class RadialForceActor : public RigidBodyBase
{
  RadialForceComponent*                                               ForceComponent                                    //0x0218(0x0008)
  *                                                                   ToggleForce                                       //0x0000(0x0229)
  *                                                                   FireImpulse                                       //0x0000(0x0229)
  *                                                                   EnableForce                                       //0x0000(0x0229)
  *                                                                   DisableForce                                      //0x0000(0x0229)
};


class RadialForceComponent : public SceneComponent
{
  *                                                                   Radius                                            //0x01F0(0x0004)
  ERadialImpulseFalloff*                                              Falloff                                           //0x01F4(0x0001)
  *                                                                   ImpulseStrength                                   //0x01F8(0x0004)
  *                                                                   bImpulseVelChange                                 //0x01FC(0x0001)
  *                                                                   bIgnoreOwningActor                                //0x01FC(0x0001)
  *                                                                   ForceStrength                                     //0x0200(0x0004)
  *                                                                   DestructibleDamage                                //0x0204(0x0004)
  ObjectTypesToAffect*                                                ObjectTypesToAffect                               //0x0208(0x0010)
  *                                                                   RemoveObjectTypeToAffect                          //0x0000(0x0229)
  *                                                                   FireImpulse                                       //0x0000(0x0229)
  *                                                                   AddObjectTypeToAffect                             //0x0000(0x0229)
};


class RectLight : public Light
{
  RectLightComponent*                                                 RectLightComponent                                //0x0228(0x0008)
};


class RectLightComponent : public LocalLightComponent
{
  *                                                                   SourceWidth                                       //0x0350(0x0004)
  *                                                                   SourceHeight                                      //0x0354(0x0004)
  *                                                                   BarnDoorAngle                                     //0x0358(0x0004)
  *                                                                   BarnDoorLength                                    //0x035C(0x0004)
  Texture*                                                            SourceTexture                                     //0x0360(0x0008)
  *                                                                   SetSourceWidth                                    //0x0000(0x0229)
  bNewValue*                                                          SetSourceTexture                                  //0x0000(0x0229)
  *                                                                   SetSourceHeight                                   //0x0000(0x0229)
  *                                                                   SetBarnDoorLength                                 //0x0000(0x0229)
  *                                                                   SetBarnDoorAngle                                  //0x0000(0x0229)
};


class RendererSettings : public DeveloperSettings
{
  *                                                                   bMobileHDR                                        //0x0038(0x0001)
  *                                                                   bMobileDisableVertexFog                           //0x0038(0x0001)
  *                                                                   MaxMobileCascades                                 //0x003C(0x0004)
  EMobileMSAASampleCount*                                             MobileMSAASampleCount                             //0x0040(0x0001)
  *                                                                   bMobileUseLegacyShadingModel                      //0x0044(0x0001)
  *                                                                   bMobileUseHWsRGBEncoding                          //0x0044(0x0001)
  *                                                                   bMobileAllowDitheredLODTransition                 //0x0044(0x0001)
  *                                                                   bMobileAllowSoftwareOcclusionCulling              //0x0044(0x0001)
  *                                                                   bDiscardUnusedQualityLevels                       //0x0044(0x0001)
  *                                                                   bOcclusionCulling                                 //0x0044(0x0001)
  *                                                                   MinScreenRadiusForLights                          //0x0048(0x0004)
  *                                                                   MinScreenRadiusForEarlyZPass                      //0x004C(0x0004)
  *                                                                   MinScreenRadiusForCSMdepth                        //0x0050(0x0004)
  *                                                                   bPrecomputedVisibilityWarning                     //0x0054(0x0001)
  *                                                                   bTextureStreaming                                 //0x0054(0x0001)
  *                                                                   bUseDXT5NormalMaps                                //0x0054(0x0001)
  *                                                                   bVirtualTextures                                  //0x0054(0x0001)
  *                                                                   bVirtualTexturedLightmaps                         //0x0054(0x0001)
  *                                                                   VirtualTextureTileSize                            //0x0058(0x0004)
  *                                                                   VirtualTextureTileBorderSize                      //0x005C(0x0004)
  *                                                                   VirtualTextureFeedbackFactor                      //0x0060(0x0004)
  *                                                                   bVirtualTextureEnableCompressZlib                 //0x0064(0x0001)
  *                                                                   bVirtualTextureEnableCompressCrunch               //0x0064(0x0001)
  *                                                                   bClearCoatEnableSecondNormal                      //0x0064(0x0001)
  *                                                                   ReflectionCaptureResolution                       //0x0068(0x0004)
  *                                                                   ReflectionEnvironmentLightmapMixBasedOnRoughness  //0x006C(0x0001)
  *                                                                   bForwardShading                                   //0x006C(0x0001)
  *                                                                   bVertexFoggingForOpaque                           //0x006C(0x0001)
  *                                                                   bAllowStaticLighting                              //0x006C(0x0001)
  *                                                                   bUseNormalMapsForStaticLighting                   //0x006C(0x0001)
  *                                                                   bGenerateMeshDistanceFields                       //0x006C(0x0001)
  *                                                                   bEightBitMeshDistanceFields                       //0x006C(0x0001)
  *                                                                   bGenerateLandscapeGIData                          //0x006C(0x0001)
  *                                                                   bCompressMeshDistanceFields                       //0x006D(0x0001)
  *                                                                   TessellationAdaptivePixelsPerTriangle             //0x0070(0x0004)
  *                                                                   bSeparateTranslucency                             //0x0074(0x0001)
  ETranslucentSortPolicy*                                             TranslucentSortPolicy                             //0x0078(0x0001)
  Vector*                                                             TranslucentSortAxis                               //0x007C(0x000C)
  ECustomDepthStencil*                                                CustomDepthStencil                                //0x0088(0x0001)
  *                                                                   bCustomDepthTaaJitter                             //0x008C(0x0001)
  EAlphaChannelMode*                                                  bEnableAlphaChannelInPostProcessing               //0x0090(0x0001)
  *                                                                   bDefaultFeatureBloom                              //0x0094(0x0001)
  *                                                                   bDefaultFeatureAmbientOcclusion                   //0x0094(0x0001)
  *                                                                   bDefaultFeatureAmbientOcclusionStaticFraction     //0x0094(0x0001)
  *                                                                   bDefaultFeatureAutoExposure                       //0x0094(0x0001)
  EAutoExposureMethodUI*                                              DefaultFeatureAutoExposure                        //0x0098(0x0001)
  *                                                                   bExtendDefaultLuminanceRangeInAutoExposureSettings//0x009C(0x0001)
  *                                                                   bUsePreExposure                                   //0x009C(0x0001)
  *                                                                   bEnablePreExposureOnlyInTheEditor                 //0x009C(0x0001)
  *                                                                   bDefaultFeatureMotionBlur                         //0x009C(0x0001)
  *                                                                   bDefaultFeatureLensFlare                          //0x009C(0x0001)
  *                                                                   bTemporalUpsampling                               //0x009C(0x0001)
  *                                                                   bSSGI                                             //0x009C(0x0001)
  EAntiAliasingMethod*                                                DefaultFeatureAntiAliasing                        //0x00A0(0x0001)
  UnderlyingType*                                                     DefaultLightUnits                                 //0x00A1(0x0001)
  EDefaultBackBufferPixelFormat*                                      DefaultBackBufferPixelFormat                      //0x00A2(0x0001)
  *                                                                   bRenderUnbuiltPreviewShadowsInGame                //0x00A4(0x0001)
  *                                                                   bStencilForLODDither                              //0x00A4(0x0001)
  EEarlyZPass*                                                        EarlyZPass                                        //0x00A8(0x0001)
  *                                                                   bEarlyZPassOnlyMaterialMasking                    //0x00AC(0x0001)
  *                                                                   bDBuffer                                          //0x00AC(0x0001)
  EClearSceneOptions*                                                 ClearSceneMethod                                  //0x00B0(0x0001)
  *                                                                   bBasePassOutputsVelocity                          //0x00B4(0x0001)
  *                                                                   bSelectiveBasePassOutputs                         //0x00B4(0x0001)
  *                                                                   bDefaultParticleCutouts                           //0x00B4(0x0001)
  *                                                                   GPUSimulationTextureSizeX                         //0x00B8(0x0004)
  *                                                                   GPUSimulationTextureSizeY                         //0x00BC(0x0004)
  *                                                                   bGlobalClipPlane                                  //0x00C0(0x0001)
  EGBufferFormat*                                                     GBufferFormat                                     //0x00C4(0x0001)
  *                                                                   bUseGPUMorphTargets                               //0x00C8(0x0001)
  *                                                                   bNvidiaAftermathEnabled                           //0x00C8(0x0001)
  *                                                                   bInstancedStereo                                  //0x00C8(0x0001)
  *                                                                   bMultiView                                        //0x00C8(0x0001)
  *                                                                   bMobileMultiView                                  //0x00C8(0x0001)
  *                                                                   bMobileMultiViewDirect                            //0x00C8(0x0001)
  *                                                                   bRoundRobinOcclusion                              //0x00C8(0x0001)
  *                                                                   bODSCapture                                       //0x00C8(0x0001)
  *                                                                   WireframeCullThreshold                            //0x00CC(0x0004)
  *                                                                   bEnableRayTracing                                 //0x00D0(0x0001)
  *                                                                   bEnableRayTracingTextureLOD                       //0x00D0(0x0001)
  *                                                                   bSupportStationarySkylight                        //0x00D0(0x0001)
  *                                                                   bSupportLowQualityLightmaps                       //0x00D0(0x0001)
  *                                                                   bSupportPointLightWholeSceneShadows               //0x00D0(0x0001)
  *                                                                   bSupportAtmosphericFog                            //0x00D0(0x0001)
  *                                                                   bSupportSkyAtmosphere                             //0x00D0(0x0001)
  *                                                                   bSupportSkyAtmosphereAffectsHeightFog             //0x00D0(0x0001)
  *                                                                   bSupportSkinCacheShaders                          //0x00D1(0x0001)
  *                                                                   bMobileEnableStaticAndCSMShadowReceivers          //0x00D1(0x0001)
  *                                                                   bMobileEnableMovableLightCSMShaderCulling         //0x00D1(0x0001)
  *                                                                   bMobileAllowDistanceFieldShadows                  //0x00D1(0x0001)
  *                                                                   bMobileAllowMovableDirectionalLights              //0x00D1(0x0001)
  *                                                                   MobileNumDynamicPointLights                       //0x00D4(0x0004)
  *                                                                   bMobileDynamicPointLightsUseStaticBranch          //0x00D8(0x0001)
  *                                                                   bMobileAllowMovableSpotlights                     //0x00D8(0x0001)
  *                                                                   SkinCacheSceneMemoryLimitInMB                     //0x00DC(0x0004)
  *                                                                   bGPUSkinLimit2BoneInfluences                      //0x00E0(0x0001)
  *                                                                   bSupportDepthOnlyIndexBuffers                     //0x00E0(0x0001)
  *                                                                   bSupportReversedIndexBuffers                      //0x00E0(0x0001)
  *                                                                   bSupportMaterialLayers                            //0x00E0(0x0001)
  *                                                                   bLPV                                              //0x00E0(0x0001)
};


class RendererOverrideSettings : public DeveloperSettings
{
  *                                                                   bSupportAllShaderPermutations                     //0x0038(0x0001)
  *                                                                   bForceRecomputeTangents                           //0x0038(0x0001)
};


class ReplicationDriver : public Object
{
};


class ReplicationConnectionDriver : public Object
{
};


class ReporterBase : public Object
{
};


class ReporterGraph : public ReporterBase
{
};


class ReverbEffect : public Object
{
  *                                                                   Density                                           //0x0028(0x0004)
  *                                                                   Diffusion                                         //0x002C(0x0004)
  *                                                                   Gain                                              //0x0030(0x0004)
  *                                                                   GainHF                                            //0x0034(0x0004)
  *                                                                   DecayTime                                         //0x0038(0x0004)
  *                                                                   DecayHFRatio                                      //0x003C(0x0004)
  *                                                                   ReflectionsGain                                   //0x0040(0x0004)
  *                                                                   ReflectionsDelay                                  //0x0044(0x0004)
  *                                                                   LateGain                                          //0x0048(0x0004)
  *                                                                   LateDelay                                         //0x004C(0x0004)
  *                                                                   AirAbsorptionGainHF                               //0x0050(0x0004)
  *                                                                   RoomRolloffFactor                                 //0x0054(0x0004)
};


class Rig : public Object
{
  TransformBases*                                                     TransformBases                                    //0x0030(0x0010)
  Nodes*                                                              Nodes                                             //0x0040(0x0010)
};


class RotatingMovementComponent : public MovementComponent
{
  Rotator*                                                            RotationRate                                      //0x00F0(0x000C)
  Vector*                                                             PivotTranslation                                  //0x00FC(0x000C)
  *                                                                   bRotationInLocalSpace                             //0x0108(0x0001)
};


class RuntimeOptionsBase : public Object
{
};


class RuntimeVirtualTexture : public Object
{
  UnderlyingType*                                                     MaterialType                                      //0x0028(0x0001)
  *                                                                   bCompressTextures                                 //0x0029(0x0001)
  *                                                                   bEnable                                           //0x002A(0x0001)
  *                                                                   bClearTextures                                    //0x002B(0x0001)
  *                                                                   bSinglePhysicalSpace                              //0x002C(0x0001)
  *                                                                   bPrivateSpace                                     //0x002D(0x0001)
  *                                                                   bEnableScalability                                //0x002E(0x0001)
  *                                                                   Size                                              //0x0030(0x0004)
  *                                                                   TileCount                                         //0x0034(0x0004)
  *                                                                   TileSize                                          //0x0038(0x0004)
  *                                                                   TileBorderSize                                    //0x003C(0x0004)
  *                                                                   RemoveLowMips                                     //0x0040(0x0004)
  *                                                                   StreamLowMips                                     //0x0044(0x0004)
  RuntimeVirtualTextureStreamingProxy*                                StreamingTexture                                  //0x0048(0x0008)
};


class RuntimeVirtualTextureComponent : public SceneComponent
{
  RuntimeVirtualTexture*                                              VirtualTexture                                    //0x01F0(0x0008)
  *                                                                   bUseStreamingLowMipsInEditor                      //0x01F8(0x0001)
  Actor*                                                              BoundsSourceActor                                 //0x0200(0x0008)
};


class RuntimeVirtualTextureStreamingProxy : public Texture2D
{
  VirtualTextureBuildSettings*                                        Settings                                          //0x0100(0x000C)
  *                                                                   bSinglePhysicalSpace                              //0x010C(0x0001)
  *                                                                   BuildHash                                         //0x0110(0x0004)
};


class RuntimeVirtualTextureVolume : public Actor
{
  RuntimeVirtualTextureComponent*                                     VirtualTextureComponent                           //0x0218(0x0008)
};


class RVOAvoidanceInterface : public Interface
{
};


class Scene : public Object
{
};


class SceneCapture2D : public SceneCapture
{
  SceneCaptureComponent2D*                                            CaptureComponent2D                                //0x0228(0x0008)
  *                                                                   OnInterpToggle                                    //0x0000(0x0229)
};


class SceneCaptureComponent2D : public SceneCaptureComponent
{
  ECameraProjectionMode*                                              ProjectionType                                    //0x0288(0x0001)
  *                                                                   FOVAngle                                          //0x028C(0x0004)
  *                                                                   OrthoWidth                                        //0x0290(0x0004)
  TextureRenderTarget2D*                                              TextureTarget                                     //0x0298(0x0008)
  ESceneCaptureCompositeMode*                                         CompositeMode                                     //0x02A0(0x0001)
  PostProcessSettings*                                                PostProcessSettings                               //0x02B0(0x0530)
  *                                                                   PostProcessBlendWeight                            //0x07E0(0x0004)
  *                                                                   bOverride_CustomNearClippingPlane                 //0x07E4(0x0001)
  *                                                                   CustomNearClippingPlane                           //0x07E8(0x0004)
  *                                                                   bUseCustomProjectionMatrix                        //0x07EC(0x0001)
  Matrix*                                                             CustomProjectionMatrix                            //0x07F0(0x0040)
  *                                                                   bEnableClipPlane                                  //0x0830(0x0001)
  Vector*                                                             ClipPlaneBase                                     //0x0834(0x000C)
  Vector*                                                             ClipPlaneNormal                                   //0x0840(0x000C)
  *                                                                   bCameraCutThisFrame                               //0x084C(0x0001)
  *                                                                   bConsiderUnrenderedOpaquePixelAsFullyTranslucent  //0x084C(0x0001)
  *                                                                   CaptureScene                                      //0x0000(0x0229)
  InBlendableObject*                                                  AddOrUpdateBlendable                              //0x0000(0x0229)
};


class SceneCaptureComponentCube : public SceneCaptureComponent
{
  TextureRenderTargetCube*                                            TextureTarget                                     //0x0288(0x0008)
  *                                                                   bCaptureRotation                                  //0x0290(0x0001)
  TextureRenderTargetCube*                                            TextureTargetLeft                                 //0x0298(0x0008)
  TextureRenderTargetCube*                                            TextureTargetRight                                //0x02A0(0x0008)
  TextureRenderTarget2D*                                              TextureTargetODS                                  //0x02A8(0x0008)
  *                                                                   IPD                                               //0x02B0(0x0004)
  *                                                                   CaptureScene                                      //0x0000(0x0229)
};


class SceneCaptureCube : public SceneCapture
{
  SceneCaptureComponentCube*                                          CaptureComponentCube                              //0x0228(0x0008)
  *                                                                   OnInterpToggle                                    //0x0000(0x0229)
};


class SCS_Node : public Object
{
  Class*                                                              ComponentClass                                    //0x0028(0x0008)
  ActorComponent*                                                     ComponentTemplate                                 //0x0030(0x0008)
  BlueprintCookedComponentInstancingData*                             CookedComponentInstancingData                     //0x0038(0x0048)
  *                                                                   AttachToName                                      //0x0080(0x0008)
  *                                                                   ParentComponentOrVariableName                     //0x0088(0x0008)
  *                                                                   ParentComponentOwnerClassName                     //0x0090(0x0008)
  *                                                                   bIsParentComponentNative                          //0x0098(0x0001)
  ChildNodes*                                                         ChildNodes                                        //0x00A0(0x0010)
  MetaDataArray*                                                      MetaDataArray                                     //0x00B0(0x0010)
  Guid*                                                               VariableGuid                                      //0x00C0(0x0010)
  *                                                                   InternalVariableName                              //0x00D0(0x0008)
};


class Selection : public Object
{
};


class ServerStatReplicator : public Info
{
  *                                                                   bUpdateStatNet                                    //0x0218(0x0001)
  *                                                                   bOverwriteClientStats                             //0x0219(0x0001)
  *                                                                   Channels                                          //0x021C(0x0004)
  *                                                                   InRate                                            //0x0220(0x0004)
  *                                                                   OutRate                                           //0x0224(0x0004)
  *                                                                   OutSaturation                                     //0x0228(0x0004)
  *                                                                   MaxPacketOverhead                                 //0x022C(0x0004)
  *                                                                   InRateClientMax                                   //0x0230(0x0004)
  *                                                                   InRateClientMin                                   //0x0234(0x0004)
  *                                                                   InRateClientAvg                                   //0x0238(0x0004)
  *                                                                   InPacketsClientMax                                //0x023C(0x0004)
  *                                                                   InPacketsClientMin                                //0x0240(0x0004)
  *                                                                   InPacketsClientAvg                                //0x0244(0x0004)
  *                                                                   OutRateClientMax                                  //0x0248(0x0004)
  *                                                                   OutRateClientMin                                  //0x024C(0x0004)
  *                                                                   OutRateClientAvg                                  //0x0250(0x0004)
  *                                                                   OutPacketsClientMax                               //0x0254(0x0004)
  *                                                                   OutPacketsClientMin                               //0x0258(0x0004)
  *                                                                   OutPacketsClientAvg                               //0x025C(0x0004)
  *                                                                   NetNumClients                                     //0x0260(0x0004)
  *                                                                   InPackets                                         //0x0264(0x0004)
  *                                                                   OutPackets                                        //0x0268(0x0004)
  *                                                                   InBunches                                         //0x026C(0x0004)
  *                                                                   OutBunches                                        //0x0270(0x0004)
  *                                                                   OutLoss                                           //0x0274(0x0004)
  *                                                                   InLoss                                            //0x0278(0x0004)
  *                                                                   VoiceBytesSent                                    //0x027C(0x0004)
  *                                                                   VoiceBytesRecv                                    //0x0280(0x0004)
  *                                                                   VoicePacketsSent                                  //0x0284(0x0004)
  *                                                                   VoicePacketsRecv                                  //0x0288(0x0004)
  *                                                                   PercentInVoice                                    //0x028C(0x0004)
  *                                                                   PercentOutVoice                                   //0x0290(0x0004)
  *                                                                   NumActorChannels                                  //0x0294(0x0004)
  *                                                                   NumConsideredActors                               //0x0298(0x0004)
  *                                                                   PrioritizedActors                                 //0x029C(0x0004)
  *                                                                   NumRelevantActors                                 //0x02A0(0x0004)
  *                                                                   NumRelevantDeletedActors                          //0x02A4(0x0004)
  *                                                                   NumReplicatedActorAttempts                        //0x02A8(0x0004)
  *                                                                   NumReplicatedActors                               //0x02AC(0x0004)
  *                                                                   NumActors                                         //0x02B0(0x0004)
  *                                                                   NumNetActors                                      //0x02B4(0x0004)
  *                                                                   NumDormantActors                                  //0x02B8(0x0004)
  *                                                                   NumInitiallyDormantActors                         //0x02BC(0x0004)
  *                                                                   NumNetGUIDsAckd                                   //0x02C0(0x0004)
  *                                                                   NumNetGUIDsPending                                //0x02C4(0x0004)
  *                                                                   NumNetGUIDsUnAckd                                 //0x02C8(0x0004)
  *                                                                   ObjPathBytes                                      //0x02CC(0x0004)
  *                                                                   NetGUIDOutRate                                    //0x02D0(0x0004)
  *                                                                   NetGUIDInRate                                     //0x02D4(0x0004)
  *                                                                   NetSaturated                                      //0x02D8(0x0004)
};


class ShadowMapTexture2D : public Texture2D
{
  EShadowMapFlags*                                                    ShadowmapFlags                                    //0x0100(0x0001)
};


class SimpleConstructionScript : public Object
{
  RootNodes*                                                          RootNodes                                         //0x0028(0x0010)
  AllNodes*                                                           AllNodes                                          //0x0038(0x0010)
  SCS_Node*                                                           DefaultSceneRootNode                              //0x0048(0x0008)
};


class SkeletalMesh : public StreamableRenderAsset
{
  Skeleton*                                                           Skeleton                                          //0x0060(0x0008)
  BoxSphereBounds*                                                    ImportedBounds                                    //0x0068(0x001C)
  BoxSphereBounds*                                                    ExtendedBounds                                    //0x0084(0x001C)
  Vector*                                                             PositiveBoundsExtension                           //0x00A0(0x000C)
  Vector*                                                             NegativeBoundsExtension                           //0x00AC(0x000C)
  Materials*                                                          Materials                                         //0x00B8(0x0010)
  SkelMirrorTable*                                                    SkelMirrorTable                                   //0x00C8(0x0010)
  LODInfo*                                                            LODInfo                                           //0x00D8(0x0010)
  PerPlatformInt*                                                     MinLOD                                            //0x0138(0x0004)
  PerPlatformBool*                                                    DisableBelowMinLodStripping                       //0x013C(0x0001)
  EAxis*                                                              SkelMirrorAxis                                    //0x013D(0x0001)
  EAxis*                                                              SkelMirrorFlipAxis                                //0x013E(0x0001)
  *                                                                   bUseFullPrecisionUVs                              //0x013F(0x0001)
  *                                                                   bUseHighPrecisionTangentBasis                     //0x013F(0x0001)
  *                                                                   bHasBeenSimplified                                //0x013F(0x0001)
  *                                                                   bHasVertexColors                                  //0x013F(0x0001)
  *                                                                   bEnablePerPolyCollision                           //0x013F(0x0001)
  BodySetup*                                                          BodySetup                                         //0x0140(0x0008)
  PhysicsAsset*                                                       PhysicsAsset                                      //0x0148(0x0008)
  PhysicsAsset*                                                       ShadowPhysicsAsset                                //0x0150(0x0008)
  NodeMappingData*                                                    NodeMappingData                                   //0x0158(0x0010)
  MorphTargets*                                                       MorphTargets                                      //0x0168(0x0010)
  Class*                                                              PostProcessAnimBlueprint                          //0x02F0(0x0008)
  MeshClothingAssets*                                                 MeshClothingAssets                                //0x02F8(0x0010)
  SkeletalMeshSamplingInfo*                                           SamplingInfo                                      //0x0308(0x0030)
  AssetUserData*                                                      AssetUserData                                     //0x0338(0x0010)
  Sockets*                                                            Sockets                                           //0x0350(0x0010)
  SkinWeightProfiles*                                                 SkinWeightProfiles                                //0x0370(0x0010)
  InLODSettings*                                                      SetLODSettings                                    //0x0000(0x0229)
  *                                                                   NumSockets                                        //0x0000(0x0229)
  *                                                                   K2_GetAllMorphTargetNames                         //0x0000(0x0229)
  *                                                                   IsSectionUsingCloth                               //0x0000(0x0229)
  ReturnValue*                                                        GetSocketByIndex                                  //0x0000(0x0229)
  SourceAsset*                                                        GetNodeMappingContainer                           //0x0000(0x0229)
  *                                                                   GetImportedBounds                                 //0x0000(0x0229)
  *                                                                   GetBounds                                         //0x0000(0x0229)
  ReturnValue*                                                        FindSocketInfo                                    //0x0000(0x0229)
  ReturnValue*                                                        FindSocketAndIndex                                //0x0000(0x0229)
  ReturnValue*                                                        FindSocket                                        //0x0000(0x0229)
};


class SkeletalMeshActor : public Actor
{
  *                                                                   bShouldDoAnimNotifies                             //0x0220(0x0001)
  *                                                                   bWakeOnLevelStart                                 //0x0220(0x0001)
  SkeletalMeshComponent*                                              SkeletalMeshComponent                             //0x0228(0x0008)
  SkeletalMesh*                                                       ReplicatedMesh                                    //0x0230(0x0008)
  PhysicsAsset*                                                       ReplicatedPhysAsset                               //0x0238(0x0008)
  MaterialInterface*                                                  ReplicatedMaterial0                               //0x0240(0x0008)
  MaterialInterface*                                                  ReplicatedMaterial1                               //0x0248(0x0008)
  *                                                                   OnRep_ReplicatedPhysAsset                         //0x0000(0x0229)
  *                                                                   OnRep_ReplicatedMesh                              //0x0000(0x0229)
  *                                                                   OnRep_ReplicatedMaterial1                         //0x0000(0x0229)
  *                                                                   OnRep_ReplicatedMaterial0                         //0x0000(0x0229)
};


class SkeletalMeshLODSettings : public DataAsset
{
  PerPlatformInt*                                                     MinLOD                                            //0x0030(0x0004)
  PerPlatformBool*                                                    DisableBelowMinLodStripping                       //0x0034(0x0001)
  PerPlatformBool*                                                    bSupportLODStreaming                              //0x0035(0x0001)
  PerPlatformInt*                                                     MaxNumStreamedLODs                                //0x0038(0x0004)
  PerPlatformInt*                                                     MaxNumOptionalLODs                                //0x003C(0x0004)
  LODGroups*                                                          LODGroups                                         //0x0040(0x0010)
};


class SkeletalMeshSimplificationSettings : public DeveloperSettings
{
  *                                                                   SkeletalMeshReductionModuleName                   //0x0038(0x0008)
};


class SkeletalMeshSocket : public Object
{
  *                                                                   SocketName                                        //0x0028(0x0008)
  *                                                                   BoneName                                          //0x0030(0x0008)
  Vector*                                                             RelativeLocation                                  //0x0038(0x000C)
  Rotator*                                                            RelativeRotation                                  //0x0044(0x000C)
  Vector*                                                             RelativeScale                                     //0x0050(0x000C)
  *                                                                   bForceAlwaysAnimated                              //0x005C(0x0001)
  SkelComp*                                                           InitializeSocketFromLocation                      //0x0000(0x0229)
  SkelComp*                                                           GetSocketLocation                                 //0x0000(0x0229)
};


class SkyAtmosphereComponent : public SceneComponent
{
  *                                                                   BottomRadius                                      //0x01F0(0x0004)
  Color*                                                              GroundAlbedo                                      //0x01F4(0x0004)
  *                                                                   AtmosphereHeight                                  //0x01F8(0x0004)
  *                                                                   MultiScatteringFactor                             //0x01FC(0x0004)
  *                                                                   RayleighScatteringScale                           //0x0200(0x0004)
  LinearColor*                                                        RayleighScattering                                //0x0204(0x0010)
  *                                                                   RayleighExponentialDistribution                   //0x0214(0x0004)
  *                                                                   MieScatteringScale                                //0x0218(0x0004)
  LinearColor*                                                        MieScattering                                     //0x021C(0x0010)
  *                                                                   MieAbsorptionScale                                //0x022C(0x0004)
  LinearColor*                                                        MieAbsorption                                     //0x0230(0x0010)
  *                                                                   MieAnisotropy                                     //0x0240(0x0004)
  *                                                                   MieExponentialDistribution                        //0x0244(0x0004)
  *                                                                   OtherAbsorptionScale                              //0x0248(0x0004)
  LinearColor*                                                        OtherAbsorption                                   //0x024C(0x0010)
  TentDistribution*                                                   OtherTentDistribution                             //0x025C(0x000C)
  LinearColor*                                                        SkyLuminanceFactor                                //0x0268(0x0010)
  *                                                                   AerialPespectiveViewDistanceScale                 //0x0278(0x0004)
  *                                                                   HeightFogContribution                             //0x027C(0x0004)
  *                                                                   TransmittanceMinLightElevationAngle               //0x0280(0x0004)
  Guid*                                                               bStaticLightingBuiltGUID                          //0x02AC(0x0010)
  *                                                                   SetSkyLuminanceFactor                             //0x0000(0x0229)
  *                                                                   SetRayleighScatteringScale                        //0x0000(0x0229)
  *                                                                   SetRayleighScattering                             //0x0000(0x0229)
  *                                                                   SetRayleighExponentialDistribution                //0x0000(0x0229)
  *                                                                   SetOtherAbsorptionScale                           //0x0000(0x0229)
  *                                                                   SetOtherAbsorption                                //0x0000(0x0229)
  *                                                                   SetMieScatteringScale                             //0x0000(0x0229)
  *                                                                   SetMieScattering                                  //0x0000(0x0229)
  *                                                                   SetMieExponentialDistribution                     //0x0000(0x0229)
  *                                                                   SetMieAnisotropy                                  //0x0000(0x0229)
  *                                                                   SetMieAbsorptionScale                             //0x0000(0x0229)
  *                                                                   SetMieAbsorption                                  //0x0000(0x0229)
  *                                                                   SetHeightFogContribution                          //0x0000(0x0229)
  *                                                                   SetAerialPespectiveViewDistanceScale              //0x0000(0x0229)
  *                                                                   OverrideAtmosphereLightDirection                  //0x0000(0x0229)
};


class SkyAtmosphere : public Info
{
  SkyAtmosphereComponent*                                             SkyAtmosphereComponent                            //0x0218(0x0008)
};


class SkyLightComponent : public LightComponentBase
{
  ESkyLightSourceType*                                                SourceType                                        //0x0220(0x0001)
  TextureCube*                                                        Cubemap                                           //0x0228(0x0008)
  *                                                                   SourceCubemapAngle                                //0x0230(0x0004)
  *                                                                   CubemapResolution                                 //0x0234(0x0004)
  *                                                                   SkyDistanceThreshold                              //0x0238(0x0004)
  *                                                                   bCaptureEmissiveOnly                              //0x023C(0x0001)
  *                                                                   bLowerHemisphereIsBlack                           //0x023D(0x0001)
  LinearColor*                                                        LowerHemisphereColor                              //0x0240(0x0010)
  *                                                                   OcclusionMaxDistance                              //0x0250(0x0004)
  *                                                                   Contrast                                          //0x0254(0x0004)
  *                                                                   OcclusionExponent                                 //0x0258(0x0004)
  *                                                                   MinOcclusion                                      //0x025C(0x0004)
  Color*                                                              OcclusionTint                                     //0x0260(0x0004)
  EOcclusionCombineMode*                                              OcclusionCombineMode                              //0x0264(0x0001)
  TextureCube*                                                        BlendDestinationCubemap                           //0x0308(0x0008)
  *                                                                   SetVolumetricScatteringIntensity                  //0x0000(0x0229)
  *                                                                   SetOcclusionTint                                  //0x0000(0x0229)
  *                                                                   SetOcclusionExponent                              //0x0000(0x0229)
  *                                                                   SetOcclusionContrast                              //0x0000(0x0229)
  *                                                                   SetMinOcclusion                                   //0x0000(0x0229)
  *                                                                   SetLowerHemisphereColor                           //0x0000(0x0229)
  *                                                                   SetLightColor                                     //0x0000(0x0229)
  *                                                                   SetIntensity                                      //0x0000(0x0229)
  *                                                                   SetIndirectLightingIntensity                      //0x0000(0x0229)
  SourceCubemap*                                                      SetCubemapBlend                                   //0x0000(0x0229)
  NewCubemap*                                                         SetCubemap                                        //0x0000(0x0229)
  *                                                                   RecaptureSky                                      //0x0000(0x0229)
};


class SlateBrushAsset : public Object
{
  SlateBrush*                                                         Brush                                             //0x0028(0x0088)
};


class SlateTextureAtlasInterface : public Interface
{
};


class SmokeTestCommandlet : public Commandlet
{
};


class SoundAttenuation : public Object
{
  SoundAttenuationSettings*                                           Attenuation                                       //0x0028(0x02F0)
};


class SoundClass : public Object
{
  SoundClassProperties*                                               Properties                                        //0x0028(0x0030)
  ChildClasses*                                                       ChildClasses                                      //0x0058(0x0010)
  PassiveSoundMixModifiers*                                           PassiveSoundMixModifiers                          //0x0068(0x0010)
  SoundModulation*                                                    Modulation                                        //0x0078(0x0010)
  SoundClass*                                                         ParentClass                                       //0x0088(0x0008)
};


class SoundConcurrency : public Object
{
  SoundConcurrencySettings*                                           Concurrency                                       //0x0028(0x0020)
};


class SoundCue : public SoundBase
{
  *                                                                   bPrimeOnLoad                                      //0x0160(0x0001)
  SoundNode*                                                          FirstNode                                         //0x0168(0x0008)
  *                                                                   VolumeMultiplier                                  //0x0170(0x0004)
  *                                                                   PitchMultiplier                                   //0x0174(0x0004)
  SoundAttenuationSettings*                                           AttenuationOverrides                              //0x0178(0x02F0)
  *                                                                   SubtitlePriority                                  //0x0468(0x0004)
  *                                                                   bOverrideAttenuation                              //0x0470(0x0001)
  *                                                                   bExcludeFromRandomNodeBranchCulling               //0x0470(0x0001)
  *                                                                   bHasPlayWhenSilent                                //0x0470(0x0001)
};


class SoundCueTemplate : public SoundCue
{
};


class SoundEffectSourcePreset : public SoundEffectPreset
{
};


class SoundEffectSourcePresetChain : public Object
{
  Chain*                                                              Chain                                             //0x0028(0x0010)
  *                                                                   bPlayEffectChainTails                             //0x0038(0x0001)
};


class SoundGroups : public Object
{
  SoundGroupProfiles*                                                 SoundGroupProfiles                                //0x0028(0x0010)
};


class SoundMix : public Object
{
  *                                                                   bApplyEQ                                          //0x0028(0x0001)
  *                                                                   EQPriority                                        //0x002C(0x0004)
  AudioEQEffect*                                                      EQSettings                                        //0x0030(0x0038)
  SoundClassEffects*                                                  SoundClassEffects                                 //0x0068(0x0010)
  *                                                                   InitialDelay                                      //0x0078(0x0004)
  *                                                                   FadeInTime                                        //0x007C(0x0004)
  *                                                                   Duration                                          //0x0080(0x0004)
  *                                                                   FadeOutTime                                       //0x0084(0x0004)
};


class SoundNode : public Object
{
  ChildNodes*                                                         ChildNodes                                        //0x0028(0x0010)
};


class SoundNodeAssetReferencer : public SoundNode
{
};


class SoundNodeAttenuation : public SoundNode
{
  SoundAttenuation*                                                   AttenuationSettings                               //0x0040(0x0008)
  SoundAttenuationSettings*                                           AttenuationOverrides                              //0x0048(0x02F0)
  *                                                                   bOverrideAttenuation                              //0x0338(0x0001)
};


class SoundNodeBranch : public SoundNode
{
  *                                                                   BoolParameterName                                 //0x0040(0x0008)
};


class SoundNodeConcatenator : public SoundNode
{
  InputVolume*                                                        InputVolume                                       //0x0040(0x0010)
};


class SoundNodeDelay : public SoundNode
{
  *                                                                   DelayMin                                          //0x0040(0x0004)
  *                                                                   DelayMax                                          //0x0044(0x0004)
};


class SoundNodeDialoguePlayer : public SoundNode
{
  DialogueWaveParameter*                                              DialogueWaveParameter                             //0x0040(0x0020)
  *                                                                   bLooping                                          //0x0060(0x0001)
};


class SoundNodeDistanceCrossFade : public SoundNode
{
  CrossFadeInput*                                                     CrossFadeInput                                    //0x0040(0x0010)
};


class SoundNodeDoppler : public SoundNode
{
  *                                                                   DopplerIntensity                                  //0x0040(0x0004)
  *                                                                   bUseSmoothing                                     //0x0044(0x0001)
  *                                                                   SmoothingInterpSpeed                              //0x0048(0x0004)
};


class SoundNodeEnveloper : public SoundNode
{
  *                                                                   LoopStart                                         //0x0040(0x0004)
  *                                                                   LoopEnd                                           //0x0044(0x0004)
  *                                                                   DurationAfterLoop                                 //0x0048(0x0004)
  *                                                                   LoopCount                                         //0x004C(0x0004)
  *                                                                   bLoopIndefinitely                                 //0x0050(0x0001)
  *                                                                   bLoop                                             //0x0050(0x0001)
  DistributionFloatConstantCurve*                                     VolumeInterpCurve                                 //0x0058(0x0008)
  DistributionFloatConstantCurve*                                     PitchInterpCurve                                  //0x0060(0x0008)
  RuntimeFloatCurve*                                                  VolumeCurve                                       //0x0068(0x0088)
  RuntimeFloatCurve*                                                  PitchCurve                                        //0x00F0(0x0088)
  *                                                                   PitchMin                                          //0x0178(0x0004)
  *                                                                   PitchMax                                          //0x017C(0x0004)
  *                                                                   VolumeMin                                         //0x0180(0x0004)
  *                                                                   VolumeMax                                         //0x0184(0x0004)
};


class SoundNodeGroupControl : public SoundNode
{
  GroupSizes*                                                         GroupSizes                                        //0x0040(0x0010)
};


class SoundNodeLooping : public SoundNode
{
  *                                                                   LoopCount                                         //0x0040(0x0004)
  *                                                                   bLoopIndefinitely                                 //0x0044(0x0001)
};


class SoundNodeMature : public SoundNode
{
};


class SoundNodeMixer : public SoundNode
{
  InputVolume*                                                        InputVolume                                       //0x0040(0x0010)
};


class SoundNodeModulator : public SoundNode
{
  *                                                                   PitchMin                                          //0x0040(0x0004)
  *                                                                   PitchMax                                          //0x0044(0x0004)
  *                                                                   VolumeMin                                         //0x0048(0x0004)
  *                                                                   VolumeMax                                         //0x004C(0x0004)
};


class SoundNodeModulatorContinuous : public SoundNode
{
  ModulatorContinuousParams*                                          PitchModulationParams                             //0x0040(0x0020)
  ModulatorContinuousParams*                                          VolumeModulationParams                            //0x0060(0x0020)
};


class SoundNodeOscillator : public SoundNode
{
  *                                                                   bModulateVolume                                   //0x0040(0x0001)
  *                                                                   bModulatePitch                                    //0x0040(0x0001)
  *                                                                   AmplitudeMin                                      //0x0044(0x0004)
  *                                                                   AmplitudeMax                                      //0x0048(0x0004)
  *                                                                   FrequencyMin                                      //0x004C(0x0004)
  *                                                                   FrequencyMax                                      //0x0050(0x0004)
  *                                                                   OffsetMin                                         //0x0054(0x0004)
  *                                                                   OffsetMax                                         //0x0058(0x0004)
  *                                                                   CenterMin                                         //0x005C(0x0004)
  *                                                                   CenterMax                                         //0x0060(0x0004)
};


class SoundNodeParamCrossFade : public SoundNodeDistanceCrossFade
{
  *                                                                   ParamName                                         //0x0050(0x0008)
};


class SoundNodeQualityLevel : public SoundNode
{
};


class SoundNodeRandom : public SoundNode
{
  Weights*                                                            Weights                                           //0x0040(0x0010)
  HasBeenUsed*                                                        HasBeenUsed                                       //0x0050(0x0010)
  *                                                                   NumRandomUsed                                     //0x0060(0x0004)
  *                                                                   PreselectAtLevelLoad                              //0x0064(0x0004)
  *                                                                   bShouldExcludeFromBranchCulling                   //0x0068(0x0001)
  *                                                                   bSoundCueExcludedFromBranchCulling                //0x0068(0x0001)
  *                                                                   bRandomizeWithoutReplacement                      //0x0068(0x0001)
};


class SoundNodeSoundClass : public SoundNode
{
  SoundClass*                                                         SoundClassOverride                                //0x0040(0x0008)
};


class SoundNodeSwitch : public SoundNode
{
  *                                                                   IntParameterName                                  //0x0040(0x0008)
};


class SoundNodeWaveParam : public SoundNode
{
  *                                                                   WaveParameterName                                 //0x0040(0x0008)
};


class SoundNodeWavePlayer : public SoundNodeAssetReferencer
{
  SoundWave*                                                          SoundWaveAssetPtr                                 //0x0040(0x0028)
  SoundWave*                                                          SoundWave                                         //0x0068(0x0008)
  *                                                                   bLooping                                          //0x0070(0x0001)
};


class SoundSourceBus : public SoundWave
{
  UnderlyingType*                                                     SourceBusChannels                                 //0x0378(0x0001)
  *                                                                   SourceBusDuration                                 //0x037C(0x0004)
  *                                                                   bAutoDeactivateWhenSilent                         //0x0380(0x0001)
};


class SoundSubmix : public Object
{
  ChildSubmixes*                                                      ChildSubmixes                                     //0x0028(0x0010)
  SoundSubmix*                                                        ParentSubmix                                      //0x0038(0x0008)
  UnderlyingType*                                                     ChannelFormat                                     //0x0040(0x0001)
  *                                                                   bMuteWhenBackgrounded                             //0x0041(0x0001)
  SubmixEffectChain*                                                  SubmixEffectChain                                 //0x0048(0x0010)
  AmbisonicsSubmixSettingsBase*                                       AmbisonicsPluginSettings                          //0x0058(0x0008)
  *                                                                   EnvelopeFollowerAttackTime                        //0x0060(0x0004)
  *                                                                   EnvelopeFollowerReleaseTime                       //0x0064(0x0004)
  *                                                                   OutputVolume                                      //0x0068(0x0004)
  OnSubmixRecordedFileDone__DelegateSignature*                        OnSubmixRecordedFileDone                          //0x0070(0x0010)
  WorldContextObject*                                                 StopRecordingOutput                               //0x0000(0x0229)
  WorldContextObject*                                                 StopEnvelopeFollowing                             //0x0000(0x0229)
  WorldContextObject*                                                 StartRecordingOutput                              //0x0000(0x0229)
  WorldContextObject*                                                 StartEnvelopeFollowing                            //0x0000(0x0229)
  WorldContextObject*                                                 SetSubmixOutputVolume                             //0x0000(0x0229)
  WorldContextObject*                                                 AddEnvelopeFollowerDelegate                       //0x0000(0x0229)
};


class SpectatorPawn : public DefaultPawn
{
};


class SpectatorPawnMovement : public FloatingPawnMovement
{
  *                                                                   bIgnoreTimeDilation                               //0x0150(0x0001)
};


class SphereReflectionCapture : public ReflectionCapture
{
  DrawSphereComponent*                                                DrawCaptureRadius                                 //0x0220(0x0008)
};


class SphereReflectionCaptureComponent : public ReflectionCaptureComponent
{
  *                                                                   InfluenceRadius                                   //0x0268(0x0004)
  *                                                                   CaptureDistanceScale                              //0x026C(0x0004)
  DrawSphereComponent*                                                PreviewInfluenceRadius                            //0x0270(0x0008)
};


class SplineMetadata : public Object
{
};


class SplineMeshActor : public Actor
{
  SplineMeshComponent*                                                SplineMeshComponent                               //0x0218(0x0008)
};


class SplineMeshComponent : public StaticMeshComponent
{
  SplineMeshParams*                                                   SplineParams                                      //0x0470(0x0058)
  Vector*                                                             SplineUpDir                                       //0x04C8(0x000C)
  *                                                                   SplineBoundaryMin                                 //0x04D4(0x0004)
  Guid*                                                               CachedMeshBodySetupGuid                           //0x04D8(0x0010)
  BodySetup*                                                          BodySetup                                         //0x04E8(0x0008)
  *                                                                   SplineBoundaryMax                                 //0x04F0(0x0004)
  *                                                                   bAllowSplineEditingPerInstance                    //0x04F4(0x0001)
  *                                                                   bSmoothInterpRollScale                            //0x04F4(0x0001)
  *                                                                   bMeshDirty                                        //0x04F4(0x0001)
  ESplineMeshAxis*                                                    ForwardAxis                                       //0x04F5(0x0001)
  *                                                                   VirtualTextureMainPassMaxDrawDistance             //0x04F8(0x0004)
  *                                                                   UpdateMesh                                        //0x0000(0x0229)
  *                                                                   SetStartTangent                                   //0x0000(0x0229)
  *                                                                   SetStartScale                                     //0x0000(0x0229)
  *                                                                   SetStartRoll                                      //0x0000(0x0229)
  *                                                                   SetStartPosition                                  //0x0000(0x0229)
  *                                                                   SetStartOffset                                    //0x0000(0x0229)
  *                                                                   SetStartAndEnd                                    //0x0000(0x0229)
  *                                                                   SetSplineUpDir                                    //0x0000(0x0229)
  *                                                                   SetForwardAxis                                    //0x0000(0x0229)
  *                                                                   SetEndTangent                                     //0x0000(0x0229)
  *                                                                   SetEndScale                                       //0x0000(0x0229)
  *                                                                   SetEndRoll                                        //0x0000(0x0229)
  *                                                                   SetEndPosition                                    //0x0000(0x0229)
  *                                                                   SetEndOffset                                      //0x0000(0x0229)
  *                                                                   SetBoundaryMin                                    //0x0000(0x0229)
  *                                                                   SetBoundaryMax                                    //0x0000(0x0229)
  *                                                                   GetStartTangent                                   //0x0000(0x0229)
  *                                                                   GetStartScale                                     //0x0000(0x0229)
  *                                                                   GetStartRoll                                      //0x0000(0x0229)
  *                                                                   GetStartPosition                                  //0x0000(0x0229)
  *                                                                   GetStartOffset                                    //0x0000(0x0229)
  *                                                                   GetSplineUpDir                                    //0x0000(0x0229)
  *                                                                   GetForwardAxis                                    //0x0000(0x0229)
  *                                                                   GetEndTangent                                     //0x0000(0x0229)
  *                                                                   GetEndScale                                       //0x0000(0x0229)
  *                                                                   GetEndRoll                                        //0x0000(0x0229)
  *                                                                   GetEndPosition                                    //0x0000(0x0229)
  *                                                                   GetEndOffset                                      //0x0000(0x0229)
  *                                                                   GetBoundaryMin                                    //0x0000(0x0229)
  *                                                                   GetBoundaryMax                                    //0x0000(0x0229)
};


class SpotLightComponent : public PointLightComponent
{
  *                                                                   InnerConeAngle                                    //0x0368(0x0004)
  *                                                                   OuterConeAngle                                    //0x036C(0x0004)
  *                                                                   LightShaftConeAngle                               //0x0370(0x0004)
  *                                                                   SetOuterConeAngle                                 //0x0000(0x0229)
  *                                                                   SetInnerConeAngle                                 //0x0000(0x0229)
};


class SpringArmComponent : public SceneComponent
{
  *                                                                   TargetArmLength                                   //0x01F0(0x0004)
  Vector*                                                             SocketOffset                                      //0x01F4(0x000C)
  Vector*                                                             TargetOffset                                      //0x0200(0x000C)
  *                                                                   ProbeSize                                         //0x020C(0x0004)
  ECollisionChannel*                                                  ProbeChannel                                      //0x0210(0x0001)
  *                                                                   bDoCollisionTest                                  //0x0214(0x0001)
  *                                                                   bUsePawnControlRotation                           //0x0214(0x0001)
  *                                                                   bInheritPitch                                     //0x0214(0x0001)
  *                                                                   bInheritYaw                                       //0x0214(0x0001)
  *                                                                   bInheritRoll                                      //0x0214(0x0001)
  *                                                                   bEnableCameraLag                                  //0x0214(0x0001)
  *                                                                   bEnableCameraRotationLag                          //0x0214(0x0001)
  *                                                                   bUseCameraLagSubstepping                          //0x0214(0x0001)
  *                                                                   bDrawDebugLagMarkers                              //0x0215(0x0001)
  *                                                                   CameraLagSpeed                                    //0x0218(0x0004)
  *                                                                   CameraRotationLagSpeed                            //0x021C(0x0004)
  *                                                                   CameraLagMaxTimeStep                              //0x0220(0x0004)
  *                                                                   CameraLagMaxDistance                              //0x0224(0x0004)
  *                                                                   IsCollisionFixApplied                             //0x0000(0x0229)
  *                                                                   GetUnfixedCameraPosition                          //0x0000(0x0229)
  *                                                                   GetTargetRotation                                 //0x0000(0x0229)
};


class StaticMesh : public StreamableRenderAsset
{
  PerPlatformInt*                                                     MinLOD                                            //0x0060(0x0004)
  *                                                                   LpvBiasMultiplier                                 //0x0064(0x0004)
  StaticMaterials*                                                    StaticMaterials                                   //0x0068(0x0010)
  *                                                                   LightmapUVDensity                                 //0x0078(0x0004)
  *                                                                   LightMapResolution                                //0x007C(0x0004)
  *                                                                   LightMapCoordinateIndex                           //0x0080(0x0004)
  *                                                                   DistanceFieldSelfShadowBias                       //0x0084(0x0004)
  BodySetup*                                                          BodySetup                                         //0x0088(0x0008)
  *                                                                   LODForCollision                                   //0x0090(0x0004)
  *                                                                   bGenerateMeshDistanceField                        //0x0094(0x0001)
  *                                                                   bStripComplexCollisionForConsole                  //0x0094(0x0001)
  *                                                                   bHasNavigationData                                //0x0094(0x0001)
  *                                                                   bSupportUniformlyDistributedSampling              //0x0094(0x0001)
  *                                                                   bIsBuiltAtRuntime                                 //0x0094(0x0001)
  *                                                                   bAllowCPUAccess                                   //0x0094(0x0001)
  *                                                                   bSupportGpuUniformlyDistributedSampling           //0x0094(0x0001)
  Sockets*                                                            Sockets                                           //0x00B8(0x0010)
  Vector*                                                             PositiveBoundsExtension                           //0x00D8(0x000C)
  Vector*                                                             NegativeBoundsExtension                           //0x00E4(0x000C)
  BoxSphereBounds*                                                    ExtendedBounds                                    //0x00F0(0x001C)
  *                                                                   ElementToIgnoreForTexFactor                       //0x010C(0x0004)
  AssetUserData*                                                      AssetUserData                                     //0x0110(0x0010)
  Object*                                                             EditableMesh                                      //0x0128(0x0008)
  NavCollisionBase*                                                   NavCollision                                      //0x0130(0x0008)
  Socket*                                                             RemoveSocket                                      //0x0000(0x0229)
  *                                                                   GetNumSections                                    //0x0000(0x0229)
  *                                                                   GetNumLODs                                        //0x0000(0x0229)
  *                                                                   GetMinimumLODForPlatforms                         //0x0000(0x0229)
  *                                                                   GetMinimumLODForPlatform                          //0x0000(0x0229)
  *                                                                   GetMaterialIndex                                  //0x0000(0x0229)
  ReturnValue*                                                        GetMaterial                                       //0x0000(0x0229)
  *                                                                   GetBounds                                         //0x0000(0x0229)
  *                                                                   GetBoundingBox                                    //0x0000(0x0229)
  ReturnValue*                                                        FindSocket                                        //0x0000(0x0229)
  Outer*                                                              CreateStaticMeshDescription                       //0x0000(0x0229)
  StaticMeshDescriptions*                                             BuildFromStaticMeshDescriptions                   //0x0000(0x0229)
  Socket*                                                             AddSocket                                         //0x0000(0x0229)
  Material*                                                           AddMaterial                                       //0x0000(0x0229)
};


class StaticMeshSocket : public Object
{
  *                                                                   SocketName                                        //0x0028(0x0008)
  Vector*                                                             RelativeLocation                                  //0x0030(0x000C)
  Rotator*                                                            RelativeRotation                                  //0x003C(0x000C)
  Vector*                                                             RelativeScale                                     //0x0048(0x000C)
  *                                                                   Tag                                               //0x0058(0x0010)
};


class StereoLayerComponent : public SceneComponent
{
  *                                                                   bLiveTexture                                      //0x01F0(0x0001)
  *                                                                   bSupportsDepth                                    //0x01F0(0x0001)
  *                                                                   bNoAlphaChannel                                   //0x01F0(0x0001)
  Texture*                                                            Texture                                           //0x01F8(0x0008)
  Texture*                                                            LeftTexture                                       //0x0200(0x0008)
  *                                                                   bQuadPreserveTextureRatio                         //0x0208(0x0001)
  Vector2D*                                                           QuadSize                                          //0x020C(0x0008)
  Box2D*                                                              UVRect                                            //0x0214(0x0014)
  *                                                                   CylinderRadius                                    //0x0228(0x0004)
  *                                                                   CylinderOverlayArc                                //0x022C(0x0004)
  *                                                                   CylinderHeight                                    //0x0230(0x0004)
  EquirectProps*                                                      EquirectProps                                     //0x0234(0x0048)
  EStereoLayerType*                                                   StereoLayerType                                   //0x027C(0x0001)
  EStereoLayerShape*                                                  StereoLayerShape                                  //0x027D(0x0001)
  *                                                                   Priority                                          //0x0280(0x0004)
  *                                                                   SetUVRect                                         //0x0000(0x0229)
  InTexture*                                                          SetTexture                                        //0x0000(0x0229)
  *                                                                   SetQuadSize                                       //0x0000(0x0229)
  *                                                                   SetPriority                                       //0x0000(0x0229)
  InTexture*                                                          SetLeftTexture                                    //0x0000(0x0229)
  *                                                                   SetEquirectProps                                  //0x0000(0x0229)
  *                                                                   MarkTextureForUpdate                              //0x0000(0x0229)
  *                                                                   GetUVRect                                         //0x0000(0x0229)
  ReturnValue*                                                        GetTexture                                        //0x0000(0x0229)
  *                                                                   GetQuadSize                                       //0x0000(0x0229)
  *                                                                   GetPriority                                       //0x0000(0x0229)
  ReturnValue*                                                        GetLeftTexture                                    //0x0000(0x0229)
};


class StereoLayerFunctionLibrary : public BlueprintFunctionLibrary
{
  *                                                                   ShowSplashScreen                                  //0x0000(0x0229)
  Texture*                                                            SetSplashScreen                                   //0x0000(0x0229)
  *                                                                   HideSplashScreen                                  //0x0000(0x0229)
  *                                                                   EnableAutoLoadingSplashScreen                     //0x0000(0x0229)
};


class StringTable : public Object
{
};


class SubsurfaceProfile : public Object
{
  SubsurfaceProfileStruct*                                            Settings                                          //0x0028(0x008C)
};


class SubsystemBlueprintLibrary : public BlueprintFunctionLibrary
{
  ContextObject*                                                      GetWorldSubsystem                                 //0x0000(0x0229)
  PlayerController*                                                   GetLocalPlayerSubSystemFromPlayerController       //0x0000(0x0229)
  ContextObject*                                                      GetLocalPlayerSubsystem                           //0x0000(0x0229)
  ContextObject*                                                      GetGameInstanceSubsystem                          //0x0000(0x0229)
  Class*                                                              GetEngineSubsystem                                //0x0000(0x0229)
};


class SubUVAnimation : public Object
{
  Texture2D*                                                          SubUVTexture                                      //0x0028(0x0008)
  *                                                                   SubImages_Horizontal                              //0x0030(0x0004)
  *                                                                   SubImages_Vertical                                //0x0034(0x0004)
  ESubUVBoundingVertexCount*                                          BoundingMode                                      //0x0038(0x0001)
  EOpacitySourceMode*                                                 OpacitySourceMode                                 //0x0039(0x0001)
  *                                                                   AlphaThreshold                                    //0x003C(0x0004)
};


class TimecodeProvider : public Object
{
  *                                                                   FrameDelay                                        //0x0028(0x0004)
  *                                                                   GetTimecode                                       //0x0000(0x0229)
  *                                                                   GetSynchronizationState                           //0x0000(0x0229)
  *                                                                   GetFrameRate                                      //0x0000(0x0229)
  *                                                                   GetDelayedTimecode                                //0x0000(0x0229)
};


class SystemTimeTimecodeProvider : public TimecodeProvider
{
  FrameRate*                                                          FrameRate                                         //0x0030(0x0008)
  *                                                                   SetFrameRate                                      //0x0000(0x0229)
};


class TargetPoint : public Actor
{
};


class TextPropertyTestObject : public Object
{
  *                                                                   DefaultedText                                     //0x0028(0x0018)
  *                                                                   UndefaultedText                                   //0x0040(0x0018)
  *                                                                   TransientText                                     //0x0058(0x0018)
};


class TextRenderActor : public Actor
{
  TextRenderComponent*                                                TextRender                                        //0x0218(0x0008)
};


class TextRenderComponent : public PrimitiveComponent
{
  *                                                                   Text                                              //0x03D8(0x0018)
  MaterialInterface*                                                  TextMaterial                                      //0x03F0(0x0008)
  Font*                                                               Font                                              //0x03F8(0x0008)
  EHorizTextAligment*                                                 HorizontalAlignment                               //0x0400(0x0001)
  EVerticalTextAligment*                                              VerticalAlignment                                 //0x0401(0x0001)
  Color*                                                              TextRenderColor                                   //0x0404(0x0004)
  *                                                                   XScale                                            //0x0408(0x0004)
  *                                                                   YScale                                            //0x040C(0x0004)
  *                                                                   WorldSize                                         //0x0410(0x0004)
  *                                                                   InvDefaultSize                                    //0x0414(0x0004)
  *                                                                   HorizSpacingAdjust                                //0x0418(0x0004)
  *                                                                   VertSpacingAdjust                                 //0x041C(0x0004)
  *                                                                   bAlwaysRenderAsText                               //0x0420(0x0001)
  *                                                                   SetYScale                                         //0x0000(0x0229)
  *                                                                   SetXScale                                         //0x0000(0x0229)
  *                                                                   SetWorldSize                                      //0x0000(0x0229)
  *                                                                   SetVertSpacingAdjust                              //0x0000(0x0229)
  *                                                                   SetVerticalAlignment                              //0x0000(0x0229)
  *                                                                   SetTextRenderColor                                //0x0000(0x0229)
  Material*                                                           SetTextMaterial                                   //0x0000(0x0229)
  *                                                                   SetText                                           //0x0000(0x0229)
  *                                                                   SetHorizSpacingAdjust                             //0x0000(0x0229)
  *                                                                   SetHorizontalAlignment                            //0x0000(0x0229)
  Value*                                                              SetFont                                           //0x0000(0x0229)
  *                                                                   K2_SetText                                        //0x0000(0x0229)
  *                                                                   GetTextWorldSize                                  //0x0000(0x0229)
  *                                                                   GetTextLocalSize                                  //0x0000(0x0229)
};


class Texture2DArray : public Texture
{
};


class Texture2DDynamic : public Texture
{
  EPixelFormat*                                                       Format                                            //0x00D8(0x0001)
};


class TextureLightProfile : public Texture2D
{
  *                                                                   Brightness                                        //0x0100(0x0004)
  *                                                                   TextureMultiplier                                 //0x0104(0x0004)
};


class TextureRenderTargetCube : public TextureRenderTarget
{
  *                                                                   SizeX                                             //0x00D8(0x0004)
  LinearColor*                                                        ClearColor                                        //0x00DC(0x0010)
  EPixelFormat*                                                       OverrideFormat                                    //0x00EC(0x0001)
  *                                                                   bHDR                                              //0x00ED(0x0001)
  *                                                                   bForceLinearGamma                                 //0x00ED(0x0001)
};


class ThumbnailInfo : public Object
{
};


class TimelineComponent : public ActorComponent
{
  Timeline*                                                           TheTimeline                                       //0x00B0(0x0098)
  *                                                                   bIgnoreTimeDilation                               //0x0148(0x0001)
  *                                                                   Stop                                              //0x0000(0x0229)
  NewVectorCurve*                                                     SetVectorCurve                                    //0x0000(0x0229)
  *                                                                   SetTimelineLengthMode                             //0x0000(0x0229)
  *                                                                   SetTimelineLength                                 //0x0000(0x0229)
  *                                                                   SetPlayRate                                       //0x0000(0x0229)
  *                                                                   SetPlaybackPosition                               //0x0000(0x0229)
  *                                                                   SetNewTime                                        //0x0000(0x0229)
  *                                                                   SetLooping                                        //0x0000(0x0229)
  NewLinearColorCurve*                                                SetLinearColorCurve                               //0x0000(0x0229)
  *                                                                   SetIgnoreTimeDilation                             //0x0000(0x0229)
  NewFloatCurve*                                                      SetFloatCurve                                     //0x0000(0x0229)
  *                                                                   ReverseFromEnd                                    //0x0000(0x0229)
  *                                                                   Reverse                                           //0x0000(0x0229)
  *                                                                   PlayFromStart                                     //0x0000(0x0229)
  *                                                                   Play                                              //0x0000(0x0229)
  *                                                                   OnRep_Timeline                                    //0x0000(0x0229)
  *                                                                   IsReversing                                       //0x0000(0x0229)
  *                                                                   IsPlaying                                         //0x0000(0x0229)
  *                                                                   IsLooping                                         //0x0000(0x0229)
  *                                                                   GetTimelineLength                                 //0x0000(0x0229)
  *                                                                   GetPlayRate                                       //0x0000(0x0229)
  *                                                                   GetPlaybackPosition                               //0x0000(0x0229)
  *                                                                   GetIgnoreTimeDilation                             //0x0000(0x0229)
};


class TimelineTemplate : public Object
{
  *                                                                   TimelineLength                                    //0x0028(0x0004)
  ETimelineLengthMode*                                                LengthMode                                        //0x002C(0x0001)
  *                                                                   bAutoPlay                                         //0x002D(0x0001)
  *                                                                   bLoop                                             //0x002D(0x0001)
  *                                                                   bReplicated                                       //0x002D(0x0001)
  *                                                                   bIgnoreTimeDilation                               //0x002D(0x0001)
  EventTracks*                                                        EventTracks                                       //0x0030(0x0010)
  FloatTracks*                                                        FloatTracks                                       //0x0040(0x0010)
  VectorTracks*                                                       VectorTracks                                      //0x0050(0x0010)
  LinearColorTracks*                                                  LinearColorTracks                                 //0x0060(0x0010)
  MetaDataArray*                                                      MetaDataArray                                     //0x0070(0x0010)
  Guid*                                                               TimelineGuid                                      //0x0080(0x0010)
  *                                                                   VariableName                                      //0x0090(0x0008)
  *                                                                   DirectionPropertyName                             //0x0098(0x0008)
  *                                                                   UpdateFunctionName                                //0x00A0(0x0008)
  *                                                                   FinishedFunctionName                              //0x00A8(0x0008)
};


class TireType : public DataAsset
{
  *                                                                   FrictionScale                                     //0x0030(0x0004)
};


class TouchInterface : public Object
{
  Controls*                                                           Controls                                          //0x0028(0x0010)
  *                                                                   ActiveOpacity                                     //0x0038(0x0004)
  *                                                                   InactiveOpacity                                   //0x003C(0x0004)
  *                                                                   TimeUntilDeactive                                 //0x0040(0x0004)
  *                                                                   TimeUntilReset                                    //0x0044(0x0004)
  *                                                                   ActivationDelay                                   //0x0048(0x0004)
  *                                                                   bPreventRecenter                                  //0x004C(0x0001)
  *                                                                   StartupDelay                                      //0x0050(0x0004)
};


class TriggerBase : public Actor
{
  ShapeComponent*                                                     CollisionComponent                                //0x0218(0x0008)
};


class TriggerBox : public TriggerBase
{
};


class TriggerCapsule : public TriggerBase
{
};


class TriggerSphere : public TriggerBase
{
};


class TriggerVolume : public Volume
{
};


class TwitterIntegrationBase : public PlatformInterfaceBase
{
  *                                                                   TwitterRequest                                    //0x0000(0x0229)
  *                                                                   ShowTweetUI                                       //0x0000(0x0229)
  *                                                                   Init                                              //0x0000(0x0229)
  *                                                                   GetNumAccounts                                    //0x0000(0x0229)
  *                                                                   GetAccountName                                    //0x0000(0x0229)
  *                                                                   CanShowTweetUI                                    //0x0000(0x0229)
  *                                                                   AuthorizeAccounts                                 //0x0000(0x0229)
};


class UserDefinedEnum : public Enum
{
  DisplayNameMap_Key*                                                 DisplayNameMap                                    //0x0060(0x0050)
};


class UserDefinedStruct : public ScriptStruct
{
  EUserDefinedStructureStatus*                                        Status                                            //0x00A8(0x0001)
  Guid*                                                               Guid                                              //0x00AC(0x0010)
};


class UserInterfaceSettings : public DeveloperSettings
{
  UnderlyingType*                                                     RenderFocusRule                                   //0x0038(0x0001)
  HardwareCursors_Key*                                                HardwareCursors                                   //0x0040(0x0050)
  SoftwareCursors_Key*                                                SoftwareCursors                                   //0x0090(0x0050)
  SoftClassPath*                                                      DefaultCursor                                     //0x00E0(0x0018)
  SoftClassPath*                                                      TextEditBeamCursor                                //0x00F8(0x0018)
  SoftClassPath*                                                      CrosshairsCursor                                  //0x0110(0x0018)
  SoftClassPath*                                                      HandCursor                                        //0x0128(0x0018)
  SoftClassPath*                                                      GrabHandCursor                                    //0x0140(0x0018)
  SoftClassPath*                                                      GrabHandClosedCursor                              //0x0158(0x0018)
  SoftClassPath*                                                      SlashedCircleCursor                               //0x0170(0x0018)
  *                                                                   ApplicationScale                                  //0x0188(0x0004)
  UnderlyingType*                                                     UIScaleRule                                       //0x018C(0x0001)
  SoftClassPath*                                                      CustomScalingRuleClass                            //0x0190(0x0018)
  RuntimeFloatCurve*                                                  UIScaleCurve                                      //0x01A8(0x0088)
  *                                                                   bAllowHighDPIInGameMode                           //0x0230(0x0001)
  *                                                                   bLoadWidgetsOnDedicatedServer                     //0x0231(0x0001)
  CursorClasses*                                                      CursorClasses                                     //0x0238(0x0010)
  Class*                                                              CustomScalingRuleClassInstance                    //0x0248(0x0008)
  DPICustomScalingRule*                                               CustomScalingRule                                 //0x0250(0x0008)
};


class VectorField : public Object
{
  Box*                                                                Bounds                                            //0x0028(0x001C)
  *                                                                   Intensity                                         //0x0044(0x0004)
};


class VectorFieldAnimated : public VectorField
{
  Texture2D*                                                          Texture                                           //0x0048(0x0008)
  EVectorFieldConstructionOp*                                         ConstructionOp                                    //0x0050(0x0001)
  *                                                                   VolumeSizeX                                       //0x0054(0x0004)
  *                                                                   VolumeSizeY                                       //0x0058(0x0004)
  *                                                                   VolumeSizeZ                                       //0x005C(0x0004)
  *                                                                   SubImagesX                                        //0x0060(0x0004)
  *                                                                   SubImagesY                                        //0x0064(0x0004)
  *                                                                   FrameCount                                        //0x0068(0x0004)
  *                                                                   FramesPerSecond                                   //0x006C(0x0004)
  *                                                                   bLoop                                             //0x0070(0x0001)
  VectorFieldStatic*                                                  NoiseField                                        //0x0078(0x0008)
  *                                                                   NoiseScale                                        //0x0080(0x0004)
  *                                                                   NoiseMax                                          //0x0084(0x0004)
};


class VectorFieldComponent : public PrimitiveComponent
{
  VectorField*                                                        VectorField                                       //0x03D8(0x0008)
  *                                                                   Intensity                                         //0x03E0(0x0004)
  *                                                                   Tightness                                         //0x03E4(0x0004)
  *                                                                   bPreviewVectorField                               //0x03E8(0x0001)
  *                                                                   SetIntensity                                      //0x0000(0x0229)
};


class VectorFieldStatic : public VectorField
{
  *                                                                   SizeX                                             //0x0048(0x0004)
  *                                                                   SizeY                                             //0x004C(0x0004)
  *                                                                   SizeZ                                             //0x0050(0x0004)
  *                                                                   bAllowCPUAccess                                   //0x0054(0x0001)
  CPUData*                                                            CPUData                                           //0x00F0(0x0010)
};


class VectorFieldVolume : public Actor
{
  VectorFieldComponent*                                               VectorFieldComponent                              //0x0218(0x0008)
};


class VirtualTexture : public Object
{
};


class LightMapVirtualTexture : public VirtualTexture
{
};


class LightMapVirtualTexture2D : public Texture2D
{
  TypeToLayer*                                                        TypeToLayer                                       //0x0100(0x0010)
};


class VirtualTexturePoolConfig : public Object
{
  *                                                                   DefaultSizeInMegabyte                             //0x0028(0x0004)
  Pools*                                                              Pools                                             //0x0030(0x0010)
};


class VisualLoggerAutomationTests : public Object
{
};


class VisualLoggerDebugSnapshotInterface : public Interface
{
};


class VisualLoggerKismetLibrary : public BlueprintFunctionLibrary
{
  SourceOwner*                                                        RedirectVislog                                    //0x0000(0x0229)
  WorldContextObject*                                                 LogText                                           //0x0000(0x0229)
  WorldContextObject*                                                 LogSegment                                        //0x0000(0x0229)
  WorldContextObject*                                                 LogLocation                                       //0x0000(0x0229)
  WorldContextObject*                                                 LogBox                                            //0x0000(0x0229)
  *                                                                   EnableRecording                                   //0x0000(0x0229)
};


class VoiceChannel : public Channel
{
};


class VOIPTalker : public ActorComponent
{
  VoiceSettings*                                                      Settings                                          //0x00B0(0x0018)
  OwningState*                                                        RegisterWithPlayerState                           //0x0000(0x0229)
  *                                                                   GetVoiceLevel                                     //0x0000(0x0229)
  OwningState*                                                        CreateTalkerForPlayer                             //0x0000(0x0229)
  *                                                                   BPOnTalkingEnd                                    //0x0000(0x0229)
  AudioComponent*                                                     BPOnTalkingBegin                                  //0x0000(0x0229)
};


class VOIPStatics : public BlueprintFunctionLibrary
{
  *                                                                   SetMicThreshold                                   //0x0000(0x0229)
};


class VolumeTexture : public Texture
{
};


class VolumetricLightmapDensityVolume : public Volume
{
  Int32Interval*                                                      AllowedMipLevelRange                              //0x0250(0x0008)
};


class WindDirectionalSource : public Info
{
  WindDirectionalSourceComponent*                                     Component                                         //0x0218(0x0008)
};


class WindDirectionalSourceComponent : public SceneComponent
{
  *                                                                   Strength                                          //0x01F0(0x0004)
  *                                                                   Speed                                             //0x01F4(0x0004)
  *                                                                   MinGustAmount                                     //0x01F8(0x0004)
  *                                                                   MaxGustAmount                                     //0x01FC(0x0004)
  *                                                                   Radius                                            //0x0200(0x0004)
  *                                                                   bPointWind                                        //0x0204(0x0001)
  *                                                                   SetWindType                                       //0x0000(0x0229)
  *                                                                   SetStrength                                       //0x0000(0x0229)
  *                                                                   SetSpeed                                          //0x0000(0x0229)
  *                                                                   SetRadius                                         //0x0000(0x0229)
  *                                                                   SetMinimumGustAmount                              //0x0000(0x0229)
  *                                                                   SetMaximumGustAmount                              //0x0000(0x0229)
};


class WorldComposition : public Object
{
  TilesStreaming*                                                     TilesStreaming                                    //0x0048(0x0010)
  *                                                                   TilesStreamingTimeThreshold                       //0x0058(0x0008)
  *                                                                   bLoadAllTilesDuringCinematic                      //0x0060(0x0001)
  *                                                                   bRebaseOriginIn3DSpace                            //0x0061(0x0001)
  *                                                                   RebaseOriginDistance                              //0x0064(0x0004)
};


class HierarchicalLODSetup : public Object
{
  HierarchicalLODSetup*                                               HierarchicalLODSetup                              //0x0028(0x0010)
  MaterialInterface*                                                  OverrideBaseMaterial                              //0x0038(0x0028)
};


class WorldSettings : public Info
{
  *                                                                   VisibilityCellSize                                //0x0220(0x0004)
  EVisibilityAggressiveness*                                          VisibilityAggressiveness                          //0x0224(0x0001)
  *                                                                   bPrecomputeVisibility                             //0x0225(0x0001)
  *                                                                   bPlaceCellsOnlyAlongCameraTracks                  //0x0225(0x0001)
  *                                                                   bEnableWorldBoundsChecks                          //0x0225(0x0001)
  *                                                                   bEnableNavigationSystem                           //0x0225(0x0001)
  *                                                                   bEnableAISystem                                   //0x0225(0x0001)
  *                                                                   bEnableWorldComposition                           //0x0225(0x0001)
  *                                                                   bUseClientSideLevelStreamingVolumes               //0x0225(0x0001)
  *                                                                   bEnableWorldOriginRebasing                        //0x0225(0x0001)
  *                                                                   bWorldGravitySet                                  //0x0226(0x0001)
  *                                                                   bGlobalGravitySet                                 //0x0226(0x0001)
  *                                                                   bMinimizeBSPSections                              //0x0226(0x0001)
  *                                                                   bForceNoPrecomputedLighting                       //0x0226(0x0001)
  *                                                                   bHighPriorityLoading                              //0x0226(0x0001)
  *                                                                   bHighPriorityLoadingLocal                         //0x0226(0x0001)
  *                                                                   bOverrideDefaultBroadphaseSettings                //0x0226(0x0001)
  NavigationSystemConfig*                                             NavigationSystemConfig                            //0x0228(0x0008)
  NavigationSystemConfig*                                             NavigationSystemConfigOverride                    //0x0230(0x0008)
  *                                                                   WorldToMeters                                     //0x0238(0x0004)
  *                                                                   KillZ                                             //0x023C(0x0004)
  Class*                                                              KillZDamageType                                   //0x0240(0x0008)
  *                                                                   WorldGravityZ                                     //0x0248(0x0004)
  *                                                                   GlobalGravityZ                                    //0x024C(0x0004)
  Class*                                                              DefaultPhysicsVolumeClass                         //0x0250(0x0008)
  Class*                                                              PhysicsCollisionHandlerClass                      //0x0258(0x0008)
  Class*                                                              DefaultGameMode                                   //0x0260(0x0008)
  Class*                                                              GameNetworkManagerClass                           //0x0268(0x0008)
  *                                                                   PackedLightAndShadowMapTextureSize                //0x0270(0x0004)
  Vector*                                                             DefaultColorScale                                 //0x0274(0x000C)
  *                                                                   DefaultMaxDistanceFieldOcclusionDistance          //0x0280(0x0004)
  *                                                                   GlobalDistanceFieldViewDistance                   //0x0284(0x0004)
  *                                                                   DynamicIndirectShadowsSelfShadowingIntensity      //0x0288(0x0004)
  ReverbSettings*                                                     DefaultReverbSettings                             //0x0290(0x0020)
  InteriorSettings*                                                   DefaultAmbientZoneSettings                        //0x02B0(0x0024)
  *                                                                   MonoCullingDistance                               //0x02D4(0x0004)
  SoundMix*                                                           DefaultBaseSoundMix                               //0x02D8(0x0008)
  *                                                                   TimeDilation                                      //0x02E0(0x0004)
  *                                                                   MatineeTimeDilation                               //0x02E4(0x0004)
  *                                                                   DemoPlayTimeDilation                              //0x02E8(0x0004)
  *                                                                   MinGlobalTimeDilation                             //0x02EC(0x0004)
  *                                                                   MaxGlobalTimeDilation                             //0x02F0(0x0004)
  *                                                                   MinUndilatedFrameTime                             //0x02F4(0x0004)
  *                                                                   MaxUndilatedFrameTime                             //0x02F8(0x0004)
  BroadphaseSettings*                                                 BroadphaseSettings                                //0x02FC(0x0040)
  PlayerState*                                                        Pauser                                            //0x0340(0x0008)
  ReplicationViewers*                                                 ReplicationViewers                                //0x0348(0x0010)
  AssetUserData*                                                      AssetUserData                                     //0x0358(0x0010)
  PlayerState*                                                        PauserPlayerState                                 //0x0368(0x0008)
  *                                                                   MaxNumberOfBookmarks                              //0x0370(0x0004)
  Class*                                                              DefaultBookmarkClass                              //0x0378(0x0008)
  BookmarkArray*                                                      BookmarkArray                                     //0x0380(0x0010)
  Class*                                                              LastBookmarkClass                                 //0x0390(0x0008)
  *                                                                   OnRep_WorldGravityZ                               //0x0000(0x0229)
};


class WorldSubsystem : public Subsystem
{
};


class Overlays : public Object
{
};


class BasicOverlays : public Overlays
{
  Overlays*                                                           Overlays                                          //0x0028(0x0010)
};


class LocalizedOverlays : public Overlays
{
  BasicOverlays*                                                      DefaultOverlays                                   //0x0028(0x0008)
  LocaleToOverlaysMap_Key*                                            LocaleToOverlaysMap                               //0x0030(0x0050)
};


class ClothingAssetCustomData : public Object
{
};


class ClothingAssetCommon : public ClothingAssetBase
{
  PhysicsAsset*                                                       PhysicsAsset                                      //0x0048(0x0008)
  ClothConfigBase*                                                    ClothSimConfig                                    //0x0050(0x0008)
  ClothLODData*                                                       ClothLODData                                      //0x0058(0x0010)
  LodMap*                                                             LodMap                                            //0x0068(0x0010)
  UsedBoneNames*                                                      UsedBoneNames                                     //0x0078(0x0010)
  UsedBoneIndices*                                                    UsedBoneIndices                                   //0x0088(0x0010)
  *                                                                   ReferenceBoneIndex                                //0x0098(0x0004)
  ClothingAssetCustomData*                                            CustomData                                        //0x00A0(0x0008)
};


class ClothLODDataBase : public Object
{
  ClothPhysicalMeshDataBase*                                          PhysicalMeshData                                  //0x0028(0x0008)
  ClothCollisionData*                                                 CollisionData                                     //0x0030(0x0040)
};


class ClothConfigNv : public ClothConfigBase
{
  UnderlyingType*                                                     WindMethod                                        //0x0028(0x0001)
  ClothConstraintSetup*                                               VerticalConstraintConfig                          //0x002C(0x0010)
  ClothConstraintSetup*                                               HorizontalConstraintConfig                        //0x003C(0x0010)
  ClothConstraintSetup*                                               BendConstraintConfig                              //0x004C(0x0010)
  ClothConstraintSetup*                                               ShearConstraintConfig                             //0x005C(0x0010)
  *                                                                   SelfCollisionRadius                               //0x006C(0x0004)
  *                                                                   SelfCollisionStiffness                            //0x0070(0x0004)
  *                                                                   SelfCollisionCullScale                            //0x0074(0x0004)
  Vector*                                                             Damping                                           //0x0078(0x000C)
  *                                                                   Friction                                          //0x0084(0x0004)
  *                                                                   WindDragCoefficient                               //0x0088(0x0004)
  *                                                                   WindLiftCoefficient                               //0x008C(0x0004)
  Vector*                                                             LinearDrag                                        //0x0090(0x000C)
  Vector*                                                             AngularDrag                                       //0x009C(0x000C)
  Vector*                                                             LinearInertiaScale                                //0x00A8(0x000C)
  Vector*                                                             AngularInertiaScale                               //0x00B4(0x000C)
  Vector*                                                             CentrifugalInertiaScale                           //0x00C0(0x000C)
  *                                                                   SolverFrequency                                   //0x00CC(0x0004)
  *                                                                   StiffnessFrequency                                //0x00D0(0x0004)
  *                                                                   GravityScale                                      //0x00D4(0x0004)
  Vector*                                                             GravityOverride                                   //0x00D8(0x000C)
  *                                                                   bUseGravityOverride                               //0x00E4(0x0001)
  *                                                                   TetherStiffness                                   //0x00E8(0x0004)
  *                                                                   TetherLimit                                       //0x00EC(0x0004)
  *                                                                   CollisionThickness                                //0x00F0(0x0004)
  *                                                                   AnimDriveSpringStiffness                          //0x00F4(0x0004)
  *                                                                   AnimDriveDamperStiffness                          //0x00F8(0x0004)
};


class ClothingAssetNv : public ClothingAssetCommon
{
  ClothConfig*                                                        ClothConfig                                       //0x00A8(0x00D4)
  LODData*                                                            LODData                                           //0x0180(0x0010)
};


class ClothingSimulationFactoryNv : public ClothingSimulationFactory
{
};


class ClothingSimulationInteractorNv : public ClothingSimulationInteractor
{
  *                                                                   SetAnimDriveSpringStiffness                       //0x0000(0x0229)
  *                                                                   SetAnimDriveDamperStiffness                       //0x0000(0x0229)
  *                                                                   EnableGravityOverride                             //0x0000(0x0229)
  *                                                                   DisableGravityOverride                            //0x0000(0x0229)
};


class ClothLODDataNv : public ClothLODDataBase
{
};


class ClothPhysicalMeshDataNv : public ClothPhysicalMeshDataBase
{
  MaxDistances*                                                       MaxDistances                                      //0x00E0(0x0010)
  BackstopDistances*                                                  BackstopDistances                                 //0x00F0(0x0010)
  BackstopRadiuses*                                                   BackstopRadiuses                                  //0x0100(0x0010)
  AnimDriveMultipliers*                                               AnimDriveMultipliers                              //0x0110(0x0010)
};


class FileMediaSource : public BaseMediaSource
{
  *                                                                   FilePath                                          //0x0088(0x0010)
  *                                                                   PrecacheFile                                      //0x0098(0x0001)
  *                                                                   SetFilePath                                       //0x0000(0x0229)
};


class MediaBlueprintFunctionLibrary : public BlueprintFunctionLibrary
{
  *                                                                   EnumerateWebcamCaptureDevices                     //0x0000(0x0229)
  *                                                                   EnumerateVideoCaptureDevices                      //0x0000(0x0229)
  *                                                                   EnumerateAudioCaptureDevices                      //0x0000(0x0229)
};


class MediaPlayer : public Object
{
  OnMediaPlayerMediaEvent__DelegateSignature*                         OnEndReached                                      //0x0028(0x0010)
  OnMediaPlayerMediaEvent__DelegateSignature*                         OnMediaClosed                                     //0x0038(0x0010)
  OnMediaPlayerMediaOpened__DelegateSignature*                        OnMediaOpened                                     //0x0048(0x0010)
  OnMediaPlayerMediaOpenFailed__DelegateSignature*                    OnMediaOpenFailed                                 //0x0058(0x0010)
  OnMediaPlayerMediaEvent__DelegateSignature*                         OnPlaybackResumed                                 //0x0068(0x0010)
  OnMediaPlayerMediaEvent__DelegateSignature*                         OnPlaybackSuspended                               //0x0078(0x0010)
  OnMediaPlayerMediaEvent__DelegateSignature*                         OnSeekCompleted                                   //0x0088(0x0010)
  OnMediaPlayerMediaEvent__DelegateSignature*                         OnTracksChanged                                   //0x0098(0x0010)
  Timespan*                                                           CacheAhead                                        //0x00A8(0x0008)
  Timespan*                                                           CacheBehind                                       //0x00B0(0x0008)
  Timespan*                                                           CacheBehindGame                                   //0x00B8(0x0008)
  *                                                                   NativeAudioOut                                    //0x00C0(0x0001)
  *                                                                   PlayOnOpen                                        //0x00C1(0x0001)
  *                                                                   Shuffle                                           //0x00C4(0x0001)
  *                                                                   Loop                                              //0x00C4(0x0001)
  MediaPlaylist*                                                      Playlist                                          //0x00C8(0x0008)
  *                                                                   PlaylistIndex                                     //0x00D0(0x0004)
  Timespan*                                                           TimeDelay                                         //0x00D8(0x0008)
  *                                                                   HorizontalFieldOfView                             //0x00E0(0x0004)
  *                                                                   VerticalFieldOfView                               //0x00E4(0x0004)
  Rotator*                                                            ViewRotation                                      //0x00E8(0x000C)
  Guid*                                                               PlayerGuid                                        //0x0120(0x0010)
  *                                                                   SupportsSeeking                                   //0x0000(0x0229)
  *                                                                   SupportsScrubbing                                 //0x0000(0x0229)
  *                                                                   SupportsRate                                      //0x0000(0x0229)
  *                                                                   SetViewRotation                                   //0x0000(0x0229)
  *                                                                   SetViewField                                      //0x0000(0x0229)
  *                                                                   SetVideoTrackFrameRate                            //0x0000(0x0229)
  *                                                                   SetTrackFormat                                    //0x0000(0x0229)
  *                                                                   SetTimeDelay                                      //0x0000(0x0229)
  *                                                                   SetRate                                           //0x0000(0x0229)
  *                                                                   SetNativeVolume                                   //0x0000(0x0229)
  Options*                                                            SetMediaOptions                                   //0x0000(0x0229)
  *                                                                   SetLooping                                        //0x0000(0x0229)
  *                                                                   SetDesiredPlayerName                              //0x0000(0x0229)
  *                                                                   SetBlockOnTime                                    //0x0000(0x0229)
  *                                                                   SelectTrack                                       //0x0000(0x0229)
  *                                                                   Seek                                              //0x0000(0x0229)
  *                                                                   Rewind                                            //0x0000(0x0229)
  *                                                                   Reopen                                            //0x0000(0x0229)
  *                                                                   Previous                                          //0x0000(0x0229)
  *                                                                   Play                                              //0x0000(0x0229)
  *                                                                   Pause                                             //0x0000(0x0229)
  *                                                                   OpenUrl                                           //0x0000(0x0229)
  MediaSource*                                                        OpenSourceWithOptions                             //0x0000(0x0229)
  WorldContextObject*                                                 OpenSourceLatent                                  //0x0000(0x0229)
  MediaSource*                                                        OpenSource                                        //0x0000(0x0229)
  InPlaylist*                                                         OpenPlaylistIndex                                 //0x0000(0x0229)
  InPlaylist*                                                         OpenPlaylist                                      //0x0000(0x0229)
  *                                                                   OpenFile                                          //0x0000(0x0229)
  *                                                                   Next                                              //0x0000(0x0229)
  *                                                                   IsReady                                           //0x0000(0x0229)
  *                                                                   IsPreparing                                       //0x0000(0x0229)
  *                                                                   IsPlaying                                         //0x0000(0x0229)
  *                                                                   IsPaused                                          //0x0000(0x0229)
  *                                                                   IsLooping                                         //0x0000(0x0229)
  *                                                                   IsConnecting                                      //0x0000(0x0229)
  *                                                                   IsClosed                                          //0x0000(0x0229)
  *                                                                   IsBuffering                                       //0x0000(0x0229)
  *                                                                   HasError                                          //0x0000(0x0229)
  *                                                                   GetViewRotation                                   //0x0000(0x0229)
  *                                                                   GetVideoTrackType                                 //0x0000(0x0229)
  *                                                                   GetVideoTrackFrameRates                           //0x0000(0x0229)
  *                                                                   GetVideoTrackFrameRate                            //0x0000(0x0229)
  *                                                                   GetVideoTrackDimensions                           //0x0000(0x0229)
  *                                                                   GetVideoTrackAspectRatio                          //0x0000(0x0229)
  *                                                                   GetVerticalFieldOfView                            //0x0000(0x0229)
  *                                                                   GetURL                                            //0x0000(0x0229)
  *                                                                   GetTrackLanguage                                  //0x0000(0x0229)
  *                                                                   GetTrackFormat                                    //0x0000(0x0229)
  *                                                                   GetTrackDisplayName                               //0x0000(0x0229)
  *                                                                   GetTimeDelay                                      //0x0000(0x0229)
  *                                                                   GetTime                                           //0x0000(0x0229)
  *                                                                   GetSupportedRates                                 //0x0000(0x0229)
  *                                                                   GetSelectedTrack                                  //0x0000(0x0229)
  *                                                                   GetRate                                           //0x0000(0x0229)
  *                                                                   GetPlaylistIndex                                  //0x0000(0x0229)
  ReturnValue*                                                        GetPlaylist                                       //0x0000(0x0229)
  *                                                                   GetPlayerName                                     //0x0000(0x0229)
  *                                                                   GetNumTracks                                      //0x0000(0x0229)
  *                                                                   GetNumTrackFormats                                //0x0000(0x0229)
  *                                                                   GetMediaName                                      //0x0000(0x0229)
  *                                                                   GetLastVideoSampleProcessedTime                   //0x0000(0x0229)
  *                                                                   GetLastAudioSampleProcessedTime                   //0x0000(0x0229)
  *                                                                   GetHorizontalFieldOfView                          //0x0000(0x0229)
  *                                                                   GetDuration                                       //0x0000(0x0229)
  *                                                                   GetDesiredPlayerName                              //0x0000(0x0229)
  *                                                                   GetAudioTrackType                                 //0x0000(0x0229)
  *                                                                   GetAudioTrackSampleRate                           //0x0000(0x0229)
  *                                                                   GetAudioTrackChannels                             //0x0000(0x0229)
  *                                                                   Close                                             //0x0000(0x0229)
  *                                                                   CanPlayUrl                                        //0x0000(0x0229)
  MediaSource*                                                        CanPlaySource                                     //0x0000(0x0229)
  *                                                                   CanPause                                          //0x0000(0x0229)
};


class MediaPlaylist : public Object
{
  Items*                                                              Items                                             //0x0028(0x0010)
  Replacement*                                                        Replace                                           //0x0000(0x0229)
  *                                                                   RemoveAt                                          //0x0000(0x0229)
  MediaSource*                                                        Remove                                            //0x0000(0x0229)
  *                                                                   Num                                               //0x0000(0x0229)
  MediaSource*                                                        Insert                                            //0x0000(0x0229)
  ReturnValue*                                                        GetRandom                                         //0x0000(0x0229)
  ReturnValue*                                                        GetPrevious                                       //0x0000(0x0229)
  ReturnValue*                                                        GetNext                                           //0x0000(0x0229)
  ReturnValue*                                                        Get                                               //0x0000(0x0229)
  *                                                                   AddUrl                                            //0x0000(0x0229)
  *                                                                   AddFile                                           //0x0000(0x0229)
  MediaSource*                                                        Add                                               //0x0000(0x0229)
};


class MediaSoundComponent : public SynthComponent
{
  UnderlyingType*                                                     Channels                                          //0x0620(0x0004)
  *                                                                   DynamicRateAdjustment                             //0x0624(0x0001)
  *                                                                   RateAdjustmentFactor                              //0x0628(0x0004)
  FloatRange*                                                         RateAdjustmentRange                               //0x062C(0x0010)
  MediaPlayer*                                                        MediaPlayer                                       //0x0640(0x0008)
  *                                                                   SetSpectralAnalysisSettings                       //0x0000(0x0229)
  NewMediaPlayer*                                                     SetMediaPlayer                                    //0x0000(0x0229)
  *                                                                   SetEnvelopeFollowingsettings                      //0x0000(0x0229)
  *                                                                   SetEnableSpectralAnalysis                         //0x0000(0x0229)
  *                                                                   SetEnableEnvelopeFollowing                        //0x0000(0x0229)
  *                                                                   GetSpectralData                                   //0x0000(0x0229)
  ReturnValue*                                                        GetMediaPlayer                                    //0x0000(0x0229)
  *                                                                   GetEnvelopeValue                                  //0x0000(0x0229)
  OutAttenuationSettings*                                             BP_GetAttenuationSettingsToApply                  //0x0000(0x0229)
};


class MediaTexture : public Texture
{
  TextureAddress*                                                     AddressX                                          //0x00D0(0x0001)
  TextureAddress*                                                     AddressY                                          //0x00D1(0x0001)
  *                                                                   AutoClear                                         //0x00D2(0x0001)
  LinearColor*                                                        ClearColor                                        //0x00D4(0x0010)
  MediaPlayer*                                                        MediaPlayer                                       //0x00E8(0x0008)
  NewMediaPlayer*                                                     SetMediaPlayer                                    //0x0000(0x0229)
  *                                                                   GetWidth                                          //0x0000(0x0229)
  ReturnValue*                                                        GetMediaPlayer                                    //0x0000(0x0229)
  *                                                                   GetHeight                                         //0x0000(0x0229)
  *                                                                   GetAspectRatio                                    //0x0000(0x0229)
};


class PlatformMediaSource : public MediaSource
{
  MediaSource*                                                        MediaSource                                       //0x0080(0x0008)
};


class StreamMediaSource : public BaseMediaSource
{
  *                                                                   StreamUrl                                         //0x0088(0x0010)
};


class TimeSynchronizableMediaSource : public BaseMediaSource
{
  *                                                                   bUseTimeSynchronization                           //0x0088(0x0001)
  *                                                                   FrameDelay                                        //0x008C(0x0004)
  *                                                                   TimeDelay                                         //0x0090(0x0008)
};


class ChaosDebugDrawComponent : public ActorComponent
{
};


class ChaosEventListenerComponent : public ActorComponent
{
};


class ChaosGameplayEventDispatcher : public ChaosEventListenerComponent
{
  CollisionEventRegistrations_Key*                                    CollisionEventRegistrations                       //0x01C8(0x0050)
  BreakEventRegistrations_Key*                                        BreakEventRegistrations                           //0x0218(0x0050)
};


class ChaosNotifyHandlerInterface : public Interface
{
};


class ChaosSolverEngineBlueprintLibrary : public BlueprintFunctionLibrary
{
  PhysicsCollision*                                                   ConvertPhysicsCollisionToHitResult                //0x0000(0x0229)
};


class ChaosSolver : public Object
{
};


class ChaosSolverActor : public Actor
{
  *                                                                   TimeStepMultiplier                                //0x0218(0x0004)
  *                                                                   CollisionIterations                               //0x021C(0x0004)
  *                                                                   PushOutIterations                                 //0x0220(0x0004)
  *                                                                   PushOutPairIterations                             //0x0224(0x0004)
  *                                                                   ClusterConnectionFactor                           //0x0228(0x0004)
  UnderlyingType*                                                     ClusterUnionConnectionType                        //0x022C(0x0001)
  *                                                                   DoGenerateCollisionData                           //0x022D(0x0001)
  SolverCollisionFilterSettings*                                      CollisionFilterSettings                           //0x0230(0x0010)
  *                                                                   DoGenerateBreakingData                            //0x0240(0x0001)
  SolverBreakingFilterSettings*                                       BreakingFilterSettings                            //0x0244(0x0010)
  *                                                                   DoGenerateTrailingData                            //0x0254(0x0001)
  SolverTrailingFilterSettings*                                       TrailingFilterSettings                            //0x0258(0x0010)
  *                                                                   bHasFloor                                         //0x0268(0x0001)
  *                                                                   FloorHeight                                       //0x026C(0x0004)
  *                                                                   MassScale                                         //0x0270(0x0004)
  ChaosDebugSubstepControl*                                           ChaosDebugSubstepControl                          //0x0274(0x0003)
  BillboardComponent*                                                 SpriteComponent                                   //0x0278(0x0008)
  ChaosGameplayEventDispatcher*                                       GameplayEventDispatcherComponent                  //0x0298(0x0008)
  *                                                                   SetSolverActive                                   //0x0000(0x0229)
  *                                                                   SetAsCurrentWorldSolver                           //0x0000(0x0229)
};


class ChaosSolverSettings : public DeveloperSettings
{
  SoftClassPath*                                                      DefaultChaosSolverActorClass                      //0x0040(0x0018)
};


class FieldSystemActor : public Actor
{
  FieldSystemComponent*                                               FieldSystemComponent                              //0x0218(0x0008)
};


class FieldSystem : public Object
{
};


class FieldSystemComponent : public PrimitiveComponent
{
  FieldSystem*                                                        FieldSystem                                       //0x03D8(0x0008)
  SupportedSolvers*                                                   SupportedSolvers                                  //0x03F0(0x0010)
  *                                                                   ResetFieldSystem                                  //0x0000(0x0229)
  *                                                                   ApplyUniformVectorFalloffForce                    //0x0000(0x0229)
  *                                                                   ApplyStrainField                                  //0x0000(0x0229)
  *                                                                   ApplyStayDynamicField                             //0x0000(0x0229)
  *                                                                   ApplyRadialVectorFalloffForce                     //0x0000(0x0229)
  *                                                                   ApplyRadialForce                                  //0x0000(0x0229)
  MetaData*                                                           ApplyPhysicsField                                 //0x0000(0x0229)
  *                                                                   ApplyLinearForce                                  //0x0000(0x0229)
  MetaData*                                                           AddFieldCommand                                   //0x0000(0x0229)
};


class FieldSystemMetaData : public ActorComponent
{
};


class FieldSystemMetaDataIteration : public FieldSystemMetaData
{
  *                                                                   Iterations                                        //0x00B0(0x0004)
  ReturnValue*                                                        SetMetaDataIteration                              //0x0000(0x0229)
};


class FieldSystemMetaDataProcessingResolution : public FieldSystemMetaData
{
  EFieldResolutionType*                                               ResolutionType                                    //0x00B0(0x0001)
  ReturnValue*                                                        SetMetaDataaProcessingResolutionType              //0x0000(0x0229)
};


class FieldNodeBase : public ActorComponent
{
};


class FieldNodeInt : public FieldNodeBase
{
};


class FieldNodeFloat : public FieldNodeBase
{
};


class FieldNodeVector : public FieldNodeBase
{
};


class UniformInteger : public FieldNodeInt
{
  *                                                                   Magnitude                                         //0x00B0(0x0004)
  ReturnValue*                                                        SetUniformInteger                                 //0x0000(0x0229)
};


class RadialIntMask : public FieldNodeInt
{
  *                                                                   Radius                                            //0x00B0(0x0004)
  Vector*                                                             Position                                          //0x00B4(0x000C)
  *                                                                   InteriorValue                                     //0x00C0(0x0004)
  *                                                                   ExteriorValue                                     //0x00C4(0x0004)
  ESetMaskConditionType*                                              SetMaskCondition                                  //0x00C8(0x0001)
  ReturnValue*                                                        SetRadialIntMask                                  //0x0000(0x0229)
};


class UniformScalar : public FieldNodeFloat
{
  *                                                                   Magnitude                                         //0x00B0(0x0004)
  ReturnValue*                                                        SetUniformScalar                                  //0x0000(0x0229)
};


class RadialFalloff : public FieldNodeFloat
{
  *                                                                   Magnitude                                         //0x00B0(0x0004)
  *                                                                   MinRange                                          //0x00B4(0x0004)
  *                                                                   MaxRange                                          //0x00B8(0x0004)
  *                                                                   Default                                           //0x00BC(0x0004)
  *                                                                   Radius                                            //0x00C0(0x0004)
  Vector*                                                             Position                                          //0x00C4(0x000C)
  EFieldFalloffType*                                                  Falloff                                           //0x00D0(0x0001)
  ReturnValue*                                                        SetRadialFalloff                                  //0x0000(0x0229)
};


class PlaneFalloff : public FieldNodeFloat
{
  *                                                                   Magnitude                                         //0x00B0(0x0004)
  *                                                                   MinRange                                          //0x00B4(0x0004)
  *                                                                   MaxRange                                          //0x00B8(0x0004)
  *                                                                   Default                                           //0x00BC(0x0004)
  *                                                                   Distance                                          //0x00C0(0x0004)
  Vector*                                                             Position                                          //0x00C4(0x000C)
  Vector*                                                             Normal                                            //0x00D0(0x000C)
  EFieldFalloffType*                                                  Falloff                                           //0x00DC(0x0001)
  ReturnValue*                                                        SetPlaneFalloff                                   //0x0000(0x0229)
};


class BoxFalloff : public FieldNodeFloat
{
  *                                                                   Magnitude                                         //0x00B0(0x0004)
  *                                                                   MinRange                                          //0x00B4(0x0004)
  *                                                                   MaxRange                                          //0x00B8(0x0004)
  *                                                                   Default                                           //0x00BC(0x0004)
  Transform*                                                          Transform                                         //0x00C0(0x0030)
  EFieldFalloffType*                                                  Falloff                                           //0x00F0(0x0001)
  ReturnValue*                                                        SetBoxFalloff                                     //0x0000(0x0229)
};


class NoiseField : public FieldNodeFloat
{
  *                                                                   MinRange                                          //0x00B0(0x0004)
  *                                                                   MaxRange                                          //0x00B4(0x0004)
  Transform*                                                          Transform                                         //0x00C0(0x0030)
  ReturnValue*                                                        SetNoiseField                                     //0x0000(0x0229)
};


class UniformVector : public FieldNodeVector
{
  *                                                                   Magnitude                                         //0x00B0(0x0004)
  Vector*                                                             Direction                                         //0x00B4(0x000C)
  ReturnValue*                                                        SetUniformVector                                  //0x0000(0x0229)
};


class RadialVector : public FieldNodeVector
{
  *                                                                   Magnitude                                         //0x00B0(0x0004)
  Vector*                                                             Position                                          //0x00B4(0x000C)
  ReturnValue*                                                        SetRadialVector                                   //0x0000(0x0229)
};


class RandomVector : public FieldNodeVector
{
  *                                                                   Magnitude                                         //0x00B0(0x0004)
  ReturnValue*                                                        SetRandomVector                                   //0x0000(0x0229)
};


class OperatorField : public FieldNodeBase
{
  *                                                                   Magnitude                                         //0x00B0(0x0004)
  FieldNodeBase*                                                      RightField                                        //0x00B8(0x0008)
  FieldNodeBase*                                                      LeftField                                         //0x00C0(0x0008)
  EFieldOperationType*                                                Operation                                         //0x00C8(0x0001)
  RightField*                                                         SetOperatorField                                  //0x0000(0x0229)
};


class ToIntegerField : public FieldNodeInt
{
  FieldNodeFloat*                                                     FloatField                                        //0x00B0(0x0008)
  FloatField*                                                         SetToIntegerField                                 //0x0000(0x0229)
};


class ToFloatField : public FieldNodeFloat
{
  FieldNodeInt*                                                       IntField                                          //0x00B0(0x0008)
  IntegerField*                                                       SetToFloatField                                   //0x0000(0x0229)
};


class CullingField : public FieldNodeBase
{
  FieldNodeBase*                                                      Culling                                           //0x00B0(0x0008)
  FieldNodeBase*                                                      Field                                             //0x00B8(0x0008)
  EFieldCullingOperationType*                                         Operation                                         //0x00C0(0x0001)
  Culling*                                                            SetCullingField                                   //0x0000(0x0229)
};


class ReturnResultsTerminal : public FieldNodeBase
{
  ReturnValue*                                                        SetReturnResultsTerminal                          //0x0000(0x0229)
};


class ChaosDestructionListener : public SceneComponent
{
  *                                                                   bIsCollisionEventListeningEnabled                 //0x01F0(0x0001)
  *                                                                   bIsBreakingEventListeningEnabled                  //0x01F0(0x0001)
  *                                                                   bIsTrailingEventListeningEnabled                  //0x01F0(0x0001)
  ChaosCollisionEventRequestSettings*                                 CollisionEventRequestSettings                     //0x01F4(0x0018)
  ChaosBreakingEventRequestSettings*                                  BreakingEventRequestSettings                      //0x020C(0x0018)
  ChaosTrailingEventRequestSettings*                                  TrailingEventRequestSettings                      //0x0224(0x0018)
  ChaosSolverActors*                                                  ChaosSolverActors                                 //0x0240(0x0050)
  GeometryCollectionActors*                                           GeometryCollectionActors                          //0x0290(0x0050)
  OnChaosCollisionEvents__DelegateSignature*                          OnCollisionEvents                                 //0x02E0(0x0010)
  OnChaosBreakingEvents__DelegateSignature*                           OnBreakingEvents                                  //0x02F0(0x0010)
  OnChaosTrailingEvents__DelegateSignature*                           OnTrailingEvents                                  //0x0300(0x0010)
  *                                                                   SortTrailingEvents                                //0x0000(0x0229)
  *                                                                   SortCollisionEvents                               //0x0000(0x0229)
  *                                                                   SortBreakingEvents                                //0x0000(0x0229)
  *                                                                   SetTrailingEventRequestSettings                   //0x0000(0x0229)
  *                                                                   SetTrailingEventEnabled                           //0x0000(0x0229)
  *                                                                   SetCollisionEventRequestSettings                  //0x0000(0x0229)
  *                                                                   SetCollisionEventEnabled                          //0x0000(0x0229)
  *                                                                   SetBreakingEventRequestSettings                   //0x0000(0x0229)
  *                                                                   SetBreakingEventEnabled                           //0x0000(0x0229)
  GeometryCollectionActor*                                            RemoveGeometryCollectionActor                     //0x0000(0x0229)
  ChaosSolverActor*                                                   RemoveChaosSolverActor                            //0x0000(0x0229)
  *                                                                   IsEventListening                                  //0x0000(0x0229)
  GeometryCollectionActor*                                            AddGeometryCollectionActor                        //0x0000(0x0229)
  ChaosSolverActor*                                                   AddChaosSolverActor                               //0x0000(0x0229)
};


class GeometryCollectionActor : public Actor
{
  GeometryCollectionComponent*                                        GeometryCollectionComponent                       //0x0218(0x0008)
  GeometryCollectionDebugDrawComponent*                               GeometryCollectionDebugDrawComponent              //0x0220(0x0008)
  OutHit*                                                             RaycastSingle                                     //0x0000(0x0229)
};


class GeometryCollectionCache : public Object
{
  RecordedTransformTrack*                                             RecordedData                                      //0x0028(0x0010)
  GeometryCollection*                                                 SupportedCollection                               //0x0038(0x0008)
  Guid*                                                               CompatibleCollectionState                         //0x0040(0x0010)
};


class GeometryCollectionComponent : public MeshComponent
{
  ChaosSolverActor*                                                   ChaosSolverActor                                  //0x0408(0x0008)
  GeometryCollection*                                                 RestCollection                                    //0x04F0(0x0008)
  InitializationFields*                                               InitializationFields                              //0x04F8(0x0010)
  *                                                                   Simulating                                        //0x0508(0x0001)
  UnderlyingType*                                                     ObjectType                                        //0x0510(0x0001)
  *                                                                   EnableClustering                                  //0x0511(0x0001)
  *                                                                   ClusterGroupIndex                                 //0x0514(0x0004)
  *                                                                   MaxClusterLevel                                   //0x0518(0x0004)
  DamageThreshold*                                                    DamageThreshold                                   //0x0520(0x0010)
  UnderlyingType*                                                     ClusterConnectionType                             //0x0530(0x0001)
  *                                                                   CollisionGroup                                    //0x0534(0x0004)
  *                                                                   CollisionSampleFraction                           //0x0538(0x0004)
  ChaosPhysicalMaterial*                                              PhysicalMaterial                                  //0x0540(0x0008)
  UnderlyingType*                                                     InitialVelocityType                               //0x0548(0x0001)
  Vector*                                                             InitialLinearVelocity                             //0x054C(0x000C)
  Vector*                                                             InitialAngularVelocity                            //0x0558(0x000C)
  GeomComponentCacheParameters*                                       CacheParameters                                   //0x0568(0x0050)
  NotifyGeometryCollectionPhysicsStateChange__DelegateSignature*      NotifyGeometryCollectionPhysicsStateChange        //0x05B8(0x0010)
  NotifyGeometryCollectionPhysicsLoadingStateChange__DelegateSignature*NotifyGeometryCollectionPhysicsLoadingStateChange//0x05C8(0x0010)
  OnChaosBreakEvent__DelegateSignature*                               OnChaosBreakEvent                                 //0x05F0(0x0010)
  *                                                                   DesiredCacheTime                                  //0x0600(0x0004)
  *                                                                   CachePlayback                                     //0x0604(0x0001)
  OnChaosPhysicsCollision__DelegateSignature*                         OnChaosPhysicsCollision                           //0x0608(0x0010)
  *                                                                   bNotifyBreaks                                     //0x0618(0x0001)
  *                                                                   bNotifyCollisions                                 //0x0619(0x0001)
  BodySetup*                                                          DummyBodySetup                                    //0x07C8(0x0008)
  *                                                                   SetNotifyBreaks                                   //0x0000(0x0229)
  CollisionInfo*                                                      ReceivePhysicsCollision                           //0x0000(0x0229)
  FracturedComponent*                                                 NotifyGeometryCollectionPhysicsStateChange__DelegateSignature//0x0000(0x0229)
  FracturedComponent*                                                 NotifyGeometryCollectionPhysicsLoadingStateChange__DelegateSignature//0x0000(0x0229)
  MetaData*                                                           ApplyPhysicsField                                 //0x0000(0x0229)
  *                                                                   ApplyKinematicField                               //0x0000(0x0229)
};


class GeometryCollectionDebugDrawActor : public Actor
{
  GeometryCollectionDebugDrawWarningMessage*                          WarningMessage                                    //0x0218(0x0001)
  GeometryCollectionDebugDrawActorSelectedRigidBody*                  SelectedRigidBody                                 //0x0220(0x0018)
  *                                                                   bDebugDrawWholeCollection                         //0x0238(0x0001)
  *                                                                   bDebugDrawHierarchy                               //0x0239(0x0001)
  *                                                                   bDebugDrawClustering                              //0x023A(0x0001)
  UnderlyingType*                                                     HideGeometry                                      //0x023B(0x0001)
  *                                                                   bShowRigidBodyId                                  //0x023C(0x0001)
  *                                                                   bShowRigidBodyCollision                           //0x023D(0x0001)
  *                                                                   bCollisionAtOrigin                                //0x023E(0x0001)
  *                                                                   bShowRigidBodyTransform                           //0x023F(0x0001)
  *                                                                   bShowRigidBodyInertia                             //0x0240(0x0001)
  *                                                                   bShowRigidBodyVelocity                            //0x0241(0x0001)
  *                                                                   bShowRigidBodyForce                               //0x0242(0x0001)
  *                                                                   bShowRigidBodyInfos                               //0x0243(0x0001)
  *                                                                   bShowTransformIndex                               //0x0244(0x0001)
  *                                                                   bShowTransform                                    //0x0245(0x0001)
  *                                                                   bShowParent                                       //0x0246(0x0001)
  *                                                                   bShowLevel                                        //0x0247(0x0001)
  *                                                                   bShowConnectivityEdges                            //0x0248(0x0001)
  *                                                                   bShowGeometryIndex                                //0x0249(0x0001)
  *                                                                   bShowGeometryTransform                            //0x024A(0x0001)
  *                                                                   bShowBoundingBox                                  //0x024B(0x0001)
  *                                                                   bShowFaces                                        //0x024C(0x0001)
  *                                                                   bShowFaceIndices                                  //0x024D(0x0001)
  *                                                                   bShowFaceNormals                                  //0x024E(0x0001)
  *                                                                   bShowSingleFace                                   //0x024F(0x0001)
  *                                                                   SingleFaceIndex                                   //0x0250(0x0004)
  *                                                                   bShowVertices                                     //0x0254(0x0001)
  *                                                                   bShowVertexIndices                                //0x0255(0x0001)
  *                                                                   bShowVertexNormals                                //0x0256(0x0001)
  *                                                                   bUseActiveVisualization                           //0x0257(0x0001)
  *                                                                   PointThickness                                    //0x0258(0x0004)
  *                                                                   LineThickness                                     //0x025C(0x0004)
  *                                                                   bTextShadow                                       //0x0260(0x0001)
  *                                                                   TextScale                                         //0x0264(0x0004)
  *                                                                   NormalScale                                       //0x0268(0x0004)
  *                                                                   AxisScale                                         //0x026C(0x0004)
  *                                                                   ArrowScale                                        //0x0270(0x0004)
  Color*                                                              RigidBodyIdColor                                  //0x0274(0x0004)
  *                                                                   RigidBodyTransformScale                           //0x0278(0x0004)
  Color*                                                              RigidBodyCollisionColor                           //0x027C(0x0004)
  Color*                                                              RigidBodyInertiaColor                             //0x0280(0x0004)
  Color*                                                              RigidBodyVelocityColor                            //0x0284(0x0004)
  Color*                                                              RigidBodyForceColor                               //0x0288(0x0004)
  Color*                                                              RigidBodyInfoColor                                //0x028C(0x0004)
  Color*                                                              TransformIndexColor                               //0x0290(0x0004)
  *                                                                   TransformScale                                    //0x0294(0x0004)
  Color*                                                              LevelColor                                        //0x0298(0x0004)
  Color*                                                              ParentColor                                       //0x029C(0x0004)
  *                                                                   ConnectivityEdgeThickness                         //0x02A0(0x0004)
  Color*                                                              GeometryIndexColor                                //0x02A4(0x0004)
  *                                                                   GeometryTransformScale                            //0x02A8(0x0004)
  Color*                                                              BoundingBoxColor                                  //0x02AC(0x0004)
  Color*                                                              FaceColor                                         //0x02B0(0x0004)
  Color*                                                              FaceIndexColor                                    //0x02B4(0x0004)
  Color*                                                              FaceNormalColor                                   //0x02B8(0x0004)
  Color*                                                              SingleFaceColor                                   //0x02BC(0x0004)
  Color*                                                              VertexColor                                       //0x02C0(0x0004)
  Color*                                                              VertexIndexColor                                  //0x02C4(0x0004)
  Color*                                                              VertexNormalColor                                 //0x02C8(0x0004)
  BillboardComponent*                                                 SpriteComponent                                   //0x02D0(0x0008)
};


class GeometryCollectionDebugDrawComponent : public ActorComponent
{
  GeometryCollectionDebugDrawActor*                                   GeometryCollectionDebugDrawActor                  //0x00B0(0x0008)
  GeometryCollectionRenderLevelSetActor*                              GeometryCollectionRenderLevelSetActor             //0x00B8(0x0008)
};


class GeometryCollection : public Object
{
  Materials*                                                          Materials                                         //0x0030(0x0010)
  UnderlyingType*                                                     CollisionType                                     //0x0040(0x0001)
  UnderlyingType*                                                     ImplicitType                                      //0x0041(0x0001)
  *                                                                   MinLevelSetResolution                             //0x0044(0x0004)
  *                                                                   MaxLevelSetResolution                             //0x0048(0x0004)
  *                                                                   MinClusterLevelSetResolution                      //0x004C(0x0004)
  *                                                                   MaxClusterLevelSetResolution                      //0x0050(0x0004)
  *                                                                   CollisionObjectReductionPercentage                //0x0054(0x0004)
  *                                                                   bMassAsDensity                                    //0x0058(0x0001)
  *                                                                   Mass                                              //0x005C(0x0004)
  *                                                                   MinimumMassClamp                                  //0x0060(0x0004)
  *                                                                   CollisionParticlesFraction                        //0x0064(0x0004)
  *                                                                   MaximumCollisionParticles                         //0x0068(0x0004)
  SizeSpecificData*                                                   SizeSpecificData                                  //0x0070(0x0010)
  *                                                                   EnableRemovePiecesOnFracture                      //0x0080(0x0001)
  RemoveOnFractureMaterials*                                          RemoveOnFractureMaterials                         //0x0088(0x0010)
  Guid*                                                               PersistentGuid                                    //0x0098(0x0010)
  Guid*                                                               StateGuid                                         //0x00A8(0x0010)
  *                                                                   BoneSelectedMaterialIndex                         //0x00B8(0x0004)
};


class GeometryCollectionRenderLevelSetActor : public Actor
{
  VolumeTexture*                                                      TargetVolumeTexture                               //0x0218(0x0008)
  Material*                                                           RayMarchMaterial                                  //0x0220(0x0008)
  *                                                                   SurfaceTolerance                                  //0x0228(0x0004)
  *                                                                   Isovalue                                          //0x022C(0x0004)
  *                                                                   Enabled                                           //0x0230(0x0001)
  *                                                                   RenderVolumeBoundingBox                           //0x0231(0x0001)
};


class SkeletalMeshSimulationComponent : public ActorComponent
{
  ChaosPhysicalMaterial*                                              PhysicalMaterial                                  //0x00B8(0x0008)
  ChaosSolverActor*                                                   ChaosSolverActor                                  //0x00C0(0x0008)
  PhysicsAsset*                                                       OverridePhysicsAsset                              //0x00C8(0x0008)
  *                                                                   bSimulating                                       //0x00D0(0x0001)
  *                                                                   bNotifyCollisions                                 //0x00D1(0x0001)
  UnderlyingType*                                                     ObjectType                                        //0x00D2(0x0001)
  *                                                                   Density                                           //0x00D4(0x0004)
  *                                                                   MinMass                                           //0x00D8(0x0004)
  *                                                                   MaxMass                                           //0x00DC(0x0004)
  UnderlyingType*                                                     CollisionType                                     //0x00E0(0x0001)
  *                                                                   ImplicitShapeParticlesPerUnitArea                 //0x00E4(0x0004)
  *                                                                   ImplicitShapeMinNumParticles                      //0x00E8(0x0004)
  *                                                                   ImplicitShapeMaxNumParticles                      //0x00EC(0x0004)
  *                                                                   MinLevelSetResolution                             //0x00F0(0x0004)
  *                                                                   MaxLevelSetResolution                             //0x00F4(0x0004)
  *                                                                   CollisionGroup                                    //0x00F8(0x0004)
  UnderlyingType*                                                     InitialVelocityType                               //0x00FC(0x0001)
  Vector*                                                             InitialLinearVelocity                             //0x0100(0x000C)
  Vector*                                                             InitialAngularVelocity                            //0x010C(0x000C)
  OnChaosPhysicsCollision__DelegateSignature*                         OnChaosPhysicsCollision                           //0x0118(0x0010)
  CollisionInfo*                                                      ReceivePhysicsCollision                           //0x0000(0x0229)
};


class StaticMeshSimulationComponent : public ActorComponent
{
  *                                                                   Simulating                                        //0x00B8(0x0001)
  *                                                                   bNotifyCollisions                                 //0x00B9(0x0001)
  UnderlyingType*                                                     ObjectType                                        //0x00BA(0x0001)
  *                                                                   Mass                                              //0x00BC(0x0004)
  UnderlyingType*                                                     CollisionType                                     //0x00C0(0x0001)
  UnderlyingType*                                                     ImplicitType                                      //0x00C1(0x0001)
  *                                                                   MinLevelSetResolution                             //0x00C4(0x0004)
  *                                                                   MaxLevelSetResolution                             //0x00C8(0x0004)
  UnderlyingType*                                                     InitialVelocityType                               //0x00CC(0x0001)
  Vector*                                                             InitialLinearVelocity                             //0x00D0(0x000C)
  Vector*                                                             InitialAngularVelocity                            //0x00DC(0x000C)
  *                                                                   DamageThreshold                                   //0x00E8(0x0004)
  ChaosPhysicalMaterial*                                              PhysicalMaterial                                  //0x00F0(0x0008)
  ChaosSolverActor*                                                   ChaosSolverActor                                  //0x00F8(0x0008)
  OnChaosPhysicsCollision__DelegateSignature*                         OnChaosPhysicsCollision                           //0x0100(0x0010)
  SimulatedComponents*                                                SimulatedComponents                               //0x0120(0x0010)
  CollisionInfo*                                                      ReceivePhysicsCollision                           //0x0000(0x0229)
  *                                                                   ForceRecreatePhysicsState                         //0x0000(0x0229)
};


class AxisAngleGizmoBuilder : public InteractiveGizmoBuilder
{
};


class AxisAngleGizmo : public InteractiveGizmo
{
  GizmoAxisSource*                                                    AxisSource                                        //0x0048(0x0010)
  GizmoFloatParameterSource*                                          AngleSource                                       //0x0058(0x0010)
  GizmoClickTarget*                                                   HitTarget                                         //0x0068(0x0010)
  GizmoStateTarget*                                                   StateTarget                                       //0x0078(0x0010)
  *                                                                   bInInteraction                                    //0x0088(0x0001)
  Vector*                                                             RotationOrigin                                    //0x008C(0x000C)
  Vector*                                                             RotationAxis                                      //0x0098(0x000C)
  Vector*                                                             RotationPlaneX                                    //0x00A4(0x000C)
  Vector*                                                             RotationPlaneY                                    //0x00B0(0x000C)
  Vector*                                                             InteractionStartPoint                             //0x00BC(0x000C)
  Vector*                                                             InteractionCurPoint                               //0x00C8(0x000C)
  *                                                                   InteractionStartAngle                             //0x00D4(0x0004)
  *                                                                   InteractionCurAngle                               //0x00D8(0x0004)
};


class AxisPositionGizmoBuilder : public InteractiveGizmoBuilder
{
};


class AxisPositionGizmo : public InteractiveGizmo
{
  GizmoAxisSource*                                                    AxisSource                                        //0x0048(0x0010)
  GizmoFloatParameterSource*                                          ParameterSource                                   //0x0058(0x0010)
  GizmoClickTarget*                                                   HitTarget                                         //0x0068(0x0010)
  GizmoStateTarget*                                                   StateTarget                                       //0x0078(0x0010)
  *                                                                   bInInteraction                                    //0x0088(0x0001)
  Vector*                                                             InteractionOrigin                                 //0x008C(0x000C)
  Vector*                                                             InteractionAxis                                   //0x0098(0x000C)
  Vector*                                                             InteractionStartPoint                             //0x00A4(0x000C)
  Vector*                                                             InteractionCurPoint                               //0x00B0(0x000C)
  *                                                                   InteractionStartParameter                         //0x00BC(0x0004)
  *                                                                   InteractionCurParameter                           //0x00C0(0x0004)
};


class GizmoConstantAxisSource : public Object
{
  Vector*                                                             Origin                                            //0x0030(0x000C)
  Vector*                                                             Direction                                         //0x003C(0x000C)
};


class GizmoWorldAxisSource : public Object
{
  Vector*                                                             Origin                                            //0x0030(0x000C)
  *                                                                   AxisIndex                                         //0x003C(0x0004)
};


class GizmoComponentAxisSource : public Object
{
  SceneComponent*                                                     Component                                         //0x0030(0x0008)
  *                                                                   AxisIndex                                         //0x0038(0x0004)
  *                                                                   bLocalAxes                                        //0x003C(0x0001)
};


class ClickDragInputBehavior : public AnyButtonInputBehavior
{
};


class ClickDragToolBuilder : public InteractiveToolBuilder
{
};


class ClickDragTool : public InteractiveTool
{
};


class GizmoActor : public InternalToolFrameworkActor
{
};


class GizmoBaseComponent : public PrimitiveComponent
{
  LinearColor*                                                        Color                                             //0x03D8(0x0010)
  *                                                                   HoverSizeMultiplier                               //0x03E8(0x0004)
  *                                                                   PixelHitDistanceThreshold                         //0x03EC(0x0004)
  *                                                                   UpdateWorldLocalState                             //0x0000(0x0229)
  *                                                                   UpdateHoverState                                  //0x0000(0x0229)
};


class GizmoArrowComponent : public GizmoBaseComponent
{
  Vector*                                                             Direction                                         //0x03F8(0x000C)
  *                                                                   Gap                                               //0x0404(0x0004)
  *                                                                   Length                                            //0x0408(0x0004)
  *                                                                   Thickness                                         //0x040C(0x0004)
};


class GizmoCircleComponent : public GizmoBaseComponent
{
  Vector*                                                             Normal                                            //0x03F8(0x000C)
  *                                                                   Radius                                            //0x0404(0x0004)
  *                                                                   Thickness                                         //0x0408(0x0004)
  *                                                                   NumSides                                          //0x040C(0x0004)
  *                                                                   bViewAligned                                      //0x0410(0x0001)
  *                                                                   bOnlyAllowFrontFacingHits                         //0x0411(0x0001)
};


class GizmoTransformSource : public Interface
{
  *                                                                   SetTransform                                      //0x0000(0x0229)
  *                                                                   GetTransform                                      //0x0000(0x0229)
};


class GizmoAxisSource : public Interface
{
  *                                                                   HasTangentVectors                                 //0x0000(0x0229)
  *                                                                   GetTangentVectors                                 //0x0000(0x0229)
  *                                                                   GetOrigin                                         //0x0000(0x0229)
  *                                                                   GetDirection                                      //0x0000(0x0229)
};


class GizmoClickTarget : public Interface
{
  *                                                                   UpdateHoverState                                  //0x0000(0x0229)
};


class GizmoStateTarget : public Interface
{
  *                                                                   EndUpdate                                         //0x0000(0x0229)
  *                                                                   BeginUpdate                                       //0x0000(0x0229)
};


class GizmoFloatParameterSource : public Interface
{
  *                                                                   SetParameter                                      //0x0000(0x0229)
  *                                                                   GetParameter                                      //0x0000(0x0229)
  *                                                                   EndModify                                         //0x0000(0x0229)
  *                                                                   BeginModify                                       //0x0000(0x0229)
};


class GizmoVec2ParameterSource : public Interface
{
  *                                                                   SetParameter                                      //0x0000(0x0229)
  *                                                                   GetParameter                                      //0x0000(0x0229)
  *                                                                   EndModify                                         //0x0000(0x0229)
  *                                                                   BeginModify                                       //0x0000(0x0229)
};


class GizmoRectangleComponent : public GizmoBaseComponent
{
  Vector*                                                             DirectionX                                        //0x03F8(0x000C)
  Vector*                                                             DirectionY                                        //0x0404(0x000C)
  *                                                                   OffsetX                                           //0x0410(0x0004)
  *                                                                   OffsetY                                           //0x0414(0x0004)
  *                                                                   LengthX                                           //0x0418(0x0004)
  *                                                                   LengthY                                           //0x041C(0x0004)
  *                                                                   Thickness                                         //0x0420(0x0004)
};


class GizmoLambdaHitTarget : public Object
{
};


class GizmoComponentHitTarget : public Object
{
  PrimitiveComponent*                                                 Component                                         //0x0030(0x0008)
};


class InputBehaviorSet : public Object
{
  Behaviors*                                                          Behaviors                                         //0x0028(0x0010)
};


class InputBehaviorSource : public Interface
{
};


class InputRouter : public Object
{
  *                                                                   bAutoInvalidateOnHover                            //0x0028(0x0001)
  *                                                                   bAutoInvalidateOnCapture                          //0x0029(0x0001)
  InputBehaviorSet*                                                   ActiveInputBehaviors                              //0x0038(0x0008)
};


class InteractiveGizmoManager : public Object
{
  ActiveGizmos*                                                       ActiveGizmos                                      //0x0030(0x0010)
  GizmoBuilders_Key*                                                  GizmoBuilders                                     //0x0058(0x0050)
};


class ToolContextTransactionProvider : public Interface
{
};


class InteractiveToolManager : public Object
{
  InteractiveTool*                                                    ActiveLeftTool                                    //0x0030(0x0008)
  InteractiveTool*                                                    ActiveRightTool                                   //0x0038(0x0008)
  ToolBuilders_Key*                                                   ToolBuilders                                      //0x0088(0x0050)
};


class ToolFrameworkComponent : public Interface
{
};


class InteractiveToolsContext : public Object
{
  InputRouter*                                                        InputRouter                                       //0x0028(0x0008)
  InteractiveToolManager*                                             ToolManager                                       //0x0030(0x0008)
  InteractiveGizmoManager*                                            GizmoManager                                      //0x0038(0x0008)
};


class KeyAsModifierInputBehavior : public InputBehavior
{
};


class MeshSurfacePointToolMouseBehavior : public AnyButtonInputBehavior
{
};


class MouseHoverBehavior : public InputBehavior
{
};


class MultiClickSequenceInputBehavior : public AnyButtonInputBehavior
{
};


class GizmoBaseFloatParameterSource : public Object
{
};


class GizmoLocalFloatParameterSource : public GizmoBaseFloatParameterSource
{
  *                                                                   Value                                             //0x0048(0x0004)
  GizmoFloatParameterChange*                                          LastChange                                        //0x004C(0x0008)
};


class GizmoBaseVec2ParameterSource : public Object
{
};


class GizmoLocalVec2ParameterSource : public GizmoBaseVec2ParameterSource
{
  Vector2D*                                                           Value                                             //0x0048(0x0008)
  GizmoVec2ParameterChange*                                           LastChange                                        //0x0050(0x0010)
};


class GizmoAxisTranslationParameterSource : public GizmoBaseFloatParameterSource
{
  GizmoAxisSource*                                                    AxisSource                                        //0x0048(0x0010)
  GizmoTransformSource*                                               TransformSource                                   //0x0058(0x0010)
  *                                                                   Parameter                                         //0x0068(0x0004)
  GizmoFloatParameterChange*                                          LastChange                                        //0x006C(0x0008)
  Vector*                                                             CurTranslationAxis                                //0x0074(0x000C)
  Vector*                                                             CurTranslationOrigin                              //0x0080(0x000C)
  Transform*                                                          InitialTransform                                  //0x0090(0x0030)
};


class GizmoPlaneTranslationParameterSource : public GizmoBaseVec2ParameterSource
{
  GizmoAxisSource*                                                    AxisSource                                        //0x0048(0x0010)
  GizmoTransformSource*                                               TransformSource                                   //0x0058(0x0010)
  Vector2D*                                                           Parameter                                         //0x0068(0x0008)
  GizmoVec2ParameterChange*                                           LastChange                                        //0x0070(0x0010)
  Vector*                                                             CurTranslationOrigin                              //0x0080(0x000C)
  Vector*                                                             CurTranslationNormal                              //0x008C(0x000C)
  Vector*                                                             CurTranslationAxisX                               //0x0098(0x000C)
  Vector*                                                             CurTranslationAxisY                               //0x00A4(0x000C)
  Transform*                                                          InitialTransform                                  //0x00B0(0x0030)
};


class GizmoAxisRotationParameterSource : public GizmoBaseFloatParameterSource
{
  GizmoAxisSource*                                                    AxisSource                                        //0x0048(0x0010)
  GizmoTransformSource*                                               TransformSource                                   //0x0058(0x0010)
  *                                                                   Angle                                             //0x0068(0x0004)
  GizmoFloatParameterChange*                                          LastChange                                        //0x006C(0x0008)
  Vector*                                                             CurRotationAxis                                   //0x0074(0x000C)
  Vector*                                                             CurRotationOrigin                                 //0x0080(0x000C)
  Transform*                                                          InitialTransform                                  //0x0090(0x0030)
};


class PlanePositionGizmoBuilder : public InteractiveGizmoBuilder
{
};


class PlanePositionGizmo : public InteractiveGizmo
{
  GizmoAxisSource*                                                    AxisSource                                        //0x0048(0x0010)
  GizmoVec2ParameterSource*                                           ParameterSource                                   //0x0058(0x0010)
  GizmoClickTarget*                                                   HitTarget                                         //0x0068(0x0010)
  GizmoStateTarget*                                                   StateTarget                                       //0x0078(0x0010)
  *                                                                   bInInteraction                                    //0x0088(0x0001)
  Vector*                                                             InteractionOrigin                                 //0x008C(0x000C)
  Vector*                                                             InteractionNormal                                 //0x0098(0x000C)
  Vector*                                                             InteractionAxisX                                  //0x00A4(0x000C)
  Vector*                                                             InteractionAxisY                                  //0x00B0(0x000C)
  Vector*                                                             InteractionStartPoint                             //0x00BC(0x000C)
  Vector*                                                             InteractionCurPoint                               //0x00C8(0x000C)
  Vector2D*                                                           InteractionStartParameter                         //0x00D4(0x0008)
  Vector2D*                                                           InteractionCurParameter                           //0x00DC(0x0008)
};


class SelectionSet : public Object
{
};


class MeshSelectionSet : public SelectionSet
{
  Vertices*                                                           Vertices                                          //0x0040(0x0010)
  Edges*                                                              Edges                                             //0x0050(0x0010)
  Faces*                                                              Faces                                             //0x0060(0x0010)
  Groups*                                                             Groups                                            //0x0070(0x0010)
};


class SingleClickInputBehavior : public AnyButtonInputBehavior
{
  *                                                                   HitTestOnRelease                                  //0x0080(0x0001)
};


class SingleClickToolBuilder : public InteractiveToolBuilder
{
};


class GizmoNilStateTarget : public Object
{
};


class GizmoLambdaStateTarget : public Object
{
};


class GizmoObjectModifyStateTarget : public Object
{
};


class GizmoTransformChangeStateTarget : public Object
{
  ToolContextTransactionProvider*                                     TransactionManager                                //0x0050(0x0010)
};


class TransformGizmoActor : public GizmoActor
{
  PrimitiveComponent*                                                 TranslateX                                        //0x0218(0x0008)
  PrimitiveComponent*                                                 TranslateY                                        //0x0220(0x0008)
  PrimitiveComponent*                                                 TranslateZ                                        //0x0228(0x0008)
  PrimitiveComponent*                                                 TranslateYZ                                       //0x0230(0x0008)
  PrimitiveComponent*                                                 TranslateXZ                                       //0x0238(0x0008)
  PrimitiveComponent*                                                 TranslateXY                                       //0x0240(0x0008)
  PrimitiveComponent*                                                 RotateX                                           //0x0248(0x0008)
  PrimitiveComponent*                                                 RotateY                                           //0x0250(0x0008)
  PrimitiveComponent*                                                 RotateZ                                           //0x0258(0x0008)
};


class TransformGizmoBuilder : public InteractiveGizmoBuilder
{
};


class TransformGizmo : public InteractiveGizmo
{
  TransformProxy*                                                     ActiveTarget                                      //0x0038(0x0008)
  ActiveComponents*                                                   ActiveComponents                                  //0x00D0(0x0010)
  ActiveGizmos*                                                       ActiveGizmos                                      //0x00E0(0x0010)
  GizmoComponentAxisSource*                                           AxisXSource                                       //0x0100(0x0008)
  GizmoComponentAxisSource*                                           AxisYSource                                       //0x0108(0x0008)
  GizmoComponentAxisSource*                                           AxisZSource                                       //0x0110(0x0008)
  GizmoTransformChangeStateTarget*                                    StateTarget                                       //0x0118(0x0008)
};


class TransformProxy : public Object
{
  *                                                                   bRotatePerObject                                  //0x0040(0x0001)
  *                                                                   bSetPivotMode                                     //0x0041(0x0001)
  Transform*                                                          SharedTransform                                   //0x0060(0x0030)
  Transform*                                                          InitialSharedTransform                            //0x0090(0x0030)
};


class GizmoBaseTransformSource : public Object
{
};


class GizmoComponentWorldTransformSource : public GizmoBaseTransformSource
{
  SceneComponent*                                                     Component                                         //0x0048(0x0008)
  *                                                                   bModifyComponentOnTransform                       //0x0050(0x0001)
};


class GizmoTransformProxyTransformSource : public GizmoBaseTransformSource
{
  TransformProxy*                                                     Proxy                                             //0x0048(0x0008)
};


class NavigationData : public Actor
{
  PrimitiveComponent*                                                 RenderingComp                                     //0x0220(0x0008)
  NavDataConfig*                                                      NavDataConfig                                     //0x0228(0x0078)
  *                                                                   bEnableDrawing                                    //0x02A0(0x0001)
  *                                                                   bForceRebuildOnLoad                               //0x02A0(0x0001)
  *                                                                   bAutoDestroyWhenNoNavigation                      //0x02A0(0x0001)
  *                                                                   bCanBeMainNavData                                 //0x02A0(0x0001)
  *                                                                   bCanSpawnOnRebuild                                //0x02A0(0x0001)
  *                                                                   bRebuildAtRuntime                                 //0x02A0(0x0001)
  UnderlyingType*                                                     RuntimeGeneration                                 //0x02A4(0x0001)
  *                                                                   ObservedPathsTickInterval                         //0x02A8(0x0004)
  *                                                                   DataVersion                                       //0x02AC(0x0004)
  SupportedAreas*                                                     SupportedAreas                                    //0x0390(0x0010)
};


class AbstractNavData : public NavigationData
{
};


class CrowdManagerBase : public Object
{
};


class NavArea : public NavAreaBase
{
  *                                                                   DefaultCost                                       //0x0030(0x0004)
  *                                                                   FixedAreaEnteringCost                             //0x0034(0x0004)
  Color*                                                              DrawColor                                         //0x0038(0x0004)
  NavAgentSelector*                                                   SupportedAgents                                   //0x003C(0x0004)
  *                                                                   bSupportsAgent0                                   //0x0040(0x0001)
  *                                                                   bSupportsAgent1                                   //0x0040(0x0001)
  *                                                                   bSupportsAgent2                                   //0x0040(0x0001)
  *                                                                   bSupportsAgent3                                   //0x0040(0x0001)
  *                                                                   bSupportsAgent4                                   //0x0040(0x0001)
  *                                                                   bSupportsAgent5                                   //0x0040(0x0001)
  *                                                                   bSupportsAgent6                                   //0x0040(0x0001)
  *                                                                   bSupportsAgent7                                   //0x0040(0x0001)
  *                                                                   bSupportsAgent8                                   //0x0041(0x0001)
  *                                                                   bSupportsAgent9                                   //0x0041(0x0001)
  *                                                                   bSupportsAgent10                                  //0x0041(0x0001)
  *                                                                   bSupportsAgent11                                  //0x0041(0x0001)
  *                                                                   bSupportsAgent12                                  //0x0041(0x0001)
  *                                                                   bSupportsAgent13                                  //0x0041(0x0001)
  *                                                                   bSupportsAgent14                                  //0x0041(0x0001)
  *                                                                   bSupportsAgent15                                  //0x0041(0x0001)
};


class NavArea_Default : public NavArea
{
};


class NavArea_LowHeight : public NavArea
{
};


class NavArea_Null : public NavArea
{
};


class NavArea_Obstacle : public NavArea
{
};


class NavAreaMeta : public NavArea
{
};


class NavAreaMeta_SwitchByAgent : public NavAreaMeta
{
  Class*                                                              Agent0Area                                        //0x0048(0x0008)
  Class*                                                              Agent1Area                                        //0x0050(0x0008)
  Class*                                                              Agent2Area                                        //0x0058(0x0008)
  Class*                                                              Agent3Area                                        //0x0060(0x0008)
  Class*                                                              Agent4Area                                        //0x0068(0x0008)
  Class*                                                              Agent5Area                                        //0x0070(0x0008)
  Class*                                                              Agent6Area                                        //0x0078(0x0008)
  Class*                                                              Agent7Area                                        //0x0080(0x0008)
  Class*                                                              Agent8Area                                        //0x0088(0x0008)
  Class*                                                              Agent9Area                                        //0x0090(0x0008)
  Class*                                                              Agent10Area                                       //0x0098(0x0008)
  Class*                                                              Agent11Area                                       //0x00A0(0x0008)
  Class*                                                              Agent12Area                                       //0x00A8(0x0008)
  Class*                                                              Agent13Area                                       //0x00B0(0x0008)
  Class*                                                              Agent14Area                                       //0x00B8(0x0008)
  Class*                                                              Agent15Area                                       //0x00C0(0x0008)
};


class NavCollision : public NavCollisionBase
{
  CylinderCollision*                                                  CylinderCollision                                 //0x0080(0x0010)
  BoxCollision*                                                       BoxCollision                                      //0x0090(0x0010)
  Class*                                                              AreaClass                                         //0x00A0(0x0008)
  *                                                                   bGatherConvexGeometry                             //0x00A8(0x0001)
  *                                                                   bCreateOnClient                                   //0x00A8(0x0001)
};


class NavigationGraph : public NavigationData
{
};


class NavigationGraphNode : public Actor
{
};


class NavigationGraphNodeComponent : public SceneComponent
{
  NavGraphNode*                                                       Node                                              //0x01F0(0x0018)
  NavigationGraphNodeComponent*                                       NextNodeComponent                                 //0x0208(0x0008)
  NavigationGraphNodeComponent*                                       PrevNodeComponent                                 //0x0210(0x0008)
};


class NavigationInvokerComponent : public ActorComponent
{
  *                                                                   TileGenerationRadius                              //0x00B0(0x0004)
  *                                                                   TileRemovalRadius                                 //0x00B4(0x0004)
};


class NavigationPath : public Object
{
  OnNavigationPathUpdated__DelegateSignature*                         PathUpdatedNotifier                               //0x0028(0x0010)
  PathPoints*                                                         PathPoints                                        //0x0038(0x0010)
  ENavigationOptionFlag*                                              RecalculateOnInvalidation                         //0x0048(0x0001)
  *                                                                   IsValid                                           //0x0000(0x0229)
  *                                                                   IsStringPulled                                    //0x0000(0x0229)
  *                                                                   IsPartial                                         //0x0000(0x0229)
  *                                                                   GetPathLength                                     //0x0000(0x0229)
  *                                                                   GetPathCost                                       //0x0000(0x0229)
  *                                                                   GetDebugString                                    //0x0000(0x0229)
  *                                                                   EnableRecalculationOnInvalidation                 //0x0000(0x0229)
  *                                                                   EnableDebugDrawing                                //0x0000(0x0229)
};


class NavigationPathGenerator : public Interface
{
};


class NavigationQueryFilter : public Object
{
  Areas*                                                              Areas                                             //0x0028(0x0010)
  NavigationFilterFlags*                                              IncludeFlags                                      //0x0038(0x0004)
  NavigationFilterFlags*                                              ExcludeFlags                                      //0x003C(0x0004)
};


class NavigationSystemV1 : public NavigationSystemBase
{
  NavigationData*                                                     MainNavData                                       //0x0028(0x0008)
  NavigationData*                                                     AbstractNavData                                   //0x0030(0x0008)
  *                                                                   DefaultAgentName                                  //0x0038(0x0008)
  Class*                                                              CrowdManagerClass                                 //0x0040(0x0028)
  *                                                                   bAutoCreateNavigationData                         //0x0068(0x0001)
  *                                                                   bSpawnNavDataInNavBoundsLevel                     //0x0068(0x0001)
  *                                                                   bAllowClientSideNavigation                        //0x0068(0x0001)
  *                                                                   bShouldDiscardSubLevelNavData                     //0x0068(0x0001)
  *                                                                   bTickWhilePaused                                  //0x0068(0x0001)
  *                                                                   bSupportRebuilding                                //0x0068(0x0001)
  *                                                                   bInitialBuildingLocked                            //0x0068(0x0001)
  *                                                                   bSkipAgentHeightCheckWhenPickingNavData           //0x0069(0x0001)
  UnderlyingType*                                                     DataGatheringMode                                 //0x006C(0x0001)
  *                                                                   bGenerateNavigationOnlyAroundNavigationInvokers   //0x0070(0x0001)
  *                                                                   ActiveTilesUpdateInterval                         //0x0074(0x0004)
  SupportedAgents*                                                    SupportedAgents                                   //0x0078(0x0010)
  NavAgentSelector*                                                   SupportedAgentsMask                               //0x0088(0x0004)
  NavDataSet*                                                         NavDataSet                                        //0x0090(0x0010)
  NavDataRegistrationQueue*                                           NavDataRegistrationQueue                          //0x00A0(0x0010)
  OnNavDataGenericEvent__DelegateSignature*                           OnNavDataRegisteredEvent                          //0x00C0(0x0010)
  OnNavDataGenericEvent__DelegateSignature*                           OnNavigationGenerationFinishedDelegate            //0x00D0(0x0010)
  UnderlyingType*                                                     OperationMode                                     //0x01BC(0x0001)
  *                                                                   DirtyAreasUpdateFreq                              //0x0514(0x0004)
  Invoker*                                                            UnregisterNavigationInvoker                       //0x0000(0x0229)
  Controller*                                                         SimpleMoveToLocation                              //0x0000(0x0229)
  Controller*                                                         SimpleMoveToActor                                 //0x0000(0x0229)
  *                                                                   SetMaxSimultaneousTileGenerationJobsCount         //0x0000(0x0229)
  *                                                                   SetGeometryGatheringMode                          //0x0000(0x0229)
  *                                                                   ResetMaxSimultaneousTileGenerationJobsCount       //0x0000(0x0229)
  Invoker*                                                            RegisterNavigationInvoker                         //0x0000(0x0229)
  WorldContextObject*                                                 ProjectPointToNavigation                          //0x0000(0x0229)
  NavVolume*                                                          OnNavigationBoundsUpdated                         //0x0000(0x0229)
  WorldContextObject*                                                 NavigationRaycast                                 //0x0000(0x0229)
  Object*                                                             K2_ReplaceAreaInOctreeData                        //0x0000(0x0229)
  WorldContextObject*                                                 K2_ProjectPointToNavigation                       //0x0000(0x0229)
  WorldContextObject*                                                 K2_GetRandomReachablePointInRadius                //0x0000(0x0229)
  WorldContextObject*                                                 K2_GetRandomPointInNavigableRadius                //0x0000(0x0229)
  WorldContextObject*                                                 K2_GetRandomLocationInNavigableRadius             //0x0000(0x0229)
  WorldContextObject*                                                 IsNavigationBeingBuiltOrLocked                    //0x0000(0x0229)
  WorldContextObject*                                                 IsNavigationBeingBuilt                            //0x0000(0x0229)
  WorldContextObject*                                                 GetRandomReachablePointInRadius                   //0x0000(0x0229)
  WorldContextObject*                                                 GetRandomPointInNavigableRadius                   //0x0000(0x0229)
  WorldContextObject*                                                 GetPathLength                                     //0x0000(0x0229)
  WorldContextObject*                                                 GetPathCost                                       //0x0000(0x0229)
  WorldContextObject*                                                 GetNavigationSystem                               //0x0000(0x0229)
  WorldContextObject*                                                 FindPathToLocationSynchronously                   //0x0000(0x0229)
  WorldContextObject*                                                 FindPathToActorSynchronously                      //0x0000(0x0229)
};


class NavigationSystemModuleConfig : public NavigationSystemConfig
{
  *                                                                   bStrictlyStatic                                   //0x0050(0x0001)
  *                                                                   bCreateOnClient                                   //0x0050(0x0001)
  *                                                                   bAutoSpawnMissingNavData                          //0x0050(0x0001)
  *                                                                   bSpawnNavDataInNavBoundsLevel                     //0x0050(0x0001)
};


class NavigationTestingActor : public Actor
{
  CapsuleComponent*                                                   CapsuleComponent                                  //0x0228(0x0008)
  NavigationInvokerComponent*                                         InvokerComponent                                  //0x0230(0x0008)
  *                                                                   bActAsNavigationInvoker                           //0x0238(0x0001)
  NavAgentProperties*                                                 NavAgentProps                                     //0x0240(0x0030)
  Vector*                                                             QueryingExtent                                    //0x0270(0x000C)
  NavigationData*                                                     MyNavData                                         //0x0280(0x0008)
  Vector*                                                             ProjectedLocation                                 //0x0288(0x000C)
  *                                                                   bProjectedLocationValid                           //0x0294(0x0001)
  *                                                                   bSearchStart                                      //0x0294(0x0001)
  *                                                                   bBacktracking                                     //0x0294(0x0001)
  *                                                                   bUseHierarchicalPathfinding                       //0x0294(0x0001)
  *                                                                   bGatherDetailedInfo                               //0x0294(0x0001)
  *                                                                   bDrawDistanceToWall                               //0x0294(0x0001)
  *                                                                   bShowNodePool                                     //0x0294(0x0001)
  *                                                                   bShowBestPath                                     //0x0294(0x0001)
  *                                                                   bShowDiffWithPreviousStep                         //0x0295(0x0001)
  *                                                                   bShouldBeVisibleInGame                            //0x0295(0x0001)
  ENavCostDisplay*                                                    CostDisplayMode                                   //0x0298(0x0001)
  Vector2D*                                                           TextCanvasOffset                                  //0x029C(0x0008)
  *                                                                   bPathExist                                        //0x02A4(0x0001)
  *                                                                   bPathIsPartial                                    //0x02A4(0x0001)
  *                                                                   bPathSearchOutOfNodes                             //0x02A4(0x0001)
  *                                                                   PathfindingTime                                   //0x02A8(0x0004)
  *                                                                   PathCost                                          //0x02AC(0x0004)
  *                                                                   PathfindingSteps                                  //0x02B0(0x0004)
  NavigationTestingActor*                                             OtherActor                                        //0x02B8(0x0008)
  Class*                                                              FilterClass                                       //0x02C0(0x0008)
  *                                                                   ShowStepIndex                                     //0x02C8(0x0004)
  *                                                                   OffsetFromCornersDistance                         //0x02CC(0x0004)
};


class NavLinkComponent : public PrimitiveComponent
{
  Links*                                                              Links                                             //0x03E0(0x0010)
};


class NavRelevantComponent : public ActorComponent
{
  *                                                                   bAttachToOwnersRoot                               //0x00D4(0x0001)
  Object*                                                             CachedNavParent                                   //0x00D8(0x0008)
  *                                                                   SetNavigationRelevancy                            //0x0000(0x0229)
};


class NavLinkCustomComponent : public NavRelevantComponent
{
  *                                                                   NavLinkUserId                                     //0x00E8(0x0004)
  Class*                                                              EnabledAreaClass                                  //0x00F0(0x0008)
  Class*                                                              DisabledAreaClass                                 //0x00F8(0x0008)
  NavAgentSelector*                                                   SupportedAgents                                   //0x0100(0x0004)
  Vector*                                                             LinkRelativeStart                                 //0x0104(0x000C)
  Vector*                                                             LinkRelativeEnd                                   //0x0110(0x000C)
  ENavLinkDirection*                                                  LinkDirection                                     //0x011C(0x0001)
  *                                                                   bLinkEnabled                                      //0x0120(0x0001)
  *                                                                   bNotifyWhenEnabled                                //0x0120(0x0001)
  *                                                                   bNotifyWhenDisabled                               //0x0120(0x0001)
  *                                                                   bCreateBoxObstacle                                //0x0120(0x0001)
  Vector*                                                             ObstacleOffset                                    //0x0124(0x000C)
  Vector*                                                             ObstacleExtent                                    //0x0130(0x000C)
  Class*                                                              ObstacleAreaClass                                 //0x0140(0x0008)
  *                                                                   BroadcastRadius                                   //0x0148(0x0004)
  *                                                                   BroadcastInterval                                 //0x014C(0x0004)
  ECollisionChannel*                                                  BroadcastChannel                                  //0x0150(0x0001)
};


class NavLinkCustomInterface : public Interface
{
};


class NavLinkHostInterface : public Interface
{
};


class NavLinkRenderingComponent : public PrimitiveComponent
{
};


class NavLinkTrivial : public NavLinkDefinition
{
};


class NavMeshBoundsVolume : public Volume
{
  NavAgentSelector*                                                   SupportedAgents                                   //0x0250(0x0004)
};


class NavMeshRenderingComponent : public PrimitiveComponent
{
};


class NavModifierComponent : public NavRelevantComponent
{
  Class*                                                              AreaClass                                         //0x00E0(0x0008)
  Vector*                                                             FailsafeExtent                                    //0x00E8(0x000C)
  *                                                                   bIncludeAgentHeight                               //0x00F4(0x0001)
  NewAreaClass*                                                       SetAreaClass                                      //0x0000(0x0229)
};


class NavModifierVolume : public Volume
{
  Class*                                                              AreaClass                                         //0x0258(0x0008)
  NewAreaClass*                                                       SetAreaClass                                      //0x0000(0x0229)
};


class NavNodeInterface : public Interface
{
};


class NavSystemConfigOverride : public Actor
{
  NavigationSystemConfig*                                             NavigationSystemConfig                            //0x0218(0x0008)
  UnderlyingType*                                                     OverridePolicy                                    //0x0220(0x0001)
  *                                                                   bLoadOnClient                                     //0x0221(0x0001)
};


class NavTestRenderingComponent : public PrimitiveComponent
{
};


class RecastFilter_UseDefaultArea : public NavigationQueryFilter
{
};


class RecastNavMesh : public NavigationData
{
  *                                                                   bDrawTriangleEdges                                //0x03F8(0x0001)
  *                                                                   bDrawPolyEdges                                    //0x03F8(0x0001)
  *                                                                   bDrawFilledPolys                                  //0x03F8(0x0001)
  *                                                                   bDrawNavMeshEdges                                 //0x03F8(0x0001)
  *                                                                   bDrawTileBounds                                   //0x03F8(0x0001)
  *                                                                   bDrawPathCollidingGeometry                        //0x03F8(0x0001)
  *                                                                   bDrawTileLabels                                   //0x03F8(0x0001)
  *                                                                   bDrawPolygonLabels                                //0x03F8(0x0001)
  *                                                                   bDrawDefaultPolygonCost                           //0x03F9(0x0001)
  *                                                                   bDrawLabelsOnPathNodes                            //0x03F9(0x0001)
  *                                                                   bDrawNavLinks                                     //0x03F9(0x0001)
  *                                                                   bDrawFailedNavLinks                               //0x03F9(0x0001)
  *                                                                   bDrawClusters                                     //0x03F9(0x0001)
  *                                                                   bDrawOctree                                       //0x03F9(0x0001)
  *                                                                   bDrawOctreeDetails                                //0x03F9(0x0001)
  *                                                                   bDrawMarkedForbiddenPolys                         //0x03F9(0x0001)
  *                                                                   bDistinctlyDrawTilesBeingBuilt                    //0x03FA(0x0001)
  *                                                                   bDrawNavMesh                                      //0x03FA(0x0001)
  *                                                                   DrawOffset                                        //0x03FC(0x0004)
  *                                                                   bFixedTilePoolSize                                //0x0400(0x0001)
  *                                                                   TilePoolSize                                      //0x0404(0x0004)
  *                                                                   TileSizeUU                                        //0x0408(0x0004)
  *                                                                   CellSize                                          //0x040C(0x0004)
  *                                                                   CellHeight                                        //0x0410(0x0004)
  *                                                                   AgentRadius                                       //0x0414(0x0004)
  *                                                                   AgentHeight                                       //0x0418(0x0004)
  *                                                                   AgentMaxHeight                                    //0x041C(0x0004)
  *                                                                   AgentMaxSlope                                     //0x0420(0x0004)
  *                                                                   AgentMaxStepHeight                                //0x0424(0x0004)
  *                                                                   MinRegionArea                                     //0x0428(0x0004)
  *                                                                   MergeRegionSize                                   //0x042C(0x0004)
  *                                                                   MaxSimplificationError                            //0x0430(0x0004)
  *                                                                   MaxSimultaneousTileGenerationJobsCount            //0x0434(0x0004)
  *                                                                   TileNumberHardLimit                               //0x0438(0x0004)
  *                                                                   PolyRefTileBits                                   //0x043C(0x0004)
  *                                                                   PolyRefNavPolyBits                                //0x0440(0x0004)
  *                                                                   PolyRefSaltBits                                   //0x0444(0x0004)
  Vector*                                                             NavMeshOriginOffset                               //0x0448(0x000C)
  *                                                                   DefaultDrawDistance                               //0x0454(0x0004)
  *                                                                   DefaultMaxSearchNodes                             //0x0458(0x0004)
  *                                                                   DefaultMaxHierarchicalSearchNodes                 //0x045C(0x0004)
  ERecastPartitioning*                                                RegionPartitioning                                //0x0460(0x0001)
  ERecastPartitioning*                                                LayerPartitioning                                 //0x0461(0x0001)
  *                                                                   RegionChunkSplits                                 //0x0464(0x0004)
  *                                                                   LayerChunkSplits                                  //0x0468(0x0004)
  *                                                                   bSortNavigationAreasByCost                        //0x046C(0x0001)
  *                                                                   bPerformVoxelFiltering                            //0x046C(0x0001)
  *                                                                   bMarkLowHeightAreas                               //0x046C(0x0001)
  *                                                                   bFilterLowSpanSequences                           //0x046C(0x0001)
  *                                                                   bFilterLowSpanFromTileCache                       //0x046C(0x0001)
  *                                                                   bDoFullyAsyncNavDataGathering                     //0x046C(0x0001)
  *                                                                   bUseBetterOffsetsFromCorners                      //0x046C(0x0001)
  *                                                                   bStoreEmptyTileLayers                             //0x046C(0x0001)
  *                                                                   bUseVirtualFilters                                //0x046D(0x0001)
  *                                                                   bAllowNavLinkAsPathEnd                            //0x046D(0x0001)
  *                                                                   bUseVoxelCache                                    //0x046D(0x0001)
  *                                                                   TileSetUpdateInterval                             //0x0470(0x0004)
  *                                                                   HeuristicScale                                    //0x0474(0x0004)
  *                                                                   VerticalDeviationFromGroundCompensation           //0x0478(0x0004)
  OldArea*                                                            K2_ReplaceAreaInTileBounds                        //0x0000(0x0229)
};


class RecastNavMeshDataChunk : public NavigationDataChunk
{
};


class GameplayTask : public Object
{
  *                                                                   InstanceName                                      //0x0030(0x0008)
  UnderlyingType*                                                     ResourceOverlapPolicy                             //0x003A(0x0001)
  GameplayTask*                                                       ChildTask                                         //0x0060(0x0008)
  *                                                                   ReadyForActivation                                //0x0000(0x0229)
  *                                                                   GenericGameplayTaskDelegate__DelegateSignature    //0x0000(0x0229)
  *                                                                   EndTask                                           //0x0000(0x0229)
};


class GameplayTask_ClaimResource : public GameplayTask
{
  InTaskOwner*                                                        ClaimResources                                    //0x0000(0x0229)
  InTaskOwner*                                                        ClaimResource                                     //0x0000(0x0229)
};


class GameplayTask_SpawnActor : public GameplayTask
{
  GameplayTaskSpawnActorDelegate__DelegateSignature*                  success                                           //0x0068(0x0010)
  GameplayTaskSpawnActorDelegate__DelegateSignature*                  DidNotSpawn                                       //0x0078(0x0010)
  Class*                                                              ClassToSpawn                                      //0x00A0(0x0008)
  TaskOwner*                                                          SpawnActor                                        //0x0000(0x0229)
  WorldContextObject*                                                 FinishSpawningActor                               //0x0000(0x0229)
  WorldContextObject*                                                 BeginSpawningActor                                //0x0000(0x0229)
};


class GameplayTask_TimeLimitedExecution : public GameplayTask
{
  TaskFinishDelegate__DelegateSignature*                              OnFinished                                        //0x0068(0x0010)
  TaskFinishDelegate__DelegateSignature*                              OnTimeExpired                                     //0x0078(0x0010)
};


class GameplayTask_WaitDelay : public GameplayTask
{
  TaskDelayDelegate__DelegateSignature*                               OnFinish                                          //0x0068(0x0010)
  TaskOwner*                                                          TaskWaitDelay                                     //0x0000(0x0229)
  *                                                                   TaskDelayDelegate__DelegateSignature              //0x0000(0x0229)
};


class GameplayTaskOwnerInterface : public Interface
{
};


class GameplayTaskResource : public Object
{
  *                                                                   ManualResourceID                                  //0x0028(0x0004)
  *                                                                   AutoResourceID                                    //0x002C(0x0001)
  *                                                                   bManuallySetID                                    //0x0030(0x0001)
};


class GameplayTasksComponent : public ActorComponent
{
  *                                                                   bIsNetDirty                                       //0x00BC(0x0001)
  SimulatedTasks*                                                     SimulatedTasks                                    //0x00C0(0x0010)
  TaskPriorityQueue*                                                  TaskPriorityQueue                                 //0x00D0(0x0010)
  TickingTasks*                                                       TickingTasks                                      //0x00F0(0x0010)
  KnownTasks*                                                         KnownTasks                                        //0x0100(0x0010)
  OnClaimedResourcesChangeSignature__DelegateSignature*               OnClaimedResourcesChange                          //0x0110(0x0010)
  *                                                                   OnRep_SimulatedTasks                              //0x0000(0x0229)
  TaskOwner*                                                          K2_RunGameplayTask                                //0x0000(0x0229)
};


class AIAsyncTaskBlueprintProxy : public Object
{
  OAISimpleDelegate__DelegateSignature*                               OnSuccess                                         //0x0028(0x0010)
  OAISimpleDelegate__DelegateSignature*                               OnFail                                            //0x0038(0x0010)
  *                                                                   OnMoveCompleted                                   //0x0000(0x0229)
};


class AIBlueprintHelperLibrary : public BlueprintFunctionLibrary
{
  AnimInstance*                                                       UnlockAIResourcesWithAnimation                    //0x0000(0x0229)
  WorldContextObject*                                                 SpawnAIFromClass                                  //0x0000(0x0229)
  Controller*                                                         SimpleMoveToLocation                              //0x0000(0x0229)
  Controller*                                                         SimpleMoveToActor                                 //0x0000(0x0229)
  Target*                                                             SendAIMessage                                     //0x0000(0x0229)
  AnimInstance*                                                       LockAIResourcesWithAnimation                      //0x0000(0x0229)
  *                                                                   IsValidAIRotation                                 //0x0000(0x0229)
  *                                                                   IsValidAILocation                                 //0x0000(0x0229)
  *                                                                   IsValidAIDirection                                //0x0000(0x0229)
  Controller*                                                         GetCurrentPath                                    //0x0000(0x0229)
  Target*                                                             GetBlackboard                                     //0x0000(0x0229)
  ControlledActor*                                                    GetAIController                                   //0x0000(0x0229)
  WorldContextObject*                                                 CreateMoveToProxyObject                           //0x0000(0x0229)
};


class AIDataProvider : public Object
{
};


class AIDataProvider_QueryParams : public AIDataProvider
{
  *                                                                   ParamName                                         //0x0028(0x0008)
  *                                                                   FloatValue                                        //0x0030(0x0004)
  *                                                                   IntValue                                          //0x0034(0x0004)
  *                                                                   BoolValue                                         //0x0038(0x0001)
};


class AIDataProvider_Random : public AIDataProvider_QueryParams
{
  *                                                                   Min                                               //0x0040(0x0004)
  *                                                                   Max                                               //0x0044(0x0004)
  *                                                                   bInteger                                          //0x0048(0x0001)
};


class AIHotSpotManager : public Object
{
};


class AIPerceptionComponent : public ActorComponent
{
  SensesConfig*                                                       SensesConfig                                      //0x00B0(0x0010)
  Class*                                                              DominantSense                                     //0x00C0(0x0008)
  AIController*                                                       AIOwner                                           //0x00D8(0x0008)
  PerceptionUpdatedDelegate__DelegateSignature*                       OnPerceptionUpdated                               //0x0160(0x0010)
  ActorPerceptionUpdatedDelegate__DelegateSignature*                  OnTargetPerceptionUpdated                         //0x0170(0x0010)
  SenseClass*                                                         SetSenseEnabled                                   //0x0000(0x0229)
  *                                                                   RequestStimuliListenerUpdate                      //0x0000(0x0229)
  Actor*                                                              OnOwnerEndPlay                                    //0x0000(0x0229)
  OutActors*                                                          GetPerceivedHostileActors                         //0x0000(0x0229)
  SenseToUse*                                                         GetPerceivedActors                                //0x0000(0x0229)
  SenseToUse*                                                         GetKnownPerceivedActors                           //0x0000(0x0229)
  SenseToUse*                                                         GetCurrentlyPerceivedActors                       //0x0000(0x0229)
  Actor*                                                              GetActorsPerception                               //0x0000(0x0229)
};


class AIPerceptionListenerInterface : public Interface
{
};


class AIPerceptionStimuliSourceComponent : public ActorComponent
{
  *                                                                   bAutoRegisterAsSource                             //0x00B0(0x0001)
  RegisterAsSourceForSenses*                                          RegisterAsSourceForSenses                         //0x00B8(0x0010)
  SenseClass*                                                         UnregisterFromSense                               //0x0000(0x0229)
  *                                                                   UnregisterFromPerceptionSystem                    //0x0000(0x0229)
  *                                                                   RegisterWithPerceptionSystem                      //0x0000(0x0229)
  SenseClass*                                                         RegisterForSense                                  //0x0000(0x0229)
};


class AISubsystem : public Object
{
  AISystem*                                                           AISystem                                          //0x0030(0x0008)
};


class AIPerceptionSystem : public AISubsystem
{
  Senses*                                                             Senses                                            //0x0088(0x0010)
  *                                                                   PerceptionAgingRate                               //0x0098(0x0004)
  WorldContextObject*                                                 ReportPerceptionEvent                             //0x0000(0x0229)
  PerceptionEvent*                                                    ReportEvent                                       //0x0000(0x0229)
  WorldContextObject*                                                 RegisterPerceptionStimuliSource                   //0x0000(0x0229)
  Actor*                                                              OnPerceptionStimuliSourceEndPlay                  //0x0000(0x0229)
  WorldContextObject*                                                 GetSenseClassForStimulus                          //0x0000(0x0229)
};


class AIResourceInterface : public Interface
{
};


class AIResource_Movement : public GameplayTaskResource
{
};


class AIResource_Logic : public GameplayTaskResource
{
};


class AISense : public Object
{
  *                                                                   DefaultExpirationAge                              //0x0028(0x0004)
  UnderlyingType*                                                     NotifyType                                        //0x002C(0x0001)
  *                                                                   bWantsNewPawnNotification                         //0x0030(0x0001)
  *                                                                   bAutoRegisterAllPawnsAsSources                    //0x0030(0x0001)
  AIPerceptionSystem*                                                 PerceptionSystemInstance                          //0x0038(0x0008)
};


class AISense_Blueprint : public AISense
{
  Class*                                                              ListenerDataType                                  //0x0080(0x0008)
  ListenerContainer*                                                  ListenerContainer                                 //0x0088(0x0010)
  UnprocessedEvents*                                                  UnprocessedEvents                                 //0x0098(0x0010)
  EventsToProcess*                                                    OnUpdate                                          //0x0000(0x0229)
  ActorListener*                                                      OnListenerUpdated                                 //0x0000(0x0229)
  ActorListener*                                                      OnListenerUnregistered                            //0x0000(0x0229)
  ActorListener*                                                      OnListenerRegistered                              //0x0000(0x0229)
  NewPawn*                                                            K2_OnNewPawn                                      //0x0000(0x0229)
  ListenerComponents*                                                 GetAllListenerComponents                          //0x0000(0x0229)
  ListenerActors*                                                     GetAllListenerActors                              //0x0000(0x0229)
};


class AISense_Damage : public AISense
{
  RegisteredEvents*                                                   RegisteredEvents                                  //0x0080(0x0010)
  WorldContextObject*                                                 ReportDamageEvent                                 //0x0000(0x0229)
};


class AISense_Hearing : public AISense
{
  NoiseEvents*                                                        NoiseEvents                                       //0x0080(0x0010)
  *                                                                   SpeedOfSoundSq                                    //0x0090(0x0004)
  WorldContextObject*                                                 ReportNoiseEvent                                  //0x0000(0x0229)
};


class AISense_Prediction : public AISense
{
  RegisteredEvents*                                                   RegisteredEvents                                  //0x0080(0x0010)
  Requestor*                                                          RequestPawnPredictionEvent                        //0x0000(0x0229)
  Requestor*                                                          RequestControllerPredictionEvent                  //0x0000(0x0229)
};


class AISense_Sight : public AISense
{
  *                                                                   MaxTracesPerTick                                  //0x0130(0x0004)
  *                                                                   MinQueriesPerTimeSliceCheck                       //0x0134(0x0004)
  *                                                                   MaxTimeSlicePerTick                               //0x0138(0x0008)
  *                                                                   HighImportanceQueryDistanceThreshold              //0x0140(0x0004)
  *                                                                   MaxQueryImportance                                //0x0148(0x0004)
  *                                                                   SightLimitQueryImportance                         //0x014C(0x0004)
};


class AISense_Team : public AISense
{
  RegisteredEvents*                                                   RegisteredEvents                                  //0x0080(0x0010)
};


class AISense_Touch : public AISense
{
  RegisteredEvents*                                                   RegisteredEvents                                  //0x0080(0x0010)
};


class AISenseBlueprintListener : public UserDefinedStruct
{
};


class AISenseConfig : public Object
{
  Color*                                                              DebugColor                                        //0x0028(0x0004)
  *                                                                   MaxAge                                            //0x002C(0x0004)
  *                                                                   bStartsEnabled                                    //0x0030(0x0001)
};


class AISenseConfig_Blueprint : public AISenseConfig
{
  Class*                                                              Implementation                                    //0x0048(0x0008)
};


class AISenseConfig_Damage : public AISenseConfig
{
  Class*                                                              Implementation                                    //0x0048(0x0008)
};


class AISenseConfig_Hearing : public AISenseConfig
{
  Class*                                                              Implementation                                    //0x0048(0x0008)
  *                                                                   HearingRange                                      //0x0050(0x0004)
  *                                                                   LoSHearingRange                                   //0x0054(0x0004)
  *                                                                   bUseLoSHearing                                    //0x0058(0x0001)
  AISenseAffiliationFilter*                                           DetectionByAffiliation                            //0x005C(0x0004)
};


class AISenseConfig_Prediction : public AISenseConfig
{
};


class AISenseConfig_Sight : public AISenseConfig
{
  Class*                                                              Implementation                                    //0x0048(0x0008)
  *                                                                   SightRadius                                       //0x0050(0x0004)
  *                                                                   LoseSightRadius                                   //0x0054(0x0004)
  *                                                                   PeripheralVisionAngleDegrees                      //0x0058(0x0004)
  AISenseAffiliationFilter*                                           DetectionByAffiliation                            //0x005C(0x0004)
  *                                                                   AutoSuccessRangeFromLastSeenLocation              //0x0060(0x0004)
};


class AISenseConfig_Team : public AISenseConfig
{
};


class AISenseConfig_Touch : public AISenseConfig
{
};


class AISenseEvent : public Object
{
};


class AISenseEvent_Damage : public AISenseEvent
{
  AIDamageEvent*                                                      Event                                             //0x0028(0x0030)
};


class AISenseEvent_Hearing : public AISenseEvent
{
  AINoiseEvent*                                                       Event                                             //0x0028(0x0030)
};


class AISightTargetInterface : public Interface
{
};


class AISystem : public AISystemBase
{
  SoftClassPath*                                                      PerceptionSystemClassName                         //0x0058(0x0018)
  SoftClassPath*                                                      HotSpotManagerClassName                           //0x0070(0x0018)
  *                                                                   AcceptanceRadius                                  //0x0088(0x0004)
  *                                                                   PathfollowingRegularPathPointAcceptanceRadius     //0x008C(0x0004)
  *                                                                   PathfollowingNavLinkAcceptanceRadius              //0x0090(0x0004)
  *                                                                   bFinishMoveOnGoalOverlap                          //0x0094(0x0001)
  *                                                                   bAcceptPartialPaths                               //0x0095(0x0001)
  *                                                                   bAllowStrafing                                    //0x0096(0x0001)
  *                                                                   bEnableBTAITasks                                  //0x0097(0x0001)
  *                                                                   bAllowControllersAsEQSQuerier                     //0x0098(0x0001)
  *                                                                   bEnableDebuggerPlugin                             //0x0099(0x0001)
  ECollisionChannel*                                                  DefaultSightCollisionChannel                      //0x009A(0x0001)
  BehaviorTreeManager*                                                BehaviorTreeManager                               //0x00A0(0x0008)
  EnvQueryManager*                                                    EnvironmentQueryManager                           //0x00A8(0x0008)
  AIPerceptionSystem*                                                 PerceptionSystem                                  //0x00B0(0x0008)
  AllProxyObjects*                                                    AllProxyObjects                                   //0x00B8(0x0010)
  AIHotSpotManager*                                                   HotSpotManager                                    //0x00C8(0x0008)
  NavLocalGridManager*                                                NavLocalGrids                                     //0x00D0(0x0008)
  *                                                                   AILoggingVerbose                                  //0x0000(0x0229)
  *                                                                   AIIgnorePlayers                                   //0x0000(0x0229)
};


class AITask : public GameplayTask
{
  AIController*                                                       OwnerController                                   //0x0068(0x0008)
};


class AITask_LockLogic : public AITask
{
};


class AITask_MoveTo : public AITask
{
  GenericGameplayTaskDelegate__DelegateSignature*                     OnRequestFailed                                   //0x0070(0x0010)
  MoveTaskCompletedSignature__DelegateSignature*                      OnMoveFinished                                    //0x0080(0x0010)
  AIMoveRequest*                                                      MoveRequest                                       //0x0090(0x0040)
  Controller*                                                         AIMoveTo                                          //0x0000(0x0229)
};


class AITask_RunEQS : public AITask
{
  Controller*                                                         RunEQS                                            //0x0000(0x0229)
};


class BehaviorTree : public Object
{
  BTCompositeNode*                                                    RootNode                                          //0x0028(0x0008)
  BlackboardData*                                                     BlackboardAsset                                   //0x0030(0x0008)
  RootDecorators*                                                     RootDecorators                                    //0x0038(0x0010)
  RootDecoratorOps*                                                   RootDecoratorOps                                  //0x0048(0x0010)
};


class BrainComponent : public ActorComponent
{
  BlackboardComponent*                                                BlackboardComp                                    //0x00B8(0x0008)
  AIController*                                                       AIOwner                                           //0x00C0(0x0008)
  *                                                                   StopLogic                                         //0x0000(0x0229)
  *                                                                   RestartLogic                                      //0x0000(0x0229)
  *                                                                   IsRunning                                         //0x0000(0x0229)
  *                                                                   IsPaused                                          //0x0000(0x0229)
};


class BehaviorTreeComponent : public BrainComponent
{
  NodeInstances*                                                      NodeInstances                                     //0x0130(0x0010)
  BehaviorAsset*                                                      SetDynamicSubtree                                 //0x0000(0x0229)
  *                                                                   GetTagCooldownEndTime                             //0x0000(0x0229)
  *                                                                   AddCooldownTagDuration                            //0x0000(0x0229)
};


class BehaviorTreeManager : public Object
{
  *                                                                   MaxDebuggerSteps                                  //0x0028(0x0004)
  LoadedTemplates*                                                    LoadedTemplates                                   //0x0030(0x0010)
  ActiveComponents*                                                   ActiveComponents                                  //0x0040(0x0010)
};


class BehaviorTreeTypes : public Object
{
};


class BlackboardComponent : public ActorComponent
{
  BrainComponent*                                                     BrainComp                                         //0x00B0(0x0008)
  BlackboardData*                                                     BlackboardAsset                                   //0x00B8(0x0008)
  KeyInstances*                                                       KeyInstances                                      //0x00E0(0x0010)
  *                                                                   SetValueAsVector                                  //0x0000(0x0229)
  *                                                                   SetValueAsString                                  //0x0000(0x0229)
  *                                                                   SetValueAsRotator                                 //0x0000(0x0229)
  ObjectValue*                                                        SetValueAsObject                                  //0x0000(0x0229)
  *                                                                   SetValueAsName                                    //0x0000(0x0229)
  *                                                                   SetValueAsInt                                     //0x0000(0x0229)
  *                                                                   SetValueAsFloat                                   //0x0000(0x0229)
  *                                                                   SetValueAsEnum                                    //0x0000(0x0229)
  ClassValue*                                                         SetValueAsClass                                   //0x0000(0x0229)
  *                                                                   SetValueAsBool                                    //0x0000(0x0229)
  *                                                                   IsVectorValueSet                                  //0x0000(0x0229)
  *                                                                   GetValueAsVector                                  //0x0000(0x0229)
  *                                                                   GetValueAsString                                  //0x0000(0x0229)
  *                                                                   GetValueAsRotator                                 //0x0000(0x0229)
  ReturnValue*                                                        GetValueAsObject                                  //0x0000(0x0229)
  *                                                                   GetValueAsName                                    //0x0000(0x0229)
  *                                                                   GetValueAsInt                                     //0x0000(0x0229)
  *                                                                   GetValueAsFloat                                   //0x0000(0x0229)
  *                                                                   GetValueAsEnum                                    //0x0000(0x0229)
  ReturnValue*                                                        GetValueAsClass                                   //0x0000(0x0229)
  *                                                                   GetValueAsBool                                    //0x0000(0x0229)
  *                                                                   GetRotationFromEntry                              //0x0000(0x0229)
  *                                                                   GetLocationFromEntry                              //0x0000(0x0229)
  *                                                                   ClearValue                                        //0x0000(0x0229)
};


class BlackboardData : public DataAsset
{
  BlackboardData*                                                     Parent                                            //0x0030(0x0008)
  Keys*                                                               Keys                                              //0x0038(0x0010)
  *                                                                   bHasSynchronizedKeys                              //0x0048(0x0001)
};


class BlackboardKeyType : public Object
{
};


class BlackboardKeyType_Bool : public BlackboardKeyType
{
};


class BlackboardKeyType_Class : public BlackboardKeyType
{
  Class*                                                              BaseClass                                         //0x0030(0x0008)
};


class BlackboardKeyType_Enum : public BlackboardKeyType
{
  Enum*                                                               EnumType                                          //0x0030(0x0008)
  *                                                                   EnumName                                          //0x0038(0x0010)
  *                                                                   bIsEnumNameValid                                  //0x0048(0x0001)
};


class BlackboardKeyType_Float : public BlackboardKeyType
{
};


class BlackboardKeyType_Int : public BlackboardKeyType
{
};


class BlackboardKeyType_Name : public BlackboardKeyType
{
};


class BlackboardKeyType_NativeEnum : public BlackboardKeyType
{
  *                                                                   EnumName                                          //0x0030(0x0010)
  Enum*                                                               EnumType                                          //0x0040(0x0008)
};


class BlackboardKeyType_Object : public BlackboardKeyType
{
  Class*                                                              BaseClass                                         //0x0030(0x0008)
};


class BlackboardKeyType_Rotator : public BlackboardKeyType
{
};


class BlackboardKeyType_String : public BlackboardKeyType
{
  *                                                                   StringValue                                       //0x0030(0x0010)
};


class BlackboardKeyType_Vector : public BlackboardKeyType
{
};


class BTNode : public Object
{
  *                                                                   NodeName                                          //0x0030(0x0010)
  BehaviorTree*                                                       TreeAsset                                         //0x0040(0x0008)
  BTCompositeNode*                                                    ParentNode                                        //0x0048(0x0008)
};


class BTAuxiliaryNode : public BTNode
{
};


class BTCompositeNode : public BTNode
{
  Children*                                                           Children                                          //0x0058(0x0010)
  Services*                                                           Services                                          //0x0068(0x0010)
  *                                                                   bApplyDecoratorScope                              //0x0088(0x0001)
};


class BTComposite_Selector : public BTCompositeNode
{
};


class BTComposite_Sequence : public BTCompositeNode
{
};


class BTComposite_SimpleParallel : public BTCompositeNode
{
  EBTParallelMode*                                                    FinishMode                                        //0x0090(0x0001)
};


class BTDecorator : public BTAuxiliaryNode
{
  *                                                                   bInverseCondition                                 //0x0060(0x0001)
  EBTFlowAbortMode*                                                   FlowAbortMode                                     //0x0064(0x0001)
};


class BTDecorator_BlackboardBase : public BTDecorator
{
  BlackboardKeySelector*                                              BlackboardKey                                     //0x0068(0x0028)
};


class BTDecorator_Blackboard : public BTDecorator_BlackboardBase
{
  *                                                                   IntValue                                          //0x0090(0x0004)
  *                                                                   FloatValue                                        //0x0094(0x0004)
  *                                                                   StringValue                                       //0x0098(0x0010)
  *                                                                   CachedDescription                                 //0x00A8(0x0010)
  *                                                                   OperationType                                     //0x00B8(0x0001)
  EBTBlackboardRestart*                                               NotifyObserver                                    //0x00B9(0x0001)
};


class BTDecorator_BlueprintBase : public BTDecorator
{
  AIController*                                                       AIOwner                                           //0x0068(0x0008)
  Actor*                                                              ActorOwner                                        //0x0070(0x0008)
  ObservedKeyNames*                                                   ObservedKeyNames                                  //0x0078(0x0010)
  *                                                                   bShowPropertyDetails                              //0x0098(0x0001)
  *                                                                   bCheckConditionOnlyBlackBoardChanges              //0x0098(0x0001)
  *                                                                   bIsObservingBB                                    //0x0098(0x0001)
  OwnerController*                                                    ReceiveTickAI                                     //0x0000(0x0229)
  OwnerActor*                                                         ReceiveTick                                       //0x0000(0x0229)
  OwnerController*                                                    ReceiveObserverDeactivatedAI                      //0x0000(0x0229)
  OwnerActor*                                                         ReceiveObserverDeactivated                        //0x0000(0x0229)
  OwnerController*                                                    ReceiveObserverActivatedAI                        //0x0000(0x0229)
  OwnerActor*                                                         ReceiveObserverActivated                          //0x0000(0x0229)
  OwnerController*                                                    ReceiveExecutionStartAI                           //0x0000(0x0229)
  OwnerActor*                                                         ReceiveExecutionStart                             //0x0000(0x0229)
  OwnerController*                                                    ReceiveExecutionFinishAI                          //0x0000(0x0229)
  OwnerActor*                                                         ReceiveExecutionFinish                            //0x0000(0x0229)
  OwnerController*                                                    PerformConditionCheckAI                           //0x0000(0x0229)
  OwnerActor*                                                         PerformConditionCheck                             //0x0000(0x0229)
  *                                                                   IsDecoratorObserverActive                         //0x0000(0x0229)
  *                                                                   IsDecoratorExecutionActive                        //0x0000(0x0229)
};


class BTDecorator_CheckGameplayTagsOnActor : public BTDecorator
{
  BlackboardKeySelector*                                              ActorToCheck                                      //0x0068(0x0028)
  UnderlyingType*                                                     TagsToMatch                                       //0x0090(0x0001)
  GameplayTagContainer*                                               GameplayTags                                      //0x0098(0x0020)
  *                                                                   CachedDescription                                 //0x00B8(0x0010)
};


class BTDecorator_CompareBBEntries : public BTDecorator
{
  EBlackBoardEntryComparison*                                         Operator                                          //0x0068(0x0001)
  BlackboardKeySelector*                                              BlackboardKeyA                                    //0x0070(0x0028)
  BlackboardKeySelector*                                              BlackboardKeyB                                    //0x0098(0x0028)
};


class BTDecorator_ConditionalLoop : public BTDecorator_Blackboard
{
};


class BTDecorator_ConeCheck : public BTDecorator
{
  *                                                                   ConeHalfAngle                                     //0x0068(0x0004)
  BlackboardKeySelector*                                              ConeOrigin                                        //0x0070(0x0028)
  BlackboardKeySelector*                                              ConeDirection                                     //0x0098(0x0028)
  BlackboardKeySelector*                                              Observed                                          //0x00C0(0x0028)
};


class BTDecorator_Cooldown : public BTDecorator
{
  *                                                                   CoolDownTime                                      //0x0068(0x0004)
};


class BTDecorator_DoesPathExist : public BTDecorator
{
  BlackboardKeySelector*                                              BlackboardKeyA                                    //0x0068(0x0028)
  BlackboardKeySelector*                                              BlackboardKeyB                                    //0x0090(0x0028)
  *                                                                   bUseSelf                                          //0x00B8(0x0001)
  EPathExistanceQueryType*                                            PathQueryType                                     //0x00BC(0x0001)
  Class*                                                              FilterClass                                       //0x00C0(0x0008)
};


class BTDecorator_ForceSuccess : public BTDecorator
{
};


class BTDecorator_IsAtLocation : public BTDecorator_BlackboardBase
{
  *                                                                   AcceptableRadius                                  //0x0090(0x0004)
  AIDataProviderFloatValue*                                           ParametrizedAcceptableRadius                      //0x0098(0x0030)
  UnderlyingType*                                                     GeometricDistanceType                             //0x00C8(0x0001)
  *                                                                   bUseParametrizedRadius                            //0x00CC(0x0001)
  *                                                                   bUseNavAgentGoalLocation                          //0x00CC(0x0001)
  *                                                                   bPathFindingBasedTest                             //0x00CC(0x0001)
};


class BTDecorator_IsBBEntryOfClass : public BTDecorator_BlackboardBase
{
  Class*                                                              TestClass                                         //0x0090(0x0008)
};


class BTDecorator_KeepInCone : public BTDecorator
{
  *                                                                   ConeHalfAngle                                     //0x0068(0x0004)
  BlackboardKeySelector*                                              ConeOrigin                                        //0x0070(0x0028)
  BlackboardKeySelector*                                              Observed                                          //0x0098(0x0028)
  *                                                                   bUseSelfAsOrigin                                  //0x00C0(0x0001)
  *                                                                   bUseSelfAsObserved                                //0x00C0(0x0001)
};


class BTDecorator_Loop : public BTDecorator
{
  *                                                                   NumLoops                                          //0x0068(0x0004)
  *                                                                   bInfiniteLoop                                     //0x006C(0x0001)
  *                                                                   InfiniteLoopTimeoutTime                           //0x0070(0x0004)
};


class BTDecorator_ReachedMoveGoal : public BTDecorator
{
};


class BTDecorator_SetTagCooldown : public BTDecorator
{
  GameplayTag*                                                        CooldownTag                                       //0x0068(0x0008)
  *                                                                   CooldownDuration                                  //0x0070(0x0004)
  *                                                                   bAddToExistingDuration                            //0x0074(0x0001)
};


class BTDecorator_TagCooldown : public BTDecorator
{
  GameplayTag*                                                        CooldownTag                                       //0x0068(0x0008)
  *                                                                   CooldownDuration                                  //0x0070(0x0004)
  *                                                                   bAddToExistingDuration                            //0x0074(0x0001)
  *                                                                   bActivatesCooldown                                //0x0075(0x0001)
};


class BTDecorator_TimeLimit : public BTDecorator
{
  *                                                                   TimeLimit                                         //0x0068(0x0004)
};


class BTFunctionLibrary : public BlueprintFunctionLibrary
{
  NodeOwner*                                                          StopUsingExternalEvent                            //0x0000(0x0229)
  NodeOwner*                                                          StartUsingExternalEvent                           //0x0000(0x0229)
  NodeOwner*                                                          SetBlackboardValueAsVector                        //0x0000(0x0229)
  NodeOwner*                                                          SetBlackboardValueAsString                        //0x0000(0x0229)
  NodeOwner*                                                          SetBlackboardValueAsRotator                       //0x0000(0x0229)
  NodeOwner*                                                          SetBlackboardValueAsObject                        //0x0000(0x0229)
  NodeOwner*                                                          SetBlackboardValueAsName                          //0x0000(0x0229)
  NodeOwner*                                                          SetBlackboardValueAsInt                           //0x0000(0x0229)
  NodeOwner*                                                          SetBlackboardValueAsFloat                         //0x0000(0x0229)
  NodeOwner*                                                          SetBlackboardValueAsEnum                          //0x0000(0x0229)
  NodeOwner*                                                          SetBlackboardValueAsClass                         //0x0000(0x0229)
  NodeOwner*                                                          SetBlackboardValueAsBool                          //0x0000(0x0229)
  NodeOwner*                                                          GetOwnersBlackboard                               //0x0000(0x0229)
  NodeOwner*                                                          GetOwnerComponent                                 //0x0000(0x0229)
  NodeOwner*                                                          GetBlackboardValueAsVector                        //0x0000(0x0229)
  NodeOwner*                                                          GetBlackboardValueAsString                        //0x0000(0x0229)
  NodeOwner*                                                          GetBlackboardValueAsRotator                       //0x0000(0x0229)
  NodeOwner*                                                          GetBlackboardValueAsObject                        //0x0000(0x0229)
  NodeOwner*                                                          GetBlackboardValueAsName                          //0x0000(0x0229)
  NodeOwner*                                                          GetBlackboardValueAsInt                           //0x0000(0x0229)
  NodeOwner*                                                          GetBlackboardValueAsFloat                         //0x0000(0x0229)
  NodeOwner*                                                          GetBlackboardValueAsEnum                          //0x0000(0x0229)
  NodeOwner*                                                          GetBlackboardValueAsClass                         //0x0000(0x0229)
  NodeOwner*                                                          GetBlackboardValueAsBool                          //0x0000(0x0229)
  NodeOwner*                                                          GetBlackboardValueAsActor                         //0x0000(0x0229)
  NodeOwner*                                                          ClearBlackboardValueAsVector                      //0x0000(0x0229)
  NodeOwner*                                                          ClearBlackboardValue                              //0x0000(0x0229)
};


class BTService : public BTAuxiliaryNode
{
  *                                                                   Interval                                          //0x0060(0x0004)
  *                                                                   RandomDeviation                                   //0x0064(0x0004)
  *                                                                   bCallTickOnSearchStart                            //0x0068(0x0001)
  *                                                                   bRestartTimerOnEachActivation                     //0x0068(0x0001)
};


class BTService_BlackboardBase : public BTService
{
  BlackboardKeySelector*                                              BlackboardKey                                     //0x0070(0x0028)
};


class BTService_BlueprintBase : public BTService
{
  AIController*                                                       AIOwner                                           //0x0070(0x0008)
  Actor*                                                              ActorOwner                                        //0x0078(0x0008)
  *                                                                   bShowPropertyDetails                              //0x0090(0x0001)
  *                                                                   bShowEventDetails                                 //0x0090(0x0001)
  OwnerController*                                                    ReceiveTickAI                                     //0x0000(0x0229)
  OwnerActor*                                                         ReceiveTick                                       //0x0000(0x0229)
  OwnerController*                                                    ReceiveSearchStartAI                              //0x0000(0x0229)
  OwnerActor*                                                         ReceiveSearchStart                                //0x0000(0x0229)
  OwnerController*                                                    ReceiveDeactivationAI                             //0x0000(0x0229)
  OwnerActor*                                                         ReceiveDeactivation                               //0x0000(0x0229)
  OwnerController*                                                    ReceiveActivationAI                               //0x0000(0x0229)
  OwnerActor*                                                         ReceiveActivation                                 //0x0000(0x0229)
  *                                                                   IsServiceActive                                   //0x0000(0x0229)
};


class BTService_DefaultFocus : public BTService_BlackboardBase
{
  *                                                                   FocusPriority                                     //0x0098(0x0001)
};


class BTService_RunEQS : public BTService_BlackboardBase
{
  EQSParametrizedQueryExecutionRequest*                               EQSRequest                                        //0x0098(0x0048)
};


class BTTaskNode : public BTNode
{
  Services*                                                           Services                                          //0x0058(0x0010)
  *                                                                   bIgnoreRestartSelf                                //0x0068(0x0001)
};


class BTTask_BlackboardBase : public BTTaskNode
{
  BlackboardKeySelector*                                              BlackboardKey                                     //0x0070(0x0028)
};


class BTTask_BlueprintBase : public BTTaskNode
{
  AIController*                                                       AIOwner                                           //0x0070(0x0008)
  Actor*                                                              ActorOwner                                        //0x0078(0x0008)
  IntervalCountdown*                                                  TickInterval                                      //0x0080(0x0008)
  *                                                                   bShowPropertyDetails                              //0x00A0(0x0001)
  *                                                                   SetFinishOnMessageWithId                          //0x0000(0x0229)
  *                                                                   SetFinishOnMessage                                //0x0000(0x0229)
  OwnerController*                                                    ReceiveTickAI                                     //0x0000(0x0229)
  OwnerActor*                                                         ReceiveTick                                       //0x0000(0x0229)
  OwnerController*                                                    ReceiveExecuteAI                                  //0x0000(0x0229)
  OwnerActor*                                                         ReceiveExecute                                    //0x0000(0x0229)
  OwnerController*                                                    ReceiveAbortAI                                    //0x0000(0x0229)
  OwnerActor*                                                         ReceiveAbort                                      //0x0000(0x0229)
  *                                                                   IsTaskExecuting                                   //0x0000(0x0229)
  *                                                                   IsTaskAborting                                    //0x0000(0x0229)
  *                                                                   FinishExecute                                     //0x0000(0x0229)
  *                                                                   FinishAbort                                       //0x0000(0x0229)
};


class BTTask_FinishWithResult : public BTTaskNode
{
  EBTNodeResult*                                                      Result                                            //0x0070(0x0001)
};


class BTTask_GameplayTaskBase : public BTTaskNode
{
  *                                                                   bWaitForGameplayTask                              //0x0070(0x0001)
};


class BTTask_MakeNoise : public BTTaskNode
{
  *                                                                   Loudnes                                           //0x0070(0x0004)
};


class BTTask_MoveTo : public BTTask_BlackboardBase
{
  *                                                                   AcceptableRadius                                  //0x0098(0x0004)
  Class*                                                              FilterClass                                       //0x00A0(0x0008)
  *                                                                   ObservedBlackboardValueTolerance                  //0x00A8(0x0004)
  *                                                                   bObserveBlackboardValue                           //0x00AC(0x0001)
  *                                                                   bAllowStrafe                                      //0x00AC(0x0001)
  *                                                                   bAllowPartialPath                                 //0x00AC(0x0001)
  *                                                                   bTrackMovingGoal                                  //0x00AC(0x0001)
  *                                                                   bProjectGoalLocation                              //0x00AC(0x0001)
  *                                                                   bReachTestIncludesAgentRadius                     //0x00AC(0x0001)
  *                                                                   bReachTestIncludesGoalRadius                      //0x00AC(0x0001)
  *                                                                   bStopOnOverlap                                    //0x00AC(0x0001)
  *                                                                   bStopOnOverlapNeedsUpdate                         //0x00AD(0x0001)
};


class BTTask_MoveDirectlyToward : public BTTask_MoveTo
{
  *                                                                   bDisablePathUpdateOnGoalLocationChange            //0x00B0(0x0001)
  *                                                                   bProjectVectorGoalToNavigation                    //0x00B0(0x0001)
  *                                                                   bUpdatedDeprecatedProperties                      //0x00B0(0x0001)
};


class BTTask_PawnActionBase : public BTTaskNode
{
};


class BTTask_PlayAnimation : public BTTaskNode
{
  AnimationAsset*                                                     AnimationToPlay                                   //0x0070(0x0008)
  *                                                                   bLooping                                          //0x0078(0x0001)
  *                                                                   bNonBlocking                                      //0x0078(0x0001)
  BehaviorTreeComponent*                                              MyOwnerComp                                       //0x0080(0x0008)
  SkeletalMeshComponent*                                              CachedSkelMesh                                    //0x0088(0x0008)
};


class BTTask_PlaySound : public BTTaskNode
{
  SoundCue*                                                           SoundToPlay                                       //0x0070(0x0008)
};


class BTTask_PushPawnAction : public BTTask_PawnActionBase
{
  PawnAction*                                                         Action                                            //0x0070(0x0008)
};


class BTTask_RotateToFaceBBEntry : public BTTask_BlackboardBase
{
  *                                                                   Precision                                         //0x0098(0x0004)
};


class BTTask_RunBehavior : public BTTaskNode
{
  BehaviorTree*                                                       BehaviorAsset                                     //0x0070(0x0008)
};


class BTTask_RunBehaviorDynamic : public BTTaskNode
{
  GameplayTag*                                                        InjectionTag                                      //0x0070(0x0008)
  BehaviorTree*                                                       DefaultBehaviorAsset                              //0x0078(0x0008)
  BehaviorTree*                                                       BehaviorAsset                                     //0x0080(0x0008)
};


class BTTask_RunEQSQuery : public BTTask_BlackboardBase
{
  EnvQuery*                                                           QueryTemplate                                     //0x0098(0x0008)
  QueryParams*                                                        QueryParams                                       //0x00A0(0x0010)
  QueryConfig*                                                        QueryConfig                                       //0x00B0(0x0010)
  EEnvQueryRunMode*                                                   RunMode                                           //0x00C0(0x0001)
  BlackboardKeySelector*                                              EQSQueryBlackboardKey                             //0x00C8(0x0028)
  *                                                                   bUseBBKey                                         //0x00F0(0x0001)
  EQSParametrizedQueryExecutionRequest*                               EQSRequest                                        //0x00F8(0x0048)
};


class BTTask_SetTagCooldown : public BTTaskNode
{
  GameplayTag*                                                        CooldownTag                                       //0x0070(0x0008)
  *                                                                   bAddToExistingDuration                            //0x0078(0x0001)
  *                                                                   CooldownDuration                                  //0x007C(0x0004)
};


class BTTask_Wait : public BTTaskNode
{
  *                                                                   WaitTime                                          //0x0070(0x0004)
  *                                                                   RandomDeviation                                   //0x0074(0x0004)
};


class BTTask_WaitBlackboardTime : public BTTask_Wait
{
  BlackboardKeySelector*                                              BlackboardKey                                     //0x0078(0x0028)
};


class CrowdAgentInterface : public Interface
{
};


class PathFollowingComponent : public ActorComponent
{
  NavMovementComponent*                                               MovementComp                                      //0x00E8(0x0008)
  NavigationData*                                                     MyNavData                                         //0x00F8(0x0008)
  NavData*                                                            OnNavDataRegistered                               //0x0000(0x0229)
  SelfActor*                                                          OnActorBump                                       //0x0000(0x0229)
  *                                                                   GetPathDestination                                //0x0000(0x0229)
  *                                                                   GetPathActionType                                 //0x0000(0x0229)
};


class CrowdFollowingComponent : public PathFollowingComponent
{
  CharacterMovementComponent*                                         CharacterMovement                                 //0x0260(0x0008)
  Vector*                                                             CrowdAgentMoveDirection                           //0x0268(0x000C)
  *                                                                   SuspendCrowdSteering                              //0x0000(0x0229)
};


class CrowdManager : public CrowdManagerBase
{
  NavigationData*                                                     MyNavData                                         //0x0028(0x0008)
  AvoidanceConfig*                                                    AvoidanceConfig                                   //0x0030(0x0010)
  SamplingPatterns*                                                   SamplingPatterns                                  //0x0040(0x0010)
  *                                                                   MaxAgents                                         //0x0050(0x0004)
  *                                                                   MaxAgentRadius                                    //0x0054(0x0004)
  *                                                                   MaxAvoidedAgents                                  //0x0058(0x0004)
  *                                                                   MaxAvoidedWalls                                   //0x005C(0x0004)
  *                                                                   NavmeshCheckInterval                              //0x0060(0x0004)
  *                                                                   PathOptimizationInterval                          //0x0064(0x0004)
  *                                                                   SeparationDirClamp                                //0x0068(0x0004)
  *                                                                   PathOffsetRadiusMultiplier                        //0x006C(0x0004)
  *                                                                   bResolveCollisions                                //0x0070(0x0001)
};


class DetourCrowdAIController : public AIController
{
};


class EnvQuery : public DataAsset
{
  *                                                                   QueryName                                         //0x0030(0x0008)
  Options*                                                            Options                                           //0x0038(0x0010)
};


class EnvQueryContext : public Object
{
};


class EnvQueryContext_BlueprintBase : public EnvQueryContext
{
  QuerierObject*                                                      ProvideSingleLocation                             //0x0000(0x0229)
  QuerierObject*                                                      ProvideSingleActor                                //0x0000(0x0229)
  QuerierObject*                                                      ProvideLocationsSet                               //0x0000(0x0229)
  QuerierObject*                                                      ProvideActorsSet                                  //0x0000(0x0229)
};


class EnvQueryContext_Item : public EnvQueryContext
{
};


class EnvQueryContext_Querier : public EnvQueryContext
{
};


class EnvQueryDebugHelpers : public Object
{
};


class EnvQueryNode : public Object
{
  *                                                                   VerNum                                            //0x0028(0x0004)
};


class EnvQueryGenerator : public EnvQueryNode
{
  *                                                                   OptionName                                        //0x0030(0x0010)
  Class*                                                              ItemType                                          //0x0040(0x0008)
  *                                                                   bAutoSortTests                                    //0x0048(0x0001)
};


class EnvQueryGenerator_ActorsOfClass : public EnvQueryGenerator
{
  Class*                                                              SearchedActorClass                                //0x0050(0x0008)
  AIDataProviderBoolValue*                                            GenerateOnlyActorsInRadius                        //0x0058(0x0030)
  AIDataProviderFloatValue*                                           SearchRadius                                      //0x0088(0x0030)
  Class*                                                              SearchCenter                                      //0x00B8(0x0008)
};


class EnvQueryGenerator_BlueprintBase : public EnvQueryGenerator
{
  *                                                                   GeneratorsActionDescription                       //0x0050(0x0018)
  Class*                                                              Context                                           //0x0068(0x0008)
  Class*                                                              GeneratedItemType                                 //0x0070(0x0008)
  ReturnValue*                                                        GetQuerier                                        //0x0000(0x0229)
  *                                                                   DoItemGeneration                                  //0x0000(0x0229)
  *                                                                   AddGeneratedVector                                //0x0000(0x0229)
  GeneratedActor*                                                     AddGeneratedActor                                 //0x0000(0x0229)
};


class EnvQueryGenerator_Composite : public EnvQueryGenerator
{
  Generators*                                                         Generators                                        //0x0050(0x0010)
  *                                                                   bAllowDifferentItemTypes                          //0x0060(0x0001)
  *                                                                   bHasMatchingItemType                              //0x0060(0x0001)
  Class*                                                              ForcedItemType                                    //0x0068(0x0008)
};


class EnvQueryGenerator_ProjectedPoints : public EnvQueryGenerator
{
  EnvTraceData*                                                       ProjectionData                                    //0x0050(0x0030)
};


class EnvQueryGenerator_Cone : public EnvQueryGenerator_ProjectedPoints
{
  AIDataProviderFloatValue*                                           AlignedPointsDistance                             //0x0080(0x0030)
  AIDataProviderFloatValue*                                           ConeDegrees                                       //0x00B0(0x0030)
  AIDataProviderFloatValue*                                           AngleStep                                         //0x00E0(0x0030)
  AIDataProviderFloatValue*                                           Range                                             //0x0110(0x0030)
  Class*                                                              CenterActor                                       //0x0140(0x0008)
  *                                                                   bIncludeContextLocation                           //0x0148(0x0001)
};


class EnvQueryGenerator_CurrentLocation : public EnvQueryGenerator
{
  Class*                                                              QueryContext                                      //0x0050(0x0008)
};


class EnvQueryGenerator_Donut : public EnvQueryGenerator_ProjectedPoints
{
  AIDataProviderFloatValue*                                           InnerRadius                                       //0x0080(0x0030)
  AIDataProviderFloatValue*                                           OuterRadius                                       //0x00B0(0x0030)
  AIDataProviderIntValue*                                             NumberOfRings                                     //0x00E0(0x0030)
  AIDataProviderIntValue*                                             PointsPerRing                                     //0x0110(0x0030)
  EnvDirection*                                                       ArcDirection                                      //0x0140(0x0020)
  AIDataProviderFloatValue*                                           ArcAngle                                          //0x0160(0x0030)
  *                                                                   bUseSpiralPattern                                 //0x0190(0x0001)
  Class*                                                              Center                                            //0x0198(0x0008)
  *                                                                   bDefineArc                                        //0x01A0(0x0001)
};


class EnvQueryGenerator_OnCircle : public EnvQueryGenerator_ProjectedPoints
{
  AIDataProviderFloatValue*                                           CircleRadius                                      //0x0080(0x0030)
  AIDataProviderFloatValue*                                           SpaceBetween                                      //0x00B0(0x0030)
  AIDataProviderIntValue*                                             NumberOfPoints                                    //0x00E0(0x0030)
  UnderlyingType*                                                     PointOnCircleSpacingMethod                        //0x0110(0x0001)
  EnvDirection*                                                       ArcDirection                                      //0x0118(0x0020)
  AIDataProviderFloatValue*                                           ArcAngle                                          //0x0138(0x0030)
  *                                                                   AngleRadians                                      //0x0168(0x0004)
  Class*                                                              CircleCenter                                      //0x0170(0x0008)
  *                                                                   bIgnoreAnyContextActorsWhenGeneratingCircle       //0x0178(0x0001)
  AIDataProviderFloatValue*                                           CircleCenterZOffset                               //0x0180(0x0030)
  EnvTraceData*                                                       TraceData                                         //0x01B0(0x0030)
  *                                                                   bDefineArc                                        //0x01E0(0x0001)
};


class EnvQueryGenerator_SimpleGrid : public EnvQueryGenerator_ProjectedPoints
{
  AIDataProviderFloatValue*                                           GridSize                                          //0x0080(0x0030)
  AIDataProviderFloatValue*                                           SpaceBetween                                      //0x00B0(0x0030)
  Class*                                                              GenerateAround                                    //0x00E0(0x0008)
};


class EnvQueryGenerator_PathingGrid : public EnvQueryGenerator_SimpleGrid
{
  AIDataProviderBoolValue*                                            PathToItem                                        //0x00E8(0x0030)
  Class*                                                              NavigationFilter                                  //0x0118(0x0008)
  AIDataProviderFloatValue*                                           ScanRangeMultiplier                               //0x0120(0x0030)
};


class EnvQueryInstanceBlueprintWrapper : public Object
{
  *                                                                   QueryID                                           //0x0030(0x0004)
  Class*                                                              ItemType                                          //0x0058(0x0008)
  *                                                                   OptionIndex                                       //0x0060(0x0004)
  EQSQueryDoneSignature__DelegateSignature*                           OnQueryFinishedEvent                              //0x0068(0x0010)
  *                                                                   SetNamedParam                                     //0x0000(0x0229)
  *                                                                   GetResultsAsLocations                             //0x0000(0x0229)
  ReturnValue*                                                        GetResultsAsActors                                //0x0000(0x0229)
  *                                                                   GetQueryResultsAsLocations                        //0x0000(0x0229)
  ResultActors*                                                       GetQueryResultsAsActors                           //0x0000(0x0229)
  *                                                                   GetItemScore                                      //0x0000(0x0229)
  QueryInstance*                                                      EQSQueryDoneSignature__DelegateSignature          //0x0000(0x0229)
};


class EnvQueryItemType : public Object
{
};


class EnvQueryItemType_VectorBase : public EnvQueryItemType
{
};


class EnvQueryItemType_ActorBase : public EnvQueryItemType_VectorBase
{
};


class EnvQueryItemType_Actor : public EnvQueryItemType_ActorBase
{
};


class EnvQueryItemType_Direction : public EnvQueryItemType_VectorBase
{
};


class EnvQueryItemType_Point : public EnvQueryItemType_VectorBase
{
};


class EnvQueryManager : public AISubsystem
{
  InstanceCache*                                                      InstanceCache                                     //0x00A8(0x0010)
  LocalContexts*                                                      LocalContexts                                     //0x00B8(0x0010)
  GCShieldedWrappers*                                                 GCShieldedWrappers                                //0x00C8(0x0010)
  *                                                                   MaxAllowedTestingTime                             //0x012C(0x0004)
  *                                                                   bTestQueriesUsingBreadth                          //0x0130(0x0001)
  *                                                                   QueryCountWarningThreshold                        //0x0134(0x0004)
  *                                                                   QueryCountWarningInterval                         //0x0138(0x0008)
  WorldContextObject*                                                 RunEQSQuery                                       //0x0000(0x0229)
};


class EnvQueryOption : public Object
{
  EnvQueryGenerator*                                                  Generator                                         //0x0028(0x0008)
  Tests*                                                              Tests                                             //0x0030(0x0010)
};


class EnvQueryTest : public EnvQueryNode
{
  *                                                                   TestOrder                                         //0x0030(0x0004)
  EEnvTestPurpose*                                                    TestPurpose                                       //0x0034(0x0001)
  *                                                                   TestComment                                       //0x0038(0x0010)
  EEnvTestFilterOperator*                                             MultipleContextFilterOp                           //0x0048(0x0001)
  EEnvTestScoreOperator*                                              MultipleContextScoreOp                            //0x0049(0x0001)
  EEnvTestFilterType*                                                 FilterType                                        //0x004A(0x0001)
  AIDataProviderBoolValue*                                            BoolValue                                         //0x0050(0x0030)
  AIDataProviderFloatValue*                                           FloatValueMin                                     //0x0080(0x0030)
  AIDataProviderFloatValue*                                           FloatValueMax                                     //0x00B0(0x0030)
  EEnvTestScoreEquation*                                              ScoringEquation                                   //0x00E1(0x0001)
  EEnvQueryTestClamping*                                              ClampMinType                                      //0x00E2(0x0001)
  EEnvQueryTestClamping*                                              ClampMaxType                                      //0x00E3(0x0001)
  UnderlyingType*                                                     NormalizationType                                 //0x00E4(0x0001)
  AIDataProviderFloatValue*                                           ScoreClampMin                                     //0x00E8(0x0030)
  AIDataProviderFloatValue*                                           ScoreClampMax                                     //0x0118(0x0030)
  AIDataProviderFloatValue*                                           ScoringFactor                                     //0x0148(0x0030)
  AIDataProviderFloatValue*                                           ReferenceValue                                    //0x0178(0x0030)
  *                                                                   bDefineReferenceValue                             //0x01A8(0x0001)
  *                                                                   bWorkOnFloatValues                                //0x01B8(0x0001)
};


class EnvQueryTest_Distance : public EnvQueryTest
{
  EEnvTestDistance*                                                   TestMode                                          //0x01C0(0x0001)
  Class*                                                              DistanceTo                                        //0x01C8(0x0008)
};


class EnvQueryTest_Dot : public EnvQueryTest
{
  EnvDirection*                                                       LineA                                             //0x01C0(0x0020)
  EnvDirection*                                                       LineB                                             //0x01E0(0x0020)
  UnderlyingType*                                                     TestMode                                          //0x0200(0x0001)
  *                                                                   bAbsoluteValue                                    //0x0201(0x0001)
};


class EnvQueryTest_GameplayTags : public EnvQueryTest
{
  GameplayTagQuery*                                                   TagQueryToMatch                                   //0x01C0(0x0048)
  *                                                                   bUpdatedToUseQuery                                //0x0208(0x0001)
  UnderlyingType*                                                     TagsToMatch                                       //0x0209(0x0001)
  GameplayTagContainer*                                               GameplayTags                                      //0x0210(0x0020)
};


class EnvQueryTest_Overlap : public EnvQueryTest
{
  EnvOverlapData*                                                     OverlapData                                       //0x01C0(0x0020)
};


class EnvQueryTest_Pathfinding : public EnvQueryTest
{
  EEnvTestPathfinding*                                                TestMode                                          //0x01C0(0x0001)
  Class*                                                              Context                                           //0x01C8(0x0008)
  AIDataProviderBoolValue*                                            PathFromContext                                   //0x01D0(0x0030)
  AIDataProviderBoolValue*                                            SkipUnreachable                                   //0x0200(0x0030)
  Class*                                                              FilterClass                                       //0x0230(0x0008)
};


class EnvQueryTest_PathfindingBatch : public EnvQueryTest_Pathfinding
{
  AIDataProviderFloatValue*                                           ScanRangeMultiplier                               //0x0238(0x0030)
};


class EnvQueryTest_Project : public EnvQueryTest
{
  EnvTraceData*                                                       ProjectionData                                    //0x01C0(0x0030)
};


class EnvQueryTest_Random : public EnvQueryTest
{
};


class EnvQueryTest_Trace : public EnvQueryTest
{
  EnvTraceData*                                                       TraceData                                         //0x01C0(0x0030)
  AIDataProviderBoolValue*                                            TraceFromContext                                  //0x01F0(0x0030)
  AIDataProviderFloatValue*                                           ItemHeightOffset                                  //0x0220(0x0030)
  AIDataProviderFloatValue*                                           ContextHeightOffset                               //0x0250(0x0030)
  Class*                                                              Context                                           //0x0280(0x0008)
};


class EnvQueryTest_Volume : public EnvQueryTest
{
  Class*                                                              VolumeContext                                     //0x01C0(0x0008)
  Class*                                                              VolumeClass                                       //0x01C8(0x0008)
  *                                                                   bDoComplexVolumeTest                              //0x01D0(0x0001)
};


class EnvQueryTypes : public Object
{
};


class EQSQueryResultSourceInterface : public Interface
{
};


class EQSRenderingComponent : public PrimitiveComponent
{
};


class EQSTestingPawn : public Character
{
  EnvQuery*                                                           QueryTemplate                                     //0x0630(0x0008)
  QueryParams*                                                        QueryParams                                       //0x0638(0x0010)
  QueryConfig*                                                        QueryConfig                                       //0x0648(0x0010)
  *                                                                   TimeLimitPerStep                                  //0x0658(0x0004)
  *                                                                   StepToDebugDraw                                   //0x065C(0x0004)
  UnderlyingType*                                                     HighlightMode                                     //0x0660(0x0001)
  *                                                                   bDrawLabels                                       //0x0664(0x0001)
  *                                                                   bDrawFailedItems                                  //0x0664(0x0001)
  *                                                                   bReRunQueryOnlyOnFinishedMove                     //0x0664(0x0001)
  *                                                                   bShouldBeVisibleInGame                            //0x0664(0x0001)
  *                                                                   bTickDuringGame                                   //0x0664(0x0001)
  EEnvQueryRunMode*                                                   QueryingMode                                      //0x0668(0x0001)
  NavAgentProperties*                                                 NavAgentProperties                                //0x0670(0x0030)
};


class GenericTeamAgentInterface : public Interface
{
};


class GridPathAIController : public AIController
{
};


class GridPathFollowingComponent : public PathFollowingComponent
{
  NavLocalGridManager*                                                GridManager                                       //0x0258(0x0008)
};


class NavFilter_AIControllerDefault : public NavigationQueryFilter
{
};


class NavLinkProxy : public Actor
{
  PointLinks*                                                         PointLinks                                        //0x0228(0x0010)
  SegmentLinks*                                                       SegmentLinks                                      //0x0238(0x0010)
  NavLinkCustomComponent*                                             SmartLinkComp                                     //0x0248(0x0008)
  *                                                                   bSmartLinkIsRelevant                              //0x0250(0x0001)
  SmartLinkReachedSignature__DelegateSignature*                       OnSmartLinkReached                                //0x0258(0x0010)
  *                                                                   SetSmartLinkEnabled                               //0x0000(0x0229)
  Agent*                                                              ResumePathFollowing                               //0x0000(0x0229)
  Agent*                                                              ReceiveSmartLinkReached                           //0x0000(0x0229)
  *                                                                   IsSmartLinkEnabled                                //0x0000(0x0229)
  *                                                                   HasMovingAgents                                   //0x0000(0x0229)
};


class NavLocalGridManager : public Object
{
  WorldContextObject*                                                 SetLocalNavigationGridDensity                     //0x0000(0x0229)
  WorldContextObject*                                                 RemoveLocalNavigationGrid                         //0x0000(0x0229)
  WorldContextObject*                                                 FindLocalNavigationGridPath                       //0x0000(0x0229)
  WorldContextObject*                                                 AddLocalNavigationGridForPoints                   //0x0000(0x0229)
  WorldContextObject*                                                 AddLocalNavigationGridForPoint                    //0x0000(0x0229)
  WorldContextObject*                                                 AddLocalNavigationGridForCapsule                  //0x0000(0x0229)
  WorldContextObject*                                                 AddLocalNavigationGridForBox                      //0x0000(0x0229)
};


class PathFollowingManager : public Object
{
};


class PawnAction : public Object
{
  PawnAction*                                                         ChildAction                                       //0x0028(0x0008)
  PawnAction*                                                         ParentAction                                      //0x0030(0x0008)
  PawnActionsComponent*                                               OwnerComponent                                    //0x0038(0x0008)
  Object*                                                             Instigator                                        //0x0040(0x0008)
  BrainComponent*                                                     BrainComp                                         //0x0048(0x0008)
  *                                                                   bAllowNewSameClassInstance                        //0x0080(0x0001)
  *                                                                   bReplaceActiveSameClassInstance                   //0x0080(0x0001)
  *                                                                   bShouldPauseMovement                              //0x0080(0x0001)
  *                                                                   bAlwaysNotifyOnFinished                           //0x0080(0x0001)
  *                                                                   GetActionPriority                                 //0x0000(0x0229)
  *                                                                   Finish                                            //0x0000(0x0229)
  WorldContextObject*                                                 CreateActionInstance                              //0x0000(0x0229)
};


class PawnAction_BlueprintBase : public PawnAction
{
  ControlledPawn*                                                     ActionTick                                        //0x0000(0x0229)
  ControlledPawn*                                                     ActionStart                                       //0x0000(0x0229)
  ControlledPawn*                                                     ActionResume                                      //0x0000(0x0229)
  ControlledPawn*                                                     ActionPause                                       //0x0000(0x0229)
  ControlledPawn*                                                     ActionFinished                                    //0x0000(0x0229)
};


class PawnAction_Move : public PawnAction
{
  Actor*                                                              GoalActor                                         //0x0098(0x0008)
  Vector*                                                             GoalLocation                                      //0x00A0(0x000C)
  *                                                                   AcceptableRadius                                  //0x00AC(0x0004)
  Class*                                                              FilterClass                                       //0x00B0(0x0008)
  *                                                                   bAllowStrafe                                      //0x00B8(0x0001)
  *                                                                   bFinishOnOverlap                                  //0x00B8(0x0001)
  *                                                                   bUsePathfinding                                   //0x00B8(0x0001)
  *                                                                   bAllowPartialPath                                 //0x00B8(0x0001)
  *                                                                   bProjectGoalToNavigation                          //0x00B8(0x0001)
  *                                                                   bUpdatePathToGoal                                 //0x00B8(0x0001)
  *                                                                   bAbortChildActionOnPathChange                     //0x00B8(0x0001)
};


class PawnAction_Repeat : public PawnAction
{
  PawnAction*                                                         ActionToRepeat                                    //0x0098(0x0008)
  PawnAction*                                                         RecentActionCopy                                  //0x00A0(0x0008)
  EPawnActionFailHandling*                                            ChildFailureHandlingMode                          //0x00A8(0x0001)
};


class PawnAction_Sequence : public PawnAction
{
  ActionSequence*                                                     ActionSequence                                    //0x0098(0x0010)
  EPawnActionFailHandling*                                            ChildFailureHandlingMode                          //0x00A8(0x0001)
  PawnAction*                                                         RecentActionCopy                                  //0x00B0(0x0008)
};


class PawnAction_Wait : public PawnAction
{
  *                                                                   TimeToWait                                        //0x0098(0x0004)
};


class PawnActionsComponent : public ActorComponent
{
  Pawn*                                                               ControlledPawn                                    //0x00B0(0x0008)
  ActionStacks*                                                       ActionStacks                                      //0x00B8(0x0010)
  ActionEvents*                                                       ActionEvents                                      //0x00C8(0x0010)
  PawnAction*                                                         CurrentAction                                     //0x00D8(0x0008)
  NewAction*                                                          K2_PushAction                                     //0x0000(0x0229)
  Pawn*                                                               K2_PerformAction                                  //0x0000(0x0229)
  ActionToAbort*                                                      K2_ForceAbortAction                               //0x0000(0x0229)
  ActionToAbort*                                                      K2_AbortAction                                    //0x0000(0x0229)
};


class PawnSensingComponent : public ActorComponent
{
  *                                                                   HearingThreshold                                  //0x00B0(0x0004)
  *                                                                   LOSHearingThreshold                               //0x00B4(0x0004)
  *                                                                   SightRadius                                       //0x00B8(0x0004)
  *                                                                   SensingInterval                                   //0x00BC(0x0004)
  *                                                                   HearingMaxSoundAge                                //0x00C0(0x0004)
  *                                                                   bEnableSensingUpdates                             //0x00C4(0x0001)
  *                                                                   bOnlySensePlayers                                 //0x00C4(0x0001)
  *                                                                   bSeePawns                                         //0x00C4(0x0001)
  *                                                                   bHearNoises                                       //0x00C4(0x0001)
  SeePawnDelegate__DelegateSignature*                                 OnSeePawn                                         //0x00D0(0x0010)
  HearNoiseDelegate__DelegateSignature*                               OnHearNoise                                       //0x00E0(0x0010)
  *                                                                   PeripheralVisionAngle                             //0x00F0(0x0004)
  *                                                                   PeripheralVisionCosine                            //0x00F4(0x0004)
  *                                                                   SetSensingUpdatesEnabled                          //0x0000(0x0229)
  *                                                                   SetSensingInterval                                //0x0000(0x0229)
  *                                                                   SetPeripheralVisionAngle                          //0x0000(0x0229)
  Pawn*                                                               SeePawnDelegate__DelegateSignature                //0x0000(0x0229)
  Instigator*                                                         HearNoiseDelegate__DelegateSignature              //0x0000(0x0229)
  *                                                                   GetPeripheralVisionCosine                         //0x0000(0x0229)
  *                                                                   GetPeripheralVisionAngle                          //0x0000(0x0229)
};


class VisualLoggerExtension : public Object
{
};


class LuminRuntimeSettings : public Object
{
  *                                                                   PackageName                                       //0x0028(0x0010)
  *                                                                   ApplicationDisplayName                            //0x0038(0x0010)
  *                                                                   bIsScreensApp                                     //0x0048(0x0001)
  UnderlyingType*                                                     FrameTimingHint                                   //0x0049(0x0001)
  *                                                                   bProtectedContent                                 //0x004A(0x0001)
  *                                                                   bUseMobileRendering                               //0x004B(0x0001)
  *                                                                   bUseVulkan                                        //0x004C(0x0001)
  FilePath*                                                           Certificate                                       //0x0050(0x0010)
  DirectoryPath*                                                      IconModelPath                                     //0x0060(0x0010)
  DirectoryPath*                                                      IconPortalPath                                    //0x0070(0x0010)
  *                                                                   VersionCode                                       //0x0080(0x0004)
  *                                                                   MinimumAPILevel                                   //0x0084(0x0004)
  AppPrivileges*                                                      AppPrivileges                                     //0x0088(0x0010)
  ExtraComponentSubElements*                                          ExtraComponentSubElements                         //0x0098(0x0010)
  ExtraComponentElements*                                             ExtraComponentElements                            //0x00A8(0x0010)
  *                                                                   SpatializationPlugin                              //0x00B8(0x0010)
  *                                                                   ReverbPlugin                                      //0x00C8(0x0010)
  *                                                                   OcclusionPlugin                                   //0x00D8(0x0010)
  *                                                                   SoundCueCookQualityIndex                          //0x00E8(0x0004)
  *                                                                   bRemoveDebugInfo                                  //0x00EC(0x0001)
  DirectoryPath*                                                      VulkanValidationLayerLibs                         //0x00F0(0x0010)
  *                                                                   bFrameVignette                                    //0x0100(0x0001)
};


class LiveLinkRole : public Object
{
};


class LiveLinkBasicRole : public LiveLinkRole
{
};


class LiveLinkAnimationRole : public LiveLinkBasicRole
{
};


class LiveLinkTransformRole : public LiveLinkBasicRole
{
};


class LiveLinkCameraRole : public LiveLinkTransformRole
{
};


class LiveLinkController : public Object
{
};


class LiveLinkSourceSettings : public Object
{
  UnderlyingType*                                                     Mode                                              //0x0028(0x0001)
  LiveLinkSourceBufferManagementSettings*                             BufferSettings                                    //0x002C(0x0030)
  *                                                                   ConnectionString                                  //0x0060(0x0010)
  Class*                                                              Factory                                           //0x0070(0x0008)
};


class LiveLinkCurveRemapSettings : public LiveLinkSourceSettings
{
  LiveLinkCurveConversionSettings*                                    CurveConversionSettings                           //0x0078(0x0050)
};


class LiveLinkFrameInterpolationProcessor : public Object
{
};


class LiveLinkFramePreProcessor : public Object
{
};


class LiveLinkFrameTranslator : public Object
{
};


class LiveLinkLightRole : public LiveLinkTransformRole
{
};


class LiveLinkSubjectSettings : public Object
{
  PreProcessors*                                                      PreProcessors                                     //0x0028(0x0010)
  LiveLinkFrameInterpolationProcessor*                                InterpolationProcessor                            //0x0038(0x0008)
  Translators*                                                        Translators                                       //0x0040(0x0010)
  Class*                                                              Role                                              //0x0050(0x0008)
};


class LiveLinkVirtualSubject : public Object
{
  Class*                                                              Role                                              //0x0030(0x0008)
  Subjects*                                                           Subjects                                          //0x0038(0x0010)
  FrameTranslators*                                                   FrameTranslators                                  //0x0048(0x0010)
};


class Default__Class
{
};


class Default__DynamicClass
{
};


class Default__LinkerPlaceholderClass
{
};


class Default__BlueprintGeneratedClass
{
};


class DmgTypeBP_Environmental_C : public DamageType
{
};


class BPI_Get_GUIs_C : public Interface
{
  *                                                                   removeSpawnScreen                                 //0x0000(0x0229)
  *                                                                   removeSpawnPrompt                                 //0x0000(0x0229)
  *                                                                   Create Respawn Prompt                             //0x0000(0x0229)
  *                                                                   Create CombatBase                                 //0x0000(0x0229)
  Widget*                                                             PLAYER_GET_CUR_WIDGET                             //0x0000(0x0229)
  Widget*                                                             PLAYER_CUR_WIDGET_SWITCH                          //0x0000(0x0229)
  *                                                                   Open Pause Menu                                   //0x0000(0x0229)
  *                                                                   Open Spawn Menu                                   //0x0000(0x0229)
  *                                                                   Open Options Menu                                 //0x0000(0x0229)
  *                                                                   Open Customize Menu                               //0x0000(0x0229)
  UserWidget*                                                         Get Combat Base                                   //0x0000(0x0229)
};


class MVP_Camera_Blueprint_C : public CameraActor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0780(0x0008)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  CallFunc_GetPlayerPawn_ReturnValue*                                 ExecuteUbergraph_MVP_Camera_Blueprint             //0x0000(0x0229)
};


class BPFL_Achievements_C : public BlueprintFunctionLibrary
{
  Achievements*                                                       Achievement Write                                 //0x0000(0x0229)
  Achievements*                                                       Achievement Read                                  //0x0000(0x0229)
};


class OptionsSaveData_C : public SaveGame
{
  *                                                                   musicVolume                                       //0x0028(0x0004)
  *                                                                   effectsVolume                                     //0x002C(0x0004)
  *                                                                   disableTutorials?                                 //0x0030(0x0001)
  *                                                                   invertH                                           //0x0031(0x0001)
  *                                                                   invertV                                           //0x0032(0x0001)
  EWindowMode*                                                        savedWindowMode                                   //0x0033(0x0001)
  gameResolutions*                                                    savedVideoRes                                     //0x0034(0x0001)
  QualityLevels*                                                      TextureQuality                                    //0x0035(0x0001)
  QualityLevels*                                                      ShadowQuality                                     //0x0036(0x0001)
  QualityLevels*                                                      AntiAliasQuality                                  //0x0037(0x0001)
  QualityLevels*                                                      VisualEffectsQuality                              //0x0038(0x0001)
  *                                                                   voiceVolume                                       //0x003C(0x0004)
  *                                                                   lookspeed                                         //0x0040(0x0004)
  *                                                                   ambienceVolume                                    //0x0044(0x0004)
  *                                                                   FPSLimit                                          //0x0048(0x0004)
  *                                                                   Resolution Scale Save                             //0x004C(0x0004)
  *                                                                   Vsync                                             //0x0050(0x0001)
  *                                                                   ScopeSpeed                                        //0x0054(0x0004)
};


class puzzleWeight_C : public ActorComponent
{
  *                                                                   Weight                                            //0x00B0(0x0004)
};


class Achievements_Save_C : public SaveGame
{
  SavedAchievements*                                                  SavedAchievements                                 //0x0028(0x0010)
};


class BPFL_Widget_Splitscreen_C : public BlueprintFunctionLibrary
{
  FO Player Controller*                                               setLocalowner                                     //0x0000(0x0229)
};


class DamageType_Base_C : public DamageType
{
  DamageTypes*                                                        DamageTypes                                       //0x0040(0x0001)
  *                                                                   HealAmount                                        //0x0044(0x0004)
  SlateBrushAsset*                                                    DamageIcon                                        //0x0048(0x0008)
  Class*                                                              DoT                                               //0x0050(0x0008)
};


class DT_Rifle_Dalton_C : public DamageType_Base_C
{
};


class DT_Grapple_C : public DamageType_Base_C
{
};


class DT_Unarmed_C : public DamageType_Base_C
{
};


class DT_Dagger_C : public DamageType_Base_C
{
};


class DT_AoE_Poison_C : public DamageType_Base_C
{
};


class DT_Rocket_C : public DamageType_Base_C
{
};


class DT_TNT_C : public DamageType_Base_C
{
};


class DT_Pistol_C : public DamageType_Base_C
{
};


class DT_Sweeper_C : public DamageType_Base_C
{
};


class DT_Vamp_C : public DamageType_Base_C
{
};


class DT_Pick_C : public DamageType_Base_C
{
};


class DT_Heal_C : public DamageType_Base_C
{
};


class DT_BrushOff_C : public DamageType_Base_C
{
};


class BP_DoT_Effect_Damage_Over_Time_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   Damage Tick                                       //0x0000(0x0229)
  *                                                                   3 Second Dot                                      //0x0000(0x0229)
  *                                                                   6 second dot                                      //0x0000(0x0229)
  *                                                                   10 second dot                                     //0x0000(0x0229)
  *                                                                   Expire                                            //0x0000(0x0229)
  Component*                                                          BndEvt__Trail_K2Node_ComponentBoundEvent_0_ActorComponentDeactivateSignature__DelegateSignature//0x0000(0x0229)
  *                                                                   Revert Weakness                                   //0x0000(0x0229)
  *                                                                   Apply Weakness Event                              //0x0000(0x0229)
  *                                                                   Timer                                             //0x0000(0x0229)
  *                                                                   earlyEnd                                          //0x0000(0x0229)
  *                                                                   DamageTickEvent                                   //0x0000(0x0229)
  *                                                                   DurationStart                                     //0x0000(0x0229)
  *                                                                   EndDuration                                       //0x0000(0x0229)
  *                                                                   OwnerCharacterDied                                //0x0000(0x0229)
  K2Node_CreateDelegate_OutputDelegate*                               ExecuteUbergraph_BP_DoT_Effect_Damage_Over_Time   //0x0000(0x0229)
  *                                                                   DoT_Ended__DelegateSignature                      //0x0000(0x0229)
  ParticleSystemComponent*                                            trail                                             //0x0220(0x0008)
  ParticleSystemComponent*                                            ParticleSystem                                    //0x0228(0x0008)
  SceneComponent*                                                     DefaultSceneRoot                                  //0x0230(0x0008)
  Actor*                                                              Damage Causer                                     //0x0238(0x0008)
  Original Resist*                                                    Original Resist                                   //0x0240(0x0050)
  BP_PlayerCharacter_C*                                               Player                                            //0x0290(0x0008)
  New Resists*                                                        New Resists                                       //0x0298(0x0050)
  *                                                                   DamagePerTick                                     //0x02E8(0x0004)
  Class*                                                              Damage Type                                       //0x02F0(0x0008)
  ParticleSystem*                                                     Particle                                          //0x02F8(0x0008)
  *                                                                   Particle?                                         //0x0300(0x0001)
  *                                                                   10 sec dot                                        //0x0301(0x0001)
  *                                                                   SlowDot?                                          //0x0302(0x0001)
  *                                                                   Buff or Debuff                                    //0x0303(0x0001)
  DamageTypes*                                                        Resist to Reduce                                  //0x0304(0x0001)
  *                                                                   Resist Reduction                                  //0x0308(0x0004)
  Vector*                                                             Particle Scale                                    //0x030C(0x000C)
  *                                                                   Ending                                            //0x0318(0x0001)
  Controller*                                                         Instigator Controller                             //0x0320(0x0008)
  DoT_Ended__DelegateSignature*                                       DoT_Ended                                         //0x0328(0x0010)
  *                                                                   OnFriendly                                        //0x0338(0x0001)
  *                                                                   ReOccuring                                        //0x0339(0x0001)
  *                                                                   SelfGwen                                          //0x033A(0x0001)
  DamageTypes*                                                        GwenResistReduce                                  //0x033B(0x0001)
  *                                                                   GwenResistFloat                                   //0x033C(0x0004)
  *                                                                   DoTDuration                                       //0x0340(0x0004)
  TimerHandle*                                                        TickTimer                                         //0x0348(0x0008)
  TimerHandle*                                                        DurationTimer                                     //0x0350(0x0008)
  *                                                                   CustomDuration                                    //0x0358(0x0001)
};


class BP_Headshot_Weakness_C : public BP_DoT_Effect_Damage_Over_Time_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0360(0x0008)
  *                                                                   earlyEnd                                          //0x0229(0x0229)
  *                                                                   ExecuteUbergraph_BP_Headshot_Weakness             //0x0000(0x0229)
};


class BP_Fire_DOT_C : public BP_DoT_Effect_Damage_Over_Time_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0360(0x0008)
  *                                                                   Timer                                             //0x0229(0x0229)
  *                                                                   ExecuteUbergraph_BP_Fire_DOT                      //0x0000(0x0229)
};


class BPI_PlayerBuffs_C : public Interface
{
  *                                                                   GetPlayerDamageBuffs                              //0x0000(0x0229)
};


class BP_FloatingDamageNumber_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  *                                                                   move__FinishedFunc                                //0x0000(0x0229)
  *                                                                   move__UpdateFunc                                  //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   Refresh number                                    //0x0000(0x0229)
  *                                                                   DamageUpdate                                      //0x0000(0x0229)
  *                                                                   Expire Damage Number                              //0x0000(0x0229)
  *                                                                   Close Updates                                     //0x0000(0x0229)
  *                                                                   kill                                              //0x0000(0x0229)
  *                                                                   ReceiveEndPlay                                    //0x0229(0x0229)
  K2Node_CreateDelegate_OutputDelegate*                               ExecuteUbergraph_BP_FloatingDamageNumber          //0x0000(0x0229)
  WidgetComponent*                                                    DamageUI                                          //0x0220(0x0008)
  SceneComponent*                                                     DefaultSceneRoot                                  //0x0228(0x0008)
  *                                                                   move_alpha_D032D2C14815D07E83DCB69957D3C6FA       //0x0230(0x0004)
  ETimelineDirection*                                                 move__Direction_D032D2C14815D07E83DCB69957D3C6FA  //0x0234(0x0001)
  TimelineComponent*                                                  move                                              //0x0238(0x0008)
  Vector*                                                             StartLoc                                          //0x0240(0x000C)
  *                                                                   Damage                                            //0x024C(0x0004)
  TimerHandle*                                                        ExpireTimer                                       //0x0250(0x0008)
  *                                                                   stackCounter                                      //0x0258(0x0004)
  *                                                                   Updateable                                        //0x025C(0x0001)
};


class Action_Base_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   Action Start                                      //0x0000(0x0229)
  *                                                                   Action End                                        //0x0000(0x0229)
  K2Node_CreateDelegate_OutputDelegate*                               ExecuteUbergraph_Action_Base                      //0x0000(0x0229)
  SceneComponent*                                                     DefaultSceneRoot                                  //0x0220(0x0008)
  *                                                                   StartOnSpawn                                      //0x0228(0x0001)
  *                                                                   DestroyOnFinish                                   //0x0229(0x0001)
  *                                                                   DelayFinish                                       //0x022C(0x0004)
  TimerHandle*                                                        ActionDespawnTimer                                //0x0230(0x0008)
  *                                                                   ActionComplete                                    //0x0238(0x0001)
  *                                                                   Description                                       //0x0240(0x0010)
  Texture2D*                                                          ActionImage                                       //0x0250(0x0028)
};


class KillSounder_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   ExecuteUbergraph_KillSounder                      //0x0000(0x0229)
  SceneComponent*                                                     DefaultSceneRoot                                  //0x0220(0x0008)
  SoundBase*                                                          SoundToPlay                                       //0x0228(0x0008)
};


class mainMenu_Camera_C : public CameraActor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0780(0x0008)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   ExecuteUbergraph_mainMenu_Camera                  //0x0000(0x0229)
};


class BPI_Player_Spawning_C : public Interface
{
  *                                                                   Request Spawn                                     //0x0000(0x0229)
};


class BP_VOIPInterface_C : public Interface
{
  WidgetVoiceRef*                                                     MSG_GetWidgetVoice                                //0x0000(0x0229)
  *                                                                   MSG_SetIsVOIPActivated                            //0x0000(0x0229)
  *                                                                   MSG_GetIsMuted                                    //0x0000(0x0229)
  *                                                                   MSG_SetMute                                       //0x0000(0x0229)
  *                                                                   MSG_GetPlayerUsername                             //0x0000(0x0229)
  *                                                                   MSG_SetVisibilityVOIPIcon                         //0x0000(0x0229)
  *                                                                   MSG_GetIsVOIPActivated                            //0x0000(0x0229)
};


class BP_AntizeChatInterface_C : public Interface
{
  *                                                                   MSG_PlayEmote                                     //0x0000(0x0229)
  *                                                                   MSG_SetTeamID                                     //0x0000(0x0229)
  *                                                                   MSG_GetTeamID                                     //0x0000(0x0229)
  *                                                                   MSG_GetUsername                                   //0x0000(0x0229)
  *                                                                   MSG_GetPlayerIDFromUsername                       //0x0000(0x0229)
  *                                                                   MSG_RequestPrivateMessage                         //0x0000(0x0229)
  *                                                                   MSG_GetPlayerID                                   //0x0000(0x0229)
  *                                                                   MSG_SetPlayerID                                   //0x0000(0x0229)
  players*                                                            MSG_GetConnectedPlayers                           //0x0000(0x0229)
  *                                                                   MSG_NewMessage                                    //0x0000(0x0229)
};


class outline_controller_C : public ActorComponent
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x00B0(0x0008)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   outlineCheck                                      //0x0000(0x0229)
  CallFunc_GetOwner_ReturnValue*                                      ExecuteUbergraph_outline_controller               //0x0000(0x0229)
};


class ButtonHint_Offset_C : public SceneComponent
{
  buttonPrompts*                                                      Button Prompt                                     //0x01F0(0x0001)
  Weapon_CrosshairTypes*                                              inventory_icon_Hint                               //0x01F1(0x0001)
};


class BPI_GetPlayerInfo_C : public Interface
{
  CurrentWeapon*                                                      GetCurrentWeapon                                  //0x0000(0x0229)
};


class BP_MainMenu_HUD_C : public HUD
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0308(0x0008)
  UserWidget*                                                         Get Combat Base                                   //0x0000(0x0229)
  Widget*                                                             PLAYER_CUR_WIDGET_SWITCH                          //0x0000(0x0229)
  Widget*                                                             PLAYER_GET_CUR_WIDGET                             //0x0000(0x0229)
  *                                                                   Open Customize Menu                               //0x0000(0x0229)
  *                                                                   Open Spawn Menu                                   //0x0000(0x0229)
  *                                                                   Open Pause Menu                                   //0x0000(0x0229)
  *                                                                   Create CombatBase                                 //0x0000(0x0229)
  *                                                                   Create Respawn Prompt                             //0x0000(0x0229)
  *                                                                   removeSpawnPrompt                                 //0x0000(0x0229)
  *                                                                   removeSpawnScreen                                 //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   Initialize Clients                                //0x0000(0x0229)
  OwningPlayer*                                                       Create MainMenu                                   //0x0000(0x0229)
  OwningPlayer*                                                       Create Customize                                  //0x0000(0x0229)
  OwningPlayer*                                                       Create Credits                                    //0x0000(0x0229)
  Owning Player*                                                      Create Shop                                       //0x0000(0x0229)
  OwningPlayer*                                                       Create Reward Container                           //0x0000(0x0229)
  Achievement*                                                        Toast Achievement                                 //0x0000(0x0229)
  *                                                                   Open Options Menu                                 //0x0000(0x0229)
  *                                                                   Remove Options                                    //0x0000(0x0229)
  CallFunc_Create_ReturnValue*                                        ExecuteUbergraph_BP_MainMenu_HUD                  //0x0000(0x0229)
  SceneComponent*                                                     DefaultSceneRoot                                  //0x0310(0x0008)
  Class*                                                              CombatBase                                        //0x0318(0x0008)
  UserWidget*                                                         CombatBaseWidget                                  //0x0320(0x0008)
  PlayerList_C*                                                       ScoreBoard                                        //0x0328(0x0008)
  KillFeed_C*                                                         KillFeed                                          //0x0330(0x0008)
  SpawnScreen_C*                                                      SpawnScreen                                       //0x0338(0x0008)
  Main_menu_C*                                                        MainMenuWidget                                    //0x0340(0x0008)
  Customize_Menu_C*                                                   customizeWidget                                   //0x0348(0x0008)
  Credits_C*                                                          creditsWidget                                     //0x0350(0x0008)
  Shop_Menu_C*                                                        Shop Widget                                       //0x0358(0x0008)
  Fullscreen_POPUP_Container_C*                                       PopUp_Container                                   //0x0360(0x0008)
  Fullscreen_Achievement_Container_C*                                 AchievementFullScreen                             //0x0368(0x0008)
  UserWidget*                                                         CURRENT_WIDGET                                    //0x0370(0x0008)
  Options_Menu_v3_C*                                                  optionsMenu                                       //0x0378(0x0008)
};


class MultiplayerName_Save_C : public SaveGame
{
  *                                                                   MultiplayerCustomName                             //0x0028(0x0018)
  CustomColor*                                                        FavoriteColor                                     //0x0040(0x000C)
  ColorPerCharacter*                                                  ColorPerCharacter                                 //0x0050(0x0050)
};


class Paper_Shop_Purchases_Save_C : public SaveGame
{
  *                                                                   Paper_Money                                       //0x0028(0x0004)
  Dalton Owned Outfits SAVE*                                          Dalton Owned Outfits SAVE                         //0x0030(0x0050)
  Camille Owned Outfits SAVE*                                         Camille Owned Outfits SAVE                        //0x0080(0x0050)
  Friday Owned Outfits SAVE*                                          Friday Owned Outfits SAVE                         //0x00D0(0x0050)
  Abigail Owned Outfits SAVE*                                         Abigail Owned Outfits SAVE                        //0x0120(0x0050)
  Bingo Owned Outfits SAVE*                                           Bingo Owned Outfits SAVE                          //0x0170(0x0050)
  Blaise Owned Outfits SAVE*                                          Blaise Owned Outfits SAVE                         //0x01C0(0x0050)
  Charlie Owned Outfits SAVE*                                         Charlie Owned Outfits SAVE                        //0x0210(0x0050)
  Hemlock Owned Outfits SAVE*                                         Hemlock Owned Outfits SAVE                        //0x0260(0x0050)
  Palettes_Owned SAVE*                                                Palettes_Owned SAVE                               //0x02B0(0x0050)
  Falcon Owned Outfits SAVE*                                          Falcon Owned Outfits SAVE                         //0x0300(0x0050)
  Gwen Owned Outfits SAVE*                                            Gwen Owned Outfits SAVE                           //0x0350(0x0050)
};


class Customize_SaveData_C : public SaveGame
{
  Dalton_Outfits*                                                     favorite-Dalton                                   //0x0028(0x0001)
  Camille_Outfits*                                                    favorite-Camille                                  //0x0029(0x0001)
  Friday_Outfits*                                                     favorite-Friday                                   //0x002A(0x0001)
  Abigail_Outfits*                                                    favorite-Abigail                                  //0x002B(0x0001)
  Blaise_Outfits*                                                     favorite-Blaise                                   //0x002C(0x0001)
  Bingo_Outfits*                                                      favorite-Bingo                                    //0x002D(0x0001)
  Hemlock_Outfits*                                                    favorite-Hemlock                                  //0x002E(0x0001)
  Charlie_Outfits*                                                    favorite-Charlie                                  //0x002F(0x0001)
  Falcon_Outfits*                                                     favorite-Falcon                                   //0x0030(0x0001)
  Gwen_Outfits*                                                       favorite-Gwen                                     //0x0031(0x0001)
};


class Free_Look_Actor_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  *                                                                   ReceiveTick                                       //0x0229(0x0229)
  PC*                                                                 K2_OnEndViewTarget                                //0x0229(0x0229)
  PC*                                                                 K2_OnBecomeViewTarget                             //0x0229(0x0229)
  CallFunc_GetOwner_ReturnValue*                                      ExecuteUbergraph_Free_Look_Actor                  //0x0000(0x0229)
  CameraComponent*                                                    TPCamera                                          //0x0220(0x0008)
  SpringArmComponent*                                                 SpringArm                                         //0x0228(0x0008)
  SceneComponent*                                                     DefaultSceneRoot                                  //0x0230(0x0008)
  PlayerController*                                                   PlayerController                                  //0x0238(0x0008)
};


class BP_CircleDamageIndicatorComponent_C : public ActorComponent
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x00B0(0x0008)
  IndicatorIn*                                                        CustomSettings                                    //0x0000(0x0229)
  Indicator*                                                          NearDamage                                        //0x0000(0x0229)
  Indicator*                                                          CalculateAngle                                    //0x0000(0x0229)
  Indicator*                                                          RemoveIndicator                                   //0x0000(0x0229)
  CallFunc_Create_ReturnValue*                                        DmgTaken                                          //0x0000(0x0229)
  *                                                                   ReceiveTick                                       //0x0229(0x0229)
  CallFunc_Array_Get_Item*                                            ExecuteUbergraph_BP_CircleDamageIndicatorComponent//0x0000(0x0229)
  *                                                                   Dynamic                                           //0x00B8(0x0001)
  PointDamageIndicators*                                              PointDamageIndicators                             //0x00C0(0x0010)
  *                                                                   DisappearanceSpeed                                //0x00D0(0x0004)
  LinearColor*                                                        Color                                             //0x00D4(0x0010)
  Texture2D*                                                          PointIndicator                                    //0x00E8(0x0008)
  *                                                                   NearDamageDistance                                //0x00F0(0x0004)
  Texture2D*                                                          NearIndicator                                     //0x00F8(0x0008)
  *                                                                   UIScale                                           //0x0100(0x0004)
  Vector2D*                                                           ScreenOffset                                      //0x0104(0x0008)
  Vector2D*                                                           IndicatorSpriteOffset                             //0x010C(0x0008)
  Vector2D*                                                           IndicatorSpriteSize                               //0x0114(0x0008)
  Vector2D*                                                           NearIndicatorSpriteSize                           //0x011C(0x0008)
};


class Fadeout_GameInstance_C : public AdvancedFriendsGameInstance
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x01E8(0x0008)
  PlayerStates*                                                       Check Admins                                      //0x0000(0x0229)
  CallFunc_Achievement_Read__achievement*                             checkHiddenCamilles                               //0x0000(0x0229)
  cheevs*                                                             ResetAchievement                                  //0x0000(0x0229)
  CallFunc_CreateSaveGameObject_ReturnValue*                          SaveAchievements                                  //0x0000(0x0229)
  curCleanAchievement*                                                LoadAchievements                                  //0x0000(0x0229)
  CallFunc_Achievement_Read__achievement*                             ForceAchievement                                  //0x0000(0x0229)
  CallFunc_Achievement_Read__achievement*                             ProgressAchievement                               //0x0000(0x0229)
  CallFunc_GetPlayerController_ReturnValue*                           Update Server CVar                                //0x0000(0x0229)
  CallFunc_OpenFile_ReturnValue*                                      Update Config Full                                //0x0000(0x0229)
  CallFunc_Map_Find_Value*                                            SetPaletteOwned                                   //0x0000(0x0229)
  *                                                                   ChangeServerPort                                  //0x0000(0x0229)
  CallFunc_CreatePlayer_ReturnValue*                                  Local Player Initialize                           //0x0000(0x0229)
  *                                                                   Am I A Server?                                    //0x0000(0x0229)
  Instanced Owned*                                                    Instanced Outfit Loading                          //0x0000(0x0229)
  CallFunc_GetPlayerPawn_ReturnValue*                                 UpdateControlOptions                              //0x0000(0x0229)
  *                                                                   UI Error Sound                                    //0x0000(0x0229)
  CallFunc_Map_Find_Value*                                            SetOutfitOwned                                    //0x0000(0x0229)
  *                                                                   MoneyFunction                                     //0x0000(0x0229)
  CallFunc_CreateSaveGameObject_ReturnValue*                          Save Purchases                                    //0x0000(0x0229)
  CallFunc_Map_Find_Value*                                            Load Purchases                                    //0x0000(0x0229)
  *                                                                   OnFailure_2C7AAF1B45DCB418ED7A6C8C9E2E6B0B        //0x0000(0x0229)
  *                                                                   OnSuccess_2C7AAF1B45DCB418ED7A6C8C9E2E6B0B        //0x0000(0x0229)
  *                                                                   OnFailure_6C0F2A064A0994E7BED9D395FDE85646        //0x0000(0x0229)
  *                                                                   OnSuccess_6C0F2A064A0994E7BED9D395FDE85646        //0x0000(0x0229)
  *                                                                   OnFailure_B35632A44F7E54E1A74CA58A649BE503        //0x0000(0x0229)
  *                                                                   OnSuccess_B35632A44F7E54E1A74CA58A649BE503        //0x0000(0x0229)
  *                                                                   OnFailure_93DE42D148DAB893F0E4C992E73E78AB        //0x0000(0x0229)
  *                                                                   OnSuccess_93DE42D148DAB893F0E4C992E73E78AB        //0x0000(0x0229)
  Achievement*                                                        AchievementWatch                                  //0x0000(0x0229)
  *                                                                   Achievement Sys Initialize                        //0x0000(0x0229)
  *                                                                   Check Camilles Meta                               //0x0000(0x0229)
  *                                                                   POST Event                                        //0x0000(0x0229)
  Request*                                                            requestFail                                       //0x0000(0x0229)
  Request*                                                            postSuccess                                       //0x0000(0x0229)
  *                                                                   ReceiveInit                                       //0x0229(0x0229)
  *                                                                   Change Music Volume                               //0x0000(0x0229)
  *                                                                   Change Effects Voume                              //0x0000(0x0229)
  *                                                                   saveOptions                                       //0x0000(0x0229)
  *                                                                   loadOptions                                       //0x0000(0x0229)
  *                                                                   applyVideoSettings                                //0x0000(0x0229)
  *                                                                   Save Custom Name                                  //0x0000(0x0229)
  *                                                                   Load Custom Name                                  //0x0000(0x0229)
  InputPin*                                                           Quality Set                                       //0x0000(0x0229)
  *                                                                   Change Voice Volume                               //0x0000(0x0229)
  *                                                                   Save Outfits                                      //0x0000(0x0229)
  *                                                                   load outfits                                      //0x0000(0x0229)
  *                                                                   Add Server to Steam                               //0x0000(0x0229)
  *                                                                   Update Steam Server                               //0x0000(0x0229)
  *                                                                   End Session                                       //0x0000(0x0229)
  *                                                                   OnSessionInviteAccepted                           //0x0229(0x0229)
  *                                                                   SetAmbienceVolume                                 //0x0000(0x0229)
  *                                                                   Load Shop Stuff                                   //0x0000(0x0229)
  Outfit Status*                                                      Purchase Outfit                                   //0x0000(0x0229)
  *                                                                   Yes Button                                        //0x0000(0x0229)
  *                                                                   No Button                                         //0x0000(0x0229)
  *                                                                   Error Popup                                       //0x0000(0x0229)
  *                                                                   Delay save purchase                               //0x0000(0x0229)
  *                                                                   Loading Screen                                    //0x0000(0x0229)
  *                                                                   VoiceVolumeChanged                                //0x0000(0x0229)
  *                                                                   SFXVolumeChanged                                  //0x0000(0x0229)
  *                                                                   MusicVolumeChanged                                //0x0000(0x0229)
  *                                                                   AmbientVolumeChanged                              //0x0000(0x0229)
  *                                                                   CameraInvertHChanged                              //0x0000(0x0229)
  *                                                                   CameraInvertVChanged                              //0x0000(0x0229)
  *                                                                   DisableTutorialChanged                            //0x0000(0x0229)
  *                                                                   LookSpeedChanged                                  //0x0000(0x0229)
  File*                                                               InitConfigFile                                    //0x0000(0x0229)
  *                                                                   Add Admin                                         //0x0000(0x0229)
  *                                                                   Garbage Collect                                   //0x0000(0x0229)
  *                                                                   Set Master Volume                                 //0x0000(0x0229)
  *                                                                   MasterVolumeChanged                               //0x0000(0x0229)
  *                                                                   SplitScreenPlayers Changed                        //0x0000(0x0229)
  *                                                                   HideChatSetting                                   //0x0000(0x0229)
  *                                                                   Check DLC                                         //0x0000(0x0229)
  *                                                                   ADSright                                          //0x0000(0x0229)
  *                                                                   SeenMainMenuIntro                                 //0x0000(0x0229)
  *                                                                   Kicked Message                                    //0x0000(0x0229)
  *                                                                   Update Banned list                                //0x0000(0x0229)
  *                                                                   CenterCam                                         //0x0000(0x0229)
  *                                                                   FOV_Setting                                       //0x0000(0x0229)
  Outfit_Status*                                                      Purchase Palette                                  //0x0000(0x0229)
  *                                                                   Yes Palette Purchase                              //0x0000(0x0229)
  *                                                                   No Palette Purchase                               //0x0000(0x0229)
  *                                                                   Update Server File                                //0x0000(0x0229)
  *                                                                   VOIPVolumeChanged                                 //0x0000(0x0229)
  *                                                                   Fix Server Max Players                            //0x0000(0x0229)
  *                                                                   ScopedSpeedChanged                                //0x0000(0x0229)
  *                                                                   DisableBlockCrosshairSetting                      //0x0000(0x0229)
  *                                                                   Tick_AdminCheck                                   //0x0000(0x0229)
  K2Node_CreateDelegate_OutputDelegate*                               ExecuteUbergraph_Fadeout_GameInstance             //0x0000(0x0229)
  Achievement*                                                        Achievement Earned__DelegateSignature             //0x0000(0x0229)
  *                                                                   Money Changed__DelegateSignature                  //0x0000(0x0229)
  *                                                                   Music Volume                                      //0x01F0(0x0004)
  *                                                                   Effects Voume                                     //0x01F4(0x0004)
  *                                                                   numberOfPlayers                                   //0x01F8(0x0004)
  *                                                                   Disable Tutorials?                                //0x01FC(0x0001)
  SaveSlots*                                                          ChosenSaveSlot                                    //0x01FD(0x0001)
  *                                                                   invertH                                           //0x01FE(0x0001)
  *                                                                   invertV                                           //0x01FF(0x0001)
  OptionsSaveData_C*                                                  save_ref                                          //0x0200(0x0008)
  gameResolutions*                                                    gameVideoResolution                               //0x0208(0x0001)
  EWindowMode*                                                        gameWindowMode                                    //0x0209(0x0001)
  gameResols*                                                         gameResols                                        //0x0210(0x0050)
  *                                                                   MultiplayerName                                   //0x0260(0x0018)
  MultiplayerName_Save_C*                                             MultiplayerNameSaveData                           //0x0278(0x0008)
  CustomColor*                                                        MultiplayerColor                                  //0x0280(0x000C)
  QualityLevels*                                                      TextureQuality                                    //0x028C(0x0001)
  QualityLevels*                                                      ShadowQuality                                     //0x028D(0x0001)
  QualityLevels*                                                      AntiAliasQuality                                  //0x028E(0x0001)
  QualityLevels*                                                      VisualEffectsQuality                              //0x028F(0x0001)
  *                                                                   Voice Volume                                      //0x0290(0x0004)
  Dalton_Outfits*                                                     daltonOutfit                                      //0x0294(0x0001)
  Camille_Outfits*                                                    camilleOutfit                                     //0x0295(0x0001)
  Friday_Outfits*                                                     fridayOutfit                                      //0x0296(0x0001)
  *                                                                   lookspeed                                         //0x0298(0x0004)
  ServerSettings*                                                     ServerSettings                                    //0x02A0(0x0010)
  *                                                                   ServerMaxPlayers                                  //0x02B0(0x0004)
  *                                                                   ServerLAN?                                        //0x02B4(0x0001)
  *                                                                   Ambience Volume                                   //0x02B8(0x0004)
  *                                                                   FPSLimit                                          //0x02BC(0x0004)
  Abigail_Outfits*                                                    AbigailOutfit                                     //0x02C0(0x0001)
  Blaise_Outfits*                                                     BlaiseOutfit                                      //0x02C1(0x0001)
  Bingo_Outfits*                                                      BingoOutfit                                       //0x02C2(0x0001)
  *                                                                   Resolution Scale                                  //0x02C4(0x0004)
  Charlie_Outfits*                                                    CharlieOutfit                                     //0x02C8(0x0001)
  *                                                                   Paper_Money                                       //0x02CC(0x0004)
  Hemlock_Outfits*                                                    HemlockOutfit                                     //0x02D0(0x0001)
  Dalton Owned Outfits*                                               Dalton Owned Outfits                              //0x02D8(0x0050)
  Camille Owned Outfits*                                              Camille Owned Outfits                             //0x0328(0x0050)
  Friday Owned Outfits*                                               Friday Owned Outfits                              //0x0378(0x0050)
  Abigail Owned Outfits*                                              Abigail Owned Outfits                             //0x03C8(0x0050)
  Bingo Owned Outfits*                                                Bingo Owned Outfits                               //0x0418(0x0050)
  Blaise Owned Outfits*                                               Blaise Owned Outfits                              //0x0468(0x0050)
  Charlie Owned Outfits*                                              Charlie Owned Outfits                             //0x04B8(0x0050)
  Hemlock Owned Outfits*                                              Hemlock Owned Outfits                             //0x0508(0x0050)
  Money Changed__DelegateSignature*                                   Money Changed                                     //0x0558(0x0010)
  Confirm_Purchase_PopUP_C*                                           FullScreenPopUp                                   //0x0568(0x0008)
  *                                                                   Cosmetic Pass                                     //0x0570(0x0001)
  *                                                                   CosmeticPass_SteamID                              //0x0574(0x0004)
  *                                                                   Vsync                                             //0x0578(0x0001)
  *                                                                   DedicatedServer?                                  //0x0579(0x0001)
  Loading_Screen_C*                                                   LoadingScreen                                     //0x0580(0x0008)
  *                                                                   ServerMapName                                     //0x0588(0x0010)
  *                                                                   ServerGameName                                    //0x0598(0x0010)
  *                                                                   ServerRespawnTime                                 //0x05A8(0x0004)
  DM_GameType*                                                        ServerGameType                                    //0x05AC(0x0001)
  *                                                                   ServerRoundTime                                   //0x05B0(0x0004)
  *                                                                   BuildVersion                                      //0x05B8(0x0010)
  Bingo Outfits READONLY*                                             Bingo Outfits READONLY                            //0x05C8(0x0050)
  Abigail Outfits READONLY*                                           Abigail Outfits READONLY                          //0x0618(0x0050)
  Hemlock Outfits READONLY*                                           Hemlock Outfits READONLY                          //0x0668(0x0050)
  Blaise Outfits READONLY*                                            Blaise Outfits READONLY                           //0x06B8(0x0050)
  Camille Outfits READONLY*                                           Camille Outfits READONLY                          //0x0708(0x0050)
  Charlie Outfits READONLY*                                           Charlie Outfits READONLY                          //0x0758(0x0050)
  Friday Outfits READONLY*                                            Friday Outfits READONLY                           //0x07A8(0x0050)
  Dalton Outfits READONLY*                                            Dalton Outfits READONLY                           //0x07F8(0x0050)
  ServerAdmins*                                                       ServerAdmins                                      //0x0848(0x0010)
  *                                                                   MasterVolume                                      //0x0858(0x0004)
  *                                                                   SplitScreenPlayers                                //0x085C(0x0004)
  LocalplayersArray*                                                  LocalplayersArray                                 //0x0860(0x0010)
  *                                                                   HideChat                                          //0x0870(0x0001)
  *                                                                   ADS_startRight                                    //0x0871(0x0001)
  playerNames*                                                        playerNames                                       //0x0878(0x0010)
  *                                                                   mainMenuIntroSeen                                 //0x0888(0x0001)
  *                                                                   PatreonDLC                                        //0x088C(0x0004)
  *                                                                   PatreonDLC_installed                              //0x0890(0x0001)
  BannedUsers*                                                        BannedUsers                                       //0x0898(0x0010)
  *                                                                   CenterCamMode                                     //0x08A8(0x0001)
  *                                                                   FOV                                               //0x08AC(0x0004)
  Owned Palettes*                                                     Owned Palettes                                    //0x08B0(0x0050)
  Owned Palettes READONLY*                                            Owned Palettes READONLY                           //0x0900(0x0050)
  Falcon Outfits READONLY*                                            Falcon Outfits READONLY                           //0x0950(0x0050)
  Falcon Owned Outfits*                                               Falcon Owned Outfits                              //0x09A0(0x0050)
  Falcon_Outfits*                                                     FalconOutfit                                      //0x09F0(0x0001)
  MapRotation*                                                        MapRotation                                       //0x09F8(0x0010)
  *                                                                   MapRotationEnabled                                //0x0A08(0x0001)
  *                                                                   MapRotationIndex                                  //0x0A0C(0x0004)
  *                                                                   MapRoundLimit                                     //0x0A10(0x0004)
  *                                                                   TeamsLocked                                       //0x0A14(0x0001)
  *                                                                   RANDOMIZER_MODE                                   //0x0A15(0x0001)
  *                                                                   Password                                          //0x0A18(0x0010)
  Joining_Game_Popup_C*                                               joiningGamePopup                                  //0x0A28(0x0008)
  *                                                                   earlyAdopter                                      //0x0A30(0x0001)
  *                                                                   tempWaveModeFlag                                  //0x0A31(0x0001)
  AchievementsReadOnly*                                               AchievementsReadOnly                              //0x0A38(0x0010)
  AchievementsCopy*                                                   AchievementsCopy                                  //0x0A48(0x0010)
  Achievement Earned__DelegateSignature*                              Achievement Earned                                //0x0A58(0x0010)
  *                                                                   waveModeDifficulty                                //0x0A68(0x0004)
  *                                                                   seenIntro                                         //0x0A6C(0x0001)
  *                                                                   ScopeSpeed                                        //0x0A70(0x0004)
  *                                                                   hideBlockingCrosshair                             //0x0A74(0x0001)
  CharacterColors*                                                    CharacterColors                                   //0x0A78(0x0050)
  Gwen Outfits READONLY*                                              Gwen Outfits READONLY                             //0x0AC8(0x0050)
  Gwen Owned Outfits*                                                 Gwen Owned Outfits                                //0x0B18(0x0050)
  Gwen_Outfits*                                                       GwenOutfit                                        //0x0B68(0x0001)
  AllowedCharacters*                                                  AllowedCharacters                                 //0x0B70(0x0010)
  tempAllowedCharacters*                                              tempAllowedCharacters                             //0x0B80(0x0010)
  *                                                                   NumberOfBots                                      //0x0B90(0x0004)
  *                                                                   bLoadoutsEnabled                                  //0x0B94(0x0001)
};


class Decorator_LineOfSight_C : public BTDecorator_BlueprintBase
{
  OwnerController*                                                    PerformConditionCheckAI                           //0x0229(0x0229)
  BlackboardKeySelector*                                              BlackboardKey                                     //0x00A0(0x0028)
};


class Decorator_HasWeaponType_C : public BTDecorator_BlueprintBase
{
  OwnerController*                                                    PerformConditionCheckAI                           //0x0229(0x0229)
  WeaponTypes*                                                        WeaponToCheckFor                                  //0x00A0(0x0001)
  *                                                                   foundWeapon                                       //0x00A1(0x0001)
};


class Decorator_HasWeapon_OR_C : public BTDecorator_BlueprintBase
{
  OwnerController*                                                    PerformConditionCheckAI                           //0x0229(0x0229)
  WeaponTypes*                                                        WeaponToCheckFor                                  //0x00A0(0x0001)
  *                                                                   foundWeapon                                       //0x00A1(0x0001)
  WeaponTypes*                                                        WeaponToCheckFor                                  //0x00A2(0x0001)
};


class Decorator_DistanceTo_C : public BTDecorator_BlueprintBase
{
  OwnerController*                                                    PerformConditionCheckAI                           //0x0229(0x0229)
  BlackboardKeySelector*                                              BlackboardKey                                     //0x00A0(0x0028)
  *                                                                   MaxDistance                                       //0x00C8(0x0004)
};


class BP_FloatingName_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  CallFunc_Array_Get_Item*                                            NameColorCheck                                    //0x0000(0x0229)
  CallFunc_GetInstigator_ReturnValue*                                 Set Health Bar                                    //0x0000(0x0229)
  CallFunc_GetPlayerController_ReturnValue*                           AddWidgetComponents                               //0x0000(0x0229)
  CallFunc_GetGameInstance_ReturnValue*                               LocalPlayerCount                                  //0x0000(0x0229)
  CallFunc_GetPlayerController_ReturnValue*                           CameraVisible                                     //0x0000(0x0229)
  CallFunc_GetInstigator_ReturnValue*                                 Own Name Check                                    //0x0000(0x0229)
  CallFunc_Array_Get_Item*                                            Make HP Visible                                   //0x0000(0x0229)
  CallFunc_GetPlayerController_ReturnValue*                           Distance Check                                    //0x0000(0x0229)
  CallFunc_Array_Get_Item*                                            Make Name Visible                                 //0x0000(0x0229)
  CallFunc_GetPlayerController_ReturnValue*                           Team Check                                        //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   Check Name                                        //0x0000(0x0229)
  *                                                                   Name Timer                                        //0x0000(0x0229)
  CallFunc_GetInstigator_ReturnValue*                                 ExecuteUbergraph_BP_FloatingName                  //0x0000(0x0229)
  WidgetComponent*                                                    player_0_NameUI                                   //0x0220(0x0008)
  SceneComponent*                                                     DefaultSceneRoot                                  //0x0228(0x0008)
  *                                                                   Name                                              //0x0230(0x0018)
  SlateColor*                                                         Color                                             //0x0248(0x0028)
  *                                                                   Team                                              //0x0270(0x0010)
  *                                                                   nametime                                          //0x0280(0x0004)
  FO_PlayerState_C*                                                   PlayerState                                       //0x0288(0x0008)
  *                                                                   skipInstigatorCheck                               //0x0290(0x0001)
  *                                                                   valid local players                               //0x0294(0x0004)
  PlayerUIs*                                                          PlayerUIs                                         //0x0298(0x0010)
};


class BP_MVP_Name_C : public BP_FloatingName_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x02A8(0x0008)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  CallFunc_Array_Get_Item*                                            ExecuteUbergraph_BP_MVP_Name                      //0x0000(0x0229)
};


class BP_PatrolTarget_Actor_C : public Actor
{
  SphereComponent*                                                    Sphere1                                           //0x0218(0x0008)
  SceneComponent*                                                     DefaultSceneRoot                                  //0x0220(0x0008)
};


class BP_PatrolPath_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   ExecuteUbergraph_BP_PatrolPath                    //0x0000(0x0229)
  SplineComponent*                                                    Spline                                            //0x0220(0x0008)
  *                                                                   Point Count                                       //0x0228(0x0004)
};


class BP_Spectator_Player_C : public SpectatorPawn
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x02A0(0x0008)
  *                                                                   UserConstructionScript                            //0x0229(0x0229)
  NewController*                                                      ReceivePossessed                                  //0x0229(0x0229)
  *                                                                   ReceiveTick                                       //0x0229(0x0229)
  Object*                                                             Set Audio Listener Client                         //0x0000(0x0229)
  OldController*                                                      ReceiveUnpossessed                                //0x0229(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   Owning Client Achievement                         //0x0000(0x0229)
  CallFunc_GetController_ReturnValue*                                 ExecuteUbergraph_BP_Spectator_Player              //0x0000(0x0229)
  CameraComponent*                                                    SpectatorCamera                                   //0x02A8(0x0008)
  SpringArmComponent*                                                 SpringArm                                         //0x02B0(0x0008)
  SceneComponent*                                                     FollowTarget                                      //0x02B8(0x0008)
  *                                                                   isFollowing                                       //0x02C0(0x0001)
};


class BP_AntizeVOIP_PC_C : public ActorComponent
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x00B0(0x0008)
  *                                                                   CheckForVOIP                                      //0x0000(0x0229)
  *                                                                   ActivateDeactivateVOIP                            //0x0000(0x0229)
  *                                                                   MuteTemplate                                      //0x0000(0x0229)
  *                                                                   SetIsMuted                                        //0x0000(0x0229)
  *                                                                   CreateVOIP                                        //0x0000(0x0229)
  *                                                                   OnDeath                                           //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  CallFunc_GetGameState_ReturnValue*                                  ExecuteUbergraph_BP_AntizeVOIP_PC                 //0x0000(0x0229)
  VOIPTalker*                                                         MyVoiceRef                                        //0x00B8(0x0008)
  *                                                                   VOIPLoopBack?                                     //0x00C0(0x0001)
  PlayerController*                                                   ControllerRef                                     //0x00C8(0x0008)
  *                                                                   Attempt                                           //0x00D0(0x0004)
  TimerHandle*                                                        Timer_CheckForLoop                                //0x00D8(0x0008)
  W_VOIPHUD_C*                                                        W_VOIPHUDRef                                      //0x00E0(0x0008)
  *                                                                   MaxDistanceForVOIPWidget                          //0x00E8(0x0004)
  *                                                                   IsVOIPActivated?                                  //0x00EC(0x0001)
  *                                                                   VOIPIconVisible?                                  //0x00ED(0x0001)
  *                                                                   IsMuted?                                          //0x00EE(0x0001)
};


class Service_SelectTargetActor_C : public BTService_BlueprintBase
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0098(0x0008)
  OwnerController*                                                    ReceiveTickAI                                     //0x0229(0x0229)
  K2Node_Event_OwnerController*                                       ExecuteUbergraph_Service_SelectTargetActor        //0x0000(0x0229)
  BlackboardKeySelector*                                              BlackboardKey                                     //0x00A0(0x0028)
  allied*                                                             allied                                            //0x00C8(0x0010)
  Targets*                                                            Targets                                           //0x00D8(0x0010)
  *                                                                   Player Hostile?                                   //0x00E8(0x0001)
  Actor*                                                              currentClosestTarget                              //0x00F0(0x0008)
  *                                                                   myTeamID                                          //0x00F8(0x0004)
  *                                                                   myPlayerID                                        //0x00FC(0x0004)
  *                                                                   IncTeamID                                         //0x0100(0x0004)
  *                                                                   incPlayerID                                       //0x0104(0x0004)
  *                                                                   bSelf                                             //0x0108(0x0001)
  BlackboardKeySelector*                                              tractor                                           //0x0110(0x0028)
  *                                                                   isWaveSpawn                                       //0x0138(0x0001)
};


class Service_FetchPatrolPoint_C : public BTService_BlueprintBase
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0098(0x0008)
  OwnerController*                                                    ReceiveTickAI                                     //0x0229(0x0229)
  K2Node_Event_OwnerController*                                       ExecuteUbergraph_Service_FetchPatrolPoint         //0x0000(0x0229)
  BlackboardKeySelector*                                              BlackboardKey                                     //0x00A0(0x0028)
};


class Service_targetSprinting_C : public BTService_BlueprintBase
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0098(0x0008)
  OwnerController*                                                    ReceiveTickAI                                     //0x0229(0x0229)
  K2Node_Event_OwnerController*                                       ExecuteUbergraph_Service_targetSprinting          //0x0000(0x0229)
  BlackboardKeySelector*                                              BlackboardKey                                     //0x00A0(0x0028)
  BlackboardKeySelector*                                              targetSprinting?                                  //0x00C8(0x0028)
  BlackboardKeySelector*                                              targetSneaking?                                   //0x00F0(0x0028)
};


class Task_SwitchToUtility_C : public BTTask_BlueprintBase
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x00A8(0x0008)
  OwnerActor*                                                         ReceiveTick                                       //0x0229(0x0229)
  OwnerController*                                                    ReceiveExecuteAI                                  //0x0229(0x0229)
  K2Node_Event_OwnerActor*                                            ExecuteUbergraph_Task_SwitchToUtility             //0x0000(0x0229)
  *                                                                   foundUtilityItem                                  //0x00B0(0x0004)
  shuffledEquip*                                                      shuffledEquip                                     //0x00B8(0x0010)
};


class Task_SwitchToRange_C : public BTTask_BlueprintBase
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x00A8(0x0008)
  OwnerActor*                                                         ReceiveTick                                       //0x0229(0x0229)
  OwnerController*                                                    ReceiveExecuteAI                                  //0x0229(0x0229)
  K2Node_Event_OwnerActor*                                            ExecuteUbergraph_Task_SwitchToRange               //0x0000(0x0229)
  *                                                                   foundRangedItem                                   //0x00B0(0x0004)
  shuffledEquip*                                                      shuffledEquip                                     //0x00B8(0x0010)
};


class Task_SwitchToMelee_C : public BTTask_BlueprintBase
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x00A8(0x0008)
  OwnerController*                                                    ReceiveExecuteAI                                  //0x0229(0x0229)
  K2Node_Event_OwnerController*                                       ExecuteUbergraph_Task_SwitchToMelee               //0x0000(0x0229)
  *                                                                   foundMeleeItem                                    //0x00B0(0x0004)
};


class Task_SwitchToLongRange_C : public BTTask_BlueprintBase
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x00A8(0x0008)
  OwnerActor*                                                         ReceiveTick                                       //0x0229(0x0229)
  OwnerController*                                                    ReceiveExecuteAI                                  //0x0229(0x0229)
  K2Node_Event_OwnerActor*                                            ExecuteUbergraph_Task_SwitchToLongRange           //0x0000(0x0229)
  *                                                                   foundRangedItem                                   //0x00B0(0x0004)
};


class Task_StopShooting_C : public BTTask_BlueprintBase
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x00A8(0x0008)
  OwnerController*                                                    ReceiveExecuteAI                                  //0x0229(0x0229)
  K2Node_Event_OwnerController*                                       ExecuteUbergraph_Task_StopShooting                //0x0000(0x0229)
};


class Task_ShootTarget_C : public BTTask_BlueprintBase
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x00A8(0x0008)
  OwnerController*                                                    ReceiveExecuteAI                                  //0x0229(0x0229)
  K2Node_Event_OwnerController*                                       ExecuteUbergraph_Task_ShootTarget                 //0x0000(0x0229)
};


class Task_MeleeTarget_C : public BTTask_BlueprintBase
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x00A8(0x0008)
  OwnerController*                                                    ReceiveExecuteAI                                  //0x0229(0x0229)
  K2Node_Event_OwnerController*                                       ExecuteUbergraph_Task_MeleeTarget                 //0x0000(0x0229)
  Actor*                                                              targetPlayer                                      //0x00B0(0x0008)
};


class Task_ToSprint_C : public BTTask_BlueprintBase
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x00A8(0x0008)
  OwnerController*                                                    ReceiveExecuteAI                                  //0x0229(0x0229)
  K2Node_Event_OwnerController*                                       ExecuteUbergraph_Task_ToSprint                    //0x0000(0x0229)
  *                                                                   ForwardCheckDistance                              //0x00B0(0x0004)
};


class Task_sneakToggle_C : public BTTask_BlueprintBase
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x00A8(0x0008)
  OwnerController*                                                    ReceiveExecuteAI                                  //0x0229(0x0229)
  K2Node_Event_OwnerController*                                       ExecuteUbergraph_Task_sneakToggle                 //0x0000(0x0229)
  BlackboardKeySelector*                                              toSneak?                                          //0x00B0(0x0028)
};


class Task_RotationOrient_C : public BTTask_BlueprintBase
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x00A8(0x0008)
  OwnerController*                                                    ReceiveExecuteAI                                  //0x0229(0x0229)
  K2Node_Event_OwnerController*                                       ExecuteUbergraph_Task_RotationOrient              //0x0000(0x0229)
  Actor*                                                              targetPlayer                                      //0x00B0(0x0008)
  *                                                                   Orient?                                           //0x00B8(0x0001)
};


class Task_ToWalk_C : public BTTask_BlueprintBase
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x00A8(0x0008)
  OwnerController*                                                    ReceiveExecuteAI                                  //0x0229(0x0229)
  K2Node_Event_OwnerController*                                       ExecuteUbergraph_Task_ToWalk                      //0x0000(0x0229)
};


class FO_TeamAIController_C : public TeamAIController
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0320(0x0008)
  CallFunc_GetGameMode_ReturnValue*                                   Random Character                                  //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   Can I respawn                                     //0x0000(0x0229)
  PossessedPawn*                                                      ReceivePossess                                    //0x0229(0x0229)
  *                                                                   Remove AI Player                                  //0x0000(0x0229)
  *                                                                   Start Spawn Check                                 //0x0000(0x0229)
  CallFunc_GetGameMode_ReturnValue*                                   ExecuteUbergraph_FO_TeamAIController              //0x0000(0x0229)
  *                                                                   RespawnTime                                       //0x0328(0x0004)
  RandomNames*                                                        RandomNames                                       //0x0330(0x0010)
  CharactersSelected*                                                 SpecificCharacter                                 //0x0340(0x0001)
  *                                                                   RandomCharacter                                   //0x0341(0x0001)
  TimerHandle*                                                        RespawnTimerTimer                                 //0x0348(0x0008)
};


class death_weapon_spawner_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  Temp_object_Variable*                                               FindFloor                                         //0x0000(0x0229)
  *                                                                   UserConstructionScript                            //0x0229(0x0229)
  *                                                                   Timeline_0__FinishedFunc                          //0x0000(0x0229)
  *                                                                   Timeline_0__UpdateFunc                            //0x0000(0x0229)
  *                                                                   spawn Weapon                                      //0x0000(0x0229)
  *                                                                   Multicast Part                                    //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   Light Expire Event                                //0x0000(0x0229)
  CallFunc_K2_SetActorTransform_SweepHitResult*                       ExecuteUbergraph_death_weapon_spawner             //0x0000(0x0229)
  PointLightComponent*                                                PointLight                                        //0x0220(0x0008)
  RotatingMovementComponent*                                          RotatingMovement                                  //0x0228(0x0008)
  TextRenderComponent*                                                TextRender                                        //0x0230(0x0008)
  SceneComponent*                                                     DefaultSceneRoot                                  //0x0238(0x0008)
  *                                                                   Timeline_0_NewTrack_0_5359397B463B940167C7DFAFC67E1130//0x0240(0x0004)
  ETimelineDirection*                                                 Timeline_0__Direction_5359397B463B940167C7DFAFC67E1130//0x0244(0x0001)
  TimelineComponent*                                                  Timeline                                          //0x0248(0x0008)
  Class*                                                              Item                                              //0x0250(0x0008)
  BP_weaponBase_C*                                                    spawnersItem                                      //0x0258(0x0008)
  *                                                                   Health Reward                                     //0x0260(0x0004)
  AmmoStruct*                                                         Ammo Reward                                       //0x0264(0x001C)
};


class NavArea_DefendZone_C : public NavArea
{
};


class BP_FireWall_Royale_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  *                                                                   Shrink__FinishedFunc                              //0x0000(0x0229)
  *                                                                   Shrink__UpdateFunc                                //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   Player Check                                      //0x0000(0x0229)
  OverlappedComponent*                                                BndEvt__Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature//0x0000(0x0229)
  OverlappedComponent*                                                BndEvt__Cylinder_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature//0x0000(0x0229)
  *                                                                   Start Shrink                                      //0x0000(0x0229)
  K2Node_CreateDelegate_OutputDelegate*                               ExecuteUbergraph_BP_FireWall_Royale               //0x0000(0x0229)
  StaticMeshComponent*                                                FireWall                                          //0x0220(0x0008)
  SceneComponent*                                                     DefaultSceneRoot                                  //0x0228(0x0008)
  *                                                                   Shrink_alpha_4345C6CC49A98151035C168E0A801A56     //0x0230(0x0004)
  ETimelineDirection*                                                 Shrink__Direction_4345C6CC49A98151035C168E0A801A56//0x0234(0x0001)
  TimelineComponent*                                                  Shrink                                            //0x0238(0x0008)
  Unsafe Players*                                                     Unsafe Players                                    //0x0240(0x0010)
  Vector*                                                             biggest                                           //0x0250(0x000C)
  Vector*                                                             Smallest                                          //0x025C(0x000C)
};


class BP_Dummy_C : public Actor
{
  SceneComponent*                                                     DefaultSceneRoot                                  //0x0218(0x0008)
};


class DT_EnergyBow_Arrow_C : public DT_Heal_C
{
};


class DT_minigun_C : public DamageType_Base_C
{
};


class DT_Wrench_C : public DamageType_Base_C
{
};


class Action_GiveMoveSpeed_10_C : public Action_Base_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0278(0x0008)
  *                                                                   Action Start                                      //0x0229(0x0229)
  CallFunc_GetOwner_ReturnValue*                                      ExecuteUbergraph_Action_GiveMoveSpeed             //0x0000(0x0229)
  Class*                                                              Buff Class                                        //0x0280(0x0008)
  *                                                                   BonusHealth                                       //0x0288(0x0004)
};


class Action_Give_10_RifleAmmo_C : public Action_Base_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0278(0x0008)
  *                                                                   Action Start                                      //0x0229(0x0229)
  CallFunc_GetOwner_ReturnValue*                                      ExecuteUbergraph_Action_Give_10_RifleAmmo         //0x0000(0x0229)
  Class*                                                              Buff Class                                        //0x0280(0x0008)
  *                                                                   BonusHealth                                       //0x0288(0x0004)
};


class Action_BingoSmokePassive_C : public Action_Base_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0278(0x0008)
  *                                                                   Action Start                                      //0x0229(0x0229)
  CallFunc_GetOwner_ReturnValue*                                      ExecuteUbergraph_Action_BingoSmokePassive         //0x0000(0x0229)
  Class*                                                              Buff Class                                        //0x0280(0x0008)
  ImportMaterialQuality*                                              BonusHealth                                       //0x0288(0x0004)
};


class Action_BlaiseFlameSpeedPassive_C : public Action_Base_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0278(0x0008)
  *                                                                   Action Start                                      //0x0229(0x0229)
  Killer Actor*                                                       OwnerDied                                         //0x0000(0x0229)
  DoT*                                                                CustomEvent                                       //0x0000(0x0229)
  K2Node_CreateDelegate_OutputDelegate*                               ExecuteUbergraph_Action_BlaiseFlameSpeedPassive   //0x0000(0x0229)
  Class*                                                              Buff Class                                        //0x0280(0x0008)
  *                                                                   BonusHealth                                       //0x0288(0x0004)
  BP_PlayerCharacter_C*                                               owningCharacter                                   //0x0290(0x0008)
};


class Action_GiveMaxEnergy_20_C : public Action_Base_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0278(0x0008)
  *                                                                   Action Start                                      //0x0229(0x0229)
  CallFunc_GetOwner_ReturnValue*                                      ExecuteUbergraph_Action_GiveMaxEnergy             //0x0000(0x0229)
  Class*                                                              Buff Class                                        //0x0280(0x0008)
  *                                                                   BonusHealth                                       //0x0288(0x0004)
};


class Action_DaltonScopePassive_C : public Action_Base_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0278(0x0008)
  *                                                                   Action Start                                      //0x0229(0x0229)
  CallFunc_GetOwner_ReturnValue*                                      ExecuteUbergraph_Action_DaltonScopePassive        //0x0000(0x0229)
  Class*                                                              Buff Class                                        //0x0280(0x0008)
  *                                                                   BonusHealth                                       //0x0288(0x0004)
};


class DT_BrutalShot_C : public DamageType_Base_C
{
};


class BP_Flag_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  CallFunc_GetOwner_ReturnValue*                                      Flag Announcement                                 //0x0000(0x0229)
  BP_PlayerController*                                                GetPlayerTeam                                     //0x0000(0x0229)
  *                                                                   Timer__FinishedFunc                               //0x0000(0x0229)
  *                                                                   Timer__UpdateFunc                                 //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   ReceiveTick                                       //0x0229(0x0229)
  playerCharacter*                                                    FlagPickup                                        //0x0000(0x0229)
  *                                                                   FlagDrop                                          //0x0000(0x0229)
  OverlappedComponent*                                                BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature//0x0000(0x0229)
  *                                                                   ReturnTimer                                       //0x0000(0x0229)
  *                                                                   CancelReturn                                      //0x0000(0x0229)
  *                                                                   Respawn Flag                                      //0x0000(0x0229)
  DamageType*                                                         ReceiveAnyDamage                                  //0x0229(0x0229)
  *                                                                   DestroySelf                                       //0x0000(0x0229)
  *                                                                   DropFlagCommand                                   //0x0000(0x0229)
  *                                                                   FromHomeTimer                                     //0x0000(0x0229)
  *                                                                   NoAchievement                                     //0x0000(0x0229)
  *                                                                   ValidHolderCheck                                  //0x0000(0x0229)
  *                                                                   Remove Flag Event                                 //0x0000(0x0229)
  *                                                                   DistanceTick                                      //0x0000(0x0229)
  K2Node_CreateDelegate_OutputDelegate*                               ExecuteUbergraph_BP_Flag                          //0x0000(0x0229)
  SceneComponent*                                                     drop_world                                        //0x0220(0x0008)
  WidgetComponent*                                                    FlagIconWidget                                    //0x0228(0x0008)
  PointLightComponent*                                                PointLight                                        //0x0230(0x0008)
  StaticMeshComponent*                                                Pole                                              //0x0238(0x0008)
  BoxComponent*                                                       Box                                               //0x0240(0x0008)
  *                                                                   Timer_time_63B02DD5406077BA92BC8386B45C3C5D       //0x0248(0x0004)
  ETimelineDirection*                                                 Timer__Direction_63B02DD5406077BA92BC8386B45C3C5D //0x024C(0x0001)
  TimelineComponent*                                                  Timer                                             //0x0250(0x0008)
  *                                                                   Team                                              //0x0258(0x0010)
  LinearColor*                                                        redColor                                          //0x0268(0x0010)
  LinearColor*                                                        blueColor                                         //0x0278(0x0010)
  *                                                                   AttachedToPlayer?                                 //0x0288(0x0001)
  BP_PlayerCharacter_C*                                               Carrier                                           //0x0290(0x0008)
  LinearColor*                                                        ChosenColor                                       //0x0298(0x0010)
  *                                                                   ReturnTimeLeft                                    //0x02A8(0x0004)
  Transform*                                                          FlagTransform                                     //0x02B0(0x0030)
  *                                                                   AtHome?                                           //0x02E0(0x0001)
  *                                                                   Detla10                                           //0x02E4(0x0004)
  TimerHandle*                                                        TimeFromHome                                      //0x02E8(0x0008)
  *                                                                   Achievo?                                          //0x02F0(0x0001)
};


class FO_Announcer_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  Controller*                                                         speak multi                                       //0x0000(0x0229)
  *                                                                   Say FREE FOR ALL                                  //0x0000(0x0229)
  *                                                                   Say Team DM                                       //0x0000(0x0229)
  *                                                                   Say CAPTURE THE FLAG                              //0x0000(0x0229)
  *                                                                   Say KOTH                                          //0x0000(0x0229)
  *                                                                   Say Prison Escape                                 //0x0000(0x0229)
  *                                                                   Say Arena                                         //0x0000(0x0229)
  *                                                                   Say TeamArena                                     //0x0000(0x0229)
  *                                                                   Say Conquest                                      //0x0000(0x0229)
  *                                                                   Say Wave Mode                                     //0x0000(0x0229)
  K2Node_CustomEvent_Controller*                                      ExecuteUbergraph_FO_Announcer                     //0x0000(0x0229)
  SceneComponent*                                                     DefaultSceneRoot                                  //0x0220(0x0008)
  *                                                                   Disabled                                          //0x0228(0x0001)
};


class BP_FlagStand_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  *                                                                   UserConstructionScript                            //0x0229(0x0229)
  *                                                                   ReceiveTick                                       //0x0229(0x0229)
  *                                                                   Spawn Flag                                        //0x0000(0x0229)
  *                                                                   RespawnFlagTimer                                  //0x0000(0x0229)
  *                                                                   Reset Gate                                        //0x0000(0x0229)
  OverlappedComponent*                                                BndEvt__FlagChecker_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature//0x0000(0x0229)
  *                                                                   All Player Announcement                           //0x0000(0x0229)
  PlayerState*                                                        Achievement For 20second Cap                      //0x0000(0x0229)
  Temp_object_Variable*                                               ExecuteUbergraph_BP_FlagStand                     //0x0000(0x0229)
  BoxComponent*                                                       FlagChecker                                       //0x0220(0x0008)
  SceneComponent*                                                     Flag Spawn                                        //0x0228(0x0008)
  StaticMeshComponent*                                                StaticMesh                                        //0x0230(0x0008)
  SceneComponent*                                                     DefaultSceneRoot                                  //0x0238(0x0008)
  *                                                                   Team                                              //0x0240(0x0010)
  LinearColor*                                                        ChosenColor                                       //0x0250(0x0010)
  LinearColor*                                                        blueColor                                         //0x0260(0x0010)
  LinearColor*                                                        redColor                                          //0x0270(0x0010)
  BP_Flag_C*                                                          OwnedFlag                                         //0x0280(0x0008)
  *                                                                   canSpawnFlag?                                     //0x0288(0x0001)
};


class DT_Rifle_C : public DamageType_Base_C
{
};


class DT_Bat_C : public DamageType_Base_C
{
};


class DT_Simp_C : public DamageType_Base_C
{
};


class BP_TeamOwnedThing_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  FO Player State*                                                    IsEnemyToLocal                                    //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   CheckClientTeam                                   //0x0000(0x0229)
  *                                                                   teamChanged                                       //0x0000(0x0229)
  *                                                                   Expired                                           //0x0000(0x0229)
  *                                                                   ExpiredMulti                                      //0x0000(0x0229)
  K2Node_CreateDelegate_OutputDelegate*                               ExecuteUbergraph_BP_TeamOwnedThing                //0x0000(0x0229)
  SceneComponent*                                                     DefaultSceneRoot                                  //0x0220(0x0008)
  *                                                                   OwnersTeam                                        //0x0228(0x0010)
  *                                                                   HostileToYou                                      //0x0238(0x0001)
  *                                                                   LifeTime                                          //0x023C(0x0004)
};


class DT_Turret-Bullet_C : public DamageType_Base_C
{
};


class DT_Chi_Launch_C : public DamageType_Base_C
{
};


class DT_KO_Punch_C : public DamageType_Base_C
{
};


class DT_Staff_C : public DamageType_Base_C
{
};


class DT_MachineGun_C : public DamageType_Base_C
{
};


class BPI_BotInteractions_C : public Interface
{
  CharacterPawn*                                                      TeleportButtonSignal                              //0x0000(0x0229)
};


class NavQ_WaveAlly_Defend_C : public NavigationQueryFilter
{
};


class BP_AI_Zone_C : public Actor
{
  BoxComponent*                                                       Box                                               //0x0218(0x0008)
  AiZoneType*                                                         AiZoneType                                        //0x0220(0x0001)
};


class AvoidObstacles_NavFilter_C : public NavFilter_AIControllerDefault
{
};


class DT_Bow_C : public DamageType_Base_C
{
};


class BP_TargetPractice_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  *                                                                   UserConstructionScript                            //0x0229(0x0229)
  *                                                                   Movement__FinishedFunc                            //0x0000(0x0229)
  *                                                                   Movement__UpdateFunc                              //0x0000(0x0229)
  DamageType*                                                         ReceiveAnyDamage                                  //0x0229(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  K2Node_Event_DamageType*                                            ExecuteUbergraph_BP_TargetPractice                //0x0000(0x0229)
  StaticMeshComponent*                                                Inner                                             //0x0220(0x0008)
  PointLightComponent*                                                PointLight                                        //0x0228(0x0008)
  StaticMeshComponent*                                                Outer                                             //0x0230(0x0008)
  StaticMeshComponent*                                                Outer1                                            //0x0238(0x0008)
  StaticMeshComponent*                                                bullseye                                          //0x0240(0x0008)
  SceneComponent*                                                     Offset                                            //0x0248(0x0008)
  SplineComponent*                                                    Spline                                            //0x0250(0x0008)
  SceneComponent*                                                     DefaultSceneRoot                                  //0x0258(0x0008)
  *                                                                   Movement_TimeAlpha_2B7D92DB44012669BD0F7696E3DC0DAD//0x0260(0x0004)
  ETimelineDirection*                                                 Movement__Direction_2B7D92DB44012669BD0F7696E3DC0DAD//0x0264(0x0001)
  TimelineComponent*                                                  Movement                                          //0x0268(0x0008)
  *                                                                   CurPos                                            //0x0270(0x0004)
  *                                                                   Speed                                             //0x0274(0x0004)
};


class BP_Alchemic_Cyclone_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  *                                                                   Scale_Decay__FinishedFunc                         //0x0000(0x0229)
  *                                                                   Scale_Decay__UpdateFunc                           //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  OverlappedComponent*                                                BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature//0x0000(0x0229)
  Object*                                                             Overlap Start                                     //0x0000(0x0229)
  K2Node_ComponentBoundEvent_OverlappedComponent*                     ExecuteUbergraph_BP_Alchemic_Cyclone              //0x0000(0x0229)
  AudioComponent*                                                     Audio                                             //0x0220(0x0008)
  SphereComponent*                                                    Sphere                                            //0x0228(0x0008)
  ParticleSystemComponent*                                            P_ky_storm                                        //0x0230(0x0008)
  SceneComponent*                                                     DefaultSceneRoot                                  //0x0238(0x0008)
  *                                                                   Scale_Decay_Alpha_94C99B4F4ACB61C937E14D90DD1C6D93//0x0240(0x0004)
  ETimelineDirection*                                                 Scale_Decay__Direction_94C99B4F4ACB61C937E14D90DD1C6D93//0x0244(0x0001)
  TimelineComponent*                                                  Scale_Decay                                       //0x0248(0x0008)
  Vector*                                                             starting_scale                                    //0x0250(0x000C)
  AudioComponent*                                                     Sound                                             //0x0260(0x0008)
  *                                                                   TargetHasReoccuringAir                            //0x0268(0x0001)
  *                                                                   bDecay                                            //0x0269(0x0001)
};


class DT_Coil_C : public DamageType_Base_C
{
};


class DT_Earth_Alchemic_C : public DamageType_Base_C
{
};


class BP_Alchemic_Buff_Damage_C : public BP_DoT_Effect_Damage_Over_Time_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0360(0x0008)
  *                                                                   ApplyBuffs                                        //0x0000(0x0229)
  *                                                                   RevertBuffs                                       //0x0000(0x0229)
  *                                                                   Timer                                             //0x0229(0x0229)
  *                                                                   Apply Weakness Event                              //0x0229(0x0229)
  *                                                                   Revert Weakness                                   //0x0229(0x0229)
  *                                                                   Damage Tick                                       //0x0229(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   Display Buff Message                              //0x0000(0x0229)
  *                                                                   earlyEnd                                          //0x0229(0x0229)
  Temp_object_Variable*                                               ExecuteUbergraph_BP_Alchemic_Buff_Damage          //0x0000(0x0229)
  ParticleSystemComponent*                                            DebuffIcon                                        //0x0368(0x0008)
  BUFFS_LIST*                                                         BUFFS_LIST                                        //0x0370(0x0050)
  Gwen_Elements*                                                      THIS_ALCHEMIC_TYPE                                //0x03C0(0x0001)
  SoundBase*                                                          BUFF_Sound                                        //0x03C8(0x0008)
  *                                                                   ShowTrail_OnEnemy                                 //0x03D0(0x0001)
  GwenSpecificBuffs*                                                  GwenSpecificBuffs                                 //0x03D8(0x0050)
  *                                                                   DisplayDebuffWhileActive                          //0x0428(0x0001)
};


class BP_Alchemic_Fire_Buff_C : public BP_Alchemic_Buff_Damage_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0430(0x0008)
  *                                                                   Timer                                             //0x0229(0x0229)
  *                                                                   Apply Weakness Event                              //0x0229(0x0229)
  *                                                                   ExecuteUbergraph_BP_Alchemic_Fire_Buff            //0x0000(0x0229)
};


class BP_Alchemic_Earth_Buff_C : public BP_Alchemic_Buff_Damage_C
{
};


class BP_Alchemic_Bolt_Buff_C : public BP_Alchemic_Buff_Damage_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0430(0x0008)
  *                                                                   Damage Tick                                       //0x0229(0x0229)
  *                                                                   ExecuteUbergraph_BP_Alchemic_Bolt_Buff            //0x0000(0x0229)
};


class BP_Alchemic_Air_Buff_C : public BP_Alchemic_Buff_Damage_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0430(0x0008)
  *                                                                   Apply Weakness Event                              //0x0229(0x0229)
  *                                                                   Revert Weakness                                   //0x0229(0x0229)
  *                                                                   ExecuteUbergraph_BP_Alchemic_Air_Buff             //0x0000(0x0229)
  *                                                                   SpeedBuff_ToGive                                  //0x0438(0x0004)
};


class BP_Blaise_Air_Child_C : public BP_Alchemic_Air_Buff_C
{
};


class Service_FocusPoint_C : public BTService_BlueprintBase
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0098(0x0008)
  OwnerController*                                                    ReceiveTickAI                                     //0x0229(0x0229)
  CallFunc_GetBlackboardValueAsActor_ReturnValue*                     ExecuteUbergraph_Service_FocusPoint               //0x0000(0x0229)
  BlackboardKeySelector*                                              TargetActor                                       //0x00A0(0x0028)
};


class Service_FocusHead_C : public BTService_BlueprintBase
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0098(0x0008)
  OwnerController*                                                    ReceiveTickAI                                     //0x0229(0x0229)
  CallFunc_Array_Get_Item*                                            ExecuteUbergraph_Service_FocusHead                //0x0000(0x0229)
  BlackboardKeySelector*                                              TargetActor                                       //0x00A0(0x0028)
  Bodies*                                                             Bodies                                            //0x00C8(0x0010)
  *                                                                   AccuracySway                                      //0x00D8(0x0004)
  *                                                                   InterpSpeed                                       //0x00DC(0x0004)
};


class Service_Find_PoI_C : public BTService_BlueprintBase
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0098(0x0008)
  You*                                                                FindClosestEnemyCluster                           //0x0000(0x0229)
  CallFunc_GetAllActorsOfClass_OutActors*                             FindEnemyCapturePointPOI                          //0x0000(0x0229)
  OwnerController*                                                    ReceiveTickAI                                     //0x0229(0x0229)
  K2Node_Event_OwnerController*                                       ExecuteUbergraph_Service_Find_PoI                 //0x0000(0x0229)
  BlackboardKeySelector*                                              BlackboardKey                                     //0x00A0(0x0028)
  BlackboardKeySelector*                                              BlackboardKey_TargetActor                         //0x00C8(0x0028)
  Vector*                                                             tractorLoc                                        //0x00F0(0x000C)
  BlackboardKeySelector*                                              tractor                                           //0x0100(0x0028)
};


class BP_SmokeBomb_C : public BP_TeamOwnedThing_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0240(0x0008)
  *                                                                   Timeline_0__FinishedFunc                          //0x0000(0x0229)
  *                                                                   Timeline_0__UpdateFunc                            //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   GrowShrink                                        //0x0000(0x0229)
  *                                                                   ExpiredMulti                                      //0x0229(0x0229)
  *                                                                   CheckClientTeam                                   //0x0229(0x0229)
  Temp_object_Variable*                                               ExecuteUbergraph_BP_SmokeBomb                     //0x0000(0x0229)
  StaticMeshComponent*                                                Sphere                                            //0x0248(0x0008)
  *                                                                   Timeline_0_NewTrack_0_65E132A545CACAA0BA8E6780817F193E//0x0250(0x0004)
  ETimelineDirection*                                                 Timeline_0__Direction_65E132A545CACAA0BA8E6780817F193E//0x0254(0x0001)
  TimelineComponent*                                                  Timeline                                          //0x0258(0x0008)
  MaterialInstanceDynamic*                                            SmokeMaterialDyn                                  //0x0260(0x0008)
  Vector*                                                             FullSize                                          //0x0268(0x000C)
};


class Action_Give_5_RifleAmmo1_C : public Action_Base_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0278(0x0008)
  *                                                                   Action Start                                      //0x0229(0x0229)
  CallFunc_GetOwner_ReturnValue*                                      ExecuteUbergraph_Action_Give_5_RifleAmmo1         //0x0000(0x0229)
  Class*                                                              Buff Class                                        //0x0280(0x0008)
  *                                                                   BonusHealth                                       //0x0288(0x0004)
};


class DT_Kick_C : public DamageType_Base_C
{
};


class DT_Magnum_Bullet_C : public DT_Heal_C
{
};


class DT_Bonk_C : public DamageType_Base_C
{
};


class DT_Plummeter_C : public DamageType_Base_C
{
};


class BP_PlummetDoT_FallDamage_C : public BP_DoT_Effect_Damage_Over_Time_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0360(0x0008)
  *                                                                   Apply Weakness Event                              //0x0229(0x0229)
  *                                                                   LandedWhileActive                                 //0x0000(0x0229)
  *                                                                   JumpedWhileActive                                 //0x0000(0x0229)
  K2Node_CreateDelegate_OutputDelegate*                               ExecuteUbergraph_BP_PlummetDoT_FallDamage         //0x0000(0x0229)
  *                                                                   SpeedReductionMod                                 //0x0368(0x0004)
  Vector*                                                             LocationOnActivate                                //0x036C(0x000C)
};


class BP_BaseAmmo_C : public ActorComponent
{
  *                                                                   Name                                              //0x00B0(0x0008)
  *                                                                   BaseDamage                                        //0x00B8(0x0004)
  Class*                                                              DamageType                                        //0x00C0(0x0008)
};


class BP_WorldPickup_Class_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   NoCollision                                       //0x0000(0x0229)
  *                                                                   resetCollision                                    //0x0000(0x0229)
  *                                                                   resetCol_Multicast                                //0x0000(0x0229)
  *                                                                   noCollision_Multicast                             //0x0000(0x0229)
  *                                                                   resetCol_server                                   //0x0000(0x0229)
  *                                                                   noCollision_server                                //0x0000(0x0229)
  *                                                                   ExecuteUbergraph_BP_WorldPickup_Class             //0x0000(0x0229)
  StaticMeshComponent*                                                StaticMesh                                        //0x0220(0x0008)
  ButtonHint_Offset_C*                                                ButtonHint_Offset                                 //0x0228(0x0008)
  PhysicsHandleComponent*                                             PhysicsHandle                                     //0x0230(0x0008)
  puzzleWeight_C*                                                     puzzleWeight                                      //0x0238(0x0008)
};


class Detach_Trail_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  *                                                                   kill                                              //0x0000(0x0229)
  Component*                                                          BndEvt__Trail_K2Node_ComponentBoundEvent_0_ActorComponentDeactivateSignature__DelegateSignature//0x0000(0x0229)
  K2Node_ComponentBoundEvent_Component*                               ExecuteUbergraph_Detach_Trail                     //0x0000(0x0229)
  ParticleSystemComponent*                                            trail                                             //0x0220(0x0008)
  SceneComponent*                                                     DefaultSceneRoot                                  //0x0228(0x0008)
};


class DT_Harpoon_C : public DamageType_Base_C
{
};


class BP_Harpoon_Slow_DOT_C : public BP_DoT_Effect_Damage_Over_Time_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0360(0x0008)
  *                                                                   Timeline_1__FinishedFunc                          //0x0000(0x0229)
  *                                                                   Timeline_1__UpdateFunc                            //0x0000(0x0229)
  *                                                                   Apply Weakness Event                              //0x0229(0x0229)
  *                                                                   Revert Weakness                                   //0x0229(0x0229)
  *                                                                   Apply Energy Loss                                 //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  CallFunc_GetOwner_ReturnValue*                                      ExecuteUbergraph_BP_Harpoon_Slow_DOT              //0x0000(0x0229)
  *                                                                   Timeline_1_Alpha_24E4922E475B18A3D220F98FA6EBF0E0 //0x0368(0x0004)
  ETimelineDirection*                                                 Timeline_1__Direction_24E4922E475B18A3D220F98FA6EBF0E0//0x036C(0x0001)
  TimelineComponent*                                                  Timeline                                          //0x0370(0x0008)
  *                                                                   SpeedReductionMod                                 //0x0378(0x0004)
};


class BP_Bleed_DOT_C : public BP_DoT_Effect_Damage_Over_Time_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0360(0x0008)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   Expire                                            //0x0229(0x0229)
  *                                                                   Set Bleed Trail Visibility                        //0x0000(0x0229)
  *                                                                   OwnerCharacterDied                                //0x0229(0x0229)
  K2Node_DynamicCast_AsBP_Char_Wolf*                                  ExecuteUbergraph_BP_Bleed_DOT                     //0x0000(0x0229)
};


class BP_MeleeProjectile_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  OverlappedComponent*                                                BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature//0x0000(0x0229)
  *                                                                   spawnFXMulticast                                  //0x0000(0x0229)
  HitComponent*                                                       BndEvt__Sphere_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature//0x0000(0x0229)
  *                                                                   Server Damage                                     //0x0000(0x0229)
  *                                                                   Damage Event                                      //0x0000(0x0229)
  hit actor*                                                          Set Hit Actor                                     //0x0000(0x0229)
  CallFunc_GetPlayerController_ReturnValue*                           ExecuteUbergraph_BP_MeleeProjectile               //0x0000(0x0229)
  SphereComponent*                                                    Sphere                                            //0x0220(0x0008)
  ParticleSystemComponent*                                            trail                                             //0x0228(0x0008)
  alreadyHitActors*                                                   alreadyHitActors                                  //0x0230(0x0010)
  BP_PlayerCharacter_C*                                               owningCharacter                                   //0x0240(0x0008)
  *                                                                   Damage                                            //0x0248(0x0004)
  Actor*                                                              hit actor                                         //0x0250(0x0008)
};


class DT_Shotgun_C : public DamageType_Base_C
{
};


class BP_World_Prop_Base_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  *                                                                   Event OnDamageVisual                              //0x0000(0x0229)
  *                                                                   ExecuteUbergraph_BP_World_Prop_Base               //0x0000(0x0229)
  SceneComponent*                                                     DefaultSceneRoot                                  //0x0220(0x0008)
  *                                                                   Damage Visual?                                    //0x0228(0x0001)
};


class BP_Collision_Volume_C : public Actor
{
  *                                                                   UserConstructionScript                            //0x0229(0x0229)
  BoxComponent*                                                       Box                                               //0x0218(0x0008)
  Vector*                                                             Box Extents                                       //0x0220(0x000C)
};


class smoke_cable_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  *                                                                   Timeline_0__FinishedFunc                          //0x0000(0x0229)
  *                                                                   Timeline_0__UpdateFunc                            //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   Material Init                                     //0x0000(0x0229)
  CallFunc_K2_SetWorldLocation_SweepHitResult*                        ExecuteUbergraph_smoke_cable                      //0x0000(0x0229)
  CableComponent*                                                     Cable                                             //0x0220(0x0008)
  SceneComponent*                                                     Scene                                             //0x0228(0x0008)
  *                                                                   Timeline_0_NewTrack_2_80699A324E721A8594BBB4801D3793C2//0x0230(0x0004)
  ETimelineDirection*                                                 Timeline_0__Direction_80699A324E721A8594BBB4801D3793C2//0x0234(0x0001)
  TimelineComponent*                                                  Timeline                                          //0x0238(0x0008)
  *                                                                   Alpha                                             //0x0240(0x0004)
  MaterialInstanceDynamic*                                            DynamicMaterial                                   //0x0248(0x0008)
  Vector*                                                             End                                               //0x0250(0x000C)
  *                                                                   Width                                             //0x025C(0x0004)
  LinearColor*                                                        cable_color                                       //0x0260(0x0010)
  *                                                                   CableTime                                         //0x0270(0x0004)
};


class BP_ProjectileBase_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  *                                                                   Speed Scale                                       //0x0000(0x0229)
  *                                                                   Distance Damage Scale                             //0x0000(0x0229)
  CallFunc_GetInstigator_ReturnValue*                                 Play Bullet hit SFX                               //0x0000(0x0229)
  HitResult*                                                          PlayImpactEffects                                 //0x0000(0x0229)
  OtherActor*                                                         OnProjectileHitEvent                              //0x0000(0x0229)
  HitResult*                                                          SurfaceImpactEvent                                //0x0000(0x0229)
  Hit*                                                                Damage Testing SERVER ONLY                        //0x0000(0x0229)
  *                                                                   Radial Damage                                     //0x0000(0x0229)
  OverlappedComponent*                                                BndEvt__CollisionSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature//0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  Target Character*                                                   Launch Multicast                                  //0x0000(0x0229)
  HitComponent*                                                       BndEvt__CollisionSphere_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature//0x0000(0x0229)
  K2Node_CustomEvent_OtherActor*                                      ExecuteUbergraph_BP_ProjectileBase                //0x0000(0x0229)
  CharacterDamaged*                                                   damagedThisActor__DelegateSignature               //0x0000(0x0229)
  *                                                                   onProjectileHit__DelegateSignature                //0x0000(0x0229)
  ParticleSystemComponent*                                            trail                                             //0x0220(0x0008)
  ProjectileMovementComponent*                                        ProjectileMovement                                //0x0228(0x0008)
  StaticMeshComponent*                                                Mesh                                              //0x0230(0x0008)
  SphereComponent*                                                    CollisionSphere                                   //0x0238(0x0008)
  *                                                                   BaseDamage                                        //0x0240(0x0004)
  *                                                                   DamageRadius                                      //0x0244(0x0004)
  ParticleSystem*                                                     Body_ImpactEmitter                                //0x0248(0x0008)
  ParticleSystem*                                                     HardSurface_ImpactEmitter                         //0x0250(0x0008)
  BP_weaponBase_C*                                                    OwningWeapon                                      //0x0258(0x0008)
  *                                                                   postModDamage                                     //0x0260(0x0004)
  Class*                                                              DamageType                                        //0x0268(0x0008)
  *                                                                   critMultiplier                                    //0x0270(0x0004)
  HardhitSounds*                                                      HardhitSounds                                     //0x0278(0x0010)
  SofthitSounds*                                                      SofthitSounds                                     //0x0288(0x0010)
  *                                                                   explode on impact?                                //0x0298(0x0001)
  *                                                                   radialDamageAmount                                //0x029C(0x0004)
  Vector*                                                             hardSurfaceFXScale                                //0x02A0(0x000C)
  Class*                                                              AOEDamageType                                     //0x02B0(0x0008)
  *                                                                   KnockbackPower                                    //0x02B8(0x0004)
  *                                                                   DestroyDelayAfterImpact                           //0x02BC(0x0004)
  Controller*                                                         Instigator Controller                             //0x02C0(0x0008)
  *                                                                   canhurtOwner                                      //0x02C8(0x0001)
  onProjectileHit__DelegateSignature*                                 onProjectileHit                                   //0x02D0(0x0010)
  Vector*                                                             SpawnLocation                                     //0x02E0(0x000C)
  *                                                                   Override Speed                                    //0x02EC(0x0001)
  *                                                                   New Speed                                         //0x02F0(0x0004)
  DamagedActors*                                                      DamagedActors                                     //0x02F8(0x0010)
  *                                                                   alreadyPlayedImpactEffect                         //0x0308(0x0001)
  DamagedActors_AoE*                                                  DamagedActors_AoE                                 //0x0310(0x0010)
  damagedThisActor__DelegateSignature*                                damagedThisActor                                  //0x0320(0x0010)
};


class BP_Energy_Bow_Projectile_bm_C : public BP_ProjectileBase_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0330(0x0008)
  *                                                                   UserConstructionScript                            //0x0229(0x0229)
  HitResult*                                                          SurfaceImpactEvent                                //0x0229(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  OverlappedComponent*                                                BndEvt__CollisionSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature//0x0229(0x0229)
  *                                                                   ReceiveTick                                       //0x0229(0x0229)
  K2Node_ComponentBoundEvent_OverlappedComponent*                     ExecuteUbergraph_BP_Energy_Bow_Projectile_bm      //0x0000(0x0229)
  *                                                                   bounce counter                                    //0x0338(0x0004)
};


class BP_Chakram_Projectile_C : public BP_ProjectileBase_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0330(0x0008)
  CallFunc_GetOwner_ReturnValue*                                      ResetChakramCD                                    //0x0000(0x0229)
  OtherActor*                                                         OnProjectileHitEvent                              //0x0229(0x0229)
  ImpactResult*                                                       BndEvt__ProjectileMovement_K2Node_ComponentBoundEvent_0_OnProjectileBounceDelegate__DelegateSignature//0x0000(0x0229)
  HitResult*                                                          SurfaceImpactEvent                                //0x0229(0x0229)
  *                                                                   EndCheck                                          //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   ReceiveTick                                       //0x0229(0x0229)
  OverlappedComponent*                                                BndEvt__CollisionSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature//0x0229(0x0229)
  *                                                                   ItsOverAnikin                                     //0x0000(0x0229)
  K2Node_Event_OtherActor*                                            ExecuteUbergraph_BP_Chakram_Projectile            //0x0000(0x0229)
  ParticleSystemComponent*                                            trail2                                            //0x0338(0x0008)
  ParticleSystemComponent*                                            trail1                                            //0x0340(0x0008)
  AudioComponent*                                                     Audio                                             //0x0348(0x0008)
  PrimitiveComponent*                                                 HitComponent                                      //0x0350(0x0008)
  BP_weaponBase_C*                                                    OwningWeapon_NET                                  //0x0358(0x0008)
  *                                                                   bounces                                           //0x0360(0x0004)
  Vector*                                                             DummyLOC                                          //0x0364(0x000C)
  *                                                                   bReturning                                        //0x0370(0x0001)
  BP_Dummy_C*                                                         dummy                                             //0x0378(0x0008)
  SplineComponent*                                                    Spline                                            //0x0380(0x0008)
  *                                                                   ElapsedTime                                       //0x0388(0x0004)
};


class BP_Chakram_Parent_Fake_C : public BP_ProjectileBase_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0330(0x0008)
  Spline*                                                             Spawn Chakram                                     //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  DestroyedActor*                                                     LChakramDeleted                                   //0x0000(0x0229)
  DestroyedActor*                                                     RChakramDeleted                                   //0x0000(0x0229)
  *                                                                   CheckChakrams                                     //0x0000(0x0229)
  *                                                                   ReceiveTick                                       //0x0229(0x0229)
  K2Node_CreateDelegate_OutputDelegate*                               ExecuteUbergraph_BP_Chakram_Parent_Fake           //0x0000(0x0229)
  ArrowComponent*                                                     Arrow                                             //0x0338(0x0008)
  SplineComponent*                                                    LSpline                                           //0x0340(0x0008)
  SplineComponent*                                                    RSpline                                           //0x0348(0x0008)
  ArrowComponent*                                                     RArrow                                            //0x0350(0x0008)
  ArrowComponent*                                                     LArrow                                            //0x0358(0x0008)
  PrimitiveComponent*                                                 HitComponent                                      //0x0360(0x0008)
  *                                                                   LCHKD                                             //0x0368(0x0001)
  *                                                                   RCHKD                                             //0x0369(0x0001)
  Rotator*                                                            InitialRotation                                   //0x036C(0x000C)
};


class BP_Projectile_Flame_bm_C : public BP_ProjectileBase_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0330(0x0008)
  *                                                                   Timeline_0__FinishedFunc                          //0x0000(0x0229)
  *                                                                   Timeline_0__UpdateFunc                            //0x0000(0x0229)
  *                                                                   Timeline_0__CanCollideWithOwnerNow__EventFunc     //0x0000(0x0229)
  *                                                                   Scale Over Time__FinishedFunc                     //0x0000(0x0229)
  *                                                                   Scale Over Time__UpdateFunc                       //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  OtherActor*                                                         OnProjectileHitEvent                              //0x0229(0x0229)
  OverlappedComponent*                                                BndEvt__BurnRadius_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature//0x0000(0x0229)
  K2Node_Event_OtherActor*                                            ExecuteUbergraph_BP_Projectile_Flame_bm           //0x0000(0x0229)
  SphereComponent*                                                    BurnRadius                                        //0x0338(0x0008)
  *                                                                   Scale_Over_Time_Scale_Curve_7DDD665060E14727BD7E08E8F47EE457//0x0340(0x0004)
  ETimelineDirection*                                                 Scale_Over_Time__Direction_7DDD665060E14727BD7E08E8F47EE457//0x0344(0x0001)
  TimelineComponent*                                                  Scale Over Time                                   //0x0348(0x0008)
  *                                                                   Timeline_0_ScaleAlpha_Start_4DDE6D939269411BB893ED1B0C42C3BC//0x0350(0x0004)
  ETimelineDirection*                                                 Timeline_0__Direction_4DDE6D939269411BB893ED1B0C42C3BC//0x0354(0x0001)
  TimelineComponent*                                                  Timeline                                          //0x0358(0x0008)
  BurnVictims*                                                        BurnVictims                                       //0x0360(0x0010)
  Vector*                                                             StartingVelo                                      //0x0370(0x000C)
  *                                                                   CanHurtOwnerNow                                   //0x037C(0x0001)
  *                                                                   NewVar                                            //0x037D(0x0001)
};


class BP_PotionProjectile_bm_C : public BP_ProjectileBase_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0330(0x0008)
  HitResult*                                                          SurfaceImpactEvent                                //0x0229(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   Explosion                                         //0x0000(0x0229)
  *                                                                   BounceCheckEvent                                  //0x0000(0x0229)
  *                                                                   Detonate                                          //0x0000(0x0229)
  ImpactResult*                                                       BndEvt__ProjectileMovement_K2Node_ComponentBoundEvent_0_OnProjectileBounceDelegate__DelegateSignature//0x0000(0x0229)
  ImpactResult*                                                       BndEvt__ProjectileMovement_K2Node_ComponentBoundEvent_1_OnProjectileStopDelegate__DelegateSignature//0x0000(0x0229)
  K2Node_CreateDelegate_OutputDelegate*                               ExecuteUbergraph_BP_PotionProjectile_bm           //0x0000(0x0229)
  PointLightComponent*                                                PointLight                                        //0x0338(0x0008)
  SkeletalMeshComponent*                                              healingBola_01                                    //0x0340(0x0008)
  *                                                                   bounce counter                                    //0x0348(0x0004)
  TimerHandle*                                                        BounceCheck                                       //0x0350(0x0008)
  TimerHandle*                                                        DetonationTimer                                   //0x0358(0x0008)
};


class BP_TommyGun_Projectile_C : public BP_ProjectileBase_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0330(0x0008)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  OtherActor*                                                         OnProjectileHitEvent                              //0x0229(0x0229)
  K2Node_Event_OtherActor*                                            ExecuteUbergraph_BP_TommyGun_Projectile           //0x0000(0x0229)
};


class BP_TurretTommyProjectile_C : public BP_TommyGun_Projectile_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0338(0x0008)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  CallFunc_GetOwner_ReturnValue*                                      ExecuteUbergraph_BP_TurretTommyProjectile         //0x0000(0x0229)
};


class BP_Alchemic_Projectile_C : public BP_ProjectileBase_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0330(0x0008)
  Hit*                                                                ArrowAttach                                       //0x0000(0x0229)
  *                                                                   UserConstructionScript                            //0x0229(0x0229)
  HitResult*                                                          SurfaceImpactEvent                                //0x0229(0x0229)
  OverlappedComponent*                                                BndEvt__CollisionSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature//0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  HitResult*                                                          MultiCast Attach                                  //0x0000(0x0229)
  *                                                                   DoT_Ended_Event                                   //0x0000(0x0229)
  CharacterDamaged*                                                   Buff Check                                        //0x0000(0x0229)
  K2Node_CreateDelegate_OutputDelegate*                               ExecuteUbergraph_BP_Alchemic_Projectile           //0x0000(0x0229)
  CapsuleComponent*                                                   Capsule                                           //0x0338(0x0008)
  AudioComponent*                                                     Audio                                             //0x0340(0x0008)
  *                                                                   Attached                                          //0x0348(0x0001)
  *                                                                   MaxDamage                                         //0x034C(0x0004)
  *                                                                   MinDamage                                         //0x0350(0x0004)
  Class*                                                              AlchemicBuff                                      //0x0358(0x0008)
  LinearColor*                                                        Alchemic_Color                                    //0x0360(0x0010)
  *                                                                   AlchemicDoT                                       //0x0370(0x0001)
};


class BP_Alchemic_Fire_C : public BP_Alchemic_Projectile_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0378(0x0008)
  *                                                                   ReceiveTick                                       //0x0229(0x0229)
  Actor Target*                                                       Mulitcast Homing Target                           //0x0000(0x0229)
  K2Node_CustomEvent_Actor_Target*                                    ExecuteUbergraph_BP_Alchemic_Fire                 //0x0000(0x0229)
  ParticleSystemComponent*                                            ParticleSystem                                    //0x0380(0x0008)
};


class BP_Alchemic_Earth_C : public BP_Alchemic_Projectile_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0378(0x0008)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  HitResult*                                                          SurfaceImpactEvent                                //0x0229(0x0229)
  K2Node_MakeArray_Array*                                             ExecuteUbergraph_BP_Alchemic_Earth                //0x0000(0x0229)
  ParticleSystemComponent*                                            Par_FlashRing                                     //0x0380(0x0008)
  *                                                                   newSpeed                                          //0x0388(0x0004)
};


class BP_Alchemic_Bolt_C : public BP_Alchemic_Projectile_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0378(0x0008)
  Hit*                                                                Damage Testing SERVER ONLY                        //0x0229(0x0229)
  *                                                                   Multicast_LightningStrike                         //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  K2Node_Event_Hit*                                                   ExecuteUbergraph_BP_Alchemic_Bolt                 //0x0000(0x0229)
  testing*                                                            testing                                           //0x0380(0x0010)
};


class BP_Alchemic_Air_C : public BP_Alchemic_Projectile_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0378(0x0008)
  CallFunc_GetMaterial_ReturnValue*                                   UserConstructionScript                            //0x0229(0x0229)
  OtherActor*                                                         OnProjectileHitEvent                              //0x0229(0x0229)
  CallFunc_GetInstigator_ReturnValue*                                 ExecuteUbergraph_BP_Alchemic_Air                  //0x0000(0x0229)
  ParticleSystemComponent*                                            Par_FlashRing                                     //0x0380(0x0008)
};


class HealShot_C : public BP_ProjectileBase_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0330(0x0008)
  OtherActor*                                                         OnProjectileHitEvent                              //0x0229(0x0229)
  K2Node_Event_OtherActor*                                            ExecuteUbergraph_HealShot                         //0x0000(0x0229)
};


class BP_GrappleHook_Projectile_C : public BP_ProjectileBase_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0330(0x0008)
  *                                                                   Expired__FinishedFunc                             //0x0000(0x0229)
  *                                                                   Expired__UpdateFunc                               //0x0000(0x0229)
  *                                                                   Expired__Delay Finished__EventFunc                //0x0000(0x0229)
  *                                                                   Time to return 02__FinishedFunc                   //0x0000(0x0229)
  *                                                                   Time to return 02__UpdateFunc                     //0x0000(0x0229)
  *                                                                   Lerp to target__FinishedFunc                      //0x0000(0x0229)
  *                                                                   Lerp to target__UpdateFunc                        //0x0000(0x0229)
  *                                                                   ReceiveTick                                       //0x0229(0x0229)
  *                                                                   stopExpire                                        //0x0000(0x0229)
  *                                                                   delayedAirSpin                                    //0x0000(0x0229)
  Actor*                                                              ignore actor                                      //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   Return The Hook                                   //0x0000(0x0229)
  *                                                                   PulUserTo                                         //0x0000(0x0229)
  *                                                                   Impulse Target                                    //0x0000(0x0229)
  *                                                                   PullTarget                                        //0x0000(0x0229)
  OtherActor*                                                         OnProjectileHitEvent                              //0x0229(0x0229)
  *                                                                   forceStopPull                                     //0x0000(0x0229)
  *                                                                   Finish Pull Player                                //0x0000(0x0229)
  K2Node_CustomEvent_Actor*                                           ExecuteUbergraph_BP_GrappleHook_Projectile        //0x0000(0x0229)
  CableComponent*                                                     Cable                                             //0x0338(0x0008)
  PointLightComponent*                                                PointLight                                        //0x0340(0x0008)
  *                                                                   Lerp_to_target_lerp0_to_1_124DA8114DF876017B4AC4B733250959//0x0348(0x0004)
  ETimelineDirection*                                                 Lerp_to_target__Direction_124DA8114DF876017B4AC4B733250959//0x034C(0x0001)
  TimelineComponent*                                                  Lerp to target                                    //0x0350(0x0008)
  ETimelineDirection*                                                 Expired__Direction_6DEEE44B4AA55B1CDC9D778175DF6895//0x0358(0x0001)
  TimelineComponent*                                                  Expired                                           //0x0360(0x0008)
  *                                                                   Time_to_return_02_Alpha_84F490F94BC4BC05BAF610910918754A//0x0368(0x0004)
  ETimelineDirection*                                                 Time_to_return_02__Direction_84F490F94BC4BC05BAF610910918754A//0x036C(0x0001)
  TimelineComponent*                                                  Time to return 02                                 //0x0370(0x0008)
  Vector*                                                             firstHit                                          //0x0378(0x000C)
  *                                                                   Returning                                         //0x0384(0x0001)
  *                                                                   pulling                                           //0x0385(0x0001)
  Transform*                                                          MuzzleTransform                                   //0x0390(0x0030)
  Vector*                                                             hookReturnStart                                   //0x03C0(0x000C)
  *                                                                   HipBoneName                                       //0x03CC(0x0008)
  *                                                                   Spine1                                            //0x03D4(0x0008)
  *                                                                   PlayerInt                                         //0x03DC(0x0004)
  Vector*                                                             SurfaceNormal                                     //0x03E0(0x000C)
  Vector*                                                             HitLocation                                       //0x03EC(0x000C)
  PrimitiveComponent*                                                 HitComponent                                      //0x03F8(0x0008)
  Actor*                                                              HitActor                                          //0x0400(0x0008)
  Vector*                                                             normalAdjusted                                    //0x0408(0x000C)
};


class BP_Arrow_Projectile_C : public BP_ProjectileBase_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0330(0x0008)
  Hit*                                                                ArrowAttach                                       //0x0000(0x0229)
  *                                                                   ReceiveTick                                       //0x0229(0x0229)
  HitResult*                                                          SurfaceImpactEvent                                //0x0229(0x0229)
  OverlappedComponent*                                                BndEvt__CollisionSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature//0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  HitResult*                                                          MultiCast Attach                                  //0x0000(0x0229)
  K2Node_Event_HitResult*                                             ExecuteUbergraph_BP_Arrow_Projectile              //0x0000(0x0229)
  CapsuleComponent*                                                   Capsule                                           //0x0338(0x0008)
  AudioComponent*                                                     Audio                                             //0x0340(0x0008)
  *                                                                   Attached                                          //0x0348(0x0001)
  *                                                                   MaxDamage                                         //0x034C(0x0004)
  *                                                                   MinDamage                                         //0x0350(0x0004)
};


class BP_Harpoon_Projectile_C : public BP_ProjectileBase_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0330(0x0008)
  *                                                                   Correct Position Authority                        //0x0000(0x0229)
  InputPin*                                                           Would Trigger                                     //0x0000(0x0229)
  *                                                                   Timeline_1__FinishedFunc                          //0x0000(0x0229)
  *                                                                   Timeline_1__UpdateFunc                            //0x0000(0x0229)
  *                                                                   Trap Target                                       //0x0000(0x0229)
  *                                                                   ReceiveTick                                       //0x0229(0x0229)
  *                                                                   Correct Position Multicast                        //0x0000(0x0229)
  HitResult*                                                          SurfaceImpactEvent                                //0x0229(0x0229)
  *                                                                   Hit Multi                                         //0x0000(0x0229)
  BP Character*                                                       Multi cast Soft hit                               //0x0000(0x0229)
  CallFunc_GetInstigator_ReturnValue*                                 ExecuteUbergraph_BP_Harpoon_Projectile            //0x0000(0x0229)
  AudioComponent*                                                     Audio                                             //0x0338(0x0008)
  SceneComponent*                                                     cameraPoint                                       //0x0340(0x0008)
  SpringArmComponent*                                                 SpringArm                                         //0x0348(0x0008)
  CameraComponent*                                                    Camera                                            //0x0350(0x0008)
  CableComponent*                                                     Cable                                             //0x0358(0x0008)
  SceneComponent*                                                     AttachEmpty                                       //0x0360(0x0008)
  *                                                                   Timeline_1_lerp0_to_1_05863B2A4B6832F226F3E8A33FCD82DC//0x0368(0x0004)
  ETimelineDirection*                                                 Timeline_1__Direction_05863B2A4B6832F226F3E8A33FCD82DC//0x036C(0x0001)
  TimelineComponent*                                                  Timeline                                          //0x0370(0x0008)
  BP_PlayerCharacter_C*                                               HeldPlayers                                       //0x0378(0x0008)
  *                                                                   Trapped                                           //0x0380(0x0001)
  *                                                                   stuck                                             //0x0381(0x0001)
  *                                                                   snapRotTimelimit                                  //0x0384(0x0004)
  Vector*                                                             playerHitLoc                                      //0x0388(0x000C)
  *                                                                   holdingSomeone                                    //0x0394(0x0001)
  Vector*                                                             ImpactNormal                                      //0x0398(0x000C)
  *                                                                   snapped                                           //0x03A4(0x0001)
  BP_DoT_Effect_Damage_Over_Time_C*                                   HarpoonSlow                                       //0x03A8(0x0008)
  *                                                                   canSnap                                           //0x03B0(0x0001)
  *                                                                   InitialSpeed_Harpoon                              //0x03B4(0x0004)
};


class BP_Projectile_Flame_C : public BP_ProjectileBase_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0330(0x0008)
  *                                                                   Timeline_0__FinishedFunc                          //0x0000(0x0229)
  *                                                                   Timeline_0__UpdateFunc                            //0x0000(0x0229)
  *                                                                   Timeline_0__CanCollideWithOwnerNow__EventFunc     //0x0000(0x0229)
  OtherActor*                                                         OnProjectileHitEvent                              //0x0229(0x0229)
  OverlappedComponent*                                                BndEvt__BurnRadius_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature//0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  K2Node_Event_OtherActor*                                            ExecuteUbergraph_BP_Projectile_Flame              //0x0000(0x0229)
  SphereComponent*                                                    BurnRadius                                        //0x0338(0x0008)
  *                                                                   Timeline_0_ScaleAlpha_Start_12F203424033870740A2D9A130E85256//0x0340(0x0004)
  ETimelineDirection*                                                 Timeline_0__Direction_12F203424033870740A2D9A130E85256//0x0344(0x0001)
  TimelineComponent*                                                  Timeline                                          //0x0348(0x0008)
  BurnVictims*                                                        BurnVictims                                       //0x0350(0x0010)
  Vector*                                                             StartingVelo                                      //0x0360(0x000C)
  *                                                                   CanHurtOwnerNow                                   //0x036C(0x0001)
};


class BP_Projectile_Flame_Ball_C : public BP_ProjectileBase_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0330(0x0008)
  CallFunc_GetInstigator_ReturnValue*                                 Spawn Flames                                      //0x0000(0x0229)
  *                                                                   UserConstructionScript                            //0x0229(0x0229)
  *                                                                   Timeline_0__FinishedFunc                          //0x0000(0x0229)
  *                                                                   Timeline_0__UpdateFunc                            //0x0000(0x0229)
  *                                                                   BounceTimeline__FinishedFunc                      //0x0000(0x0229)
  *                                                                   BounceTimeline__UpdateFunc                        //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   Flame_Spurt                                       //0x0000(0x0229)
  OtherActor*                                                         OnProjectileHitEvent                              //0x0229(0x0229)
  HitResult*                                                          SurfaceImpactEvent                                //0x0229(0x0229)
  DamageType*                                                         ReceiveAnyDamage                                  //0x0229(0x0229)
  *                                                                   Explode                                           //0x0000(0x0229)
  *                                                                   Bounce FX                                         //0x0000(0x0229)
  *                                                                   Exploding                                         //0x0000(0x0229)
  *                                                                   Damage Effects                                    //0x0000(0x0229)
  *                                                                   DelayExplode                                      //0x0000(0x0229)
  K2Node_Event_OtherActor*                                            ExecuteUbergraph_BP_Projectile_Flame_Ball         //0x0000(0x0229)
  ArrowComponent*                                                     flame_spawn7                                      //0x0338(0x0008)
  ArrowComponent*                                                     flame_spawn6                                      //0x0340(0x0008)
  ArrowComponent*                                                     flame_spawn5                                      //0x0348(0x0008)
  ArrowComponent*                                                     flame_spawn4                                      //0x0350(0x0008)
  ArrowComponent*                                                     flame_spawn3                                      //0x0358(0x0008)
  ArrowComponent*                                                     flame_spawn2                                      //0x0360(0x0008)
  ArrowComponent*                                                     flame_spawn1                                      //0x0368(0x0008)
  ArrowComponent*                                                     flame_spawn                                       //0x0370(0x0008)
  AudioComponent*                                                     fireAudio                                         //0x0378(0x0008)
  SmoothSync*                                                         SmoothSync                                        //0x0380(0x0008)
  SceneComponent*                                                     scalePoint                                        //0x0388(0x0008)
  SceneComponent*                                                     Transform                                         //0x0390(0x0008)
  ArrowComponent*                                                     Arrow                                             //0x0398(0x0008)
  SceneComponent*                                                     End                                               //0x03A0(0x0008)
  ParticleSystemComponent*                                            ParticleSystem                                    //0x03A8(0x0008)
  RotatingMovementComponent*                                          RotatingMovement                                  //0x03B0(0x0008)
  *                                                                   BounceTimeline_alpha_D741793E49719C43877298B234B1EBD9//0x03B8(0x0004)
  ETimelineDirection*                                                 BounceTimeline__Direction_D741793E49719C43877298B234B1EBD9//0x03BC(0x0001)
  TimelineComponent*                                                  BounceTimeline                                    //0x03C0(0x0008)
  *                                                                   Timeline_0_sizeAlpha_3BAFAD9B4B01CBDC4D42A599AE841021//0x03C8(0x0004)
  *                                                                   Timeline_0_rotateAlpha_3BAFAD9B4B01CBDC4D42A599AE841021//0x03CC(0x0004)
  ETimelineDirection*                                                 Timeline_0__Direction_3BAFAD9B4B01CBDC4D42A599AE841021//0x03D0(0x0001)
  TimelineComponent*                                                  Timeline                                          //0x03D8(0x0008)
  TimerHandle*                                                        SpurtTimer                                        //0x03E0(0x0008)
  Victims*                                                            Victims                                           //0x03E8(0x0010)
  *                                                                   Health                                            //0x03F8(0x0004)
  *                                                                   dead                                              //0x03FC(0x0001)
  *                                                                   StoredDamage                                      //0x0400(0x0004)
  Controller*                                                         instigated_explode                                //0x0408(0x0008)
  MaterialInstanceDynamic*                                            barrel_dynamic                                    //0x0410(0x0008)
  TimerHandle*                                                        explodeTimer                                      //0x0418(0x0008)
  *                                                                   DecalsSpawned                                     //0x0420(0x0004)
};


class BP_ShotgunProjectile_C : public BP_ProjectileBase_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0330(0x0008)
  ImpactResult*                                                       BndEvt__ProjectileMovement_K2Node_ComponentBoundEvent_1_OnProjectileBounceDelegate__DelegateSignature//0x0000(0x0229)
  HitResult*                                                          SurfaceImpactEvent                                //0x0229(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  OverlappedComponent*                                                BndEvt__CollisionSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature//0x0229(0x0229)
  K2Node_ComponentBoundEvent_ImpactResult*                            ExecuteUbergraph_BP_ShotgunProjectile             //0x0000(0x0229)
  *                                                                   bounce counter                                    //0x0338(0x0004)
};


class BP_PistolProjectile_C : public BP_ProjectileBase_C
{
};


class DT_Fire_C : public DamageType_Base_C
{
};


class DT_Rocket_Pick_C : public DamageType_Base_C
{
};


class DT_Jab_C : public DamageType_Base_C
{
};


class BP_Worker_Door_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  *                                                                   Open                                              //0x0000(0x0229)
  *                                                                   Close                                             //0x0000(0x0229)
  CallFunc_GetAnimInstance_ReturnValue*                               ExecuteUbergraph_BP_Worker_Door                   //0x0000(0x0229)
  SkeletalMeshComponent*                                              doorMesh                                          //0x0220(0x0008)
  SceneComponent*                                                     DefaultSceneRoot                                  //0x0228(0x0008)
  *                                                                   doorOpen?                                         //0x0230(0x0001)
  *                                                                   timedClose?                                       //0x0231(0x0001)
  *                                                                   Timer                                             //0x0234(0x0004)
  *                                                                   PlaySound                                         //0x0238(0x0001)
};


class DT_Fire_Dot_C : public DamageType_Base_C
{
};


class BP_PickupItemBase_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  *                                                                   OnFirePress                                       //0x0000(0x0229)
  *                                                                   OnDropped                                         //0x0000(0x0229)
  *                                                                   UpdateInstigatorWeaponInfo                        //0x0000(0x0229)
  *                                                                   OnDroppedNPC                                      //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  SetOwner*                                                           OnPickUp                                          //0x0000(0x0229)
  *                                                                   Initialize                                        //0x0000(0x0229)
  *                                                                   FireWeapon                                        //0x0000(0x0229)
  *                                                                   CancelDespawn                                     //0x0000(0x0229)
  *                                                                   DespawnTimer                                      //0x0000(0x0229)
  *                                                                   Despawn                                           //0x0000(0x0229)
  K2Node_CreateDelegate_OutputDelegate*                               ExecuteUbergraph_BP_PickupItemBase                //0x0000(0x0229)
  MaterialBillboardComponent*                                         MaterialBillboard                                 //0x0220(0x0008)
  BoxComponent*                                                       Interactable Zone                                 //0x0228(0x0008)
  ButtonHint_Offset_C*                                                ButtonHint_Offset                                 //0x0230(0x0008)
  SkeletalMeshComponent*                                              SkeletalMesh                                      //0x0238(0x0008)
  outline_controller_C*                                               outline_controller                                //0x0240(0x0008)
  *                                                                   Name                                              //0x0248(0x0008)
  *                                                                   onGround?                                         //0x0250(0x0001)
  PhysicsAsset*                                                       onGroundPHYS                                      //0x0258(0x0008)
  PhysicsAsset*                                                       offGroundPHYS                                     //0x0260(0x0008)
  AmmoStruct*                                                         AmmoReward                                        //0x0268(0x001C)
  *                                                                   HealthReward                                      //0x0284(0x0004)
  *                                                                   fromDeath                                         //0x0288(0x0001)
  TimerHandle*                                                        DespawnTicker                                     //0x0290(0x0008)
  *                                                                   DespawnTime                                       //0x0298(0x0004)
};


class BP_Fuel_C : public BP_PickupItemBase_C
{
  CallFunc_CreateDynamicMaterialInstance_ReturnValue*                 UserConstructionScript                            //0x0229(0x0229)
  LinearColor*                                                        M_COLOR                                           //0x029C(0x0010)
  *                                                                   recolor?                                          //0x02AC(0x0001)
};


class BP_Health_C : public BP_Fuel_C
{
  PointLightComponent*                                                PointLight                                        //0x02B0(0x0008)
};


class NavQ_WaveEnemy_C : public NavigationQueryFilter
{
};


class NavQ_WaveAlly_C : public NavigationQueryFilter
{
};


class BPI_WaveModePurchases_C : public Interface
{
  FO Player*                                                          AttemptPurchase                                   //0x0000(0x0229)
  *                                                                   PurchasedTrigger                                  //0x0000(0x0229)
};


class BP_Weapon_Drop_Circle_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  Temp_object_Variable*                                               CircleSpawners                                    //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  CallFunc_Array_Get_Item*                                            ExecuteUbergraph_BP_Weapon_Drop_Circle            //0x0000(0x0229)
  SceneComponent*                                                     DefaultSceneRoot                                  //0x0220(0x0008)
  WeaponClasses*                                                      WeaponClasses                                     //0x0228(0x0010)
};


class SaveGameData_01_C : public SaveGame
{
  Transform*                                                          Location_Save                                     //0x0030(0x0030)
  Ammo_Save*                                                          Ammo_Save                                         //0x0060(0x0050)
  Currency_Save*                                                      Currency_Save                                     //0x00B0(0x0050)
  MaxAmmo_Save*                                                       MaxAmmo_Save                                      //0x0100(0x0050)
  *                                                                   Health_Save                                       //0x0150(0x0004)
  *                                                                   MaxHealth_Save                                    //0x0154(0x0004)
  Equipment_Save*                                                     Equipment_Save                                    //0x0158(0x0010)
  *                                                                   LevelName                                         //0x0168(0x0008)
};


class BP_GoldBars_C : public BP_PickupItemBase_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x02A0(0x0008)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   ExecuteUbergraph_BP_GoldBars                      //0x0000(0x0229)
  StaticMeshComponent*                                                StaticMesh                                        //0x02A8(0x0008)
  PointLightComponent*                                                PointLight                                        //0x02B0(0x0008)
  *                                                                   gold                                              //0x02B8(0x0004)
};


class BP_AmmoBox_C : public BP_PickupItemBase_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x02A0(0x0008)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   ExecuteUbergraph_BP_AmmoBox                       //0x0000(0x0229)
  PointLightComponent*                                                PointLight                                        //0x02A8(0x0008)
};


class BP_Gate_C : public StaticMeshActor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0228(0x0008)
  *                                                                   open sound                                        //0x0000(0x0229)
  *                                                                   Timeline_0__FinishedFunc                          //0x0000(0x0229)
  *                                                                   Timeline_0__UpdateFunc                            //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   ReceiveTick                                       //0x0229(0x0229)
  *                                                                   Start                                             //0x0000(0x0229)
  *                                                                   Reverse                                           //0x0000(0x0229)
  *                                                                   push                                              //0x0000(0x0229)
  *                                                                   initDanger                                        //0x0000(0x0229)
  CallFunc_K2_SetActorLocation_SweepHitResult*                        ExecuteUbergraph_BP_Gate                          //0x0000(0x0229)
  SceneComponent*                                                     Scene                                             //0x0230(0x0008)
  SplineComponent*                                                    Spline                                            //0x0238(0x0008)
  *                                                                   Timeline_0_alpha_7FF0C5334940D98B834B77909AC448E4 //0x0240(0x0004)
  ETimelineDirection*                                                 Timeline_0__Direction_7FF0C5334940D98B834B77909AC448E4//0x0244(0x0001)
  TimelineComponent*                                                  Timeline                                          //0x0248(0x0008)
  Vector*                                                             endPoint                                          //0x0250(0x000C)
  Vector*                                                             startPoint                                        //0x025C(0x000C)
  *                                                                   pushable?                                         //0x0268(0x0001)
  *                                                                   closeOnDanger?                                    //0x0269(0x0001)
  *                                                                   In Danger?                                        //0x026A(0x0001)
};


class death_item_spawner_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  Temp_object_Variable*                                               FindFloor                                         //0x0000(0x0229)
  *                                                                   UserConstructionScript                            //0x0229(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   spawn Weapon                                      //0x0000(0x0229)
  *                                                                   Multicast Part                                    //0x0000(0x0229)
  CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue*              ExecuteUbergraph_death_item_spawner               //0x0000(0x0229)
  RotatingMovementComponent*                                          RotatingMovement                                  //0x0220(0x0008)
  TextRenderComponent*                                                TextRender                                        //0x0228(0x0008)
  SceneComponent*                                                     DefaultSceneRoot                                  //0x0230(0x0008)
  Class*                                                              Item                                              //0x0238(0x0008)
  BP_PickupItemBase_C*                                                spawnersItem                                      //0x0240(0x0008)
  *                                                                   delayBefore_Disappear                             //0x0248(0x0004)
  *                                                                   Health Reward                                     //0x024C(0x0004)
  AmmoStruct*                                                         Ammo Reward                                       //0x0250(0x001C)
  *                                                                   defineAmmo?                                       //0x026C(0x0001)
};


class weapon_spawner_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  CallFunc_MakeBrushFromAsset_ReturnValue*                            SetBillboard                                      //0x0000(0x0229)
  childactorTemp*                                                     hologramSetup                                     //0x0000(0x0229)
  childactorTemp*                                                     UserConstructionScript                            //0x0229(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   spawn Weapon                                      //0x0000(0x0229)
  *                                                                   resetWeapon                                       //0x0000(0x0229)
  *                                                                   Timer Event                                       //0x0000(0x0229)
  Player Controller*                                                  Buy Spawner                                       //0x0000(0x0229)
  *                                                                   Client Visuals                                    //0x0000(0x0229)
  *                                                                   Despawn Weapon                                    //0x0000(0x0229)
  *                                                                   Start Timer                                       //0x0000(0x0229)
  *                                                                   ClientVisualsMulticast                            //0x0000(0x0229)
  *                                                                   Find HologramMesh Editor                          //0x0000(0x0229)
  *                                                                   Weapon Round                                      //0x0000(0x0229)
  *                                                                   Spawn Weapon Event                                //0x0000(0x0229)
  *                                                                   Weapon PreRound                                   //0x0000(0x0229)
  K2Node_CreateDelegate_OutputDelegate*                               ExecuteUbergraph_weapon_spawner                   //0x0000(0x0229)
  StaticMeshComponent*                                                StaticMesh1                                       //0x0220(0x0008)
  BillboardComponent*                                                 Billboard                                         //0x0228(0x0008)
  StaticMeshComponent*                                                StaticMesh                                        //0x0230(0x0008)
  RotatingMovementComponent*                                          RotatingMovement                                  //0x0238(0x0008)
  TextRenderComponent*                                                TextRender                                        //0x0240(0x0008)
  SceneComponent*                                                     DefaultSceneRoot                                  //0x0248(0x0008)
  Class*                                                              weapon                                            //0x0250(0x0008)
  BP_weaponBase_C*                                                    spawnersWeapon                                    //0x0258(0x0008)
  *                                                                   RespawnTime                                       //0x0260(0x0004)
  *                                                                   Rotate                                            //0x0264(0x0001)
  *                                                                   MEGA WEAPON                                       //0x0265(0x0001)
  *                                                                   bBuyable                                          //0x0266(0x0001)
  *                                                                   bPurchased                                        //0x0267(0x0001)
  SkeletalMeshComponent*                                              hologram                                          //0x0268(0x0008)
  *                                                                   COST                                              //0x0270(0x0004)
  TextRenderComponent*                                                textComponent                                     //0x0278(0x0008)
  BoxComponent*                                                       buyZone                                           //0x0280(0x0008)
  TimerHandle*                                                        weaponSpawnTick                                   //0x0288(0x0008)
  SkeletalMesh*                                                       HOLOGRAMMESH                                      //0x0290(0x0008)
  *                                                                   KeyItemRemoval                                    //0x0298(0x0001)
  Transform*                                                          hologramOffset                                    //0x02A0(0x0030)
  TimerHandle*                                                        weaponSpawnTimerr                                 //0x02D0(0x0008)
  *                                                                   debug_showWeaponIcon                              //0x02D8(0x0001)
};


class BP_Checkpoint_C : public TriggerBox
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0220(0x0008)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  OtherActor*                                                         ReceiveActorBeginOverlap                          //0x0229(0x0229)
  CallFunc_GetGameInstance_ReturnValue*                               ExecuteUbergraph_BP_Checkpoint                    //0x0000(0x0229)
  ArrowComponent*                                                     Arrow                                             //0x0228(0x0008)
  CapsuleComponent*                                                   player_Spawn_Loc                                  //0x0230(0x0008)
  *                                                                   Default Checkpoint?                               //0x0238(0x0001)
};


class Elevator_Track_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  currentH_sec*                                                       UserConstructionScript                            //0x0229(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue*              ExecuteUbergraph_Elevator_Track                   //0x0000(0x0229)
  StaticMeshComponent*                                                StaticMesh                                        //0x0220(0x0008)
  SceneComponent*                                                     Elevator_Top_Offset                               //0x0228(0x0008)
  StaticMeshComponent*                                                H_sec                                             //0x0230(0x0008)
  StaticMeshComponent*                                                V_sec                                             //0x0238(0x0008)
  StaticMeshComponent*                                                ElevatorTrack                                     //0x0240(0x0008)
  *                                                                   elevatorHeight                                    //0x0248(0x0004)
  *                                                                   canMake                                           //0x024C(0x0001)
  Transform*                                                          RelativeTransform                                 //0x0250(0x0030)
  *                                                                   currentHeight                                     //0x0280(0x0004)
  Elevator_C*                                                         Elevator                                          //0x0288(0x0008)
  PlayerStart*                                                        PlayerStart                                       //0x0290(0x0008)
  Transform*                                                          elevatorSpawn                                     //0x02A0(0x0030)
  *                                                                   startonSpawn?                                     //0x02D0(0x0001)
  *                                                                   spawn_at_top?                                     //0x02D1(0x0001)
  *                                                                   elevatorSpeedModifier                             //0x02D4(0x0004)
  *                                                                   buttonOnTrolley?                                  //0x02D8(0x0001)
  Vector*                                                             offsetLocation                                    //0x02DC(0x000C)
  *                                                                   Custom Top                                        //0x02E8(0x0001)
};


class Elevator_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  *                                                                   ResetTopTimer                                     //0x0000(0x0229)
  *                                                                   play_elevatorEndSFX                               //0x0000(0x0229)
  *                                                                   play_elevatorStartSFX                             //0x0000(0x0229)
  K2Node_MakeArray_Array*                                             steamPuff                                         //0x0000(0x0229)
  *                                                                   play_elevatorLOOPSfx                              //0x0000(0x0229)
  CallFunc_GetOwner_ReturnValue*                                      elevator_height                                   //0x0000(0x0229)
  CallFunc_SpawnSoundAttached_ReturnValue*                            spawnStartAudio                                   //0x0000(0x0229)
  CallFunc_SpawnSoundAttached_ReturnValue*                            spawnEndAudio                                     //0x0000(0x0229)
  CallFunc_SpawnSoundAttached_ReturnValue*                            spawnLoopAudio                                    //0x0000(0x0229)
  CallFunc_GetOwner_ReturnValue*                                      elevatorHeighttoPlayRate                          //0x0000(0x0229)
  *                                                                   Movement Timeline__FinishedFunc                   //0x0000(0x0229)
  *                                                                   Movement Timeline__UpdateFunc                     //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   fromTop                                           //0x0000(0x0229)
  *                                                                   fromBottom                                        //0x0000(0x0229)
  *                                                                   startElevator                                     //0x0000(0x0229)
  *                                                                   resetThreshhold_start                             //0x0000(0x0229)
  *                                                                   resetThreshold_end                                //0x0000(0x0229)
  *                                                                   startAtBottom_hack                                //0x0000(0x0229)
  *                                                                   Correct Elevator Position                         //0x0000(0x0229)
  *                                                                   5 Second Timer                                    //0x0000(0x0229)
  *                                                                   autoFromTopEvent                                  //0x0000(0x0229)
  *                                                                   Top Timer                                         //0x0000(0x0229)
  K2Node_CreateDelegate_OutputDelegate*                               ExecuteUbergraph_Elevator                         //0x0000(0x0229)
  *                                                                   topTimerStart__DelegateSignature                  //0x0000(0x0229)
  SceneComponent*                                                     ButtonSpawn                                       //0x0220(0x0008)
  SceneComponent*                                                     DefaultSceneRoot1                                 //0x0228(0x0008)
  SkeletalMeshComponent*                                              SkeletalMesh                                      //0x0230(0x0008)
  PointLightComponent*                                                PointLight1                                       //0x0238(0x0008)
  StaticMeshComponent*                                                StaticMeshComponent0                              //0x0240(0x0008)
  SceneComponent*                                                     particleSpawner3                                  //0x0248(0x0008)
  SceneComponent*                                                     particleSpawner2                                  //0x0250(0x0008)
  SceneComponent*                                                     particleSpawner1                                  //0x0258(0x0008)
  SceneComponent*                                                     particleSpawner                                   //0x0260(0x0008)
  BoxComponent*                                                       Box                                               //0x0268(0x0008)
  StaticMeshComponent*                                                Elevator                                          //0x0270(0x0008)
  *                                                                   Movement_Timeline_alpha_E3A4FC0749E4C62CF4B3BFA46B03A0BF//0x0278(0x0004)
  ETimelineDirection*                                                 Movement_Timeline__Direction_E3A4FC0749E4C62CF4B3BFA46B03A0BF//0x027C(0x0001)
  TimelineComponent*                                                  Movement Timeline                                 //0x0280(0x0008)
  Vector*                                                             TopLOC                                            //0x0288(0x000C)
  Vector*                                                             BottomLOC                                         //0x0294(0x000C)
  Elevator_Track_C*                                                   ElevatorTrack                                     //0x02A0(0x0008)
  *                                                                   atTop?                                            //0x02A8(0x0001)
  *                                                                   canStart                                          //0x02A9(0x0001)
  *                                                                   playOnSpawn?                                      //0x02AA(0x0001)
  *                                                                   traveling                                         //0x02AB(0x0001)
  AudioComponent*                                                     loopingAudioComponent                             //0x02B0(0x0008)
  AudioComponent*                                                     endAudioComponent                                 //0x02B8(0x0008)
  AudioComponent*                                                     startAudioComponent                               //0x02C0(0x0008)
  *                                                                   elevatorHeight                                    //0x02C8(0x0004)
  *                                                                   Start_At_Top?                                     //0x02CC(0x0001)
  *                                                                   NewTime                                           //0x02D0(0x0004)
  *                                                                   speedModifier                                     //0x02D4(0x0004)
  TimerHandle*                                                        TopCheckTimer                                     //0x02D8(0x0008)
  topTimerStart__DelegateSignature*                                   topTimerStart                                     //0x02E0(0x0010)
};


class BP_Button_C : public StaticMeshActor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0228(0x0008)
  CharacterPawn*                                                      TeleportButtonSignal                              //0x0000(0x0229)
  Player*                                                             teleport                                          //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  Player*                                                             push                                              //0x0000(0x0229)
  Player*                                                             Push Server                                       //0x0000(0x0229)
  Player*                                                             Signal                                            //0x0000(0x0229)
  *                                                                   Multicast Effects                                 //0x0000(0x0229)
  *                                                                   CoolDown                                          //0x0000(0x0229)
  *                                                                   reset Cooldown                                    //0x0000(0x0229)
  *                                                                   Cooldown Ended                                    //0x0000(0x0229)
  K2Node_CreateDelegate_OutputDelegate*                               ExecuteUbergraph_BP_Button                        //0x0000(0x0229)
  Player*                                                             Action Requested__DelegateSignature               //0x0000(0x0229)
  ArrowComponent*                                                     teleportDestinations                              //0x0230(0x0008)
  PointLightComponent*                                                PointLight                                        //0x0238(0x0008)
  outline_controller_C*                                               outline_controller                                //0x0240(0x0008)
  ButtonHint_Offset_C*                                                ButtonHint_Offset                                 //0x0248(0x0008)
  Elevator_Track_C*                                                   Elevator_Track                                    //0x0250(0x0008)
  Elevator_C*                                                         Elevator                                          //0x0258(0x0008)
  buttonTypes*                                                        button Type                                       //0x0260(0x0001)
  BP_Worker_Door_C*                                                   door                                              //0x0268(0x0008)
  *                                                                   cooledDown                                        //0x0270(0x0001)
  Action Requested__DelegateSignature*                                Action Requested                                  //0x0278(0x0010)
  Class*                                                              ButtonAction                                      //0x0288(0x0008)
  *                                                                   CoolDownTime                                      //0x0290(0x0004)
};


class BP_Wave_Director_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  CallFunc_Array_Get_Item*                                            getEnemiesRemaining                               //0x0000(0x0229)
  PlayerStarts*                                                       empty spawn scan                                  //0x0000(0x0229)
  Burst*                                                              GetConnectedPlayersScaling                        //0x0000(0x0229)
  CallFunc_Array_Get_Item*                                            RemoveSafeRooms                                   //0x0000(0x0229)
  CallFunc_GetGameState_ReturnValue*                                  GetAliveSurvivors                                 //0x0000(0x0229)
  aliveEnemies*                                                       Update Alive Enemies                              //0x0000(0x0229)
  Available Ai Controllers*                                           AiPoolFree                                        //0x0000(0x0229)
  CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue*              AI Pool Initialize                                //0x0000(0x0229)
  NewLocalVar*                                                        Burst Spawn                                       //0x0000(0x0229)
  *                                                                   Spawn Friendly Bots                               //0x0000(0x0229)
  *                                                                   Mission Start                                     //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   Wave Updater                                      //0x0000(0x0229)
  *                                                                   Initialize Wave Director                          //0x0000(0x0229)
  *                                                                   GameTypeChanged                                   //0x0000(0x0229)
  *                                                                   RoundStart                                        //0x0000(0x0229)
  *                                                                   Win Mission                                       //0x0000(0x0229)
  *                                                                   Safe Room Multi                                   //0x0000(0x0229)
  *                                                                   Music Multi                                       //0x0000(0x0229)
  *                                                                   BreakTimeStart                                    //0x0000(0x0229)
  *                                                                   BreakTimeOver                                     //0x0000(0x0229)
  *                                                                   Win MIssion Multicast                             //0x0000(0x0229)
  *                                                                   Safe Room Event                                   //0x0000(0x0229)
  *                                                                   Music Event                                       //0x0000(0x0229)
  *                                                                   Music Toggle                                      //0x0000(0x0229)
  PlayerController*                                                   InitiPlayer                                       //0x0000(0x0229)
  *                                                                   Update Players UI                                 //0x0000(0x0229)
  *                                                                   MultiCast_BreakTime                               //0x0000(0x0229)
  *                                                                   CheckerTick                                       //0x0000(0x0229)
  K2Node_CreateDelegate_OutputDelegate*                               ExecuteUbergraph_BP_Wave_Director                 //0x0000(0x0229)
  *                                                                   Initialized__DelegateSignature                    //0x0000(0x0229)
  BillboardComponent*                                                 Billboard                                         //0x0220(0x0008)
  STR_WaveBurst*                                                      currentBurst                                      //0x0228(0x0028)
  *                                                                   aiPoolSize                                        //0x0250(0x0004)
  aiPool*                                                             aiPool                                            //0x0258(0x0010)
  Mission*                                                            Mission                                           //0x0268(0x0010)
  *                                                                   Current Burst                                     //0x0278(0x0004)
  TimerHandle*                                                        burstTicker                                       //0x0280(0x0008)
  *                                                                   Current Wave                                      //0x0288(0x0004)
  SpawnedEnemies*                                                     SpawnedEnemies                                    //0x0290(0x0010)
  *                                                                   RoundOver                                         //0x02A0(0x0001)
  BP_MultiplayerGamemode_C*                                           GameMode                                          //0x02A8(0x0008)
  MissionCopy*                                                        MissionCopy                                       //0x02B0(0x0010)
  *                                                                   GiveLivesBackBetweenRounds                        //0x02C0(0x0001)
  BP_GlobalMusic_C*                                                   Music                                             //0x02C8(0x0008)
  SafeRoom*                                                           SafeRoom                                          //0x02D0(0x0010)
  Tractors*                                                           Tractors                                          //0x02E0(0x0010)
  *                                                                   safeRoomEnabled                                   //0x02F0(0x0001)
  *                                                                   wavesPaused                                       //0x02F1(0x0001)
  TimerHandle*                                                        BreakTimer                                        //0x02F8(0x0008)
  *                                                                   combat                                            //0x0300(0x0001)
  *                                                                   CurrentPhase                                      //0x0308(0x0010)
  *                                                                   STARTINGGOLD                                      //0x0318(0x0004)
  *                                                                   BreakTime                                         //0x031C(0x0004)
  *                                                                   Disabled                                          //0x0320(0x0001)
  *                                                                   Difficulty                                        //0x0324(0x0004)
  *                                                                   survivorBots                                      //0x0328(0x0004)
  *                                                                   combatMusicID                                     //0x032C(0x0004)
  *                                                                   breakMusicID                                      //0x0330(0x0004)
  *                                                                   StartingLives                                     //0x0334(0x0004)
  W_TimerCountdown_C*                                                 BreakTimeWidget                                   //0x0338(0x0008)
  *                                                                   currentAliveEnemies                               //0x0340(0x0004)
  *                                                                   BurstLimit                                        //0x0344(0x0004)
  *                                                                   EnemiesLeftInWave                                 //0x0348(0x0004)
  Initialized__DelegateSignature*                                     Initialized                                       //0x0350(0x0010)
};


class DA_CharacterLoadouts_C : public PrimaryDataAsset
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0030(0x0008)
  *                                                                   ExecuteUbergraph_DA_CharacterLoadouts             //0x0000(0x0229)
  Loadouts*                                                           Loadouts                                          //0x0038(0x0010)
};


class BP_GameMode_C : public GameModeBase
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x02B8(0x0008)
  alliesAndStates*                                                    getAllyCountbyState                               //0x0000(0x0229)
  CallFunc_GetPlayerController_ReturnValue*                           spawnPlayersFunction                              //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   Spawn Players Event                               //0x0000(0x0229)
  *                                                                   updateEscapeCount                                 //0x0000(0x0229)
  *                                                                   maxAmmo                                           //0x0000(0x0229)
  *                                                                   reload                                            //0x0000(0x0229)
  NewPlayer*                                                          K2_PostLogin                                      //0x0229(0x0229)
  *                                                                   Enemy Alert                                       //0x0000(0x0229)
  CallFunc_GetAllActorsOfClassMatchingTagQuery_OutActors*             ExecuteUbergraph_BP_GameMode                      //0x0000(0x0229)
  SceneComponent*                                                     DefaultSceneRoot                                  //0x02C0(0x0008)
  *                                                                   DANGER?                                           //0x02C8(0x0001)
  alertedEnemies*                                                     alertedEnemies                                    //0x02D0(0x0010)
  *                                                                   alertedCount                                      //0x02E0(0x0004)
  BP_Checkpoint_C*                                                    currentCheckpoint                                 //0x02E8(0x0008)
  checkPoints*                                                        checkPoints                                       //0x02F0(0x0010)
  *                                                                   totalPrisoners                                    //0x0300(0x0004)
  *                                                                   rescuedPrisoners                                  //0x0304(0x0004)
  prisoners*                                                          prisoners                                         //0x0308(0x0010)
  escapedPrisoners*                                                   escapedPrisoners                                  //0x0318(0x0010)
  *                                                                   AreaID                                            //0x0328(0x0004)
  *                                                                   nextPlayerID                                      //0x032C(0x0004)
};


class BP_TNT_Projectile_C : public BP_ProjectileBase_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0330(0x0008)
  SourceMaterial*                                                     tnt_m_color                                       //0x0000(0x0229)
  *                                                                   OnRep_Impact Normal Var                           //0x0000(0x0229)
  Object*                                                             applyImpulse                                      //0x0000(0x0229)
  Temp_object_Variable*                                               RadialDamage                                      //0x0000(0x0229)
  *                                                                   UserConstructionScript                            //0x0229(0x0229)
  *                                                                   timedExplode__FinishedFunc                        //0x0000(0x0229)
  *                                                                   timedExplode__UpdateFunc                          //0x0000(0x0229)
  *                                                                   timedExplode__beeps__EventFunc                    //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   Explode                                           //0x0000(0x0229)
  DamageType*                                                         ReceiveAnyDamage                                  //0x0229(0x0229)
  *                                                                   interruptTimer                                    //0x0000(0x0229)
  OtherActor*                                                         OnProjectileHitEvent                              //0x0229(0x0229)
  *                                                                   Detonate                                          //0x0000(0x0229)
  HitResult*                                                          TNT Hit Event                                     //0x0000(0x0229)
  *                                                                   TimedTNT                                          //0x0000(0x0229)
  ParentActor*                                                        Attach                                            //0x0000(0x0229)
  CallFunc_GetInstigator_ReturnValue*                                 ExecuteUbergraph_BP_TNT_Projectile                //0x0000(0x0229)
  AIPerceptionStimuliSourceComponent*                                 AIPerceptionStimuliSource                         //0x0338(0x0008)
  ETimelineDirection*                                                 timedExplode__Direction_AB7893FE4032907C606357B23241DEF3//0x0340(0x0001)
  TimelineComponent*                                                  timedExplode                                      //0x0348(0x0008)
  Explosions*                                                         Explosions                                        //0x0350(0x0010)
  *                                                                   Damage                                            //0x0360(0x0004)
  *                                                                   timed                                             //0x0364(0x0001)
  *                                                                   timeToExplode                                     //0x0368(0x0004)
  *                                                                   DeathTime                                         //0x036C(0x0004)
  Vector*                                                             ExplosionVFXscale                                 //0x0370(0x000C)
  ParticleSystem*                                                     ImpactVFX                                         //0x0380(0x0008)
  HitResult*                                                          HitResult                                         //0x0388(0x0088)
  *                                                                   planted_Ground                                    //0x0410(0x0001)
  *                                                                   death                                             //0x0411(0x0001)
  *                                                                   AoeFullDamage                                     //0x0412(0x0001)
  uniqueDamage*                                                       uniqueDamage                                      //0x0418(0x0010)
  MaterialInstanceDynamic*                                            tnt_dynamic                                       //0x0428(0x0008)
  MaterialInterface*                                                  TNT_Material                                      //0x0430(0x0008)
  *                                                                   distanceFalloff                                   //0x0438(0x0001)
  Vector*                                                             LocalImpactLocation                               //0x043C(0x000C)
};


class BP_TNT_detonated_C : public BP_TNT_Projectile_C
{
};


class BP_Rocket_Projectile_C : public BP_TNT_detonated_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0448(0x0008)
  SourceMaterial*                                                     tnt_m_color                                       //0x0229(0x0229)
  *                                                                   Timeline_0__FinishedFunc                          //0x0000(0x0229)
  *                                                                   Timeline_0__UpdateFunc                            //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  OtherActor*                                                         OnProjectileHitEvent                              //0x0229(0x0229)
  DamageType*                                                         ReceiveAnyDamage                                  //0x0229(0x0229)
  *                                                                   Multicast Kill Trail                              //0x0000(0x0229)
  K2Node_Event_OtherActor*                                            ExecuteUbergraph_BP_Rocket_Projectile             //0x0000(0x0229)
  AudioComponent*                                                     Audio                                             //0x0450(0x0008)
  SkeletalMeshComponent*                                              rocket                                            //0x0458(0x0008)
  ETimelineDirection*                                                 Timeline_0__Direction_CCD571F34CD7F2451000A8B5AB7E1BCE//0x0460(0x0001)
  TimelineComponent*                                                  Timeline                                          //0x0468(0x0008)
  ParticleSystemComponent*                                            NewVar_0                                          //0x0470(0x0008)
  Detach_Trail_C*                                                     RocketTrail                                       //0x0478(0x0008)
  *                                                                   accelerate                                        //0x0480(0x0001)
  *                                                                   detachTrail                                       //0x0481(0x0001)
};


class BP_LongShotProjectile_C : public BP_ProjectileBase_C
{
  *                                                                   bounce counter                                    //0x0330(0x0004)
};


class BP_Tractor_Nexus_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  CallFunc_GetPlayerController_ReturnValue*                           GetLocalWaveDefenseUI                             //0x0000(0x0229)
  *                                                                   UserConstructionScript                            //0x0229(0x0229)
  FO Player*                                                          AttemptPurchase                                   //0x0000(0x0229)
  DamageType*                                                         ReceiveAnyDamage                                  //0x0229(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   MultiCast Update Health                           //0x0000(0x0229)
  *                                                                   PurchasedTrigger                                  //0x0000(0x0229)
  *                                                                   Death Effects                                     //0x0000(0x0229)
  *                                                                   Initialized                                       //0x0000(0x0229)
  K2Node_CreateDelegate_OutputDelegate*                               ExecuteUbergraph_BP_Tractor_Nexus                 //0x0000(0x0229)
  SceneComponent*                                                     explosionLoc                                      //0x0220(0x0008)
  SceneComponent*                                                     Scene                                             //0x0228(0x0008)
  CapsuleComponent*                                                   MainCapsule                                       //0x0230(0x0008)
  BoxComponent*                                                       Box                                               //0x0238(0x0008)
  CapsuleComponent*                                                   Capsule1                                          //0x0240(0x0008)
  CapsuleComponent*                                                   Capsule                                           //0x0248(0x0008)
  BillboardComponent*                                                 Billboard                                         //0x0250(0x0008)
  StaticMeshComponent*                                                StaticMesh                                        //0x0258(0x0008)
  AudioComponent*                                                     Tractor_Engine_01                                 //0x0260(0x0008)
  WidgetComponent*                                                    Widget                                            //0x0268(0x0008)
  AIPerceptionComponent*                                              AIPerception                                      //0x0270(0x0008)
  *                                                                   Health                                            //0x0278(0x0004)
  *                                                                   maxHealth                                         //0x027C(0x0004)
  Name_Widget_C*                                                      nameHud                                           //0x0280(0x0008)
  *                                                                   Tractor Name                                      //0x0288(0x0010)
  BP_Wave_Director_C*                                                 waveDirector                                      //0x0298(0x0008)
  W_WaveDefenseUi_C*                                                  LocalWaveUI                                       //0x02A0(0x0008)
};


class BPI_Loadout_C : public Interface
{
  Loadout*                                                            GetLoadoutInfo                                    //0x0000(0x0229)
};


class BP_Capture_Point_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  *                                                                   No one standing                                   //0x0000(0x0229)
  *                                                                   EnableToggle_client                               //0x0000(0x0229)
  Players1*                                                           TracePlayers                                      //0x0000(0x0229)
  player states*                                                      AwardPlayerPointAndChangeControl                  //0x0000(0x0229)
  *                                                                   EnableToggle                                      //0x0000(0x0229)
  Array*                                                              TeamControlCheck                                  //0x0000(0x0229)
  *                                                                   Change Team Color                                 //0x0000(0x0229)
  CallFunc_CreateDynamicMaterialInstance_ReturnValue*                 UserConstructionScript                            //0x0229(0x0229)
  *                                                                   All Player Announcement                           //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   Check for Overlap                                 //0x0000(0x0229)
  *                                                                   Enable Event                                      //0x0000(0x0229)
  *                                                                   Award Tick                                        //0x0000(0x0229)
  *                                                                   Change Color multi                                //0x0000(0x0229)
  *                                                                   Start                                             //0x0000(0x0229)
  *                                                                   Check Gamemode                                    //0x0000(0x0229)
  *                                                                   Capture Progress                                  //0x0000(0x0229)
  CallFunc_GetGameMode_ReturnValue*                                   ExecuteUbergraph_BP_Capture_Point                 //0x0000(0x0229)
  *                                                                   contested__DelegateSignature                      //0x0000(0x0229)
  *                                                                   teamChanged__DelegateSignature                    //0x0000(0x0229)
  StaticMeshComponent*                                                Plane                                             //0x0220(0x0008)
  RotatingMovementComponent*                                          RotatingMovement                                  //0x0228(0x0008)
  StaticMeshComponent*                                                letter                                            //0x0230(0x0008)
  StaticMeshComponent*                                                hologram_mesh                                     //0x0238(0x0008)
  SceneComponent*                                                     ZoneEnd                                           //0x0240(0x0008)
  SceneComponent*                                                     ZoneStart                                         //0x0248(0x0008)
  StaticMeshComponent*                                                CapturePointMesh                                  //0x0250(0x0008)
  SceneComponent*                                                     DefaultSceneRoot                                  //0x0258(0x0008)
  *                                                                   ControllingTeam                                   //0x0260(0x0010)
  LinearColor*                                                        ChosenColor                                       //0x0270(0x0010)
  LinearColor*                                                        blueColor                                         //0x0280(0x0010)
  LinearColor*                                                        redColor                                          //0x0290(0x0010)
  TimerHandle*                                                        OVERLAP_TIMER                                     //0x02A0(0x0008)
  TimerHandle*                                                        AWARD_TIMER                                       //0x02A8(0x0008)
  *                                                                   Enabled                                           //0x02B0(0x0001)
  MaterialInstanceDynamic*                                            hologram_m                                        //0x02B8(0x0008)
  cap_point*                                                          capPoint                                          //0x02C0(0x0001)
  capLetters*                                                         capLetters                                        //0x02C8(0x0050)
  MaterialInstanceDynamic*                                            letter_m                                          //0x0318(0x0008)
  teamChanged__DelegateSignature*                                     teamChanged                                       //0x0320(0x0010)
  *                                                                   Capture Point Name                                //0x0330(0x0008)
  *                                                                   CaptureProgress                                   //0x0338(0x0004)
  MaterialInstanceDynamic*                                            capture_m                                         //0x0340(0x0008)
  *                                                                   red_captured                                      //0x0348(0x0001)
  *                                                                   blue_captured                                     //0x0349(0x0001)
  contested__DelegateSignature*                                       contested                                         //0x0350(0x0010)
  *                                                                   TimeToCapture                                     //0x0360(0x0004)
};


class Character_Select_BP_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   ExecuteUbergraph_Character_Select_BP              //0x0000(0x0229)
  SceneComponent*                                                     spawn point                                       //0x0220(0x0008)
  SceneComponent*                                                     DefaultSceneRoot                                  //0x0228(0x0008)
  CameraActor*                                                        camera_snek                                       //0x0230(0x0008)
  CameraActor*                                                        camera_mouse                                      //0x0238(0x0008)
  CameraActor*                                                        camera_bunn                                       //0x0240(0x0008)
  BP_PlayerCharacter_C*                                               char                                              //0x0248(0x0008)
  CameraActor*                                                        camera_raccoon                                    //0x0250(0x0008)
  CameraActor*                                                        camera_opossum                                    //0x0258(0x0008)
  CameraActor*                                                        camera_bingo                                      //0x0260(0x0008)
  CameraActor*                                                        camera_panda                                      //0x0268(0x0008)
  CameraActor*                                                        camera_wolf                                       //0x0270(0x0008)
  CameraActor*                                                        camera_gwen                                       //0x0278(0x0008)
};


class BP_Spray_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  CallFunc_CreateDynamicMaterialInstance_ReturnValue*                 SetSpray                                          //0x0000(0x0229)
  *                                                                   UserConstructionScript                            //0x0229(0x0229)
  *                                                                   ReceiveTick                                       //0x0229(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  CallFunc_SpawnEmitterAtLocation_ReturnValue*                        ExecuteUbergraph_BP_Spray                         //0x0000(0x0229)
  ArrowComponent*                                                     Arrow                                             //0x0220(0x0008)
  BillboardComponent*                                                 Billboard                                         //0x0228(0x0008)
  DecalComponent*                                                     Decal                                             //0x0230(0x0008)
  SceneComponent*                                                     DefaultSceneRoot                                  //0x0238(0x0008)
  Texture*                                                            Texture                                           //0x0240(0x0008)
  MaterialInstanceDynamic*                                            dynMat                                            //0x0248(0x0008)
  *                                                                   reveal                                            //0x0250(0x0004)
};


class BP_MultiplayerGamemode_C : public GameMode
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0300(0x0008)
  players*                                                            MSG_GetConnectedPlayers                           //0x0000(0x0229)
  *                                                                   MSG_GetPlayerID                                   //0x0000(0x0229)
  CallFunc_Array_Get_Item*                                            MSG_RequestPrivateMessage                         //0x0000(0x0229)
  CallFunc_Array_Get_Item*                                            MSG_GetPlayerIDFromUsername                       //0x0000(0x0229)
  *                                                                   MSG_GetUsername                                   //0x0000(0x0229)
  *                                                                   MSG_GetTeamID                                     //0x0000(0x0229)
  TeamPlayerStarts*                                                   GetSafeTeamSpawns                                 //0x0000(0x0229)
  CallFunc_Array_Get_Item*                                            TempIgnoreLives                                   //0x0000(0x0229)
  FoundPlayerStart*                                                   FindSpecPlayerStart                               //0x0000(0x0229)
  Player*                                                             ChoosePlayerStart                                 //0x0229(0x0229)
  Player*                                                             FindPlayerStart                                   //0x0229(0x0229)
  *                                                                   GetPreRoundTime                                   //0x0000(0x0229)
  CallFunc_Array_Get_Item*                                            SetLives                                          //0x0000(0x0229)
  Array*                                                              WaveModeVictoryCheck                              //0x0000(0x0229)
  CallFunc_Array_Get_Item*                                            Initialize Players_WaveMode                       //0x0000(0x0229)
  CallFunc_Array_Get_Item*                                            Initialize Players                                //0x0000(0x0229)
  CallFunc_Array_Get_Item*                                            FullServer_UserKick                               //0x0000(0x0229)
  Player*                                                             ForceChangeTeam                                   //0x0000(0x0229)
  Result PlayerState*                                                 GetOwningPlayerState                              //0x0000(0x0229)
  *                                                                   TeamWinPoints                                     //0x0000(0x0229)
  *                                                                   ResetTeamWinsTotal                                //0x0000(0x0229)
  Fadeout Game Instance*                                              MapRotationIndex Process                          //0x0000(0x0229)
  CallFunc_GetGameInstance_ReturnValue*                               Server Config Fetch                               //0x0000(0x0229)
  CallFunc_GetAllActorsOfClass_OutActors*                             Preparing The Gamemode                            //0x0000(0x0229)
  CallFunc_Array_Get_Item*                                            Team Balance All                                  //0x0000(0x0229)
  *                                                                   CheckIfLastModeWasFFA                             //0x0000(0x0229)
  *                                                                   Sudden Death Check                                //0x0000(0x0229)
  *                                                                   Kill Fire Wall                                    //0x0000(0x0229)
  CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue*              Arena_Sudden_Death                                //0x0000(0x0229)
  CallFunc_GetAllActorsOfClass_OutActors*                             Capture Point Check                               //0x0000(0x0229)
  CallFunc_Array_Get_Item*                                            BanUser                                           //0x0000(0x0229)
  CallFunc_GetGameInstance_ReturnValue*                               BannedUserCheck                                   //0x0000(0x0229)
  Player State*                                                       Assign Names & Lives                              //0x0000(0x0229)
  CallFunc_GetAllActorsOfClass_OutActors*                             Flag_Check                                        //0x0000(0x0229)
  Temp_object_Variable*                                               Scan_FFA_Distance                                 //0x0000(0x0229)
  FO_PlayerState*                                                     MVP Spawning                                      //0x0000(0x0229)
  All_Winners*                                                        AssignWinners                                     //0x0000(0x0229)
  BluePlayers*                                                        TeamsPlayerCount                                  //0x0000(0x0229)
  SpecPlayers*                                                        FFAPlayer Count                                   //0x0000(0x0229)
  PlayerState*                                                        SetSpawnLocation                                  //0x0000(0x0229)
  CallFunc_GetGameInstance_ReturnValue*                               Fetch CVars1                                      //0x0000(0x0229)
  Array*                                                              ArenaVictoryCheck                                 //0x0000(0x0229)
  FO Player State*                                                    Reward_Player                                     //0x0000(0x0229)
  CallFunc_GetGameState_ReturnValue*                                  AllPlayers_Loop_Rewards                           //0x0000(0x0229)
  Object*                                                             GetPlayerName                                     //0x0000(0x0229)
  CallFunc_GetGameInstance_ReturnValue*                               Get Server Name                                   //0x0000(0x0229)
  CallFunc_Array_Get_Item*                                            Get Player Names                                  //0x0000(0x0229)
  *                                                                   Get Level Name                                    //0x0000(0x0229)
  CallFunc_GetGameInstance_ReturnValue*                               GameType to M_Gamestate                           //0x0000(0x0229)
  Controller*                                                         Character Spawning                                //0x0000(0x0229)
  PlayerController*                                                   Team Balance                                      //0x0000(0x0229)
  *                                                                   ReadyToEndMatch                                   //0x0229(0x0229)
  *                                                                   ReadyToStartMatch                                 //0x0229(0x0229)
  alliesAndStates*                                                    getAllyCountbyState                               //0x0000(0x0229)
  *                                                                   MSG_NewMessage                                    //0x0000(0x0229)
  *                                                                   MSG_SetPlayerID                                   //0x0000(0x0229)
  *                                                                   MSG_SetTeamID                                     //0x0000(0x0229)
  *                                                                   MSG_PlayEmote                                     //0x0000(0x0229)
  *                                                                   SpawnBots                                         //0x0000(0x0229)
  *                                                                   WaveMode_GameOver                                 //0x0000(0x0229)
  *                                                                   WaveCountUpdate                                   //0x0000(0x0229)
  *                                                                   maxAmmo                                           //0x0000(0x0229)
  NewPlayer*                                                          K2_PostLogin                                      //0x0229(0x0229)
  Controller*                                                         Spawn Player                                      //0x0000(0x0229)
  ExitingController*                                                  K2_OnLogout                                       //0x0229(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  Character Controller*                                               SwitchCharacter                                   //0x0000(0x0229)
  Player Controller*                                                  Change Player Team                                //0x0000(0x0229)
  *                                                                   PlayKillSound                                     //0x0000(0x0229)
  *                                                                   Change Game Type                                  //0x0000(0x0229)
  InputPin*                                                           Player Team Setting                               //0x0000(0x0229)
  *                                                                   Gametype Voice Announce                           //0x0000(0x0229)
  *                                                                   ReceiveEndPlay                                    //0x0229(0x0229)
  *                                                                   End Round                                         //0x0000(0x0229)
  *                                                                   Start PreRound                                    //0x0000(0x0229)
  *                                                                   Add Teamscore                                     //0x0000(0x0229)
  *                                                                   SET Teamscore                                     //0x0000(0x0229)
  *                                                                   Round Timer                                       //0x0000(0x0229)
  *                                                                   TimeDecrement                                     //0x0000(0x0229)
  SoundToPlay*                                                        Flag Event                                        //0x0000(0x0229)
  *                                                                   heal                                              //0x0000(0x0229)
  *                                                                   Remove Flags                                      //0x0000(0x0229)
  *                                                                   Change Map                                        //0x0000(0x0229)
  *                                                                   Clean Up                                          //0x0000(0x0229)
  *                                                                   Change Server Name                                //0x0000(0x0229)
  Sound*                                                              Broadcast                                         //0x0000(0x0229)
  *                                                                   60 seconds left                                   //0x0000(0x0229)
  *                                                                   1 Second Timer                                    //0x0000(0x0229)
  *                                                                   Steam Update Timer                                //0x0000(0x0229)
  *                                                                   Round Start Rules                                 //0x0000(0x0229)
  *                                                                   Round Initialize                                  //0x0000(0x0229)
  *                                                                   Round Start                                       //0x0000(0x0229)
  *                                                                   Can Start Arena Check                             //0x0000(0x0229)
  *                                                                   Despawn Players                                   //0x0000(0x0229)
  *                                                                   Can Start Team Arena Check                        //0x0000(0x0229)
  *                                                                   Mega Weapon Announce                              //0x0000(0x0229)
  *                                                                   Round Start Arena                                 //0x0000(0x0229)
  *                                                                   TimeBetweenRoundEvent                             //0x0000(0x0229)
  *                                                                   Wave Mode Start                                   //0x0000(0x0229)
  PlayerController*                                                   Login Events                                      //0x0000(0x0229)
  CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue*              ExecuteUbergraph_BP_MultiplayerGamemode           //0x0000(0x0229)
  *                                                                   PreRoundStart__DelegateSignature                  //0x0000(0x0229)
  PlayerController*                                                   PlayerLoggedIn__DelegateSignature                 //0x0000(0x0229)
  *                                                                   RoundStarted__DelegateSignature                   //0x0000(0x0229)
  *                                                                   GameTypeChanged__DelegateSignature                //0x0000(0x0229)
  SceneComponent*                                                     DefaultSceneRoot                                  //0x0308(0x0008)
  All_PlayerStarts*                                                   All_PlayerStarts                                  //0x0310(0x0010)
  red_PlayerStarts*                                                   red_PlayerStarts                                  //0x0320(0x0010)
  blue_PlayerStarts*                                                  blue_PlayerStarts                                 //0x0330(0x0010)
  Transform*                                                          SpawnTransform                                    //0x0340(0x0030)
  Class*                                                              defaultPlayerType                                 //0x0370(0x0008)
  *                                                                   gm_team                                           //0x0378(0x0010)
  PlayerStart*                                                        spectatorStart                                    //0x0388(0x0008)
  DM_GameType*                                                        GameType                                          //0x0390(0x0001)
  FO_Announcer_C*                                                     FO_Announcer                                      //0x0398(0x0008)
  FFA_PlayerStarts*                                                   FFA_PlayerStarts                                  //0x03A0(0x0010)
  ConnectedPlayers*                                                   ConnectedPlayers                                  //0x03B0(0x0010)
  *                                                                   MatchMakeServer                                   //0x03C0(0x0010)
  playerNames*                                                        playerNames                                       //0x03D0(0x0010)
  *                                                                   LevelName                                         //0x03E0(0x0010)
  *                                                                   ServerName                                        //0x03F0(0x0010)
  *                                                                   MaxPlayers                                        //0x0400(0x0004)
  VaRestJsonObject*                                                   IP Json                                           //0x0408(0x0008)
  *                                                                   serverIP                                          //0x0410(0x0010)
  *                                                                   IPSuccess                                         //0x0420(0x0001)
  *                                                                   AddGameSuccess                                    //0x0421(0x0001)
  VaRestJsonObject*                                                   AddGameReturn                                     //0x0428(0x0008)
  *                                                                   canSpawnPlayers?                                  //0x0430(0x0001)
  *                                                                   redTeamScore                                      //0x0434(0x0004)
  *                                                                   blueTeamScore                                     //0x0438(0x0004)
  *                                                                   MaxRoundTime                                      //0x043C(0x0004)
  *                                                                   RoundTimeRemaining                                //0x0440(0x0004)
  TimerHandle*                                                        RoundCountdown                                    //0x0448(0x0008)
  BPUniqueNetId*                                                      joiningPlayerID                                   //0x0450(0x0020)
  MVP_Camera_Blueprint_C*                                             MVP_Cam                                           //0x0470(0x0008)
  *                                                                   Time Between Rounds                               //0x0478(0x0004)
  *                                                                   Player Respawn Time                               //0x047C(0x0004)
  *                                                                   SteamUpdateTick                                   //0x0480(0x0004)
  Player Array Ref*                                                   Player Array Ref                                  //0x0488(0x0010)
  BlueprintSessionResult*                                             ThisSession                                       //0x0498(0x00B8)
  *                                                                   RoundCount                                        //0x0550(0x0004)
  *                                                                   RoundLimit                                        //0x0554(0x0004)
  *                                                                   Pre-RoundTime                                     //0x0558(0x0004)
  GameMode_State*                                                     GameMode_State                                    //0x055C(0x0001)
  TimerHandle*                                                        Pre-RoundTimer                                    //0x0560(0x0008)
  TimerHandle*                                                        CanStartArenaTimer                                //0x0568(0x0008)
  *                                                                   NumberOfFFAPlayers                                //0x0570(0x0004)
  TimerHandle*                                                        CanStartTeamArenaTimer                            //0x0578(0x0008)
  MVP_PlayerStarts*                                                   MVP_PlayerStarts                                  //0x0580(0x0010)
  CreatedMVP_Pawns*                                                   CreatedMVP_Pawns                                  //0x0590(0x0010)
  BP_FireWall_Royale_C*                                               Fire Wall                                         //0x05A0(0x0008)
  TimerHandle*                                                        BetweenRoundTimer                                 //0x05A8(0x0008)
  *                                                                   lastModeWasFFA                                    //0x05B0(0x0001)
  *                                                                   RedTeamWins                                       //0x05B4(0x0004)
  *                                                                   BlueTeamWins                                      //0x05B8(0x0004)
  *                                                                   TeamsLocked                                       //0x05BC(0x0001)
  *                                                                   RANDOMIZER_MODE                                   //0x05BD(0x0001)
  ConnectedPlayers_Copy*                                              ConnectedPlayers_Copy                             //0x05C0(0x0010)
  Survivor_Starts*                                                    Survivor_Starts                                   //0x05D0(0x0010)
  wavespawn_starts*                                                   wavespawn_starts                                  //0x05E0(0x0010)
  GameTypeChanged__DelegateSignature*                                 GameTypeChanged                                   //0x05F0(0x0010)
  *                                                                   waveModeLives                                     //0x0600(0x0004)
  RoundStarted__DelegateSignature*                                    RoundStarted                                      //0x0608(0x0010)
  *                                                                   waveModePreRoundTime                              //0x0618(0x0004)
  PlayerLoggedIn__DelegateSignature*                                  PlayerLoggedIn                                    //0x0620(0x0010)
  *                                                                   numHumanPlayers                                   //0x0630(0x0004)
  PreRoundStart__DelegateSignature*                                   PreRoundStart                                     //0x0638(0x0010)
  *                                                                   numAiPlayers                                      //0x0648(0x0004)
  *                                                                   disableKillStreakSounds                           //0x064C(0x0001)
  AllowedCharacters*                                                  AllowedCharacters                                 //0x0650(0x0010)
  *                                                                   DesiredBots                                       //0x0660(0x0004)
  BotSet*                                                             BotSet                                            //0x0668(0x0050)
  *                                                                   LOADOUTMODE                                       //0x06B8(0x0001)
};


class DT_BurstRifle_C : public DamageType_Base_C
{
};


class DT_Chakram_C : public DamageType_Base_C
{
};


class Chameleon_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  Material*                                                           Create Effect Material Instance                   //0x0000(0x0229)
  *                                                                   Mojo Func                                         //0x0000(0x0229)
  *                                                                   Pyramid Func                                      //0x0000(0x0229)
  *                                                                   Zone Func                                         //0x0000(0x0229)
  *                                                                   Lens Func                                         //0x0000(0x0229)
  *                                                                   Grid Cell Func                                    //0x0000(0x0229)
  *                                                                   Haunted Func                                      //0x0000(0x0229)
  *                                                                   Screen Fire Func                                  //0x0000(0x0229)
  *                                                                   Selective Color Func                              //0x0000(0x0229)
  *                                                                   Melted World Func                                 //0x0000(0x0229)
  *                                                                   Hazy Lights Func                                  //0x0000(0x0229)
  *                                                                   Disco Ball Func                                   //0x0000(0x0229)
  *                                                                   Camera Shake Func                                 //0x0000(0x0229)
  *                                                                   Colored AO Func                                   //0x0000(0x0229)
  *                                                                   Infected Func                                     //0x0000(0x0229)
  *                                                                   Actor Featurette Func                             //0x0000(0x0229)
  Features*                                                           Set Advanced Effect Features (No Custom Depth)    //0x0000(0x0229)
  Features*                                                           Set Advanced Effect Features                      //0x0000(0x0229)
  *                                                                   Wired Func                                        //0x0000(0x0229)
  *                                                                   Sketch Func                                       //0x0000(0x0229)
  *                                                                   Alarm Func                                        //0x0000(0x0229)
  *                                                                   Digitize Func                                     //0x0000(0x0229)
  *                                                                   World Glitch Func                                 //0x0000(0x0229)
  *                                                                   World Splash Func                                 //0x0000(0x0229)
  *                                                                   Snow Func                                         //0x0000(0x0229)
  *                                                                   Letterboxing Func                                 //0x0000(0x0229)
  *                                                                   Kaleidescope Func                                 //0x0000(0x0229)
  *                                                                   2D Transform Func                                 //0x0000(0x0229)
  Material*                                                           SetEffectPriority                                 //0x0000(0x0229)
  *                                                                   ApplyChameleonSettings                            //0x0000(0x0229)
  *                                                                   Custom Depth Highlighter (NC) Func                //0x0000(0x0229)
  *                                                                   Custom Depth Highlighter Func                     //0x0000(0x0229)
  *                                                                   Neon Func                                         //0x0000(0x0229)
  *                                                                   Frost Func                                        //0x0000(0x0229)
  *                                                                   Anamorphic Lens Flares Func                       //0x0000(0x0229)
  *                                                                   Toon Shading Func                                 //0x0000(0x0229)
  *                                                                   Sharpen Func                                      //0x0000(0x0229)
  *                                                                   Screen Decals Func                                //0x0000(0x0229)
  *                                                                   Screen Damage Func                                //0x0000(0x0229)
  *                                                                   Magic Transitions Func                            //0x0000(0x0229)
  *                                                                   Drawing Func                                      //0x0000(0x0229)
  *                                                                   Distance Distortion Func                          //0x0000(0x0229)
  *                                                                   Sonar Func                                        //0x0000(0x0229)
  *                                                                   Circles Func                                      //0x0000(0x0229)
  CallFunc_GetDataTableRowFromName_OutRow*                            LOOK Func                                         //0x0000(0x0229)
  *                                                                   TV Noise Func                                     //0x0000(0x0229)
  *                                                                   Tiles Func                                        //0x0000(0x0229)
  *                                                                   Squares Func                                      //0x0000(0x0229)
  *                                                                   Pulse Func                                        //0x0000(0x0229)
  *                                                                   Kuwahara Func                                     //0x0000(0x0229)
  *                                                                   Iridescent Func                                   //0x0000(0x0229)
  *                                                                   Invert Func                                       //0x0000(0x0229)
  *                                                                   Hard Emboss Func                                  //0x0000(0x0229)
  *                                                                   Emboss Func                                       //0x0000(0x0229)
  *                                                                   Edge Detect Func                                  //0x0000(0x0229)
  *                                                                   ASCII Func                                        //0x0000(0x0229)
  *                                                                   Bleach Func                                       //0x0000(0x0229)
  *                                                                   Scratches Func                                    //0x0000(0x0229)
  *                                                                   Distance Fog Func                                 //0x0000(0x0229)
  *                                                                   Screen Waves Func                                 //0x0000(0x0229)
  *                                                                   Radial Blur Func                                  //0x0000(0x0229)
  *                                                                   Monochrome Func                                   //0x0000(0x0229)
  *                                                                   Hue Panner Func                                   //0x0000(0x0229)
  *                                                                   MonitorFX Func                                    //0x0000(0x0229)
  *                                                                   Glitch Func                                       //0x0000(0x0229)
  *                                                                   Comic Func                                        //0x0000(0x0229)
  *                                                                   Colorize Func                                     //0x0000(0x0229)
  *                                                                   Blur Func                                         //0x0000(0x0229)
  *                                                                   Pixel Dissolve Func                               //0x0000(0x0229)
  *                                                                   Drug Func                                         //0x0000(0x0229)
  *                                                                   Alcohol Func                                      //0x0000(0x0229)
  *                                                                   Mosaic Func                                       //0x0000(0x0229)
  *                                                                   Screen Drops Func                                 //0x0000(0x0229)
  *                                                                   InitChameleon                                     //0x0000(0x0229)
  *                                                                   Channel Swapper Func                              //0x0000(0x0229)
  *                                                                   Channel Clamper Func                              //0x0000(0x0229)
  *                                                                   UserConstructionScript                            //0x0229(0x0229)
  OtherActor*                                                         ReceiveActorBeginOverlap                          //0x0229(0x0229)
  *                                                                   ReceiveTick                                       //0x0229(0x0229)
  K2Node_Event_OtherActor*                                            ExecuteUbergraph_Chameleon                        //0x0000(0x0229)
  MaterialBillboardComponent*                                         MaterialBillboard                                 //0x0220(0x0008)
  PostProcessComponent*                                               InternalPP                                        //0x0228(0x0008)
  BoxComponent*                                                       Bounding Box                                      //0x0230(0x0008)
  *                                                                   Bleach Bypass                                     //0x0238(0x0001)
  *                                                                   Distance Fog                                      //0x0239(0x0001)
  *                                                                   Channel Clamper                                   //0x023A(0x0001)
  Material*                                                           mChannelClamper                                   //0x0240(0x0008)
  MaterialInstanceDynamic*                                            iChannelClamper                                   //0x0248(0x0008)
  *                                                                   Channel Swapper                                   //0x0250(0x0001)
  *                                                                   Screen Drops                                      //0x0251(0x0001)
  *                                                                   Alcohol                                           //0x0252(0x0001)
  *                                                                   Drug                                              //0x0253(0x0001)
  *                                                                   Mosaic                                            //0x0254(0x0001)
  *                                                                   Pixel Dissolve                                    //0x0255(0x0001)
  *                                                                   Blur                                              //0x0256(0x0001)
  Material*                                                           mBleachBypass                                     //0x0258(0x0008)
  Material*                                                           mDistanceFog                                      //0x0260(0x0008)
  Material*                                                           mChannelSwapper                                   //0x0268(0x0008)
  Material*                                                           mScreenDrops                                      //0x0270(0x0008)
  Material*                                                           mAlcohol                                          //0x0278(0x0008)
  Material*                                                           mDrug                                             //0x0280(0x0008)
  Material*                                                           mMosaic                                           //0x0288(0x0008)
  Material*                                                           mPixelDissolve                                    //0x0290(0x0008)
  Material*                                                           mBlur                                             //0x0298(0x0008)
  *                                                                   Channel Clamper Red Intensity                     //0x02A0(0x0004)
  *                                                                   Channel Clamper Green Intensity                   //0x02A4(0x0004)
  *                                                                   Channel Clamper Blue Intensity                    //0x02A8(0x0004)
  MaterialInstanceDynamic*                                            iBleachBypass                                     //0x02B0(0x0008)
  MaterialInstanceDynamic*                                            iDistanceFog                                      //0x02B8(0x0008)
  MaterialInstanceDynamic*                                            iChannelSwapper                                   //0x02C0(0x0008)
  ColorChannels*                                                      Channel Swapper Red                               //0x02C8(0x0001)
  ColorChannels*                                                      Channel Swapper Green                             //0x02C9(0x0001)
  ColorChannels*                                                      Channel Swapper Blue                              //0x02CA(0x0001)
  MaterialInstanceDynamic*                                            iScreenDrops                                      //0x02D0(0x0008)
  MaterialInstanceDynamic*                                            iAlcohol                                          //0x02D8(0x0008)
  MaterialInstanceDynamic*                                            iDrug                                             //0x02E0(0x0008)
  MaterialInstanceDynamic*                                            iMosaic                                           //0x02E8(0x0008)
  MaterialInstanceDynamic*                                            iPixelDissolve                                    //0x02F0(0x0008)
  MaterialInstanceDynamic*                                            iBlur                                             //0x02F8(0x0008)
  Texture2D*                                                          Screen Drops Layer 1 Map                          //0x0300(0x0008)
  *                                                                   Screen Drops Layer 1 Intensity                    //0x0308(0x0004)
  *                                                                   Mosaic Scale                                      //0x030C(0x0004)
  *                                                                   Alcohol Speed                                     //0x0310(0x0004)
  *                                                                   Drug Speed                                        //0x0314(0x0004)
  *                                                                   Pixel Dissolve Intensity                          //0x0318(0x0004)
  *                                                                   Blur Amount                                       //0x031C(0x0004)
  *                                                                   ASCII                                             //0x0320(0x0001)
  Material*                                                           mAscii                                            //0x0328(0x0008)
  MaterialInstanceDynamic*                                            iAscii                                            //0x0330(0x0008)
  *                                                                   Colorize                                          //0x0338(0x0001)
  Material*                                                           mColorize                                         //0x0340(0x0008)
  MaterialInstanceDynamic*                                            iColorize                                         //0x0348(0x0008)
  *                                                                   Colorize Detail                                   //0x0350(0x0004)
  *                                                                   Comic                                             //0x0354(0x0001)
  Material*                                                           mComic                                            //0x0358(0x0008)
  MaterialInstanceDynamic*                                            iComic                                            //0x0360(0x0008)
  LinearColor*                                                        Comic Blend Color                                 //0x0368(0x0010)
  *                                                                   Comic Threshold                                   //0x0378(0x0004)
  *                                                                   Edge Detect                                       //0x037C(0x0001)
  Material*                                                           mEdgeDetect                                       //0x0380(0x0008)
  MaterialInstanceDynamic*                                            iEdgeDetect                                       //0x0388(0x0008)
  *                                                                   Emboss                                            //0x0390(0x0001)
  Material*                                                           mEmboss                                           //0x0398(0x0008)
  MaterialInstanceDynamic*                                            iEmboss                                           //0x03A0(0x0008)
  *                                                                   Glitch                                            //0x03A8(0x0001)
  Material*                                                           mGlitch                                           //0x03B0(0x0008)
  MaterialInstanceDynamic*                                            iGlitch                                           //0x03B8(0x0008)
  *                                                                   Glitch Speed                                      //0x03C0(0x0004)
  *                                                                   Glitch Lines                                      //0x03C4(0x0004)
  *                                                                   Glitch Blocking                                   //0x03C8(0x0004)
  *                                                                   Monitor Effects                                   //0x03CC(0x0001)
  Material*                                                           mGrainNLines                                      //0x03D0(0x0008)
  MaterialInstanceDynamic*                                            iGrainNLines                                      //0x03D8(0x0008)
  *                                                                   Monitor Effects Line Count                        //0x03E0(0x0004)
  *                                                                   Monitor Effects Intensity 1                       //0x03E4(0x0004)
  *                                                                   Monitor Effects Intensity 2                       //0x03E8(0x0004)
  *                                                                   Hard Emboss                                       //0x03EC(0x0001)
  Material*                                                           mHardEmboss                                       //0x03F0(0x0008)
  MaterialInstanceDynamic*                                            iHardEmboss                                       //0x03F8(0x0008)
  *                                                                   Hue Panner                                        //0x0400(0x0001)
  Material*                                                           mHuePanner                                        //0x0408(0x0008)
  MaterialInstanceDynamic*                                            iHuePanner                                        //0x0410(0x0008)
  *                                                                   Hue Panner Speed                                  //0x0418(0x0004)
  *                                                                   Monochrome                                        //0x041C(0x0001)
  Material*                                                           mMonochrome                                       //0x0420(0x0008)
  MaterialInstanceDynamic*                                            iMonochrome                                       //0x0428(0x0008)
  LinearColor*                                                        Monochrome Color                                  //0x0430(0x0010)
  *                                                                   Radial Blur                                       //0x0440(0x0001)
  Material*                                                           mRadialBlur                                       //0x0448(0x0008)
  MaterialInstanceDynamic*                                            iRadialBlur                                       //0x0450(0x0008)
  *                                                                   Radial Blur Width                                 //0x0458(0x0004)
  *                                                                   Radial Blur Samples                               //0x045C(0x0004)
  *                                                                   Scratches                                         //0x0460(0x0001)
  Material*                                                           mScratches                                        //0x0468(0x0008)
  MaterialInstanceDynamic*                                            iScratches                                        //0x0470(0x0008)
  *                                                                   Screen Waves                                      //0x0478(0x0001)
  Material*                                                           mScreenWaves                                      //0x0480(0x0008)
  MaterialInstanceDynamic*                                            iScreenWaves                                      //0x0488(0x0008)
  *                                                                   Screen Waves X Tiling                             //0x0490(0x0004)
  *                                                                   Screen Waves Y Tiling                             //0x0494(0x0004)
  *                                                                   Monitor Effects Distortion 1                      //0x0498(0x0004)
  *                                                                   Monitor Effects Distortion 2                      //0x049C(0x0004)
  *                                                                   Monitor Effects Picture Scale                     //0x04A0(0x0004)
  LinearColor*                                                        Distance Fog Near Color                           //0x04A4(0x0010)
  LinearColor*                                                        Distance Fog Far Color                            //0x04B4(0x0010)
  *                                                                   Distance Fog Distance                             //0x04C4(0x0004)
  Texture2D*                                                          Scratches Distortion Map                          //0x04C8(0x0008)
  *                                                                   Scratches Distortion Amount                       //0x04D0(0x0004)
  LinearColor*                                                        Scratches Color                                   //0x04D4(0x0010)
  *                                                                   Screen Drops Layer 1 Speed                        //0x04E4(0x0004)
  *                                                                   Screen Drops Layer 1 Noise                        //0x04E8(0x0004)
  Texture2D*                                                          Screen Drops Layer 2 Map                          //0x04F0(0x0008)
  *                                                                   Screen Drops Layer 2 Intensity                    //0x04F8(0x0004)
  *                                                                   Screen Drops Layer 2 Speed                        //0x04FC(0x0004)
  *                                                                   Screen Drops Layer 2 Noise                        //0x0500(0x0004)
  Texture2D*                                                          Screen Drops Layer 3 Map                          //0x0508(0x0008)
  *                                                                   Screen Drops Layer 3 Intensity                    //0x0510(0x0004)
  *                                                                   Screen Drops Layer 3 Speed                        //0x0514(0x0004)
  *                                                                   Invert                                            //0x0518(0x0001)
  Material*                                                           mInvert                                           //0x0520(0x0008)
  MaterialInstanceDynamic*                                            iInvert                                           //0x0528(0x0008)
  *                                                                   Iridescent                                        //0x0530(0x0001)
  Material*                                                           mIridescent                                       //0x0538(0x0008)
  MaterialInstanceDynamic*                                            iIridescent                                       //0x0540(0x0008)
  *                                                                   Iridescent Iridescence                            //0x0548(0x0004)
  *                                                                   Kuwahara                                          //0x054C(0x0001)
  Material*                                                           mKuwahara                                         //0x0550(0x0008)
  MaterialInstanceDynamic*                                            iKuwahara                                         //0x0558(0x0008)
  *                                                                   Kuwahara Amount                                   //0x0560(0x0004)
  *                                                                   Pulse                                             //0x0564(0x0001)
  Material*                                                           mPulse                                            //0x0568(0x0008)
  MaterialInstanceDynamic*                                            iPulse                                            //0x0570(0x0008)
  *                                                                   Pulse Center X                                    //0x0578(0x0004)
  *                                                                   Pulse Center Y                                    //0x057C(0x0004)
  *                                                                   Pulse Speed                                       //0x0580(0x0004)
  *                                                                   Pulse Smoothing                                   //0x0584(0x0004)
  *                                                                   Squares                                           //0x0588(0x0001)
  Material*                                                           mSquares                                          //0x0590(0x0008)
  MaterialInstanceDynamic*                                            iSquares                                          //0x0598(0x0008)
  *                                                                   Squares Scale                                     //0x05A0(0x0004)
  *                                                                   Squares Ratio                                     //0x05A4(0x0004)
  *                                                                   Squares Radius                                    //0x05A8(0x0004)
  *                                                                   Squares Brightness                                //0x05AC(0x0004)
  *                                                                   Tiles                                             //0x05B0(0x0001)
  Material*                                                           mTiles                                            //0x05B8(0x0008)
  MaterialInstanceDynamic*                                            iTiles                                            //0x05C0(0x0008)
  *                                                                   Tiles Centered                                    //0x05C8(0x0001)
  *                                                                   Tiles Count                                       //0x05CC(0x0004)
  *                                                                   TV Noise                                          //0x05D0(0x0001)
  Material*                                                           mTVNoise                                          //0x05D8(0x0008)
  MaterialInstanceDynamic*                                            iTVNoise                                          //0x05E0(0x0008)
  *                                                                   TV Noise Contrast                                 //0x05E8(0x0004)
  *                                                                   TV Noise Intensity                                //0x05EC(0x0004)
  PostProcessSettings*                                                Native Post Process                               //0x05F0(0x0530)
  *                                                                   LOOK!                                             //0x0B20(0x0001)
  LOOKPresetsEnum*                                                    LOOK! Presets                                     //0x0B21(0x0001)
  *                                                                   Circles                                           //0x0B22(0x0001)
  Material*                                                           mCircles                                          //0x0B28(0x0008)
  MaterialInstanceDynamic*                                            iCircles                                          //0x0B30(0x0008)
  *                                                                   Circles Ratio                                     //0x0B38(0x0004)
  *                                                                   Circles Tiling                                    //0x0B3C(0x0004)
  *                                                                   Sonar                                             //0x0B40(0x0001)
  Material*                                                           mSonar                                            //0x0B48(0x0008)
  MaterialInstanceDynamic*                                            iSonar                                            //0x0B50(0x0008)
  LinearColor*                                                        Sonar Color                                       //0x0B58(0x0010)
  *                                                                   Sonar Color Intensity                             //0x0B68(0x0004)
  *                                                                   Sonar Depth                                       //0x0B6C(0x0004)
  *                                                                   Sonar Wave Distance                               //0x0B70(0x0004)
  *                                                                   Sonar Distortion Intensity                        //0x0B74(0x0004)
  *                                                                   Sonar Sharpness                                   //0x0B78(0x0004)
  *                                                                   Alcohol Offset                                    //0x0B7C(0x0004)
  *                                                                   Distance Distortion                               //0x0B80(0x0001)
  Material*                                                           mDistanceDistortion                               //0x0B88(0x0008)
  MaterialInstanceDynamic*                                            iDistanceDistortion                               //0x0B90(0x0008)
  Texture2D*                                                          Distance Distortion Normal                        //0x0B98(0x0008)
  *                                                                   Distance Distortion Amount                        //0x0BA0(0x0004)
  *                                                                   Distance Distortion Edge Distance                 //0x0BA4(0x0004)
  *                                                                   Distance Distortion Edge Fading                   //0x0BA8(0x0004)
  *                                                                   Distance Distortion Movement Speed                //0x0BAC(0x0004)
  *                                                                   Distance Distortion Movement Scale                //0x0BB0(0x0004)
  *                                                                   Distance Distortion Affected Brightness           //0x0BB4(0x0004)
  *                                                                   Distance Distortion Unaffected Brightness         //0x0BB8(0x0004)
  *                                                                   Drawing                                           //0x0BBC(0x0001)
  Material*                                                           mDrawing                                          //0x0BC0(0x0008)
  MaterialInstanceDynamic*                                            iDrawing                                          //0x0BC8(0x0008)
  Texture2D*                                                          Drawing Paper Texture                             //0x0BD0(0x0008)
  DrawingNoiseModes*                                                  Drawing Noise Algorithm                           //0x0BD8(0x0001)
  *                                                                   Drawing Ink Amount                                //0x0BDC(0x0004)
  *                                                                   Drawing Liner Amount                              //0x0BE0(0x0004)
  LinearColor*                                                        Drawing Blending Color                            //0x0BE4(0x0010)
  *                                                                   Magic Transitions                                 //0x0BF4(0x0001)
  Material*                                                           mMagicTransitions                                 //0x0BF8(0x0008)
  MaterialInstanceDynamic*                                            iMagicTransitions                                 //0x0C00(0x0008)
  Texture2D*                                                          Magic Transitions Final Texture                   //0x0C08(0x0008)
  Texture2D*                                                          Magic Transitions Mask Texture                    //0x0C10(0x0008)
  *                                                                   Magic Transitions Transition Amount               //0x0C18(0x0004)
  *                                                                   Magic Transitions Flashing Intensity              //0x0C1C(0x0004)
  *                                                                   Magic Transitions Flashing Tolerance              //0x0C20(0x0004)
  LinearColor*                                                        Magic Transitions Flashing Color                  //0x0C24(0x0010)
  *                                                                   Screen Damage                                     //0x0C34(0x0001)
  Material*                                                           mScreenDamage                                     //0x0C38(0x0008)
  MaterialInstanceDynamic*                                            iScreenDamage                                     //0x0C40(0x0008)
  Texture2D*                                                          Screen Damage Texture                             //0x0C48(0x0008)
  *                                                                   Screen Damage Intensity                           //0x0C50(0x0004)
  *                                                                   Screen Damage Distortion                          //0x0C54(0x0004)
  LinearColor*                                                        Screen Damage Tint                                //0x0C58(0x0010)
  *                                                                   Screen Damage Edge Size                           //0x0C68(0x0004)
  *                                                                   Screen Damage Fading                              //0x0C6C(0x0004)
  *                                                                   Screen Decals                                     //0x0C70(0x0001)
  Material*                                                           mScreenDecals                                     //0x0C78(0x0008)
  MaterialInstanceDynamic*                                            iScreenDecals                                     //0x0C80(0x0008)
  Texture2D*                                                          Screen Decals Slot 1 - Texture                    //0x0C88(0x0008)
  *                                                                   Screen Decals Slot 1 - Distortion                 //0x0C90(0x0004)
  *                                                                   Screen Decals Slot 1 - Intensity                  //0x0C94(0x0004)
  *                                                                   Screen Decals Slot 1 - Position X                 //0x0C98(0x0004)
  *                                                                   Screen Decals Slot 1 - Position Y                 //0x0C9C(0x0004)
  *                                                                   Screen Decals Slot 1 - Rotation                   //0x0CA0(0x0004)
  *                                                                   Screen Decals Slot 1 - Size                       //0x0CA4(0x0004)
  Texture2D*                                                          Screen Decals Slot 2 - Texture                    //0x0CA8(0x0008)
  *                                                                   Screen Decals Slot 2 - Distortion                 //0x0CB0(0x0004)
  *                                                                   Screen Decals Slot 2 - Intensity                  //0x0CB4(0x0004)
  *                                                                   Screen Decals Slot 2 - Position X                 //0x0CB8(0x0004)
  *                                                                   Screen Decals Slot 2 - Position Y                 //0x0CBC(0x0004)
  *                                                                   Screen Decals Slot 2 - Rotation                   //0x0CC0(0x0004)
  *                                                                   Screen Decals Slot 2 - Size                       //0x0CC4(0x0004)
  Texture2D*                                                          Screen Decals Slot 3 - Texture                    //0x0CC8(0x0008)
  *                                                                   Screen Decals Slot 3 - Distortion                 //0x0CD0(0x0004)
  *                                                                   Screen Decals Slot 3 - Intensity                  //0x0CD4(0x0004)
  *                                                                   Screen Decals Slot 3 - Position X                 //0x0CD8(0x0004)
  *                                                                   Screen Decals Slot 3 - Position Y                 //0x0CDC(0x0004)
  *                                                                   Screen Decals Slot 3 - Rotation                   //0x0CE0(0x0004)
  *                                                                   Screen Decals Slot 3 - Size                       //0x0CE4(0x0004)
  Texture2D*                                                          Screen Decals Slot 4 - Texture                    //0x0CE8(0x0008)
  *                                                                   Screen Decals Slot 4 - Distortion                 //0x0CF0(0x0004)
  *                                                                   Screen Decals Slot 4 - Intensity                  //0x0CF4(0x0004)
  *                                                                   Screen Decals Slot 4 - Position X                 //0x0CF8(0x0004)
  *                                                                   Screen Decals Slot 4 - Position Y                 //0x0CFC(0x0004)
  *                                                                   Screen Decals Slot 4 - Rotation                   //0x0D00(0x0004)
  *                                                                   Screen Decals Slot 4 - Size                       //0x0D04(0x0004)
  *                                                                   Sharpen                                           //0x0D08(0x0001)
  Material*                                                           mSharpen                                          //0x0D10(0x0008)
  MaterialInstanceDynamic*                                            iSharpen                                          //0x0D18(0x0008)
  *                                                                   Sharpen Value                                     //0x0D20(0x0004)
  *                                                                   Toon Shading                                      //0x0D24(0x0001)
  Material*                                                           mToonShading                                      //0x0D28(0x0008)
  MaterialInstanceDynamic*                                            iToonShading                                      //0x0D30(0x0008)
  *                                                                   Toon Shading Use Diffuse Buffer                   //0x0D38(0x0001)
  *                                                                   Toon Shading Details                              //0x0D3C(0x0004)
  *                                                                   Toon Shading Fading                               //0x0D40(0x0004)
  *                                                                   Toon Shading Size                                 //0x0D44(0x0004)
  *                                                                   Toon Shading Sobel Strength                       //0x0D48(0x0004)
  *                                                                   Anamorphic Lens Flares                            //0x0D4C(0x0001)
  Material*                                                           mAnamorphicLensFlares                             //0x0D50(0x0008)
  MaterialInstanceDynamic*                                            iAnamorphicLensFlares                             //0x0D58(0x0008)
  *                                                                   Anamorphic Lens Flares Linear Color               //0x0D60(0x0004)
  *                                                                   Anamorphic Lens Flares Exposure Scale             //0x0D64(0x0004)
  *                                                                   Anamorphic Lens Flares Threshold                  //0x0D68(0x0004)
  *                                                                   Anamorphic Lens Flares Intensity                  //0x0D6C(0x0004)
  *                                                                   Anamorphic Lens Flares Steps                      //0x0D70(0x0004)
  *                                                                   Anamorphic Lens Flares Length                     //0x0D74(0x0004)
  LinearColor*                                                        Anamorphic Lens Flares Tint                       //0x0D78(0x0010)
  *                                                                   Frost                                             //0x0D88(0x0001)
  Material*                                                           mFrost                                            //0x0D90(0x0008)
  MaterialInstanceDynamic*                                            iFrost                                            //0x0D98(0x0008)
  Texture2D*                                                          Frost Texture                                     //0x0DA0(0x0008)
  *                                                                   Frost Colorization                                //0x0DA8(0x0004)
  *                                                                   Frost Distortion Strength                         //0x0DAC(0x0004)
  *                                                                   Frost Visible Area                                //0x0DB0(0x0004)
  LinearColor*                                                        ASCII Color Multiplier                            //0x0DB4(0x0010)
  *                                                                   Neon                                              //0x0DC4(0x0001)
  Material*                                                           mNeon                                             //0x0DC8(0x0008)
  MaterialInstanceDynamic*                                            iNeon                                             //0x0DD0(0x0008)
  LinearColor*                                                        Neon Color                                        //0x0DD8(0x0010)
  *                                                                   Neon Noise                                        //0x0DE8(0x0004)
  *                                                                   Neon Power                                        //0x0DEC(0x0004)
  *                                                                   Custom Depth Highlighter                          //0x0DF0(0x0001)
  Material*                                                           mCustomDepthHighlighter                           //0x0DF8(0x0008)
  MaterialInstanceDynamic*                                            iCustomDepthHighlighter                           //0x0E00(0x0008)
  LinearColor*                                                        Custom Depth Highlighter Highlight Color          //0x0E08(0x0010)
  *                                                                   Custom Depth Highlighter Highlight Opacity        //0x0E18(0x0004)
  *                                                                   Custom Depth Highlighter (Clip)                   //0x0E1C(0x0001)
  Material*                                                           mCustomDepthHighlighterClip                       //0x0E20(0x0008)
  MaterialInstanceDynamic*                                            iCustomDepthHighlighterClip                       //0x0E28(0x0008)
  LinearColor*                                                        Custom Depth Highlighter (C) Highlight Color      //0x0E30(0x0010)
  *                                                                   Custom Depth Highlighter (C) Highlight Opacity    //0x0E40(0x0004)
  *                                                                   Edge Detect Threshold                             //0x0E44(0x0004)
  *                                                                   Scratches Noising                                 //0x0E48(0x0004)
  *                                                                   Enabled                                           //0x0E4C(0x0001)
  *                                                                   Unbound                                           //0x0E4D(0x0001)
  AllMaterials*                                                       AllMaterials                                      //0x0E50(0x0010)
  *                                                                   Screen Drops Layer 3 Noise                        //0x0E60(0x0004)
  LinearColor*                                                        Screen Drops Diffuse Color                        //0x0E64(0x0010)
  *                                                                   Screen Drops Splashes Amount                      //0x0E74(0x0004)
  *                                                                   Screen Drops Splashes Tiling                      //0x0E78(0x0004)
  *                                                                   Screen Drops Splashes Intensity                   //0x0E7C(0x0004)
  *                                                                   Screen Drops Bump                                 //0x0E80(0x0004)
  *                                                                   2D Transform                                      //0x0E84(0x0001)
  Material*                                                           m2DTransform                                      //0x0E88(0x0008)
  MaterialInstanceDynamic*                                            i2DTransform                                      //0x0E90(0x0008)
  *                                                                   Kaleidescope                                      //0x0E98(0x0001)
  Material*                                                           mKaleidescope                                     //0x0EA0(0x0008)
  MaterialInstanceDynamic*                                            iKaleidescope                                     //0x0EA8(0x0008)
  *                                                                   Letterboxing                                      //0x0EB0(0x0001)
  Material*                                                           mLetterboxing                                     //0x0EB8(0x0008)
  MaterialInstanceDynamic*                                            iLetterboxing                                     //0x0EC0(0x0008)
  *                                                                   Snow                                              //0x0EC8(0x0001)
  Material*                                                           mSnow                                             //0x0ED0(0x0008)
  MaterialInstanceDynamic*                                            iSnow                                             //0x0ED8(0x0008)
  *                                                                   2D Transform Anchor Point (X)                     //0x0EE0(0x0004)
  *                                                                   2D Transform Anchor Point (Y)                     //0x0EE4(0x0004)
  *                                                                   2D Transform Rotate                               //0x0EE8(0x0004)
  *                                                                   2D Transform Pan (X)                              //0x0EEC(0x0004)
  *                                                                   2D Transform Pan (Y)                              //0x0EF0(0x0004)
  *                                                                   2D Transform Scale (X)                            //0x0EF4(0x0004)
  *                                                                   2D Transform Scale (Y)                            //0x0EF8(0x0004)
  *                                                                   2D Transform Tiled                                //0x0EFC(0x0001)
  *                                                                   Kaleidescope Scale                                //0x0F00(0x0004)
  *                                                                   Kaleidescope Factor A                             //0x0F04(0x0004)
  *                                                                   Kaleidescope Factor B                             //0x0F08(0x0004)
  Texture2D*                                                          Letterboxing Texture                              //0x0F10(0x0008)
  *                                                                   Letterboxing Size                                 //0x0F18(0x0004)
  *                                                                   Letterboxing Horizontal                           //0x0F1C(0x0001)
  *                                                                   Letterboxing Vertical                             //0x0F1D(0x0001)
  *                                                                   Snow Amount                                       //0x0F20(0x0004)
  *                                                                   Snow Distortion                                   //0x0F24(0x0004)
  *                                                                   Snow Size                                         //0x0F28(0x0004)
  *                                                                   Snow Speed (X)                                    //0x0F2C(0x0004)
  *                                                                   Snow Speed (Y)                                    //0x0F30(0x0004)
  *                                                                   Drawing Animation Speed                           //0x0F34(0x0004)
  *                                                                   Distance Fog Edge Sharpness                       //0x0F38(0x0004)
  *                                                                   Screen Drops Diffuse Intensity                    //0x0F3C(0x0004)
  *                                                                   World Splash                                      //0x0F40(0x0001)
  Material*                                                           mWorldSplash                                      //0x0F48(0x0008)
  MaterialInstanceDynamic*                                            iWorldSplash                                      //0x0F50(0x0008)
  *                                                                   World Splash Distort                              //0x0F58(0x0004)
  *                                                                   World Splash Smoothness                           //0x0F5C(0x0004)
  *                                                                   World Splash Tiling                               //0x0F60(0x0004)
  LinearColor*                                                        World Splash Color Tint                           //0x0F64(0x0010)
  *                                                                   Blur Samples                                      //0x0F74(0x0004)
  LinearColor*                                                        Frost Color                                       //0x0F78(0x0010)
  *                                                                   Comic PreMultiplier                               //0x0F88(0x0004)
  *                                                                   Comic Desaturation                                //0x0F8C(0x0004)
  *                                                                   World Glitch                                      //0x0F90(0x0001)
  Material*                                                           mWorldGlitch                                      //0x0F98(0x0008)
  MaterialInstanceDynamic*                                            iWorldGlitch                                      //0x0FA0(0x0008)
  *                                                                   World Glitch Animated                             //0x0FA8(0x0001)
  *                                                                   World Glitch Animation Speed                      //0x0FAC(0x0004)
  *                                                                   World Glitch Distance                             //0x0FB0(0x0004)
  *                                                                   World Glitch Distance Sharpness                   //0x0FB4(0x0004)
  *                                                                   World Glitch Phase                                //0x0FB8(0x0004)
  *                                                                   World Glitch Power                                //0x0FBC(0x0004)
  Vector*                                                             World Glitch Grid Position                        //0x0FC0(0x000C)
  Vector*                                                             World Glitch Grid Size                            //0x0FCC(0x000C)
  *                                                                   Digitize                                          //0x0FD8(0x0001)
  Material*                                                           mDigitize                                         //0x0FE0(0x0008)
  MaterialInstanceDynamic*                                            iDigitize                                         //0x0FE8(0x0008)
  LinearColor*                                                        Digitize Cell Color                               //0x0FF0(0x0010)
  Vector*                                                             Digitize Cell Position                            //0x1000(0x000C)
  Vector*                                                             Digitize Cell Position Over Time                  //0x100C(0x000C)
  *                                                                   Digitize Distance                                 //0x1018(0x0004)
  *                                                                   Digitize Distance Sharpness                       //0x101C(0x0004)
  *                                                                   Digitize Cell Size                                //0x1020(0x0004)
  *                                                                   Digitize Cell Color Multiplier                    //0x1024(0x0004)
  *                                                                   Digitize Cell Distortion                          //0x1028(0x0004)
  *                                                                   Digitize Background Color Multiplier              //0x102C(0x0004)
  *                                                                   Alarm                                             //0x1030(0x0001)
  Material*                                                           mAlarm                                            //0x1038(0x0008)
  MaterialInstanceDynamic*                                            iAlarm                                            //0x1040(0x0008)
  LinearColor*                                                        Alarm Color                                       //0x1048(0x0010)
  *                                                                   Alarm Speed                                       //0x1058(0x0004)
  *                                                                   Sketch                                            //0x105C(0x0001)
  Material*                                                           mSketch                                           //0x1060(0x0008)
  MaterialInstanceDynamic*                                            iSketch                                           //0x1068(0x0008)
  LinearColor*                                                        Sketch Color                                      //0x1070(0x0010)
  LinearColor*                                                        Sketch Background Color                           //0x1080(0x0010)
  *                                                                   Sketch Power                                      //0x1090(0x0004)
  *                                                                   Sketch Pattern Rotation                           //0x1094(0x0004)
  *                                                                   Sketch Pattern Speed                              //0x1098(0x0004)
  LinearColor*                                                        Custom Depth Highlighter Outline Color            //0x109C(0x0010)
  *                                                                   Custom Depth Highlighter Outline Opacity          //0x10AC(0x0004)
  LinearColor*                                                        Custom Depth Highlighter (C) Outline Color        //0x10B0(0x0010)
  *                                                                   Custom Depth Highlighter (C) Outline Opacity      //0x10C0(0x0004)
  *                                                                   Wired                                             //0x10C4(0x0001)
  MaterialInstanceDynamic*                                            iWired                                            //0x10C8(0x0008)
  Material*                                                           mWired                                            //0x10D0(0x0008)
  LinearColor*                                                        Wired Color                                       //0x10D8(0x0010)
  *                                                                   Wired Power                                       //0x10E8(0x0004)
  AdvancedEffectFeatures*                                             Mosaic - Advanced                                 //0x10F0(0x0038)
  AdvancedEffectFeatures*                                             Drug - Advanced                                   //0x1128(0x0038)
  AdvancedEffectFeatures*                                             Alcohol - Advanced                                //0x1160(0x0038)
  AdvancedEffectFeatures*                                             Pixel Dissolve - Advanced                         //0x1198(0x0038)
  AdvancedEffectFeatures*                                             Channel Clamper - Advanced                        //0x11D0(0x0038)
  AdvancedEffectFeatures*                                             Channel Swapper - Advanced                        //0x1208(0x0038)
  AdvancedEffectFeatures*                                             Bleach Bypass - Advanced                          //0x1240(0x0038)
  AdvancedEffectFeatures*                                             Blur - Advanced                                   //0x1278(0x0038)
  *                                                                   ASCII PreMultiplier                               //0x12B0(0x0004)
  AdvancedEffectFeatures*                                             ASCII - Advanced                                  //0x12B8(0x0038)
  AdvancedEffectFeatures*                                             Colorize - Advanced                               //0x12F0(0x0038)
  AdvancedEffectFeatures*                                             Edge Detect - Advanced                            //0x1328(0x0038)
  AdvancedEffectFeatures*                                             Emboss - Advanced                                 //0x1360(0x0038)
  AdvancedEffectFeatures*                                             Hard Emboss - Advanced                            //0x1398(0x0038)
  *                                                                   Glitch Grid Distortion Power                      //0x13D0(0x0004)
  *                                                                   Glitch Grid Distortion Size                       //0x13D4(0x0004)
  *                                                                   Glitch Grid Distortion Speed                      //0x13D8(0x0004)
  AdvancedEffectFeatures*                                             Glitch - Advanced                                 //0x13E0(0x0038)
  *                                                                   Monitor Effects Tiled                             //0x1418(0x0001)
  AdvancedEffectFeatures*                                             Monitor Effects - Advanced                        //0x1420(0x0038)
  AdvancedEffectFeatures*                                             Hue Panner - Advanced                             //0x1458(0x0038)
  AdvancedEffectFeatures*                                             Monochrome - Advanced                             //0x1490(0x0038)
  Vector2D*                                                           Radial Blur Center                                //0x14C8(0x0008)
  Vector2D*                                                           Radial Blur Sample Offset                         //0x14D0(0x0008)
  AdvancedEffectFeatures*                                             Radial Blur - Advanced                            //0x14D8(0x0038)
  AdvancedEffectFeatures*                                             Scratches - Advanced                              //0x1510(0x0038)
  AdvancedEffectFeatures*                                             Screen Waves - Advanced                           //0x1548(0x0038)
  AdvancedEffectFeatures*                                             Distance Fog - Advanced                           //0x1580(0x0038)
  AdvancedEffectFeatures*                                             Screen Drops - Advanced                           //0x15B8(0x0038)
  AdvancedEffectFeatures*                                             Invert - Advanced                                 //0x15F0(0x0038)
  AdvancedEffectFeatures*                                             Iridescent - Advanced                             //0x1628(0x0038)
  AdvancedEffectFeatures*                                             Kuwahara - Advanced                               //0x1660(0x0038)
  AdvancedEffectFeatures*                                             Pulse - Advanced                                  //0x1698(0x0038)
  AdvancedEffectFeatures*                                             Squares - Advanced                                //0x16D0(0x0038)
  AdvancedEffectFeatures*                                             Tiles - Advanced                                  //0x1708(0x0038)
  AdvancedEffectFeatures*                                             TV Noise - Advanced                               //0x1740(0x0038)
  AdvancedEffectFeatures*                                             Circles - Advanced                                //0x1778(0x0038)
  AdvancedEffectFeatures*                                             Sonar - Advanced                                  //0x17B0(0x0038)
  AdvancedEffectFeatures*                                             Distance Distortion - Advanced                    //0x17E8(0x0038)
  AdvancedEffectFeatures*                                             Drawing - Advanced                                //0x1820(0x0038)
  AdvancedEffectFeatures*                                             Magic Transitions - Advanced                      //0x1858(0x0038)
  AdvancedEffectFeatures*                                             Screen Damage - Advanced                          //0x1890(0x0038)
  AdvancedEffectFeatures*                                             Screen Decals - Advanced                          //0x18C8(0x0038)
  AdvancedEffectFeatures*                                             Sharpen - Advanced                                //0x1900(0x0038)
  AdvancedEffectFeatures*                                             Toon Shading - Advanced                           //0x1938(0x0038)
  AdvancedEffectFeatures*                                             Anamorphic Lens Flares - Advanced                 //0x1970(0x0038)
  AdvancedEffectFeatures*                                             Frost - Advanced                                  //0x19A8(0x0038)
  AdvancedEffectFeatures*                                             Neon - Advanced                                   //0x19E0(0x0038)
  AdvancedEffectFeaturesNoCustomDepth*                                Custom Depth Highlighter - Advanced               //0x1A18(0x0030)
  AdvancedEffectFeaturesNoCustomDepth*                                Custom Depth Highlighter (Clip) - Advanced        //0x1A48(0x0030)
  LinearColor*                                                        2D Transform Background Color                     //0x1A78(0x0010)
  AdvancedEffectFeatures*                                             2D Transform - Advanced                           //0x1A88(0x0038)
  AdvancedEffectFeatures*                                             Kaleidescope - Advanced                           //0x1AC0(0x0038)
  AdvancedEffectFeatures*                                             Letterboxing - Advanced                           //0x1AF8(0x0038)
  AdvancedEffectFeatures*                                             Snow - Advanced                                   //0x1B30(0x0038)
  AdvancedEffectFeatures*                                             World Splash - Advanced                           //0x1B68(0x0038)
  AdvancedEffectFeatures*                                             World Glitch - Advanced                           //0x1BA0(0x0038)
  AdvancedEffectFeatures*                                             Digitize - Advanced                               //0x1BD8(0x0038)
  AdvancedEffectFeatures*                                             Alarm - Advanced                                  //0x1C10(0x0038)
  AdvancedEffectFeatures*                                             Sketch - Advanced                                 //0x1C48(0x0038)
  AdvancedEffectFeatures*                                             Wired - Advanced                                  //0x1C80(0x0038)
  *                                                                   Comic Pattern Intensity                           //0x1CB8(0x0004)
  *                                                                   Comic Pattern Line Count                          //0x1CBC(0x0004)
  *                                                                   Comic Pattern Rotation                            //0x1CC0(0x0004)
  AdvancedEffectFeatures*                                             Comic - Advanced                                  //0x1CC8(0x0038)
  *                                                                   Actor Featurette                                  //0x1D00(0x0001)
  Material*                                                           mActorFeaturette                                  //0x1D08(0x0008)
  MaterialInstanceDynamic*                                            iActorFeaturette                                  //0x1D10(0x0008)
  LinearColor*                                                        Actor Featurette Background Multiplier            //0x1D18(0x0010)
  *                                                                   Actor Featurette Background Desaturation          //0x1D28(0x0004)
  LinearColor*                                                        Actor Featurette Foreground Multiplier            //0x1D2C(0x0010)
  *                                                                   Actor Featurette Foreground Saturation            //0x1D3C(0x0004)
  *                                                                   Actor Featurette Blur Amount                      //0x1D40(0x0004)
  *                                                                   Actor Featurette Blur Samples                     //0x1D44(0x0004)
  *                                                                   Actor Featurette Stencil Mask                     //0x1D48(0x0004)
  AdvancedEffectFeaturesNoCustomDepth*                                Actor Featurette - Advanced                       //0x1D50(0x0030)
  *                                                                   Infected                                          //0x1D80(0x0001)
  Material*                                                           mInfected                                         //0x1D88(0x0008)
  MaterialInstanceDynamic*                                            iInfected                                         //0x1D90(0x0008)
  *                                                                   Infected Distortion Amount                        //0x1D98(0x0004)
  *                                                                   Infected Smoothness                               //0x1D9C(0x0004)
  *                                                                   Infected Speed                                    //0x1DA0(0x0004)
  *                                                                   Infected TransformZ                               //0x1DA4(0x0004)
  AdvancedEffectFeatures*                                             Infected - Advanced                               //0x1DA8(0x0038)
  *                                                                   Colored AO                                        //0x1DE0(0x0001)
  Material*                                                           mColoredAO                                        //0x1DE8(0x0008)
  MaterialInstanceDynamic*                                            iColoredAO                                        //0x1DF0(0x0008)
  LinearColor*                                                        Colored AO Color                                  //0x1DF8(0x0010)
  *                                                                   Colored AO Intensity                              //0x1E08(0x0004)
  AdvancedEffectFeatures*                                             Colored AO - Advanced                             //0x1E10(0x0038)
  *                                                                   Camera Shake                                      //0x1E48(0x0001)
  Material*                                                           mCameraShake                                      //0x1E50(0x0008)
  MaterialInstanceDynamic*                                            iCameraShake                                      //0x1E58(0x0008)
  *                                                                   Camera Shake Power (X)                            //0x1E60(0x0004)
  *                                                                   Camera Shake Power (Y)                            //0x1E64(0x0004)
  *                                                                   Camera Shake Frequency                            //0x1E68(0x0004)
  AdvancedEffectFeatures*                                             Camera Shake - Advanced                           //0x1E70(0x0038)
  *                                                                   Disco Ball                                        //0x1EA8(0x0001)
  Material*                                                           mDiscoBall                                        //0x1EB0(0x0008)
  MaterialInstanceDynamic*                                            iDiscoBall                                        //0x1EB8(0x0008)
  Vector3DN*                                                          Disco Ball WS Center                              //0x1EC0(0x000C)
  LinearColor*                                                        Disco Ball Color 1                                //0x1ECC(0x0010)
  LinearColor*                                                        Disco Ball Color 2                                //0x1EDC(0x0010)
  Vector*                                                             Disco Ball Block Scale                            //0x1EEC(0x000C)
  *                                                                   Disco Ball Block Distribution                     //0x1EF8(0x0004)
  *                                                                   Disco Ball Rotation Speed                         //0x1EFC(0x0004)
  *                                                                   Disco Ball Manual Rotation                        //0x1F00(0x0004)
  AdvancedEffectFeatures*                                             Disco Ball - Advanced                             //0x1F08(0x0038)
  *                                                                   Hazy Lights                                       //0x1F40(0x0001)
  Material*                                                           mHazyLights                                       //0x1F48(0x0008)
  MaterialInstanceDynamic*                                            iHazyLights                                       //0x1F50(0x0008)
  Vector2DN*                                                          Hazy Lights Move Speed                            //0x1F58(0x0008)
  Vector2DN*                                                          Hazy Lights Position                              //0x1F60(0x0008)
  AdvancedEffectFeatures*                                             Hazy Lights - Advanced                            //0x1F68(0x0038)
  *                                                                   Melted World                                      //0x1FA0(0x0001)
  Material*                                                           mMeltedWorld                                      //0x1FA8(0x0008)
  MaterialInstanceDynamic*                                            iMeltedWorld                                      //0x1FB0(0x0008)
  Vector*                                                             Melted World Size                                 //0x1FB8(0x000C)
  *                                                                   Melted World Distance                             //0x1FC4(0x0004)
  *                                                                   Melted World Power                                //0x1FC8(0x0004)
  *                                                                   Melted World Sharpness                            //0x1FCC(0x0004)
  AdvancedEffectFeatures*                                             Melted World - Advanced                           //0x1FD0(0x0038)
  *                                                                   Selective Color                                   //0x2008(0x0001)
  Material*                                                           mSelectiveColor                                   //0x2010(0x0008)
  MaterialInstanceDynamic*                                            iSelectiveColor                                   //0x2018(0x0008)
  LinearColor*                                                        Selective Color Mask Color                        //0x2020(0x0010)
  *                                                                   Selective Color Hue Tolerance                     //0x2030(0x0004)
  *                                                                   Selective Color Saturation Tolerance              //0x2034(0x0004)
  *                                                                   Selective Color Value Tolerance                   //0x2038(0x0004)
  AdvancedEffectFeatures*                                             Selective Color - Advanced                        //0x2040(0x0038)
  *                                                                   Screen Fire                                       //0x2078(0x0001)
  Material*                                                           mScreenFire                                       //0x2080(0x0008)
  MaterialInstanceDynamic*                                            iScreenFire                                       //0x2088(0x0008)
  LinearColor*                                                        Screen Fire Color                                 //0x2090(0x0010)
  *                                                                   Screen Fire Distortion Amount                     //0x20A0(0x0004)
  *                                                                   Screen Fire Mask Contrast                         //0x20A4(0x0004)
  *                                                                   Screen Fire Mask Scale                            //0x20A8(0x0004)
  *                                                                   Screen Fire Flame Tiling                          //0x20AC(0x0004)
  *                                                                   Screen Fire Speed                                 //0x20B0(0x0004)
  AdvancedEffectFeatures*                                             Screen Fire - Advanced                            //0x20B8(0x0038)
  *                                                                   Haunted                                           //0x20F0(0x0001)
  Material*                                                           mHaunted                                          //0x20F8(0x0008)
  MaterialInstanceDynamic*                                            iHaunted                                          //0x2100(0x0008)
  *                                                                   Haunted Amount                                    //0x2108(0x0004)
  *                                                                   Haunted Mask Scale                                //0x210C(0x0004)
  Texture2D*                                                          Haunted Texture                                   //0x2110(0x0008)
  *                                                                   Haunted Texture Scale                             //0x2118(0x0004)
  AdvancedEffectFeatures*                                             Haunted - Advanced                                //0x2120(0x0038)
  *                                                                   Grid Cell                                         //0x2158(0x0001)
  Material*                                                           mGridCell                                         //0x2160(0x0008)
  MaterialInstanceDynamic*                                            iGridCell                                         //0x2168(0x0008)
  *                                                                   Grid Cell Animated                                //0x2170(0x0001)
  *                                                                   Grid Cell Animation Speed                         //0x2174(0x0004)
  LinearColor*                                                        Grid Cell Color                                   //0x2178(0x0010)
  LinearColor*                                                        Grid Cell Void Color                              //0x2188(0x0010)
  *                                                                   Grid Cell Tiling                                  //0x2198(0x0004)
  *                                                                   Grid Cell Transition Amount                       //0x219C(0x0004)
  *                                                                   Lens Distortion                                   //0x21A0(0x0001)
  Material*                                                           mLensDistortion                                   //0x21A8(0x0008)
  MaterialInstanceDynamic*                                            iLensDistortion                                   //0x21B0(0x0008)
  *                                                                   Lens Distortion Optic Refinement                  //0x21B8(0x0004)
  *                                                                   Lens Distortion Optic Size                        //0x21BC(0x0004)
  *                                                                   Lens Distortion Optic Position X                  //0x21C0(0x0004)
  *                                                                   Lens Distortion Optic Position Y                  //0x21C4(0x0004)
  Texture2D*                                                          Lens Distortion Scope Texture                     //0x21C8(0x0008)
  *                                                                   Lens Distortion Scope Texture Scale X             //0x21D0(0x0004)
  *                                                                   Lens Distortion Scope Texture Scale Y             //0x21D4(0x0004)
  AdvancedEffectFeatures*                                             Lens Distortion - Advanced                        //0x21D8(0x0038)
  AdvancedEffectFeatures*                                             Grid Cell - Advanced                              //0x2210(0x0038)
  *                                                                   Zone                                              //0x2248(0x0001)
  Material*                                                           mZone                                             //0x2250(0x0008)
  MaterialInstanceDynamic*                                            iZone                                             //0x2258(0x0008)
  LinearColor*                                                        Zone Center                                       //0x2260(0x0010)
  *                                                                   Zone Radius                                       //0x2270(0x0004)
  *                                                                   Zone Edge Hardness                                //0x2274(0x0004)
  LinearColor*                                                        Zone Edge Color                                   //0x2278(0x0010)
  LinearColor*                                                        Zone Coverage Color                               //0x2288(0x0010)
  AdvancedEffectFeatures*                                             Zone - Advanced                                   //0x2298(0x0038)
  *                                                                   Pyramid                                           //0x22D0(0x0001)
  Material*                                                           mPyramid                                          //0x22D8(0x0008)
  MaterialInstanceDynamic*                                            iPyramid                                          //0x22E0(0x0008)
  *                                                                   Pyramid Masked                                    //0x22E8(0x0001)
  LinearColor*                                                        Pyramid Background Color                          //0x22EC(0x0010)
  *                                                                   Pyramid Width                                     //0x22FC(0x0004)
  *                                                                   Pyramid Pan                                       //0x2300(0x0004)
  *                                                                   Pyramid Tile Amount                               //0x2304(0x0004)
  AdvancedEffectFeatures*                                             Pyramid - Advanced                                //0x2308(0x0038)
  *                                                                   Mojo                                              //0x2340(0x0001)
  Material*                                                           mMojo                                             //0x2348(0x0008)
  MaterialInstanceDynamic*                                            iMojo                                             //0x2350(0x0008)
  *                                                                   Mojo Animated                                     //0x2358(0x0001)
  *                                                                   Mojo Animation Speed                              //0x235C(0x0004)
  Texture2D*                                                          Mojo Mask                                         //0x2360(0x0008)
  Texture2D*                                                          Mojo Distortion Map                               //0x2368(0x0008)
  *                                                                   Mojo Distortion Amount                            //0x2370(0x0004)
  LinearColor*                                                        Mojo Color                                        //0x2374(0x0010)
  *                                                                   Mojo Intensity                                    //0x2384(0x0004)
  *                                                                   Mojo Phase                                        //0x2388(0x0004)
  *                                                                   Mojo Tolerance                                    //0x238C(0x0004)
  AdvancedEffectFeatures*                                             Mojo - Advanced                                   //0x2390(0x0038)
};


class Pixel_Outline_Controller_C : public ActorComponent
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x00B0(0x0008)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   stencilTick                                       //0x0000(0x0229)
  K2Node_CreateDelegate_OutputDelegate*                               ExecuteUbergraph_Pixel_Outline_Controller         //0x0000(0x0229)
  PrimitiveComponents*                                                PrimitiveComponents                               //0x00B8(0x0010)
  *                                                                   StencilValue                                      //0x00C8(0x0004)
  *                                                                   Distance to Turn on                               //0x00CC(0x0004)
  *                                                                   Enabled                                           //0x00D0(0x0001)
  *                                                                   Team                                              //0x00D8(0x0010)
};


class DT_Poison_C : public DamageType_Base_C
{
};


class DT_Shuriken_C : public DamageType_Base_C
{
};


class DT_Magnum_Toxin_C : public DamageType_Base_C
{
};


class DT_Charlie_Kick_C : public DamageType_Base_C
{
};


class BP_Poison_DOT_C : public BP_DoT_Effect_Damage_Over_Time_C
{
};


class DT_Poison_Apply_C : public DT_Heal_C
{
};


class BP_Magnum_DOT_C : public BP_DoT_Effect_Damage_Over_Time_C
{
};


class BP_Shuriken_Projectile_C : public BP_Arrow_Projectile_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0358(0x0008)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   ReceiveTick                                       //0x0229(0x0229)
  Hit*                                                                Damage Testing SERVER ONLY                        //0x0229(0x0229)
  OtherActor*                                                         OnProjectileHitEvent                              //0x0229(0x0229)
  K2Node_Event_OtherActor*                                            ExecuteUbergraph_BP_Shuriken_Projectile           //0x0000(0x0229)
};


class BP_weaponBase_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  *                                                                   MegaWeapon_SpriteCheck                            //0x0000(0x0229)
  CallFunc_GetUserWidgetObject_ReturnValue*                           Legendary_Icon_Setup                              //0x0000(0x0229)
  *                                                                   onGroundMeshCheck                                 //0x0000(0x0229)
  CallFunc_CreateDynamicMaterialInstance_ReturnValue*                 Initialize Original Weapon Material               //0x0000(0x0229)
  *                                                                   Cloak Weapon                                      //0x0000(0x0229)
  *                                                                   OnRep_onGround?                                   //0x0000(0x0229)
  CallFunc_GetOwner_ReturnValue*                                      AmmoCostFunction                                  //0x0000(0x0229)
  CallFunc_SpawnSoundAttached_ReturnValue*                            PlayAltFireSound                                  //0x0000(0x0229)
  *                                                                   PlayNoAmmoSound                                   //0x0000(0x0229)
  CallFunc_SpawnSoundAttached_ReturnValue*                            PlayFireSound                                     //0x0000(0x0229)
  CallFunc_GetOwner_ReturnValue*                                      AmmoCheckFunction                                 //0x0000(0x0229)
  *                                                                   UserConstructionScript                            //0x0229(0x0229)
  *                                                                   Despawn__FinishedFunc                             //0x0000(0x0229)
  *                                                                   Despawn__UpdateFunc                               //0x0000(0x0229)
  *                                                                   reloadTimeline__FinishedFunc                      //0x0000(0x0229)
  *                                                                   reloadTimeline__UpdateFunc                        //0x0000(0x0229)
  *                                                                   Initialize                                        //0x0000(0x0229)
  *                                                                   FireWeapon                                        //0x0000(0x0229)
  *                                                                   CancelDespawn                                     //0x0000(0x0229)
  *                                                                   DespawnTimer                                      //0x0000(0x0229)
  *                                                                   onSwapIn                                          //0x0000(0x0229)
  *                                                                   onSwapOut                                         //0x0000(0x0229)
  SetOwner*                                                           OnPickUp                                          //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   OnDroppedNPC                                      //0x0000(0x0229)
  *                                                                   OnDropped                                         //0x0000(0x0229)
  *                                                                   AltFireRelease                                    //0x0000(0x0229)
  *                                                                   OnAltFirePress                                    //0x0000(0x0229)
  *                                                                   StartReloadTimeline                               //0x0000(0x0229)
  *                                                                   PutOnBack                                         //0x0000(0x0229)
  *                                                                   Cloak Weapon Multicast                            //0x0000(0x0229)
  *                                                                   Cloak Weapon Server                               //0x0000(0x0229)
  *                                                                   Cloak Handler                                     //0x0000(0x0229)
  *                                                                   OnFireRelease                                     //0x0000(0x0229)
  *                                                                   OnFirePress                                       //0x0000(0x0229)
  *                                                                   Update Instigator Weapon Info                     //0x0000(0x0229)
  *                                                                   StopReload                                        //0x0000(0x0229)
  *                                                                   FireCoolDown                                      //0x0000(0x0229)
  *                                                                   FireCoolDown_Finish                               //0x0000(0x0229)
  *                                                                   DeathItemSpawnedEvent                             //0x0000(0x0229)
  K2Node_CreateDelegate_OutputDelegate*                               ExecuteUbergraph_BP_weaponBase                    //0x0000(0x0229)
  *                                                                   UpdateAmmoDispatch__DelegateSignature             //0x0000(0x0229)
  *                                                                   WeaponFiredEvent__DelegateSignature               //0x0000(0x0229)
  MaterialBillboardComponent*                                         MEGA_WEAPON_LIGHT                                 //0x0220(0x0008)
  WidgetComponent*                                                    Legendary_Icon                                    //0x0228(0x0008)
  SkeletalMeshComponent*                                              onGroundMesh                                      //0x0230(0x0008)
  SceneComponent*                                                     left_hand_pos                                     //0x0238(0x0008)
  BoxComponent*                                                       Interactable Zone                                 //0x0240(0x0008)
  outline_controller_C*                                               outline_controller                                //0x0248(0x0008)
  SkeletalMeshComponent*                                              SkeletalMesh                                      //0x0250(0x0008)
  ButtonHint_Offset_C*                                                ButtonHint_Offset                                 //0x0258(0x0008)
  *                                                                   reloadTimeline_alpha_614C0C5041180514EE10DEB77A670C6F//0x0260(0x0004)
  ETimelineDirection*                                                 reloadTimeline__Direction_614C0C5041180514EE10DEB77A670C6F//0x0264(0x0001)
  TimelineComponent*                                                  reloadTimeline                                    //0x0268(0x0008)
  *                                                                   Despawn_time_2559FB2E432E4FDCA94983BA96B0DDFC     //0x0270(0x0004)
  ETimelineDirection*                                                 Despawn__Direction_2559FB2E432E4FDCA94983BA96B0DDFC//0x0274(0x0001)
  TimelineComponent*                                                  Despawn                                           //0x0278(0x0008)
  *                                                                   Name                                              //0x0280(0x0008)
  *                                                                   onGround?                                         //0x0288(0x0001)
  *                                                                   YawAim?                                           //0x0289(0x0001)
  *                                                                   Durability                                        //0x028C(0x0004)
  *                                                                   FireCost                                          //0x0290(0x0004)
  *                                                                   CanFire?                                          //0x0294(0x0001)
  Class*                                                              Damage Type                                       //0x0298(0x0008)
  BP_BaseAmmo_C*                                                      currentAmmo                                       //0x02A0(0x0008)
  *                                                                   usesAmmo?                                         //0x02A8(0x0001)
  Weapon_CrosshairTypes*                                              WeaponCrosshair_Type                              //0x02A9(0x0001)
  AmmoTypes*                                                          WeaponsAmmoType                                   //0x02AA(0x0001)
  *                                                                   KeyItem?                                          //0x02AB(0x0001)
  AmmoStruct*                                                         AmmoOnPickedUp                                    //0x02AC(0x001C)
  *                                                                   uniqueEquip?                                      //0x02C8(0x0001)
  WeaponTypes*                                                        Weapon Type                                       //0x02C9(0x0001)
  *                                                                   YawAimRighty?                                     //0x02CA(0x0001)
  SoundWave*                                                          walkingSound                                      //0x02D0(0x0008)
  PhysicsAsset*                                                       GroundPhysAsset                                   //0x02D8(0x0008)
  PhysicsAsset*                                                       InHandPhysAsset                                   //0x02E0(0x0008)
  SoundBase*                                                          FireSound                                         //0x02E8(0x0008)
  SoundBase*                                                          NoAmmoSound                                       //0x02F0(0x0008)
  *                                                                   canAltFire?                                       //0x02F8(0x0001)
  SoundBase*                                                          AltFireSound                                      //0x0300(0x0008)
  *                                                                   ImmuneToDespawn                                   //0x0308(0x0001)
  *                                                                   UpdateFreq_HIGH                                   //0x030C(0x0004)
  *                                                                   UpdateFreq_LOW                                    //0x0310(0x0004)
  *                                                                   reloadTimer                                       //0x0314(0x0004)
  *                                                                   Fire CoolDown                                     //0x0318(0x0004)
  *                                                                   Fire Delay                                        //0x031C(0x0004)
  *                                                                   inHand                                            //0x0320(0x0001)
  MaterialInterface*                                                  OriginalWeapon_Material                           //0x0328(0x0008)
  WeaponAnimType*                                                     WeaponAnimType                                    //0x0330(0x0001)
  WeaponFiredEvent__DelegateSignature*                                WeaponFiredEvent                                  //0x0338(0x0010)
  *                                                                   backSocket                                        //0x0348(0x0008)
  *                                                                   handSocket                                        //0x0350(0x0008)
  *                                                                   Spawner?                                          //0x0358(0x0001)
  SlateBrushAsset*                                                    Ability_Icon                                      //0x0360(0x0008)
  *                                                                   cloaked                                           //0x0368(0x0001)
  MaterialInstanceDynamic*                                            Cloaked_material                                  //0x0370(0x0008)
  Vector*                                                             LeftHand_Offset                                   //0x0378(0x000C)
  WeaponAltFireType*                                                  WeaponAltFireType                                 //0x0384(0x0001)
  *                                                                   legendary                                         //0x0385(0x0001)
  UpdateAmmoDispatch__DelegateSignature*                              UpdateAmmoDispatch                                //0x0388(0x0010)
  TimerHandle*                                                        FireCoolDownTimer                                 //0x0398(0x0008)
  BP_PlayerCharacter_C*                                               PlayerOwner                                       //0x03A0(0x0008)
  Class*                                                              UniqueWithClass                                   //0x03A8(0x0008)
  *                                                                   FireCoolDownAdjust                                //0x03B0(0x0004)
};


class BP_ProjectileGun_C : public BP_weaponBase_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x03B8(0x0008)
  ReturnValue*                                                        HitSoundGet                                       //0x0000(0x0229)
  ActorsToIgnore*                                                     AimTraceSwitch                                    //0x0000(0x0229)
  OutHits*                                                            TraceSwitch                                       //0x0000(0x0229)
  Actor*                                                              WeaknessMultiplier                                //0x0000(0x0229)
  DamagedActor*                                                       Additional Damage                                 //0x0000(0x0229)
  *                                                                   DamageFalloff                                     //0x0000(0x0229)
  Temp_object_Variable*                                               SpawnEffectHit1                                   //0x0000(0x0229)
  CallFunc_GetOwner_ReturnValue*                                      playCharAttackAnim                                //0x0000(0x0229)
  *                                                                   OnRep_LastProjectile                              //0x0000(0x0229)
  OwningWeapon*                                                       Shoot Projectile                                  //0x0000(0x0229)
  CallFunc_GetOwner_ReturnValue*                                      getInstigatorCameraFVector                        //0x0000(0x0229)
  HitActor*                                                           Calculate Projectile Position                     //0x0000(0x0229)
  *                                                                   Fire Projectile Event                             //0x0000(0x0229)
  OwningWeapon*                                                       Spawn Projectile SERVER_ONLY                      //0x0000(0x0229)
  OwningWeapon*                                                       Spawn Projectile                                  //0x0000(0x0229)
  OwningWeapon*                                                       Spawn Projectile Server                           //0x0000(0x0229)
  OwningWeapon*                                                       Spawn Projectile Multicast                        //0x0000(0x0229)
  *                                                                   Raycast Damage                                    //0x0000(0x0229)
  *                                                                   Last Projectile Notify                            //0x0000(0x0229)
  *                                                                   AmmoCostServer                                    //0x0000(0x0229)
  Hit*                                                                traceDamage Event                                 //0x0000(0x0229)
  Hit*                                                                Pierce Trace                                      //0x0000(0x0229)
  Target*                                                             spawnHit effect Event                             //0x0000(0x0229)
  *                                                                   set bullet spread                                 //0x0000(0x0229)
  *                                                                   server bullet spread                              //0x0000(0x0229)
  HitResult*                                                          Spawn Shoot Effects All                           //0x0000(0x0229)
  HitResult*                                                          Spawn Shoot Effects                               //0x0000(0x0229)
  HitResult*                                                          Spawn Shoot Effects Server                        //0x0000(0x0229)
  *                                                                   Projectile Fire Sound ALt                         //0x0000(0x0229)
  HitPlayer*                                                          AdditionalEffects                                 //0x0000(0x0229)
  K2Node_CustomEvent_OwningWeapon*                                    ExecuteUbergraph_BP_ProjectileGun                 //0x0000(0x0229)
  SceneComponent*                                                     muzzleParticle                                    //0x03C0(0x0008)
  *                                                                   MuzzleSocket                                      //0x03C8(0x0008)
  *                                                                   PlayerInt                                         //0x03D0(0x0004)
  Class*                                                              ProjectileToFire                                  //0x03D8(0x0008)
  ParticleSystem*                                                     muzzleEmitter                                     //0x03E0(0x0008)
  *                                                                   vectorTraceDistance                               //0x03E8(0x0004)
  Transform*                                                          ShootTransform                                    //0x03F0(0x0030)
  BP_ProjectileBase_C*                                                LastProjectile                                    //0x0420(0x0008)
  *                                                                   RaycastAim                                        //0x0428(0x0001)
  *                                                                   raycastDamageFire                                 //0x0429(0x0001)
  *                                                                   rayCastDamage                                     //0x042C(0x0004)
  *                                                                   postModDamage                                     //0x0430(0x0004)
  *                                                                   piercing?                                         //0x0434(0x0001)
  *                                                                   headShotMultiplier                                //0x0438(0x0004)
  Vector*                                                             damageImpact                                      //0x043C(0x000C)
  *                                                                   bulletSpread                                      //0x0448(0x0004)
  *                                                                   accurateBulletSpread                              //0x044C(0x0004)
  *                                                                   INaccurateBulletSpread                            //0x0450(0x0004)
  *                                                                   distanceDMGFalloff                                //0x0454(0x0001)
  *                                                                   MinimumDamage                                     //0x0458(0x0004)
  *                                                                   newRaycastDamage                                  //0x045C(0x0004)
  *                                                                   smokeTrailWidth                                   //0x0460(0x0004)
  *                                                                   CameraToCameraAiming                              //0x0464(0x0001)
  *                                                                   DamageEffectiveRange                              //0x0468(0x0004)
  RayCastHitSounds*                                                   RayCastHitSounds                                  //0x0470(0x0010)
  *                                                                   DistanceFromCamera_Trace                          //0x0480(0x0004)
  LinearColor*                                                        Trail_Color                                       //0x0484(0x0010)
  *                                                                   Damage_Trace_Radius                               //0x0494(0x0004)
  ParticleSystem*                                                     RayCast_Hit_Effect                                //0x0498(0x0008)
  Vector*                                                             RayCast_Hit_Effect_Size                           //0x04A0(0x000C)
  *                                                                   ScopeOnZoom                                       //0x04AC(0x0001)
  *                                                                   FireWeakness                                      //0x04B0(0x0004)
  *                                                                   HitSoundVolume                                    //0x04B4(0x0004)
  *                                                                   Trail Duration                                    //0x04B8(0x0004)
  *                                                                   speedOverride                                     //0x04BC(0x0004)
  *                                                                   OverrideSpeed                                     //0x04C0(0x0001)
  *                                                                   SphereTrace                                       //0x04C1(0x0001)
  *                                                                   ShotGunAim                                        //0x04C2(0x0001)
  *                                                                   RawTurretAim                                      //0x04C3(0x0001)
  *                                                                   AdditionalOnHitEffects                            //0x04C4(0x0001)
  *                                                                   headShotted                                       //0x04C5(0x0001)
};


class BP_MeleeBase_C : public BP_weaponBase_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x03B8(0x0008)
  CallFunc_GetOwner_ReturnValue*                                      CameraFVector                                     //0x0000(0x0229)
  AttachToComponent*                                                  SpawnHitTrail                                     //0x0000(0x0229)
  *                                                                   PlayAltFireSound                                  //0x0000(0x0229)
  CallFunc_SpawnSoundAttached_ReturnValue*                            PlayFireSound                                     //0x0000(0x0229)
  *                                                                   OnFire                                            //0x0000(0x0229)
  *                                                                   Trace                                             //0x0000(0x0229)
  *                                                                   ReceiveTick                                       //0x0229(0x0229)
  Target*                                                             Impulse                                           //0x0000(0x0229)
  *                                                                   Effect Multicast                                  //0x0000(0x0229)
  *                                                                   Effect Server                                     //0x0000(0x0229)
  Hit*                                                                CheckHits                                         //0x0000(0x0229)
  *                                                                   Effects                                           //0x0000(0x0229)
  *                                                                   Initialize                                        //0x0229(0x0229)
  *                                                                   OnFirePress                                       //0x0229(0x0229)
  Player Character*                                                   Melee WindupAnim                                  //0x0000(0x0229)
  Player Character*                                                   Melee Release Anim                                //0x0000(0x0229)
  *                                                                   AmmoCostServer                                    //0x0000(0x0229)
  DamagedActor*                                                       Melee Damage Event                                //0x0000(0x0229)
  *                                                                   Damaged Player Hit Event                          //0x0000(0x0229)
  Hit*                                                                CheckHits_Bot                                     //0x0000(0x0229)
  K2Node_CustomEvent_Target*                                          ExecuteUbergraph_BP_MeleeBase                     //0x0000(0x0229)
  *                                                                   Finish Trace Dispatcher__DelegateSignature        //0x0000(0x0229)
  SceneComponent*                                                     hitbox_start                                      //0x03C0(0x0008)
  SceneComponent*                                                     hitbox_end                                        //0x03C8(0x0008)
  SoundBase*                                                          FireSound_0                                       //0x03D0(0x0008)
  *                                                                   Damage                                            //0x03D8(0x0004)
  *                                                                   doTrace?                                          //0x03DC(0x0001)
  *                                                                   knockbackAmount                                   //0x03E0(0x0004)
  *                                                                   Character KnockBack                               //0x03E4(0x0004)
  Vector*                                                             lastStart                                         //0x03E8(0x000C)
  Vector*                                                             lastEnd                                           //0x03F4(0x000C)
  *                                                                   TracedBefore                                      //0x0400(0x0001)
  HitActors*                                                          HitActors                                         //0x0408(0x0010)
  SoundBase*                                                          HitPlayer_Sound                                   //0x0418(0x0008)
  SoundBase*                                                          HitElse_Sound                                     //0x0420(0x0008)
  *                                                                   Sound_PitchVariance?                              //0x0428(0x0001)
  ParticleSystemComponent*                                            currentTrail                                      //0x0430(0x0008)
  *                                                                   TraceDuration                                     //0x0438(0x0004)
  *                                                                   SwingCooldown                                     //0x043C(0x0004)
  *                                                                   delayBeforeRelease                                //0x0440(0x0004)
  *                                                                   delayBeforeTrace                                  //0x0444(0x0004)
  *                                                                   Hit_Radius                                        //0x0448(0x0004)
  Finish Trace Dispatcher__DelegateSignature*                         Finish Trace Dispatcher                           //0x0450(0x0010)
  ParticleSystem*                                                     meleeTrail                                        //0x0460(0x0008)
  HitResult*                                                          Hit                                               //0x0468(0x0088)
  Vector*                                                             AimDirectionP                                     //0x04F0(0x000C)
  Vector*                                                             CharLaunchBias                                    //0x04FC(0x000C)
};


class BP_Melee_Wrench_C : public BP_MeleeBase_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0508(0x0008)
  *                                                                   OnFirePress                                       //0x0229(0x0229)
  *                                                                   ExecuteUbergraph_BP_Melee_Wrench                  //0x0000(0x0229)
};


class BP_Melee_Spike_Bat_C : public BP_MeleeBase_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0508(0x0008)
  *                                                                   OnFirePress                                       //0x0229(0x0229)
  DamagedActor*                                                       Melee Damage Event                                //0x0229(0x0229)
  K2Node_Event_DamagedActor*                                          ExecuteUbergraph_BP_Melee_Spike_Bat               //0x0000(0x0229)
  StaticMeshComponent*                                                StaticMesh                                        //0x0510(0x0008)
};


class BP_ChargeGun_Base_C : public BP_ProjectileGun_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x04C8(0x0008)
  *                                                                   Cloak Weapon                                      //0x0229(0x0229)
  *                                                                   HideHookToggle                                    //0x0000(0x0229)
  *                                                                   GetMuzzleLocation                                 //0x0000(0x0229)
  *                                                                   OnFireRelease                                     //0x0229(0x0229)
  *                                                                   OnFirePress                                       //0x0229(0x0229)
  *                                                                   Charge Check                                      //0x0000(0x0229)
  *                                                                   Charge Start Server                               //0x0000(0x0229)
  *                                                                   Charge Start Multicast                            //0x0000(0x0229)
  *                                                                   Post Shot Mg                                      //0x0000(0x0229)
  *                                                                   FireCoolDown_Finish                               //0x0229(0x0229)
  OwningWeapon*                                                       Spawn Projectile Server                           //0x0229(0x0229)
  *                                                                   OnAltFirePress                                    //0x0229(0x0229)
  *                                                                   AltFireRelease                                    //0x0229(0x0229)
  *                                                                   Post Shot Server                                  //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   Charge Ticking                                    //0x0000(0x0229)
  CallFunc_SpawnEmitterAttached_ReturnValue*                          ExecuteUbergraph_BP_ChargeGun_Base                //0x0000(0x0229)
  StaticMeshComponent*                                                HookDummy                                         //0x04D0(0x0008)
  *                                                                   Charge                                            //0x04D8(0x0004)
  *                                                                   Is Charging                                       //0x04DC(0x0001)
  *                                                                   tickFloat                                         //0x04E0(0x0004)
  Actor*                                                              heldTarget                                        //0x04E8(0x0008)
  *                                                                   holdingSomething                                  //0x04F0(0x0001)
  Transform*                                                          Shoot Transform Client                            //0x0500(0x0030)
  *                                                                   MaxCharge                                         //0x0530(0x0004)
  BP_PlayerCharacter_C*                                               playerCharacter                                   //0x0538(0x0008)
  *                                                                   was charging                                      //0x0540(0x0001)
  TimerHandle*                                                        chargeTimer                                       //0x0548(0x0008)
  *                                                                   ChargeReq                                         //0x0550(0x0004)
};


class BP_Energy_Bow_bm_C : public BP_ChargeGun_Base_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0558(0x0008)
  *                                                                   UserConstructionScript                            //0x0229(0x0229)
  *                                                                   Charge Start Multicast                            //0x0229(0x0229)
  *                                                                   Post Shot Mg                                      //0x0229(0x0229)
  CallFunc_SpawnEmitterAttached_ReturnValue*                          ExecuteUbergraph_BP_Energy_Bow_bm                 //0x0000(0x0229)
  StaticMeshComponent*                                                StaticMesh                                        //0x0560(0x0008)
  TimerHandle*                                                        AutoFireTimer                                     //0x0568(0x0008)
};


class BP_TheFinalCoil_C : public BP_ChargeGun_Base_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0558(0x0008)
  *                                                                   UserConstructionScript                            //0x0229(0x0229)
  *                                                                   Charge Start Multicast                            //0x0229(0x0229)
  *                                                                   Post Shot Mg                                      //0x0229(0x0229)
  *                                                                   Charge Ticking                                    //0x0229(0x0229)
  DmgChars*                                                           Server Lightning Multicast                        //0x0000(0x0229)
  Characters*                                                         Server Lightning Event                            //0x0000(0x0229)
  *                                                                   Lightning scan client                             //0x0000(0x0229)
  *                                                                   serverCharge                                      //0x0000(0x0229)
  *                                                                   multiCharge                                       //0x0000(0x0229)
  *                                                                   OnDropped                                         //0x0229(0x0229)
  *                                                                   cancel charge SERVER                              //0x0000(0x0229)
  *                                                                   cancel charge MULTI                               //0x0000(0x0229)
  *                                                                   DeathItemSpawnedEvent                             //0x0229(0x0229)
  Temp_object_Variable*                                               ExecuteUbergraph_BP_TheFinalCoil                  //0x0000(0x0229)
  PointLightComponent*                                                PointLight                                        //0x0560(0x0008)
  StaticMeshComponent*                                                ElecField                                         //0x0568(0x0008)
  AudioComponent*                                                     ele_chargeSound                                   //0x0570(0x0008)
  *                                                                   ele_damageRadius                                  //0x0578(0x0004)
  ele_damageActors*                                                   ele_damageActors                                  //0x0580(0x0010)
  *                                                                   ele_damage                                        //0x0590(0x0004)
  CurveFloat*                                                         curveGrowth                                       //0x0598(0x0008)
  *                                                                   suicided                                          //0x05A0(0x0001)
};


class BP_Bow_Weapon_C : public BP_ChargeGun_Base_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0558(0x0008)
  *                                                                   UserConstructionScript                            //0x0229(0x0229)
  *                                                                   Charge Start Multicast                            //0x0229(0x0229)
  *                                                                   Post Shot Mg                                      //0x0229(0x0229)
  CallFunc_SpawnEmitterAttached_ReturnValue*                          ExecuteUbergraph_BP_Bow_Weapon                    //0x0000(0x0229)
  StaticMeshComponent*                                                StaticMesh                                        //0x0560(0x0008)
};


class Ability_Shuriken_C : public BP_ChargeGun_Base_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0558(0x0008)
  *                                                                   Charge Start Multicast                            //0x0229(0x0229)
  *                                                                   Post Shot Mg                                      //0x0229(0x0229)
  *                                                                   Burst                                             //0x0000(0x0229)
  *                                                                   Burst Window                                      //0x0000(0x0229)
  *                                                                   Charge Check                                      //0x0229(0x0229)
  *                                                                   MultiCastLaunch                                   //0x0000(0x0229)
  *                                                                   ServerLaunch                                      //0x0000(0x0229)
  *                                                                   ReceiveTick                                       //0x0229(0x0229)
  K2Node_CreateDelegate_OutputDelegate*                               ExecuteUbergraph_Ability_Shuriken                 //0x0000(0x0229)
  *                                                                   Current Fire                                      //0x0560(0x0004)
  TimerHandle*                                                        BurstTimer                                        //0x0568(0x0008)
  *                                                                   TimebetweenShots_Burst                            //0x0570(0x0004)
};


class BP_Gwen_Alchemy_01_C : public BP_ChargeGun_Base_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0558(0x0008)
  *                                                                   UserConstructionScript                            //0x0229(0x0229)
  *                                                                   Charge Start Multicast                            //0x0229(0x0229)
  *                                                                   Post Shot Mg                                      //0x0229(0x0229)
  *                                                                   Switch Element                                    //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   Element Change                                    //0x0000(0x0229)
  Actor*                                                              Remove UI                                         //0x0000(0x0229)
  *                                                                   OnDropped                                         //0x0229(0x0229)
  *                                                                   OnAltFirePress                                    //0x0229(0x0229)
  *                                                                   Switch Element Server                             //0x0000(0x0229)
  *                                                                   Buff Refresh                                      //0x0000(0x0229)
  *                                                                   elementSwitchCooldownOver                         //0x0000(0x0229)
  Temp_class_Variable*                                                ExecuteUbergraph_BP_Gwen_Alchemy_01               //0x0000(0x0229)
  *                                                                   ELEMENT_CHANGED__DelegateSignature                //0x0000(0x0229)
  ParticleSystemComponent*                                            ParticleSystem                                    //0x0560(0x0008)
  Gwen_Elements*                                                      current_gwen_element                              //0x0568(0x0001)
  BP_Alchemic_Buff_Damage_C*                                          Current_Self_Buff                                 //0x0570(0x0008)
  Widget_Gwen_Elements_C*                                             GwenUI                                            //0x0578(0x0008)
  ELEMENT_CHANGED__DelegateSignature*                                 ELEMENT_CHANGED                                   //0x0580(0x0010)
  AudioComponent*                                                     currentSoundObject                                //0x0590(0x0008)
  TimerHandle*                                                        elementSwitchCooldown                             //0x0598(0x0008)
  TimerHandle*                                                        BuffRefresher                                     //0x05A0(0x0008)
};


class BP_Rocket_Pick_C : public BP_MeleeBase_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0508(0x0008)
  *                                                                   stopAlarm                                         //0x0000(0x0229)
  *                                                                   OnFirePress                                       //0x0229(0x0229)
  *                                                                   Charge Check Server                               //0x0000(0x0229)
  *                                                                   Charge Start Server                               //0x0000(0x0229)
  *                                                                   Charge Start Multicast                            //0x0000(0x0229)
  *                                                                   OnFireRelease                                     //0x0229(0x0229)
  *                                                                   Effect Multicast                                  //0x0229(0x0229)
  *                                                                   Charge Fail Multicast                             //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   Multi Charge Check                                //0x0000(0x0229)
  *                                                                   Charging                                          //0x0000(0x0229)
  *                                                                   Start Charge                                      //0x0000(0x0229)
  *                                                                   Initialize                                        //0x0229(0x0229)
  *                                                                   OnDropped                                         //0x0229(0x0229)
  *                                                                   OnFire                                            //0x0229(0x0229)
  K2Node_CreateDelegate_OutputDelegate*                               ExecuteUbergraph_BP_Rocket_Pick                   //0x0000(0x0229)
  PointLightComponent*                                                PointLight                                        //0x0510(0x0008)
  SceneComponent*                                                     trail                                             //0x0518(0x0008)
  ParticleSystemComponent*                                            chargeFire                                        //0x0520(0x0008)
  *                                                                   Is Charging                                       //0x0528(0x0001)
  *                                                                   Charge                                            //0x052C(0x0004)
  *                                                                   MaxCharge                                         //0x0530(0x0004)
  TimerHandle*                                                        Charging Timer                                    //0x0538(0x0008)
  AudioComponent*                                                     alarmsound                                        //0x0540(0x0008)
  *                                                                   OverCharge                                        //0x0548(0x0004)
  *                                                                   disableSelfDamage                                 //0x054C(0x0001)
  SoundBase*                                                          TrainHorn                                         //0x0550(0x0008)
  SoundBase*                                                          Alarm                                             //0x0558(0x0008)
};


class BP_MeleePickaxe_C : public BP_MeleeBase_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0508(0x0008)
  *                                                                   OnFirePress                                       //0x0229(0x0229)
  *                                                                   ExecuteUbergraph_BP_MeleePickaxe                  //0x0000(0x0229)
  *                                                                   Charge                                            //0x0510(0x0004)
  *                                                                   Is Charging                                       //0x0514(0x0001)
};


class BP_SpecialPick_C : public BP_MeleePickaxe_C
{
};


class BP_Lantern_3_C : public BP_weaponBase_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x03B8(0x0008)
  CallFunc_GetOwner_ReturnValue*                                      SetAmmo                                           //0x0000(0x0229)
  CallFunc_GetOwner_ReturnValue*                                      GetAmmo                                           //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   turnOn                                            //0x0000(0x0229)
  *                                                                   turnOff                                           //0x0000(0x0229)
  *                                                                   ReceiveTick                                       //0x0229(0x0229)
  *                                                                   Oil Tick                                          //0x0000(0x0229)
  *                                                                   OnFirePress                                       //0x0229(0x0229)
  *                                                                   manualShutOff                                     //0x0000(0x0229)
  *                                                                   Initialize                                        //0x0229(0x0229)
  *                                                                   turnOffServer                                     //0x0000(0x0229)
  *                                                                   turnOffMulticast                                  //0x0000(0x0229)
  *                                                                   turnOnServer                                      //0x0000(0x0229)
  *                                                                   turnOnMulticast                                   //0x0000(0x0229)
  *                                                                   onSwapOut                                         //0x0229(0x0229)
  *                                                                   onSwapIn                                          //0x0229(0x0229)
  *                                                                   ExecuteUbergraph_BP_Lantern                       //0x0000(0x0229)
  SphereComponent*                                                    lightFlame_Trigger                                //0x03C0(0x0008)
  PointLightComponent*                                                PointLight1                                       //0x03C8(0x0008)
  ParticleSystemComponent*                                            ParticleSystem                                    //0x03D0(0x0008)
  ButtonHint_Offset_C*                                                ButtonHint_Offset1                                //0x03D8(0x0008)
  *                                                                   onPost?                                           //0x03E0(0x0001)
  *                                                                   hasFuel                                           //0x03E1(0x0001)
  *                                                                   tickFloat                                         //0x03E4(0x0004)
  *                                                                   lanternOn?                                        //0x03E8(0x0001)
  *                                                                   onIntensity                                       //0x03EC(0x0004)
};


class BP_GrappleGun_C : public BP_ProjectileGun_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x04C8(0x0008)
  *                                                                   Flag Check                                        //0x0000(0x0229)
  CallFunc_GetInstigatorController_ReturnValue*                       FlagErrorText                                     //0x0000(0x0229)
  *                                                                   HideHookToggle                                    //0x0000(0x0229)
  *                                                                   GetMuzzleLocation                                 //0x0000(0x0229)
  *                                                                   ReceiveTick                                       //0x0229(0x0229)
  *                                                                   ReturnedHook                                      //0x0000(0x0229)
  *                                                                   OnFireRelease                                     //0x0229(0x0229)
  *                                                                   OnFirePress                                       //0x0229(0x0229)
  holdTarget*                                                         Hold Target                                       //0x0000(0x0229)
  *                                                                   onSwapOut                                         //0x0229(0x0229)
  *                                                                   Drop Held Object                                  //0x0000(0x0229)
  *                                                                   ReturnedHookSERVER                                //0x0000(0x0229)
  *                                                                   ReturnedHookEvent                                 //0x0000(0x0229)
  *                                                                   Charge Check Server                               //0x0000(0x0229)
  *                                                                   Charge Start Server                               //0x0000(0x0229)
  *                                                                   Charge Start Multicast                            //0x0000(0x0229)
  *                                                                   Post Shot Mg                                      //0x0000(0x0229)
  *                                                                   Charge Fail Multicast                             //0x0000(0x0229)
  *                                                                   Set Shoot Transform Multicast                     //0x0000(0x0229)
  *                                                                   Set Shoot Transform Server                        //0x0000(0x0229)
  K2Node_CustomEvent_holdTarget*                                      ExecuteUbergraph_BP_GrappleGun                    //0x0000(0x0229)
  StaticMeshComponent*                                                HookDummy1                                        //0x04D0(0x0008)
  StaticMeshComponent*                                                HookDummy                                         //0x04D8(0x0008)
  *                                                                   Returned                                          //0x04E0(0x0001)
  *                                                                   Charge                                            //0x04E4(0x0004)
  *                                                                   Is Charging                                       //0x04E8(0x0001)
  *                                                                   tickFloat                                         //0x04EC(0x0004)
  Actor*                                                              heldTarget                                        //0x04F0(0x0008)
  *                                                                   holdingSomething                                  //0x04F8(0x0001)
  Transform*                                                          Shoot Transform Client                            //0x0500(0x0030)
  *                                                                   MaxCharge                                         //0x0530(0x0004)
  BP_PlayerCharacter_C*                                               playerCharacter                                   //0x0538(0x0008)
  *                                                                   TookAmmo                                          //0x0540(0x0001)
  *                                                                   was charging                                      //0x0541(0x0001)
};


class BP_TNT_C : public BP_ProjectileGun_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x04C8(0x0008)
  CallFunc_GetOwner_ReturnValue*                                      Play fire anim 2                                  //0x0000(0x0229)
  *                                                                   OnFirePress                                       //0x0229(0x0229)
  *                                                                   OnAltFirePress                                    //0x0229(0x0229)
  *                                                                   Throw Animation Multicast                         //0x0000(0x0229)
  *                                                                   Throw Animation Server                            //0x0000(0x0229)
  *                                                                   Detonate Event                                    //0x0000(0x0229)
  *                                                                   Detonate Multicast                                //0x0000(0x0229)
  *                                                                   Detonate Server                                   //0x0000(0x0229)
  *                                                                   Last Projectile Notify                            //0x0229(0x0229)
  CallFunc_GetOwner_ReturnValue*                                      ExecuteUbergraph_BP_TNT                           //0x0000(0x0229)
  SceneComponent*                                                     muzzle transform                                  //0x04D0(0x0008)
  *                                                                   disposable?                                       //0x04D8(0x0001)
  Actor*                                                              savedProjectile                                   //0x04E0(0x0008)
  *                                                                   DetonateAble                                      //0x04E8(0x0001)
};


class BP_Trap_Thrower_Weapon_C : public BP_TNT_C
{
};


class BP_TNT_Proximity_Weapon_C : public BP_TNT_C
{
};


class BP_TNT_Prox_Poison_Bomb_C : public BP_TNT_C
{
};


class BP_Giga_Proxy_Mine_C : public BP_TNT_C
{
};


class BP_Turret_Builder_C : public BP_TNT_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x04F0(0x0008)
  CallFunc_CreateDynamicMaterialInstance_ReturnValue*                 ToolBoxColor                                      //0x0000(0x0229)
  *                                                                   OnFirePress                                       //0x0229(0x0229)
  *                                                                   Spawn Turret Server                               //0x0000(0x0229)
  *                                                                   OnDropped                                         //0x0229(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   Cast Hologram                                     //0x0000(0x0229)
  *                                                                   Hologram Timer                                    //0x0000(0x0229)
  *                                                                   OnAltFirePress                                    //0x0229(0x0229)
  *                                                                   Throw Animation Multicast                         //0x0229(0x0229)
  *                                                                   Throw Animation Server                            //0x0229(0x0229)
  SetOwner*                                                           OnPickUp                                          //0x0229(0x0229)
  CallFunc_GetOwner_ReturnValue*                                      ExecuteUbergraph_BP_Turret_Builder                //0x0000(0x0229)
  *                                                                   showHologram?                                     //0x04F8(0x0001)
  *                                                                   CanPlant                                          //0x04F9(0x0001)
  *                                                                   PostRotate                                        //0x04FC(0x0004)
  MaterialInstanceDynamic*                                            HoloGramColor                                     //0x0500(0x0008)
  MaterialInstanceDynamic*                                            DynamicMaterial                                   //0x0508(0x0008)
};


class BP_Detonator_C : public BP_TNT_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x04F0(0x0008)
  *                                                                   OnFirePress                                       //0x0229(0x0229)
  *                                                                   update Bomb Count Text                            //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   onSwapIn                                          //0x0229(0x0229)
  *                                                                   onSwapOut                                         //0x0229(0x0229)
  *                                                                   Bomb Count Timer                                  //0x0000(0x0229)
  K2Node_CreateDelegate_OutputDelegate*                               ExecuteUbergraph_BP_Detonator                     //0x0000(0x0229)
  TextRenderComponent*                                                TextRender                                        //0x04F8(0x0008)
};


class BP_Rocket_Launcher_C : public BP_Detonator_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0500(0x0008)
  *                                                                   PlayFireSound                                     //0x0229(0x0229)
  *                                                                   ReceiveTick                                       //0x0229(0x0229)
  *                                                                   Last Projectile Notify                            //0x0229(0x0229)
  *                                                                   OnAltFirePress                                    //0x0229(0x0229)
  *                                                                   Check For Rocket Display                          //0x0000(0x0229)
  *                                                                   DebugFire                                         //0x0000(0x0229)
  *                                                                   DebugFireRepeat                                   //0x0000(0x0229)
  K2Node_CreateDelegate_OutputDelegate*                               ExecuteUbergraph_BP_Rocket_Launcher               //0x0000(0x0229)
  SkeletalMeshComponent*                                              fakeRocket                                        //0x0508(0x0008)
  *                                                                   canDetonate                                       //0x0510(0x0001)
};


class BP_Pistol_C : public BP_ProjectileGun_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x04C8(0x0008)
  *                                                                   OnDropped                                         //0x0229(0x0229)
  *                                                                   AltFireRelease                                    //0x0229(0x0229)
  *                                                                   Animation Sequence Server                         //0x0000(0x0229)
  *                                                                   Animation Sequence Multicast                      //0x0000(0x0229)
  *                                                                   OnAltFirePress                                    //0x0229(0x0229)
  *                                                                   OnFirePress                                       //0x0229(0x0229)
  *                                                                   Alt Fire Press Server                             //0x0000(0x0229)
  *                                                                   Alt Fire Press Multicast                          //0x0000(0x0229)
  *                                                                   Alt Fire Release Server                           //0x0000(0x0229)
  *                                                                   Alt Fire Release Multicast                        //0x0000(0x0229)
  *                                                                   OnFireRelease                                     //0x0229(0x0229)
  *                                                                   Success Fire                                      //0x0000(0x0229)
  *                                                                   No Fire Success                                   //0x0000(0x0229)
  *                                                                   FireCoolDown_Finish                               //0x0229(0x0229)
  *                                                                   onSwapOut                                         //0x0229(0x0229)
  *                                                                   OnDroppedNPC                                      //0x0229(0x0229)
  CallFunc_GetOwner_ReturnValue*                                      ExecuteUbergraph_BP_Pistol                        //0x0000(0x0229)
  SceneComponent*                                                     shellsEject                                       //0x04D0(0x0008)
  CameraComponent*                                                    PlayerCamera                                      //0x04D8(0x0008)
  *                                                                   ZoomOnSight?                                      //0x04E0(0x0001)
  TimerHandle*                                                        triggerTimer                                      //0x04E8(0x0008)
  *                                                                   counterDebug                                      //0x04F0(0x0004)
  *                                                                   ads_ply                                           //0x04F4(0x0001)
  *                                                                   maxFire                                           //0x04F8(0x0004)
};


class BP_Chakram_Weapon_C : public BP_Pistol_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0500(0x0008)
  ReticleComponent*                                                   GetReticle                                        //0x0000(0x0229)
  HitActor*                                                           Calculate Projectile Position                     //0x0229(0x0229)
  K2Node_Select_Default*                                              Cloak Weapon                                      //0x0229(0x0229)
  CallFunc_GetOwner_ReturnValue*                                      Stop Idle                                         //0x0000(0x0229)
  CallFunc_K2_GetRootComponent_ReturnValue*                           HideChakrams                                      //0x0000(0x0229)
  CallFunc_GetOwner_ReturnValue*                                      Play Idle Anim                                    //0x0000(0x0229)
  *                                                                   KillFakeOffhand                                   //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   Chakram Returned                                  //0x0000(0x0229)
  *                                                                   onSwapIn                                          //0x0229(0x0229)
  *                                                                   onSwapOut                                         //0x0229(0x0229)
  *                                                                   Success Fire                                      //0x0229(0x0229)
  *                                                                   Multicast Fire                                    //0x0000(0x0229)
  OwningWeapon*                                                       Spawn Projectile Server                           //0x0229(0x0229)
  *                                                                   Chakram Return Multi                              //0x0000(0x0229)
  *                                                                   OnDropped                                         //0x0229(0x0229)
  *                                                                   ReceiveEndPlay                                    //0x0229(0x0229)
  *                                                                   Check Idling                                      //0x0000(0x0229)
  *                                                                   Start Idle Timer                                  //0x0000(0x0229)
  *                                                                   CancelMontages                                    //0x0000(0x0229)
  *                                                                   DeathDispatch                                     //0x0000(0x0229)
  CallFunc_GetOwner_ReturnValue*                                      ExecuteUbergraph_BP_Chakram_Weapon                //0x0000(0x0229)
  StaticMeshActor*                                                    fake_offhand                                      //0x0508(0x0008)
  *                                                                   ChakramCounter                                    //0x0510(0x0004)
  TimerHandle*                                                        IdlingTimer                                       //0x0518(0x0008)
  *                                                                   ChakramHidden                                     //0x0520(0x0001)
};


class BP_PotionLauncher_bm_C : public BP_Pistol_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0500(0x0008)
  OwningWeapon*                                                       Spawn Projectile Server                           //0x0229(0x0229)
  *                                                                   onSwapOut                                         //0x0229(0x0229)
  *                                                                   onSwapIn                                          //0x0229(0x0229)
  *                                                                   Last Projectile Notify                            //0x0229(0x0229)
  *                                                                   ReceiveTick                                       //0x0229(0x0229)
  *                                                                   Check For Rocket Display                          //0x0000(0x0229)
  K2Node_Event_OwningWeapon*                                          ExecuteUbergraph_BP_PotionLauncher_bm             //0x0000(0x0229)
  SkeletalMeshComponent*                                              SkeletalMesh1                                     //0x0508(0x0008)
};


class BP_FlameThrower_bm_C : public BP_Pistol_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0500(0x0008)
  *                                                                   Multicast_Flame                                   //0x0000(0x0229)
  *                                                                   OnFireRelease                                     //0x0229(0x0229)
  *                                                                   OnFirePress                                       //0x0229(0x0229)
  *                                                                   server_flame                                      //0x0000(0x0229)
  *                                                                   Fire Release FlameThrower                         //0x0000(0x0229)
  *                                                                   OnDropped                                         //0x0229(0x0229)
  *                                                                   OnDroppedNPC                                      //0x0229(0x0229)
  CallFunc_SpawnSoundAttached_ReturnValue*                            ExecuteUbergraph_BP_FlameThrower_bm               //0x0000(0x0229)
  ParticleSystemComponent*                                            ParticleSystem                                    //0x0508(0x0008)
  *                                                                   firingFlame                                       //0x0510(0x0001)
  AudioComponent*                                                     currentFlameSound                                 //0x0518(0x0008)
};


class BP_MiniGun_C : public BP_Pistol_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0500(0x0008)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   OnFirePress                                       //0x0229(0x0229)
  *                                                                   Spin                                              //0x0000(0x0229)
  Sound*                                                              Play Sound All                                    //0x0000(0x0229)
  Sound*                                                              Play Sound Server                                 //0x0000(0x0229)
  *                                                                   OnFireRelease                                     //0x0229(0x0229)
  *                                                                   SpinSounds Server                                 //0x0000(0x0229)
  *                                                                   SpinSounds Multi                                  //0x0000(0x0229)
  *                                                                   Animation Sequence Multicast                      //0x0229(0x0229)
  *                                                                   OnAltFirePress                                    //0x0229(0x0229)
  *                                                                   AltFireRelease                                    //0x0229(0x0229)
  *                                                                   Initialize                                        //0x0229(0x0229)
  *                                                                   Make Owner Slow                                   //0x0000(0x0229)
  *                                                                   Make Owner Slow Event                             //0x0000(0x0229)
  *                                                                   Projectile Fire Sound ALt                         //0x0229(0x0229)
  *                                                                   Set Spinning                                      //0x0000(0x0229)
  *                                                                   OnDropped                                         //0x0229(0x0229)
  K2Node_CustomEvent_Sound*                                           ExecuteUbergraph_BP_MiniGun                       //0x0000(0x0229)
  AudioComponent*                                                     minigun_rev                                       //0x0508(0x0008)
  *                                                                   spinning                                          //0x0510(0x0001)
  *                                                                   AnimPlayRate                                      //0x0514(0x0004)
  *                                                                   AltFiring                                         //0x0518(0x0001)
};


class BP_BrutalShot_C : public BP_Pistol_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0500(0x0008)
  OwningWeapon*                                                       Spawn Projectile Server                           //0x0229(0x0229)
  K2Node_Event_OwningWeapon*                                          ExecuteUbergraph_BP_BrutalShot                    //0x0000(0x0229)
};


class BP_MachineGun_C : public BP_Pistol_C
{
};


class BP_Turret_MachineGun_C : public BP_MachineGun_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0500(0x0008)
  *                                                                   OnFireRelease                                     //0x0229(0x0229)
  *                                                                   ExecuteUbergraph_BP_Turret_MachineGun             //0x0000(0x0229)
};


class BP_Bingo_Revolver_C : public BP_Pistol_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0500(0x0008)
  ReturnValue*                                                        HitSoundGet                                       //0x0229(0x0229)
  *                                                                   RevolverlevelUp                                   //0x0000(0x0229)
  *                                                                   RevolverLevelUpEvent                              //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   FireCoolDown_Finish                               //0x0229(0x0229)
  HitPlayer*                                                          AdditionalEffects                                 //0x0229(0x0229)
  *                                                                   OnFirePress                                       //0x0229(0x0229)
  *                                                                   AdditionalEffectsMulti                            //0x0000(0x0229)
  K2Node_CreateDelegate_OutputDelegate*                               ExecuteUbergraph_BP_Bingo_Revolver                //0x0000(0x0229)
  *                                                                   Level                                             //0x0508(0x0004)
  *                                                                   headshotmult_base                                 //0x050C(0x0004)
};


class BP_SiMP_Gun_C : public BP_Pistol_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0500(0x0008)
  *                                                                   Fire Projectile Event                             //0x0229(0x0229)
  *                                                                   Burst                                             //0x0000(0x0229)
  *                                                                   Burst Window                                      //0x0000(0x0229)
  *                                                                   OnFirePress                                       //0x0229(0x0229)
  *                                                                   Server current burst                              //0x0000(0x0229)
  K2Node_CreateDelegate_OutputDelegate*                               ExecuteUbergraph_BP_SiMP_Gun                      //0x0000(0x0229)
  *                                                                   Current Fire                                      //0x0508(0x0004)
  TimerHandle*                                                        BurstTimer                                        //0x0510(0x0008)
  *                                                                   Current Burst                                     //0x0518(0x0004)
  *                                                                   TimebetweenShots_Burst                            //0x051C(0x0004)
};


class BP_Burst_Rifle_Assault_Gun_C : public BP_SiMP_Gun_C
{
};


class BP_FlameThrower_C : public BP_Pistol_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0500(0x0008)
  *                                                                   Multicast_Flame                                   //0x0000(0x0229)
  *                                                                   OnFireRelease                                     //0x0229(0x0229)
  *                                                                   OnFirePress                                       //0x0229(0x0229)
  *                                                                   server_flame                                      //0x0000(0x0229)
  *                                                                   Fire Release FlameThrower                         //0x0000(0x0229)
  *                                                                   OnDropped                                         //0x0229(0x0229)
  *                                                                   OnDroppedNPC                                      //0x0229(0x0229)
  *                                                                   OnAltFirePress                                    //0x0229(0x0229)
  CallFunc_SpawnSoundAttached_ReturnValue*                            ExecuteUbergraph_BP_FlameThrower                  //0x0000(0x0229)
  ParticleSystemComponent*                                            ParticleSystem                                    //0x0508(0x0008)
  *                                                                   firingFlame                                       //0x0510(0x0001)
  AudioComponent*                                                     currentFlameSound                                 //0x0518(0x0008)
};


class BP_HealMagnum_C : public BP_Pistol_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0500(0x0008)
  ReturnValue*                                                        HitSoundGet                                       //0x0229(0x0229)
  DamagedActor*                                                       Additional Damage                                 //0x0229(0x0229)
  *                                                                   OnDropped                                         //0x0229(0x0229)
  *                                                                   ExecuteUbergraph_BP_HealMagnum                    //0x0000(0x0229)
};


class BP_Bolt_Pistol_C : public BP_Pistol_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0500(0x0008)
  DamagedActor*                                                       Additional Damage                                 //0x0229(0x0229)
  BP Player Character*                                                plummet                                           //0x0000(0x0229)
  K2Node_CustomEvent_BP_Player_Character*                             ExecuteUbergraph_BP_Bolt_Pistol                   //0x0000(0x0229)
};


class BP_MAS_Rifle_C : public BP_Pistol_C
{
};


class BP_Shotgun_C : public BP_Pistol_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0500(0x0008)
  arrows*                                                             initSpreadCustomArray                             //0x0000(0x0229)
  *                                                                   UserConstructionScript                            //0x0229(0x0229)
  *                                                                   Fire Projectile Event                             //0x0229(0x0229)
  CallFunc_SpawnEmitterAttached_ReturnValue*                          ExecuteUbergraph_BP_Shotgun                       //0x0000(0x0229)
  ArrowComponent*                                                     spread8                                           //0x0508(0x0008)
  ArrowComponent*                                                     spread7                                           //0x0510(0x0008)
  ArrowComponent*                                                     spread6                                           //0x0518(0x0008)
  ArrowComponent*                                                     spread5                                           //0x0520(0x0008)
  ArrowComponent*                                                     spread4                                           //0x0528(0x0008)
  ArrowComponent*                                                     spread3                                           //0x0530(0x0008)
  ArrowComponent*                                                     spread2                                           //0x0538(0x0008)
  ArrowComponent*                                                     spread1                                           //0x0540(0x0008)
  ArrowComponent*                                                     spread0                                           //0x0548(0x0008)
  SceneComponent*                                                     shellsEject                                       //0x0550(0x0008)
  spread*                                                             spread                                            //0x0558(0x0010)
};


class BP_LongShot_C : public BP_Shotgun_C
{
};


class BP_Abby_ShotGun_C : public BP_Shotgun_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0568(0x0008)
  *                                                                   Fire Projectile Event                             //0x0229(0x0229)
  *                                                                   BlowBack                                          //0x0000(0x0229)
  *                                                                   Blowback Server                                   //0x0000(0x0229)
  *                                                                   OnAltFirePress                                    //0x0229(0x0229)
  *                                                                   OnFirePress                                       //0x0229(0x0229)
  *                                                                   AltFireRelease                                    //0x0229(0x0229)
  K2Node_CreateDelegate_OutputDelegate*                               ExecuteUbergraph_BP_Abby_ShotGun                  //0x0000(0x0229)
  *                                                                   BlowbackAmount                                    //0x0570(0x0004)
  *                                                                   blowbackMode                                      //0x0574(0x0001)
};


class BP_shotgun_Sweeper_C : public BP_Shotgun_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0568(0x0008)
  *                                                                   OnFirePress                                       //0x0229(0x0229)
  *                                                                   OnAltFirePress                                    //0x0229(0x0229)
  *                                                                   AltFireRelease                                    //0x0229(0x0229)
  *                                                                   ExecuteUbergraph_BP_shotgun_Sweeper               //0x0000(0x0229)
};


class BP_Melee_Dagger_C : public BP_MeleeBase_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0508(0x0008)
  Temp_object_Variable*                                               DaggerFormChange                                  //0x0000(0x0229)
  CallFunc_GetOwner_ReturnValue*                                      GruntSound                                        //0x0000(0x0229)
  AttachToComponent*                                                  SpawnHitTrail                                     //0x0229(0x0229)
  *                                                                   UserConstructionScript                            //0x0229(0x0229)
  *                                                                   OnFirePress                                       //0x0229(0x0229)
  Player Character*                                                   Melee Release Anim                                //0x0229(0x0229)
  *                                                                   MeleeCrit                                         //0x0000(0x0229)
  Target*                                                             Multicast Launch                                  //0x0000(0x0229)
  Target*                                                             Server Launch                                     //0x0000(0x0229)
  *                                                                   Damaged Player Hit Event                          //0x0229(0x0229)
  DamagedActor*                                                       Melee Damage Event                                //0x0229(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  K2Node_Event_Player_Character*                                      ExecuteUbergraph_BP_Melee_Dagger                  //0x0000(0x0229)
  SceneComponent*                                                     tip02                                             //0x0510(0x0008)
  SceneComponent*                                                     tip01                                             //0x0518(0x0008)
  SceneComponent*                                                     tip00                                             //0x0520(0x0008)
  SceneComponent*                                                     trail_loc                                         //0x0528(0x0008)
  *                                                                   Charge                                            //0x0530(0x0004)
  *                                                                   Is Charging                                       //0x0534(0x0001)
  *                                                                   offhand                                           //0x0535(0x0001)
  *                                                                   BaseDamage                                        //0x0538(0x0004)
  *                                                                   daggerLevel                                       //0x053C(0x0004)
  *                                                                   CRIT_State                                        //0x0540(0x0001)
};


class BP_Barrel_Thrower_Weapon_C : public BP_Pistol_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0500(0x0008)
  CallFunc_CreateDynamicMaterialInstance_ReturnValue*                 UserConstructionScript                            //0x0229(0x0229)
  *                                                                   ReceiveTick                                       //0x0229(0x0229)
  *                                                                   FireCDDone                                        //0x0000(0x0229)
  *                                                                   Last Projectile Notify                            //0x0229(0x0229)
  OwningWeapon*                                                       Spawn Projectile Server                           //0x0229(0x0229)
  *                                                                   Multi_cast_ChanceVO                               //0x0000(0x0229)
  CallFunc_GetOwner_ReturnValue*                                      ExecuteUbergraph_BP_Barrel_Thrower_Weapon         //0x0000(0x0229)
  StaticMeshComponent*                                                hologram                                          //0x0508(0x0008)
  StaticMeshComponent*                                                StaticMesh                                        //0x0510(0x0008)
  MaterialInstanceDynamic*                                            barrelreload_mat                                  //0x0518(0x0008)
  TimerHandle*                                                        barrelCD                                          //0x0520(0x0008)
};


class BP_Unarmed_C : public BP_MeleeBase_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0508(0x0008)
  *                                                                   AttachFix                                         //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   ReceiveTick                                       //0x0229(0x0229)
  SetOwner*                                                           OnPickUp                                          //0x0229(0x0229)
  Player Character*                                                   Melee Release Anim                                //0x0229(0x0229)
  *                                                                   OnFirePress                                       //0x0229(0x0229)
  Player Character*                                                   Melee WindupAnim                                  //0x0229(0x0229)
  Target*                                                             Impulse                                           //0x0229(0x0229)
  K2Node_DynamicCast_AsBP_Char_Gwen*                                  ExecuteUbergraph_BP_Unarmed                       //0x0000(0x0229)
  BP_MeleeProjectile_C*                                               currentMeleeProjectile                            //0x0510(0x0008)
  *                                                                   DMG_Socket                                        //0x0518(0x0008)
  BP_PlayerCharacter_C*                                               playerCharacter                                   //0x0520(0x0008)
  Transform*                                                          dmgLocation                                       //0x0530(0x0030)
  *                                                                   UnarmedAttack                                     //0x0560(0x0004)
  *                                                                   AttackSpeed                                       //0x0564(0x0004)
};


class BP_Friday_Kick_Unarmed_C : public BP_Unarmed_C
{
};


class BP_Pegleg_C : public BP_Unarmed_C
{
};


class BP_Hemlock_Claws_C : public BP_Unarmed_C
{
};


class Ability_C : public BP_Unarmed_C
{
};


class Ability_Kick_C : public Ability_C
{
};


class Ability_StaffSlam_C : public Ability_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0568(0x0008)
  *                                                                   AttachFix                                         //0x0229(0x0229)
  DamagedActor*                                                       Melee Damage Event                                //0x0229(0x0229)
  K2Node_Event_DamagedActor*                                          ExecuteUbergraph_Ability_StaffSlam                //0x0000(0x0229)
};


class Ability_KnockOut_C : public Ability_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0568(0x0008)
  *                                                                   Trace                                             //0x0229(0x0229)
  *                                                                   ExecuteUbergraph_Ability_KnockOut                 //0x0000(0x0229)
};


class Ability_Chi_Launch_C : public Ability_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0568(0x0008)
  *                                                                   Trace                                             //0x0229(0x0229)
  *                                                                   AmmoCostServer                                    //0x0229(0x0229)
  *                                                                   Effect Multicast                                  //0x0229(0x0229)
  CallFunc_GetOwner_ReturnValue*                                      ExecuteUbergraph_Ability_Chi_Launch               //0x0000(0x0229)
};


class BP_Harpoon_Gun_C : public BP_Pistol_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0500(0x0008)
  *                                                                   Last Projectile Notify                            //0x0229(0x0229)
  NewViewTarget*                                                      Set View to                                       //0x0000(0x0229)
  *                                                                   Return View                                       //0x0000(0x0229)
  *                                                                   Set View to Player                                //0x0000(0x0229)
  *                                                                   Client projectile                                 //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   OnAltFirePress                                    //0x0229(0x0229)
  DamagedActor*                                                       Additional Damage                                 //0x0229(0x0229)
  *                                                                   AltFireRelease                                    //0x0229(0x0229)
  OwningWeapon*                                                       Spawn Projectile Server                           //0x0229(0x0229)
  CallFunc_GetInstigatorController_ReturnValue*                       ExecuteUbergraph_BP_Harpoon_Gun                   //0x0000(0x0229)
  StaticMeshComponent*                                                StaticMesh                                        //0x0508(0x0008)
  *                                                                   follow                                            //0x0510(0x0001)
};


class Dummy_Harpoon_Gun_C : public BP_Harpoon_Gun_C
{
};


class BP_Dalton_Rifle_C : public BP_MAS_Rifle_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0500(0x0008)
  *                                                                   OnDropped                                         //0x0229(0x0229)
  *                                                                   OnAltFirePress                                    //0x0229(0x0229)
  *                                                                   AltFireRelease                                    //0x0229(0x0229)
  *                                                                   onSwapOut                                         //0x0229(0x0229)
  *                                                                   onSwapIn                                          //0x0229(0x0229)
  SetOwner*                                                           OnPickUp                                          //0x0229(0x0229)
  *                                                                   Fully Zoomed                                      //0x0000(0x0229)
  *                                                                   HeadshotDmgServer                                 //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  HitPlayer*                                                          AdditionalEffects                                 //0x0229(0x0229)
  K2Node_CreateDelegate_OutputDelegate*                               ExecuteUbergraph_BP_Dalton_Rifle                  //0x0000(0x0229)
  *                                                                   bFullyZoomed                                      //0x0508(0x0001)
};


class Ability_Jab_C : public Ability_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0568(0x0008)
  *                                                                   Effect Multicast                                  //0x0229(0x0229)
  *                                                                   ExecuteUbergraph_Ability_Jab                      //0x0000(0x0229)
};


class BP_GlobalMusic_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  *                                                                   Holiday Music                                     //0x0000(0x0229)
  *                                                                   UserConstructionScript                            //0x0229(0x0229)
  *                                                                   combat__FinishedFunc                              //0x0000(0x0229)
  *                                                                   combat__UpdateFunc                                //0x0000(0x0229)
  *                                                                   normalMusic                                       //0x0000(0x0229)
  *                                                                   end_combat                                        //0x0000(0x0229)
  *                                                                   areaSwitch                                        //0x0000(0x0229)
  *                                                                   combatMusic                                       //0x0000(0x0229)
  *                                                                   Pause Music                                       //0x0000(0x0229)
  PlayingSoundWave*                                                   Playback Percent                                  //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   start_combat                                      //0x0000(0x0229)
  K2Node_CreateDelegate_OutputDelegate*                               ExecuteUbergraph_BP_GlobalMusic                   //0x0000(0x0229)
  AudioComponent*                                                     audio_component                                   //0x0220(0x0008)
  BillboardComponent*                                                 Billboard                                         //0x0228(0x0008)
  SceneComponent*                                                     Scene                                             //0x0230(0x0008)
  *                                                                   combat_fade_662A1BC8433E127D2B630681AE0DB5F1      //0x0238(0x0004)
  ETimelineDirection*                                                 combat__Direction_662A1BC8433E127D2B630681AE0DB5F1//0x023C(0x0001)
  TimelineComponent*                                                  combat                                            //0x0240(0x0008)
  *                                                                   DefaultArea ID                                    //0x0248(0x0004)
  *                                                                   currentPlaybackTime                               //0x024C(0x0004)
  *                                                                   resumeTime                                        //0x0250(0x0004)
};


class Fadeout_Button_C : public Button
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0428(0x0008)
  *                                                                   saveOrgBGColor                                    //0x0000(0x0229)
  *                                                                   ExecuteUbergraph_Fadeout_Button                   //0x0000(0x0229)
  LinearColor*                                                        OrgBGColor                                        //0x0430(0x0010)
};


class LockerRoom_BP_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   Spawn Character                                   //0x0000(0x0229)
  *                                                                   Spawn                                             //0x0000(0x0229)
  *                                                                   ResetCharOutfit                                   //0x0000(0x0229)
  *                                                                   destroyLockerRoomBP                               //0x0000(0x0229)
  CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue*              ExecuteUbergraph_LockerRoom_BP                    //0x0000(0x0229)
  SceneComponent*                                                     turret Location                                   //0x0220(0x0008)
  SpotLightComponent*                                                 SpotLight                                         //0x0228(0x0008)
  SceneCaptureComponent2D*                                            SceneCaptureComponent2D                           //0x0230(0x0008)
  BoxComponent*                                                       Box                                               //0x0238(0x0008)
  SceneComponent*                                                     spawn point                                       //0x0240(0x0008)
  SceneComponent*                                                     DefaultSceneRoot                                  //0x0248(0x0008)
  CameraActor*                                                        lockerRoom_Camera                                 //0x0250(0x0008)
  BP_PlayerCharacter_C*                                               char                                              //0x0258(0x0008)
  dummyChars*                                                         dummyChars                                        //0x0260(0x0010)
  CameraActor*                                                        shop_Camera                                       //0x0270(0x0008)
  *                                                                   Current OUtfit                                    //0x0278(0x0001)
  BP_Turret_C*                                                        Turret                                            //0x0280(0x0008)
  *                                                                   canBeDeleted                                      //0x0288(0x0001)
  BP_Harpoon_Gun_C*                                                   dummyWeapon                                       //0x0290(0x0008)
};


class FO_PlayerController_C : public PlayerController
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0568(0x0008)
  K2Node_DynamicCast_AsFO_Player_State*                               Request Spawn                                     //0x0000(0x0229)
  Widget*                                                             PLAYER_GET_CUR_WIDGET                             //0x0000(0x0229)
  Widget*                                                             PLAYER_CUR_WIDGET_SWITCH                          //0x0000(0x0229)
  UserWidget*                                                         Get Combat Base                                   //0x0000(0x0229)
  *                                                                   MSG_GetIsVOIPActivated                            //0x0000(0x0229)
  K2Node_DynamicCast_AsFO_Player_State*                               MSG_GetPlayerUsername                             //0x0000(0x0229)
  *                                                                   MSG_GetIsMuted                                    //0x0000(0x0229)
  WidgetVoiceRef*                                                     MSG_GetWidgetVoice                                //0x0000(0x0229)
  players*                                                            MSG_GetConnectedPlayers                           //0x0000(0x0229)
  *                                                                   MSG_GetPlayerID                                   //0x0000(0x0229)
  *                                                                   MSG_RequestPrivateMessage                         //0x0000(0x0229)
  *                                                                   MSG_GetPlayerIDFromUsername                       //0x0000(0x0229)
  K2Node_DynamicCast_AsFO_Player_State*                               MSG_GetUsername                                   //0x0000(0x0229)
  *                                                                   MSG_GetTeamID                                     //0x0000(0x0229)
  *                                                                   FilterLegalTeam                                   //0x0000(0x0229)
  CallFunc_GetAllActorsOfClass_OutActors*                             setControlRotationSpectatorSpawn                  //0x0000(0x0229)
  *                                                                   TeamMessage_Refresh                               //0x0000(0x0229)
  CallFunc_GetGameState_ReturnValue*                                  Get Loadout                                       //0x0000(0x0229)
  Temp_object_Variable*                                               SprayInfo                                         //0x0000(0x0229)
  Temp_object_Variable*                                               Spray                                             //0x0000(0x0229)
  Character Camera*                                                   Blend_To_Char_Selected                            //0x0000(0x0229)
  CallFunc_Get_Combat_Base_UserWidget*                                RemoveBloodVignette                               //0x0000(0x0229)
  CallFunc_GetGameInstance_ReturnValue*                               ADS_Pref                                          //0x0000(0x0229)
  NewViewTarget*                                                      MVP Cam                                           //0x0000(0x0229)
  CallFunc_Create_ReturnValue*                                        ScopeManage                                       //0x0000(0x0229)
  Player*                                                             Spectate Next Player                              //0x0000(0x0229)
  CallFunc_K2_GetPawn_ReturnValue*                                    Controlling A player character                    //0x0000(0x0229)
  CallFunc_GetHUD_ReturnValue*                                        Start Spectating                                  //0x0000(0x0229)
  K2Node_DynamicCast_AsFO_Player_State*                               Admin Check                                       //0x0000(0x0229)
  *                                                                   OnRep_ControlState                                //0x0000(0x0229)
  CallFunc_GetAllActorsOfClass_OutActors*                             ShowScope                                         //0x0000(0x0229)
  BP Multiplayer Gamemode*                                            Can Spawn Check                                   //0x0000(0x0229)
  CallFunc_Create_ReturnValue*                                        showFPS-COunter                                   //0x0000(0x0229)
  *                                                                   ShowSystemMessage                                 //0x0000(0x0229)
  *                                                                   ReceivedMessage                                   //0x0000(0x0229)
  Local_PlayerController*                                             SendMessage                                       //0x0000(0x0229)
  *                                                                   InpActEvt_Menu_K2Node_InputActionEvent            //0x0000(0x0229)
  *                                                                   InpActEvt_PushToTalk_K2Node_InputActionEvent      //0x0000(0x0229)
  *                                                                   InpActEvt_PushToTalk_K2Node_InputActionEvent      //0x0000(0x0229)
  *                                                                   InpActEvt_ScoreBoard_K2Node_InputActionEvent      //0x0000(0x0229)
  *                                                                   InpActEvt_ScoreBoard_K2Node_InputActionEvent      //0x0000(0x0229)
  *                                                                   InpActEvt_Shift_O_K2Node_InputKeyEvent            //0x0000(0x0229)
  *                                                                   InpActEvt_Fire_K2Node_InputActionEvent            //0x0000(0x0229)
  *                                                                   InpActEvt_AltFire_K2Node_InputActionEvent         //0x0000(0x0229)
  *                                                                   InpActEvt_AnyKey_K2Node_InputKeyEvent             //0x0000(0x0229)
  *                                                                   InpActEvt_Zero_K2Node_InputKeyEvent               //0x0000(0x0229)
  *                                                                   InpActEvt_NumPadZero_K2Node_InputKeyEvent         //0x0000(0x0229)
  *                                                                   InpActEvt_Spray_K2Node_InputActionEvent           //0x0000(0x0229)
  *                                                                   InpActEvt_USERLIST_K2Node_InputActionEvent        //0x0000(0x0229)
  *                                                                   InpActEvt_Chat_K2Node_InputActionEvent            //0x0000(0x0229)
  *                                                                   InpActEvt_HideHUD_K2Node_InputActionEvent         //0x0000(0x0229)
  *                                                                   Menu Mode                                         //0x0000(0x0229)
  *                                                                   Force Close Chat - Controller                     //0x0000(0x0229)
  *                                                                   Menu Button Pressed                               //0x0000(0x0229)
  *                                                                   Wave Mode Inits                                   //0x0000(0x0229)
  *                                                                   Wave Mode Client                                  //0x0000(0x0229)
  *                                                                   Gold Change                                       //0x0000(0x0229)
  *                                                                   Gold Change Client                                //0x0000(0x0229)
  *                                                                   Gold Gain                                         //0x0000(0x0229)
  *                                                                   Current Wave Client                               //0x0000(0x0229)
  *                                                                   Lives Changed                                     //0x0000(0x0229)
  *                                                                   Gold Spent                                        //0x0000(0x0229)
  *                                                                   Server_SetVOIPActivated                           //0x0000(0x0229)
  *                                                                   MSG_SetIsVOIPActivated                            //0x0000(0x0229)
  *                                                                   MSG_SetVisibilityVOIPIcon                         //0x0000(0x0229)
  *                                                                   MSG_SetMute                                       //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  PossessedPawn*                                                      ReceivePossess                                    //0x0229(0x0229)
  *                                                                   RequestSpawn                                      //0x0000(0x0229)
  *                                                                   ChangeCharServer                                  //0x0000(0x0229)
  *                                                                   Select Snek                                       //0x0000(0x0229)
  *                                                                   Select Mouse                                      //0x0000(0x0229)
  *                                                                   Return to Spectating                              //0x0000(0x0229)
  *                                                                   CheckCameraForBlendTime                           //0x0000(0x0229)
  *                                                                   ChangeTeamRequest                                 //0x0000(0x0229)
  *                                                                   Select Bunn                                       //0x0000(0x0229)
  *                                                                   LockerRoom Camera                                 //0x0000(0x0229)
  *                                                                   MainMenu Camera                                   //0x0000(0x0229)
  *                                                                   Gamepad Notify                                    //0x0000(0x0229)
  *                                                                   Server_SendMessage                                //0x0000(0x0229)
  *                                                                   Client_ReceivedMessage                            //0x0000(0x0229)
  *                                                                   MSG_NewMessage                                    //0x0000(0x0229)
  *                                                                   MSG_SetPlayerID                                   //0x0000(0x0229)
  *                                                                   Server_SetPlayerID                                //0x0000(0x0229)
  *                                                                   Server_OnRequestPrivateMessage                    //0x0000(0x0229)
  *                                                                   Client_OnRequestPrivateMessage                    //0x0000(0x0229)
  *                                                                   CreateChat                                        //0x0000(0x0229)
  *                                                                   MSG_SetTeamID                                     //0x0000(0x0229)
  *                                                                   Server_SetTeamID                                  //0x0000(0x0229)
  *                                                                   Client_RefreshTeam                                //0x0000(0x0229)
  *                                                                   MSG_PlayEmote                                     //0x0000(0x0229)
  *                                                                   select raccoon                                    //0x0000(0x0229)
  *                                                                   Error Message                                     //0x0000(0x0229)
  *                                                                   Show ScoreBoard                                   //0x0000(0x0229)
  *                                                                   Hide Scoreboard                                   //0x0000(0x0229)
  *                                                                   Select Bingo                                      //0x0000(0x0229)
  *                                                                   Select Blaise                                     //0x0000(0x0229)
  *                                                                   StartRound ADMIN                                  //0x0000(0x0229)
  *                                                                   EndRound ADMIN                                    //0x0000(0x0229)
  PlayerState*                                                        Gamemode Switch ADMIN                             //0x0000(0x0229)
  *                                                                   Select Panda                                      //0x0000(0x0229)
  Actor to Follow*                                                    Follow Player                                     //0x0000(0x0229)
  *                                                                   Select Wolf                                       //0x0000(0x0229)
  *                                                                   End Round States                                  //0x0000(0x0229)
  FO Player State*                                                    Debug_Money                                       //0x0000(0x0229)
  *                                                                   Map Switch ADMIN                                  //0x0000(0x0229)
  Killer Actor*                                                       Player Died                                       //0x0000(0x0229)
  Pawn*                                                               Client Posses Event                               //0x0000(0x0229)
  Owner*                                                              Spawn Specator                                    //0x0000(0x0229)
  *                                                                   MVP Cam Event                                     //0x0000(0x0229)
  *                                                                   Spawn Room Message                                //0x0000(0x0229)
  *                                                                   Spray Server                                      //0x0000(0x0229)
  *                                                                   set loadout                                       //0x0000(0x0229)
  *                                                                   Disconnect                                        //0x0000(0x0229)
  *                                                                   Ban User                                          //0x0000(0x0229)
  *                                                                   SET CONTROL STATE ALL                             //0x0000(0x0229)
  *                                                                   Team Balance                                      //0x0000(0x0229)
  *                                                                   Select Falcon                                     //0x0000(0x0229)
  *                                                                   ServerSettings                                    //0x0000(0x0229)
  *                                                                   ServerSettingsClient                              //0x0000(0x0229)
  *                                                                   Change Map Server Auth                            //0x0000(0x0229)
  *                                                                   Change GameMode Server Auth                       //0x0000(0x0229)
  *                                                                   Change Team Lock                                  //0x0000(0x0229)
  *                                                                   Scramble Teams                                    //0x0000(0x0229)
  *                                                                   ADMIN Change User Team                            //0x0000(0x0229)
  *                                                                   IsChatting                                        //0x0000(0x0229)
  *                                                                   TypingCheck                                       //0x0000(0x0229)
  *                                                                   recentlyDiedTimer                                 //0x0000(0x0229)
  *                                                                   Open Customize Menu                               //0x0000(0x0229)
  *                                                                   Open Pause Menu                                   //0x0000(0x0229)
  *                                                                   Open Options Menu                                 //0x0000(0x0229)
  *                                                                   Open Spawn Menu                                   //0x0000(0x0229)
  *                                                                   Prompt Spawn Menu                                 //0x0000(0x0229)
  *                                                                   Create CombatBase                                 //0x0000(0x0229)
  *                                                                   Create Respawn Prompt                             //0x0000(0x0229)
  *                                                                   removeSpawnPrompt                                 //0x0000(0x0229)
  *                                                                   Remove Spawn Prompt Client                        //0x0000(0x0229)
  *                                                                   removeSpawnScreen                                 //0x0000(0x0229)
  *                                                                   Remove Spawn Screen Client                        //0x0000(0x0229)
  UnpossessedPawn*                                                    ReceiveUnPossess                                  //0x0229(0x0229)
  *                                                                   Remove Client Scope                               //0x0000(0x0229)
  *                                                                   AdminCheckSignal                                  //0x0000(0x0229)
  *                                                                   Select Gwen                                       //0x0000(0x0229)
  *                                                                   Initiate Spawn UIs                                //0x0000(0x0229)
  *                                                                   TryPossesAgain                                    //0x0000(0x0229)
  Pawn*                                                               ClientPawnPossession                              //0x0000(0x0229)
  K2Node_CreateDelegate_OutputDelegate*                               ExecuteUbergraph_FO_PlayerController              //0x0000(0x0229)
  *                                                                   MyPawnDied__DelegateSignature                     //0x0000(0x0229)
  *                                                                   ServerCVarsFetched__DelegateSignature             //0x0000(0x0229)
  *                                                                   SpawnedDispatcher__DelegateSignature              //0x0000(0x0229)
  *                                                                   PauseDispatcher__DelegateSignature                //0x0000(0x0229)
  *                                                                   FireClick__DelegateSignature                      //0x0000(0x0229)
  *                                                                   SpawnTimeLeftReport__DelegateSignature            //0x0000(0x0229)
  *                                                                   Gamepad Notify Dispatcher__DelegateSignature      //0x0000(0x0229)
  BP_AntizeVOIP_PC_C*                                                 BP_AntizeVOIP_PC                                  //0x0570(0x0008)
  PlayerControlState*                                                 ControlState                                      //0x0578(0x0001)
  *                                                                   BlendTime                                         //0x057C(0x0004)
  *                                                                   ADS_righty                                        //0x0580(0x0001)
  *                                                                   cur index                                         //0x0584(0x0004)
  Vector*                                                             cameraLocation                                    //0x0588(0x000C)
  *                                                                   gamepad?                                          //0x0594(0x0001)
  CharactersSelected*                                                 curCharacter                                      //0x0595(0x0001)
  Gamepad Notify Dispatcher__DelegateSignature*                       Gamepad Notify Dispatcher                         //0x0598(0x0010)
  *                                                                   TeamID                                            //0x05A8(0x0004)
  W_MainChat_C*                                                       MainChatRef                                       //0x05B0(0x0008)
  *                                                                   PlayerId                                          //0x05B8(0x0004)
  *                                                                   MaxProximityDistance                              //0x05BC(0x0004)
  teams*                                                              teams                                             //0x05C0(0x0050)
  *                                                                   isPaused?                                         //0x0610(0x0001)
  FPS_Counter_C*                                                      fpsCounter                                        //0x0618(0x0008)
  SpawnTimeLeftReport__DelegateSignature*                             SpawnTimeLeftReport                               //0x0620(0x0010)
  *                                                                   yourTeam                                          //0x0630(0x0010)
  *                                                                   Host                                              //0x0640(0x0001)
  Respawn_Prompt_C*                                                   respawnPrompt                                     //0x0648(0x0008)
  FireClick__DelegateSignature*                                       FireClick                                         //0x0650(0x0010)
  PauseDispatcher__DelegateSignature*                                 PauseDispatcher                                   //0x0660(0x0010)
  Chameleon_C*                                                        Chameleon                                         //0x0670(0x0008)
  UI_Scope_C*                                                         ScopeUI                                           //0x0678(0x0008)
  SpawnedDispatcher__DelegateSignature*                               SpawnedDispatcher                                 //0x0680(0x0010)
  *                                                                   inSpawnRoom                                       //0x0690(0x0001)
  BP_Spray_C*                                                         mySpray                                           //0x0698(0x0008)
  *                                                                   lastTeam                                          //0x06A0(0x0004)
  ServerCVarsFetched__DelegateSignature*                              ServerCVarsFetched                                //0x06A8(0x0010)
  *                                                                   IsVOIPActivated?                                  //0x06B8(0x0001)
  *                                                                   WaveModeCurrency                                  //0x06BC(0x0004)
  W_WaveDefenseUi_C*                                                  WaveUI                                            //0x06C0(0x0008)
  *                                                                   recentlyDied                                      //0x06C8(0x0001)
  *                                                                   DesiredTeam                                       //0x06D0(0x0010)
  MyPawnDied__DelegateSignature*                                      MyPawnDied                                        //0x06E0(0x0010)
  TimerHandle*                                                        PossessValidTimer                                 //0x06F0(0x0008)
};


class FO_MainMenuController_C : public PlayerController
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0568(0x0008)
  UserWidget*                                                         Get Combat Base                                   //0x0000(0x0229)
  Widget*                                                             PLAYER_CUR_WIDGET_SWITCH                          //0x0000(0x0229)
  Widget*                                                             PLAYER_GET_CUR_WIDGET                             //0x0000(0x0229)
  *                                                                   ShowSystemMessage                                 //0x0000(0x0229)
  *                                                                   ReceivedMessage                                   //0x0000(0x0229)
  Local_PlayerController*                                             SendMessage                                       //0x0000(0x0229)
  *                                                                   InpActEvt_O_K2Node_InputKeyEvent                  //0x0000(0x0229)
  *                                                                   InpActEvt_AnyKey_K2Node_InputKeyEvent             //0x0000(0x0229)
  *                                                                   Cancel_K2Node_InputActionEvent                    //0x0000(0x0229)
  *                                                                   Select Snek                                       //0x0000(0x0229)
  *                                                                   Select Mouse                                      //0x0000(0x0229)
  *                                                                   Return to Spectating                              //0x0000(0x0229)
  *                                                                   CheckCameraForBlendTime                           //0x0000(0x0229)
  *                                                                   ChangeTeamRequest                                 //0x0000(0x0229)
  *                                                                   Select Bunn                                       //0x0000(0x0229)
  *                                                                   LockerRoom Camera                                 //0x0000(0x0229)
  *                                                                   MainMenu Camera                                   //0x0000(0x0229)
  *                                                                   Gamepad Notify                                    //0x0000(0x0229)
  *                                                                   Shop Camera                                       //0x0000(0x0229)
  FO Player State*                                                    Debug_Money                                       //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   Main Menu Return                                  //0x0000(0x0229)
  *                                                                   ChangeCharServer                                  //0x0000(0x0229)
  *                                                                   removeSpawnScreen                                 //0x0000(0x0229)
  PossessedPawn*                                                      ReceivePossess                                    //0x0229(0x0229)
  *                                                                   removeSpawnPrompt                                 //0x0000(0x0229)
  *                                                                   Create Respawn Prompt                             //0x0000(0x0229)
  *                                                                   Create CombatBase                                 //0x0000(0x0229)
  *                                                                   Open Spawn Menu                                   //0x0000(0x0229)
  *                                                                   Open Customize Menu                               //0x0000(0x0229)
  *                                                                   Open Options Menu                                 //0x0000(0x0229)
  *                                                                   Open Pause Menu                                   //0x0000(0x0229)
  CallFunc_GetPlayerController_ReturnValue*                           ExecuteUbergraph_FO_MainMenuController            //0x0000(0x0229)
  *                                                                   BACK_BUTTON_DISPATCH__DelegateSignature           //0x0000(0x0229)
  *                                                                   Gamepad Notify Dispatcher__DelegateSignature      //0x0000(0x0229)
  *                                                                   ClientsName                                       //0x0570(0x0018)
  PlayerControlState*                                                 ControlState                                      //0x0588(0x0001)
  *                                                                   BlendTime                                         //0x058C(0x0004)
  *                                                                   ADS_righty                                        //0x0590(0x0001)
  *                                                                   cur index                                         //0x0594(0x0004)
  Vector*                                                             cameraLocation                                    //0x0598(0x000C)
  *                                                                   gamepad?                                          //0x05A4(0x0001)
  CharactersSelected*                                                 curCharacter                                      //0x05A5(0x0001)
  Gamepad Notify Dispatcher__DelegateSignature*                       Gamepad Notify Dispatcher                         //0x05A8(0x0010)
  *                                                                   TeamID                                            //0x05B8(0x0004)
  W_MainChat_C*                                                       MainChatRef                                       //0x05C0(0x0008)
  *                                                                   PlayerId                                          //0x05C8(0x0004)
  *                                                                   MaxProximityDistance                              //0x05CC(0x0004)
  BACK_BUTTON_DISPATCH__DelegateSignature*                            BACK_BUTTON_DISPATCH                              //0x05D0(0x0010)
};


class BP_HUD_C : public HUD
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0308(0x0008)
  Widget*                                                             PLAYER_GET_CUR_WIDGET                             //0x0000(0x0229)
  Widget*                                                             PLAYER_CUR_WIDGET_SWITCH                          //0x0000(0x0229)
  UserWidget*                                                         Get Combat Base                                   //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   Initialize Clients                                //0x0000(0x0229)
  OwningPlayer*                                                       Create Scoreboard                                 //0x0000(0x0229)
  OwningPlayer*                                                       Create Killfeed                                   //0x0000(0x0229)
  *                                                                   Hide HUD                                          //0x0000(0x0229)
  OwningPlayer*                                                       Create PopUpContainer                             //0x0000(0x0229)
  OwningPlayer*                                                       Add Focus Cursor                                  //0x0000(0x0229)
  OwningPlayer*                                                       Add Top Score Counter                             //0x0000(0x0229)
  Achievement*                                                        Toast Achievement                                 //0x0000(0x0229)
  OwningPlayer*                                                       Add Wave Defense UI                               //0x0000(0x0229)
  *                                                                   Open Customize Menu                               //0x0000(0x0229)
  *                                                                   Open Pause Menu                                   //0x0000(0x0229)
  *                                                                   Open Spawn Menu                                   //0x0000(0x0229)
  *                                                                   Open Options Menu                                 //0x0000(0x0229)
  *                                                                   Create CombatBase                                 //0x0000(0x0229)
  *                                                                   Create Respawn Prompt                             //0x0000(0x0229)
  *                                                                   removeSpawnPrompt                                 //0x0000(0x0229)
  *                                                                   removeSpawnScreen                                 //0x0000(0x0229)
  K2Node_CustomEvent_OwningPlayer*                                    ExecuteUbergraph_BP_HUD                           //0x0000(0x0229)
  *                                                                   HUD_Hidden_Dispatch__DelegateSignature            //0x0000(0x0229)
  SceneComponent*                                                     DefaultSceneRoot                                  //0x0310(0x0008)
  Class*                                                              CombatBase                                        //0x0318(0x0008)
  WBP_CombatBase_C*                                                   CombatBaseWidget                                  //0x0320(0x0008)
  Class*                                                              DeathScreenClass                                  //0x0328(0x0008)
  UserWidget*                                                         deathWidget                                       //0x0330(0x0008)
  Class*                                                              challengeScreenClass                              //0x0338(0x0008)
  UserWidget*                                                         challengeWidget                                   //0x0340(0x0008)
  PlayerList_C*                                                       ScoreBoard                                        //0x0348(0x0008)
  KillFeed_C*                                                         KillFeed                                          //0x0350(0x0008)
  SpawnScreen_C*                                                      SpawnScreen                                       //0x0358(0x0008)
  W_MainChat_C*                                                       Chat                                              //0x0360(0x0008)
  SpawnScreen_C*                                                      Pause Menu                                        //0x0368(0x0008)
  UnderlyingType*                                                     combat Base Visibility                            //0x0370(0x0001)
  Fullscreen_POPUP_Container_C*                                       PopUp_Container                                   //0x0378(0x0008)
  focus_cursor_C*                                                     FocusCursor                                       //0x0380(0x0008)
  Top_screen_round_timer_score_C*                                     TopScreenScore                                    //0x0388(0x0008)
  Fullscreen_Achievement_Container_C*                                 AchievementFullScreen                             //0x0390(0x0008)
  W_WaveDefenseUi_C*                                                  WaveD                                             //0x0398(0x0008)
  FragNotify_C*                                                       FragNotify                                        //0x03A0(0x0008)
  Customize_Menu_C*                                                   Customize Menu                                    //0x03A8(0x0008)
  UserWidget*                                                         CURRENT_WIDGET                                    //0x03B0(0x0008)
  Respawn_Prompt_C*                                                   respawnPrompt                                     //0x03B8(0x0008)
  HUD_Hidden_Dispatch__DelegateSignature*                             HUD_Hidden_Dispatch                               //0x03C0(0x0010)
  UnderlyingType*                                                     TopScreenScoreVisiblity                           //0x03D0(0x0001)
  UnderlyingType*                                                     chatVisibility                                    //0x03D1(0x0001)
  Widget_Gwen_Elements_C*                                             GwenUI                                            //0x03D8(0x0008)
  UserWidget*                                                         optionsMenu                                       //0x03E0(0x0008)
};


class Multiplayer_GameState_C : public GameState
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0278(0x0008)
  OutActors*                                                          FindCapturePoints                                 //0x0000(0x0229)
  CallFunc_Array_Get_Item*                                            updatePlayerTeam                                  //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  Icon*                                                               Kill Feed Report                                  //0x0000(0x0229)
  *                                                                   Update Player Timer                               //0x0000(0x0229)
  Player*                                                             Remove someones Local Player                      //0x0000(0x0229)
  *                                                                   ReceiveTick                                       //0x0229(0x0229)
  *                                                                   Team Changed Cap Point                            //0x0000(0x0229)
  *                                                                   Cap Point Contested                               //0x0000(0x0229)
  K2Node_CreateDelegate_OutputDelegate*                               ExecuteUbergraph_Multiplayer_GameState            //0x0000(0x0229)
  *                                                                   Cap Point Contest__DelegateSignature              //0x0000(0x0229)
  *                                                                   Cap Point Change__DelegateSignature               //0x0000(0x0229)
  SceneComponent*                                                     DefaultSceneRoot                                  //0x0280(0x0008)
  *                                                                   ModeName                                          //0x0288(0x0008)
  BluePlayers*                                                        BluePlayers                                       //0x0290(0x0010)
  RedPlayers*                                                         RedPlayers                                        //0x02A0(0x0010)
  DM_GameType*                                                        ModeType                                          //0x02B0(0x0001)
  FFAPlayers*                                                         FFAPlayers                                        //0x02B8(0x0010)
  *                                                                   redScore                                          //0x02C8(0x0004)
  *                                                                   blueScore                                         //0x02CC(0x0004)
  *                                                                   RoundTimeLeft                                     //0x02D0(0x0004)
  RedAlive_Players*                                                   RedAlive_Players                                  //0x02D8(0x0010)
  BlueAlive_Players*                                                  BlueAlive_Players                                 //0x02E8(0x0010)
  AllAlive_Players*                                                   AllAlive_Players                                  //0x02F8(0x0010)
  GameMode_State*                                                     Game Mode Round State                             //0x0308(0x0001)
  capturePoints*                                                      capturePoints                                     //0x0310(0x0050)
  Cap Point Change__DelegateSignature*                                Cap Point Change                                  //0x0360(0x0010)
  *                                                                   RedTeamWins                                       //0x0370(0x0004)
  *                                                                   BlueTeamWins                                      //0x0374(0x0004)
  *                                                                   Randomizer                                        //0x0378(0x0001)
  Cap Point Contest__DelegateSignature*                               Cap Point Contest                                 //0x0380(0x0010)
  *                                                                   PreRoundTime                                      //0x0390(0x0004)
  AllowedCharacters*                                                  AllowedCharacters                                 //0x0398(0x0010)
  *                                                                   bLoadoutsEnabled                                  //0x03A8(0x0001)
};


class FO_PlayerState_C : public PlayerState
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0340(0x0008)
  Loadout*                                                            GetLoadoutInfo                                    //0x0000(0x0229)
  *                                                                   MSG_GetIsVOIPActivated                            //0x0000(0x0229)
  *                                                                   MSG_GetPlayerUsername                             //0x0000(0x0229)
  *                                                                   MSG_GetIsMuted                                    //0x0000(0x0229)
  WidgetVoiceRef*                                                     MSG_GetWidgetVoice                                //0x0000(0x0229)
  *                                                                   OnRep_admin                                       //0x0000(0x0229)
  *                                                                   OnRep_Lives                                       //0x0000(0x0229)
  PlayerController*                                                   Get Achievement Progress                          //0x0000(0x0229)
  Temp_object_Variable*                                               Spray                                             //0x0000(0x0229)
  *                                                                   OnRep_Team                                        //0x0000(0x0229)
  *                                                                   OnRep_FO_Score                                    //0x0000(0x0229)
  *                                                                   OnFailure_2F85918E41C16D40CF90CB958DF296F3        //0x0000(0x0229)
  *                                                                   OnSuccess_2F85918E41C16D40CF90CB958DF296F3        //0x0000(0x0229)
  *                                                                   OnFailure_62D69BF14E2B38A101CC1F838D91CFCE        //0x0000(0x0229)
  *                                                                   OnSuccess_62D69BF14E2B38A101CC1F838D91CFCE        //0x0000(0x0229)
  *                                                                   OnFailure_0BCC1B1548601B302F02F9AD4D53CC44        //0x0000(0x0229)
  *                                                                   OnSuccess_0BCC1B1548601B302F02F9AD4D53CC44        //0x0000(0x0229)
  *                                                                   OnFailure_FA17B16F4FAD46C5616CFDB38422FB95        //0x0000(0x0229)
  *                                                                   OnSuccess_FA17B16F4FAD46C5616CFDB38422FB95        //0x0000(0x0229)
  *                                                                   OnFailure_4DAC02194977769CE20AB88208AB85E3        //0x0000(0x0229)
  *                                                                   OnSuccess_4DAC02194977769CE20AB88208AB85E3        //0x0000(0x0229)
  *                                                                   OnFailure_083D3D3A428692EB949941A098F3BFC7        //0x0000(0x0229)
  *                                                                   OnSuccess_083D3D3A428692EB949941A098F3BFC7        //0x0000(0x0229)
  *                                                                   OnFailure_09AD04974AB5752270416396193C8BDE        //0x0000(0x0229)
  *                                                                   OnSuccess_09AD04974AB5752270416396193C8BDE        //0x0000(0x0229)
  *                                                                   OnFailure_258D012F4F7BB53C05258AB6281DA1B4        //0x0000(0x0229)
  *                                                                   OnSuccess_258D012F4F7BB53C05258AB6281DA1B4        //0x0000(0x0229)
  *                                                                   MSG_SetVisibilityVOIPIcon                         //0x0000(0x0229)
  *                                                                   MSG_SetMute                                       //0x0000(0x0229)
  *                                                                   MSG_SetIsVOIPActivated                            //0x0000(0x0229)
  *                                                                   PlayerState_AdminCheck                            //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   Set Name on Server                                //0x0000(0x0229)
  *                                                                   DeathMessage                                      //0x0000(0x0229)
  *                                                                   KillStreak                                        //0x0000(0x0229)
  *                                                                   Died Player State                                 //0x0000(0x0229)
  Player Controller*                                                  show Hitmarker                                    //0x0000(0x0229)
  *                                                                   set Outfits Server                                //0x0000(0x0229)
  *                                                                   Team Changed                                      //0x0000(0x0229)
  *                                                                   Resret Kill Streak                                //0x0000(0x0229)
  Player Controller*                                                  PlayerState Fragged Msg                           //0x0000(0x0229)
  *                                                                   Add Kill                                          //0x0000(0x0229)
  *                                                                   Initialize Custom Info                            //0x0000(0x0229)
  Sound*                                                              Broadcast Message                                 //0x0000(0x0229)
  *                                                                   Receive Reward                                    //0x0000(0x0229)
  *                                                                   StartSpawnTime                                    //0x0000(0x0229)
  *                                                                   Finished Spawn Timer                              //0x0000(0x0229)
  *                                                                   Grant Achievement                                 //0x0000(0x0229)
  *                                                                   Add Assist                                        //0x0000(0x0229)
  *                                                                   Spawn Time Left Timer                             //0x0000(0x0229)
  *                                                                   Add Capture                                       //0x0000(0x0229)
  *                                                                   Spray Multicast                                   //0x0000(0x0229)
  *                                                                   ReceiveEndPlay                                    //0x0229(0x0229)
  *                                                                   set loadout                                       //0x0000(0x0229)
  *                                                                   Kill Achieve                                      //0x0000(0x0229)
  *                                                                   reset_kil_achieve                                 //0x0000(0x0229)
  *                                                                   BanKick Client                                    //0x0000(0x0229)
  *                                                                   Server Full                                       //0x0000(0x0229)
  *                                                                   Update Lives Client                               //0x0000(0x0229)
  *                                                                   SetAdminServer                                    //0x0000(0x0229)
  *                                                                   set loadout client                                //0x0000(0x0229)
  *                                                                   GetLoadoutMap                                     //0x0000(0x0229)
  K2Node_CreateDelegate_OutputDelegate*                               ExecuteUbergraph_FO_PlayerState                   //0x0000(0x0229)
  *                                                                   TeamsChanged__DelegateSignature                   //0x0000(0x0229)
  *                                                                   LivesChanged__DelegateSignature                   //0x0000(0x0229)
  *                                                                   OnKill__DelegateSignature                         //0x0000(0x0229)
  SceneComponent*                                                     DefaultSceneRoot                                  //0x0348(0x0008)
  *                                                                   CustomName                                        //0x0350(0x0018)
  CustomColor*                                                        CustomColor                                       //0x0368(0x000C)
  *                                                                   Team                                              //0x0378(0x0010)
  *                                                                   Kills                                             //0x0388(0x0004)
  *                                                                   CauseOfDeath                                      //0x0390(0x0018)
  CharactersSelected*                                                 SelectedCharacter                                 //0x03A8(0x0001)
  *                                                                   KillStreakCount                                   //0x03AC(0x0004)
  Dalton_Outfits*                                                     fav-outfit_Dalton                                 //0x03B0(0x0001)
  Camille_Outfits*                                                    fav-outfit_Camille                                //0x03B1(0x0001)
  TimerHandle*                                                        killstreakHandle                                  //0x03B8(0x0008)
  Friday_Outfits*                                                     fav-outfit_Friday                                 //0x03C0(0x0001)
  Abigail_Outfits*                                                    fav-outfit_Abigail                                //0x03C1(0x0001)
  Bingo_Outfits*                                                      fav-outfit_Bingo                                  //0x03C2(0x0001)
  Blaise_Outfits*                                                     fav-outfit_Blaise                                 //0x03C3(0x0001)
  *                                                                   Lives                                             //0x03C4(0x0004)
  Hemlock_Outfits*                                                    fav-outfit_Hemlock                                //0x03C8(0x0001)
  Charlie_Outfits*                                                    fav-outfit_Panda                                  //0x03C9(0x0001)
  *                                                                   DEAD AS FUCK                                      //0x03CA(0x0001)
  *                                                                   CanRespawn                                        //0x03CB(0x0001)
  TimerHandle*                                                        SpawnTimer                                        //0x03D0(0x0008)
  *                                                                   RespawnTime                                       //0x03D8(0x0004)
  *                                                                   SpawnTimeLeft                                     //0x03DC(0x0004)
  *                                                                   Assists                                           //0x03E0(0x0004)
  *                                                                   admin                                             //0x03E4(0x0001)
  *                                                                   Host                                              //0x03E5(0x0001)
  OnKill__DelegateSignature*                                          OnKill                                            //0x03E8(0x0010)
  *                                                                   Captures                                          //0x03F8(0x0004)
  *                                                                   Winner                                            //0x03FC(0x0001)
  BP_Spray_C*                                                         mySpray                                           //0x0400(0x0008)
  char_loadout_nums*                                                  char_loadout_nums                                 //0x0408(0x0050)
  *                                                                   TeamID   //                                          //0x0458(0x0004)
  Falcon_Outfits*                                                     fav-outfit_Falcon                                 //0x045C(0x0001)
  *                                                                   talking                                           //0x045D(0x0001)
  LivesChanged__DelegateSignature*                                    LivesChanged                                      //0x0460(0x0010)
  CustomCharacterColors*                                              CustomCharacterColors                             //0x0470(0x0050)
  Gwen_Outfits*                                                       fav-outfit_Gwen                                   //0x04C0(0x0001)
  *                                                                   ignoreLives                                       //0x04C1(0x0001)
  *                                                                   gold                                              //0x04C4(0x0004)
  *                                                                   Bot Name                                          //0x04C8(0x0018)
  TeamsChanged__DelegateSignature*                                    TeamsChanged                                      //0x04E0(0x0010)
};


class pawnTracker_grass_C : public ActorComponent
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x00B0(0x0008)
  *                                                                   ReceiveTick                                       //0x0229(0x0229)
  CallFunc_GetOwner_ReturnValue*                                      ExecuteUbergraph_pawnTracker_grass                //0x0000(0x0229)
  players*                                                            players                                           //0x00B8(0x0010)
  GameplayTagContainer*                                               allied                                            //0x00C8(0x0020)
  *                                                                   canTrack                                          //0x00E8(0x0001)
};


class BP_PlayerCharacter_C : public Character_w_Tags
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0660(0x0008)
  CurrentWeapon*                                                      GetCurrentWeapon                                  //0x0000(0x0229)
  *                                                                   GetPlayerDamageBuffs                              //0x0000(0x0229)
  players*                                                            MSG_GetConnectedPlayers                           //0x0000(0x0229)
  *                                                                   MSG_GetPlayerID                                   //0x0000(0x0229)
  *                                                                   MSG_RequestPrivateMessage                         //0x0000(0x0229)
  *                                                                   MSG_GetPlayerIDFromUsername                       //0x0000(0x0229)
  *                                                                   MSG_GetUsername                                   //0x0000(0x0229)
  *                                                                   MSG_GetTeamID                                     //0x0000(0x0229)
  WeaponOnGround*                                                     Weapon Unique Checker                             //0x0000(0x0229)
  CallFunc_GetDataTableRowFromName_OutRow*                            ApplyLoadout                                      //0x0000(0x0229)
  TempValidDoTs*                                                      CleanupDotArray                                   //0x0000(0x0229)
  CallFunc_GetAIController_ReturnValue*                               SetNavFilter                                      //0x0000(0x0229)
  Mat Instance*                                                       RecolorMeshes                                     //0x0000(0x0229)
  meshes*                                                             WaveEnemyOutline                                  //0x0000(0x0229)
  *                                                                   Unused Empties                                    //0x0000(0x0229)
  CallFunc_Array_Get_Item*                                            MegaWeaponCheck                                   //0x0000(0x0229)
  *                                                                   OnRep_HoldingMegaWeapon                           //0x0000(0x0229)
  CallFunc_Array_Get_Item*                                            Grapple Check                                     //0x0000(0x0229)
  *                                                                   Dedicated Server Flags                            //0x0000(0x0229)
  PatrolActor*                                                        FetchNextPatrolPoint                              //0x0000(0x0229)
  *                                                                   MSG_GetIsVOIPActivated                            //0x0000(0x0229)
  K2Node_DynamicCast_AsFO_Player_State*                               MSG_GetPlayerUsername                             //0x0000(0x0229)
  *                                                                   MSG_GetIsMuted                                    //0x0000(0x0229)
  WidgetVoiceRef*                                                     MSG_GetWidgetVoice                                //0x0000(0x0229)
  *                                                                   GetAimDirection                                   //0x0000(0x0229)
  *                                                                   last Slot Register                                //0x0000(0x0229)
  *                                                                   Sprint                                            //0x0000(0x0229)
  InputPin*                                                           AttachMeshSocket                                  //0x0000(0x0229)
  *                                                                   PickMe Quote VO                                   //0x0000(0x0229)
  Sound*                                                              SpeakQuote                                        //0x0000(0x0229)
  *                                                                   OnRep_HeldAmmo                                    //0x0000(0x0229)
  *                                                                   Clear Crouch Timer                                //0x0000(0x0229)
  *                                                                   Clear Interact Timer                              //0x0000(0x0229)
  Player State*                                                       ColorSet_FromPlayerState                          //0x0000(0x0229)
  K2Node_Select_Default*                                              CENTER_AIM MODE_FUNCTION                          //0x0000(0x0229)
  *                                                                   Yaw Limiter                                       //0x0000(0x0229)
  *                                                                   meleeSpinAttack                                   //0x0000(0x0229)
  CallFunc_GetPlayerController_ReturnValue*                           FreeLook                                          //0x0000(0x0229)
  *                                                                   StopCurrentHurt                                   //0x0000(0x0229)
  *                                                                   StopCurrentQuote                                  //0x0000(0x0229)
  Temp_object_Variable*                                               Kill Char - Weapon VO                             //0x0000(0x0229)
  CallFunc_Array_Get_Item*                                            FadeCharacterTest                                 //0x0000(0x0229)
  *                                                                   Spawn Quote VO                                    //0x0000(0x0229)
  CallFunc_K2_GetRootComponent_ReturnValue*                           CrossHair_TeamReaction                            //0x0000(0x0229)
  *                                                                   FallingStabMontage                                //0x0000(0x0229)
  CallFunc_GetController_ReturnValue*                                 StylishError                                      //0x0000(0x0229)
  CallFunc_SpawnSoundAttached_ReturnValue*                            PlayRareDeath                                     //0x0000(0x0229)
  Temp_object_Variable*                                               Kill Streak VO                                    //0x0000(0x0229)
  Temp_object_Variable*                                               Kill Char VO                                      //0x0000(0x0229)
  weapon*                                                             Weapon Voice Event                                //0x0000(0x0229)
  Object*                                                             Incoming Heal                                     //0x0000(0x0229)
  Owner*                                                              Damage Number Spawn                               //0x0000(0x0229)
  *                                                                   BloodSmear                                        //0x0000(0x0229)
  Hit*                                                                RagDollHitSounds                                  //0x0000(0x0229)
  *                                                                   CleanUpAirSpin                                    //0x0000(0x0229)
  CallFunc_K2_GetComponentsByClass_ReturnValue*                       Death_MovementDisable                             //0x0000(0x0229)
  CallFunc_K2_SetRelativeLocation_SweepHitResult*                     Update Crouch Position                            //0x0000(0x0229)
  *                                                                   OnRep_Crouching_NET                               //0x0000(0x0229)
  *                                                                   Bubble Shield Function                            //0x0000(0x0229)
  *                                                                   OnRep_RollMontage_NET                             //0x0000(0x0229)
  *                                                                   StoreInitialStats                                 //0x0000(0x0229)
  controllerForDeath*                                                 Notify_Controller_WeDied                          //0x0000(0x0229)
  assister_state*                                                     KillFeed                                          //0x0000(0x0229)
  CallFunc_GetController_ReturnValue*                                 Scope_Post_Process                                //0x0000(0x0229)
  Mask*                                                               Set Body Material Mask                            //0x0000(0x0229)
  *                                                                   SuicideInstigationChecker                         //0x0000(0x0229)
  Class*                                                              Attach DoT                                        //0x0000(0x0229)
  *                                                                   Initialize Hitboxes                               //0x0000(0x0229)
  *                                                                   CleanEmptyHuskPlayers                             //0x0000(0x0229)
  CallFunc_AddComponent_ReturnValue*                                  GrassTrack                                        //0x0000(0x0229)
  *                                                                   Dagger Montage                                    //0x0000(0x0229)
  *                                                                   EnergyCost_Function                               //0x0000(0x0229)
  *                                                                   ColorSet_TeamSwitch                               //0x0000(0x0229)
  CallFunc_GetGameInstance_ReturnValue*                               GetCustomOutFit_onMachine                         //0x0000(0x0229)
  CallFunc_GetChildrenComponents_Children*                            ResetOutfits                                      //0x0000(0x0229)
  CallFunc_Array_Get_Item*                                            InitializeOutfits                                 //0x0000(0x0229)
  selectedOutfit*                                                     Add selected Outfit                               //0x0000(0x0229)
  Incoming Killer*                                                    NonSelfInstigator                                 //0x0000(0x0229)
  CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue*              headShotDeathCheck1                               //0x0000(0x0229)
  *                                                                   unarmed_Attacks                                   //0x0000(0x0229)
  *                                                                   OnRep_headShotted                                 //0x0000(0x0229)
  *                                                                   doWeHoldMaxAmmoCheck                              //0x0000(0x0229)
  CallFunc_GetController_ReturnValue*                                 toggleADSside                                     //0x0000(0x0229)
  CallFunc_GetController_ReturnValue*                                 getControllerADSside                              //0x0000(0x0229)
  IncomingDamageIcon*                                                 killFeedCast                                      //0x0000(0x0229)
  IncomingDMGController*                                              CheckTeamDamage                                   //0x0000(0x0229)
  *                                                                   anim_Throw                                        //0x0000(0x0229)
  *                                                                   OnRep_AttachedState                               //0x0000(0x0229)
  *                                                                   PlayGunAttackAnim                                 //0x0000(0x0229)
  *                                                                   OnRep_alive?                                      //0x0000(0x0229)
  Value*                                                              GetRollDirection                                  //0x0000(0x0229)
  CallFunc_SpawnSoundAttached_ReturnValue*                            PlayHurtSounds                                    //0x0000(0x0229)
  *                                                                   DrawInteractableSphere                            //0x0000(0x0229)
  *                                                                   OnRep_InteractionFound                            //0x0000(0x0229)
  *                                                                   OnRep_IsHost                                      //0x0000(0x0229)
  *                                                                   OnRep_interactableActor                           //0x0000(0x0229)
  CallFunc_GetAnimInstance_ReturnValue*                               Take from Floor Animation                         //0x0000(0x0229)
  weaponToDelete*                                                     UnEquipFunction                                   //0x0000(0x0229)
  RetrievedItem*                                                      EquipItemFunction                                 //0x0000(0x0229)
  *                                                                   OnRep_isRunning                                   //0x0000(0x0229)
  *                                                                   OnRep_slowerRunSpeed                              //0x0000(0x0229)
  *                                                                   OnRep_runSpeed                                    //0x0000(0x0229)
  actor attached*                                                     Attach Mode                                       //0x0000(0x0229)
  Interact Actor*                                                     Command Mode Check                                //0x0000(0x0229)
  Interactable*                                                       interactWithTarget                                //0x0000(0x0229)
  returnInteractables*                                                traceForInteractable                              //0x0000(0x0229)
  playerMesh*                                                         setCollisionResponses                             //0x0000(0x0229)
  *                                                                   blendshape_grin                                   //0x0000(0x0229)
  DmgType*                                                            DamageReduction                                   //0x0000(0x0229)
  starterWeapons*                                                     Convert_Equipment_to_StarterWeapons               //0x0000(0x0229)
  Object*                                                             DetonatorUpgrade_AmmoScan                         //0x0000(0x0229)
  ActorObject*                                                        weaponBase_Pickup                                 //0x0000(0x0229)
  WeaponClasses*                                                      DropAllToolsFunction                              //0x0000(0x0229)
  corpseActor*                                                        Die_PLAYER                                        //0x0000(0x0229)
  currentCheckpoint*                                                  getCheckPoint                                     //0x0000(0x0229)
  RetrievedItem*                                                      weaponSwapSFX                                     //0x0000(0x0229)
  CallFunc_GetController_ReturnValue*                                 Die                                               //0x0000(0x0229)
  PlayerController*                                                   create_combat_HUD                                 //0x0000(0x0229)
  *                                                                   dpad_select                                       //0x0000(0x0229)
  CallFunc_K2_SetActorTransform_SweepHitResult*                       spawnFunction                                     //0x0000(0x0229)
  *                                                                   SwitchWeaponsFunction                             //0x0000(0x0229)
  Item*                                                               attachToSocket                                    //0x0000(0x0229)
  Item*                                                               animationBools                                    //0x0000(0x0229)
  Temp_object_Variable*                                               getPhysicsMaterial                                //0x0000(0x0229)
  *                                                                   blendshape_eyeBlink                               //0x0000(0x0229)
  *                                                                   altMeleeRelease                                   //0x0000(0x0229)
  *                                                                   altMeleeWindup                                    //0x0000(0x0229)
  *                                                                   meleeRelease                                      //0x0000(0x0229)
  *                                                                   meleeWindup                                       //0x0000(0x0229)
  *                                                                   UserConstructionScript                            //0x0229(0x0229)
  *                                                                   cameraSocketTimeline__FinishedFunc                //0x0000(0x0229)
  *                                                                   cameraSocketTimeline__UpdateFunc                  //0x0000(0x0229)
  *                                                                   healthVignetteTimeline__FinishedFunc              //0x0000(0x0229)
  *                                                                   healthVignetteTimeline__UpdateFunc                //0x0000(0x0229)
  *                                                                   inventory_ui_timeline__FinishedFunc               //0x0000(0x0229)
  *                                                                   inventory_ui_timeline__UpdateFunc                 //0x0000(0x0229)
  *                                                                   CameraZoomTimeline__FinishedFunc                  //0x0000(0x0229)
  *                                                                   CameraZoomTimeline__UpdateFunc                    //0x0000(0x0229)
  *                                                                   bounce timeline__FinishedFunc                     //0x0000(0x0229)
  *                                                                   bounce timeline__UpdateFunc                       //0x0000(0x0229)
  *                                                                   InpActEvt_NumPadOne_K2Node_InputKeyEvent          //0x0000(0x0229)
  *                                                                   InpActEvt_FreeLook_K2Node_InputActionEvent        //0x0000(0x0229)
  *                                                                   InpActEvt_FreeLook_K2Node_InputActionEvent        //0x0000(0x0229)
  *                                                                   InpActEvt_SpeakWheel_K2Node_InputActionEvent      //0x0000(0x0229)
  *                                                                   InpActEvt_SpeakWheel_K2Node_InputActionEvent      //0x0000(0x0229)
  *                                                                   InpActEvt_Taunt_K2Node_InputActionEvent           //0x0000(0x0229)
  *                                                                   InpActEvt_HealMe_K2Node_InputActionEvent          //0x0000(0x0229)
  *                                                                   InpActEvt_Thanks_K2Node_InputActionEvent          //0x0000(0x0229)
  *                                                                   InpActEvt_Crouch_K2Node_InputActionEvent          //0x0000(0x0229)
  *                                                                   InpActEvt_Crouch_K2Node_InputActionEvent          //0x0000(0x0229)
  *                                                                   InpActEvt_Jump_K2Node_InputActionEvent            //0x0000(0x0229)
  *                                                                   InpActEvt_Fire_K2Node_InputActionEvent            //0x0000(0x0229)
  *                                                                   InpActEvt_Fire_K2Node_InputActionEvent            //0x0000(0x0229)
  *                                                                   InpActEvt_AltFire_K2Node_InputActionEvent         //0x0000(0x0229)
  *                                                                   InpActEvt_AltFire_K2Node_InputActionEvent         //0x0000(0x0229)
  *                                                                   Use_K2Node_InputActionEvent                       //0x0000(0x0229)
  *                                                                   Use_K2Node_InputActionEvent                       //0x0000(0x0229)
  *                                                                   InpActEvt_SwapTools-_K2Node_InputActionEvent      //0x0000(0x0229)
  *                                                                   InpActEvt_SwapTools+_K2Node_InputActionEvent      //0x0000(0x0229)
  *                                                                   Cancel_K2Node_InputActionEvent                    //0x0000(0x0229)
  *                                                                   InpActEvt_DebugTeleport_K2Node_InputActionEvent   //0x0000(0x0229)
  *                                                                   InpActEvt_Dodge Roll_K2Node_InputActionEvent      //0x0000(0x0229)
  *                                                                   InpActEvt_ADS Swap_K2Node_InputActionEvent        //0x0000(0x0229)
  *                                                                   InpActEvt_D-Pad Left_K2Node_InputActionEvent      //0x0000(0x0229)
  *                                                                   InpActEvt_D-Pad Right_K2Node_InputActionEvent     //0x0000(0x0229)
  *                                                                   InpActEvt_D-Pad Up_K2Node_InputActionEvent        //0x0000(0x0229)
  *                                                                   InpActEvt_D-Pad Down_K2Node_InputActionEvent      //0x0000(0x0229)
  *                                                                   InpActEvt_DropFlag_K2Node_InputActionEvent        //0x0000(0x0229)
  *                                                                   InpActEvt_Decimal_K2Node_InputKeyEvent            //0x0000(0x0229)
  *                                                                   InpActEvt_LastTool_K2Node_InputActionEvent        //0x0000(0x0229)
  *                                                                   InpActEvt_QuickSwitch_1_K2Node_InputActionEvent   //0x0000(0x0229)
  *                                                                   InpActEvt_QuickSwitch_2_K2Node_InputActionEvent   //0x0000(0x0229)
  *                                                                   InpActEvt_QuickSwitch_3_K2Node_InputActionEvent   //0x0000(0x0229)
  *                                                                   InpActEvt_QuickSwitch_4_K2Node_InputActionEvent   //0x0000(0x0229)
  *                                                                   InpActEvt_QuickSwitch_5_K2Node_InputActionEvent   //0x0000(0x0229)
  *                                                                   InpActEvt_Delete_K2Node_InputKeyEvent             //0x0000(0x0229)
  *                                                                   MSG_NewMessage                                    //0x0000(0x0229)
  *                                                                   MSG_SetPlayerID                                   //0x0000(0x0229)
  *                                                                   MSG_SetTeamID                                     //0x0000(0x0229)
  *                                                                   Progress Achievement Locally                      //0x0000(0x0229)
  *                                                                   Bot BeginPlay                                     //0x0000(0x0229)
  *                                                                   Change State                                      //0x0000(0x0229)
  *                                                                   Bot Die                                           //0x0000(0x0229)
  Controller*                                                         Bot Any Damage                                    //0x0000(0x0229)
  *                                                                   WaveSpawn Initialize                              //0x0000(0x0229)
  *                                                                   TractorTrack                                      //0x0000(0x0229)
  *                                                                   SwitchPerspModes                                  //0x0000(0x0229)
  *                                                                   Wheel Command                                     //0x0000(0x0229)
  *                                                                   SpeechWheel CD End                                //0x0000(0x0229)
  Sound*                                                              Speak Quote Server                                //0x0000(0x0229)
  Sound*                                                              Speak Quote Multi                                 //0x0000(0x0229)
  *                                                                   Teleport Client                                   //0x0000(0x0229)
  *                                                                   Teleport Event                                    //0x0000(0x0229)
  *                                                                   Net Tick                                          //0x0000(0x0229)
  *                                                                   Server Net Tick                                   //0x0000(0x0229)
  NewController*                                                      ReceivePossessed                                  //0x0229(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   Health Management                                 //0x0000(0x0229)
  *                                                                   Smooth Sync                                       //0x0000(0x0229)
  *                                                                   OnFireDispatch                                    //0x0000(0x0229)
  *                                                                   Smooth Sync Check                                 //0x0000(0x0229)
  *                                                                   Dodge Roll Anim                                   //0x0000(0x0229)
  *                                                                   Client Movement Error                             //0x0000(0x0229)
  *                                                                   Server Accept Position                            //0x0000(0x0229)
  *                                                                   InpAxisEvt_LookUp_K2Node_InputAxisEvent           //0x0000(0x0229)
  *                                                                   InpAxisEvt_Turn_K2Node_InputAxisEvent             //0x0000(0x0229)
  *                                                                   InpAxisEvt_MoveForward_K2Node_InputAxisEvent      //0x0000(0x0229)
  *                                                                   InpAxisEvt_MoveRight_K2Node_InputAxisEvent        //0x0000(0x0229)
  *                                                                   InpAxisEvt_TurnRate_K2Node_InputAxisEvent         //0x0000(0x0229)
  *                                                                   InpAxisEvt_LookUpRate_K2Node_InputAxisEvent       //0x0000(0x0229)
  *                                                                   toAimCam                                          //0x0000(0x0229)
  *                                                                   toRearCam                                         //0x0000(0x0229)
  *                                                                   slowMovement                                      //0x0000(0x0229)
  *                                                                   releaseSlow                                       //0x0000(0x0229)
  weaponBaseActor*                                                    weaponPickup Multicast                            //0x0000(0x0229)
  *                                                                   unEquipCurrentAUTH                                //0x0000(0x0229)
  *                                                                   equipIndexEvent                                   //0x0000(0x0229)
  *                                                                   gatherInventory                                   //0x0000(0x0229)
  *                                                                   currentItemUIIndex                                //0x0000(0x0229)
  DamageType*                                                         ReceiveAnyDamage                                  //0x0229(0x0229)
  *                                                                   toSprint Multicast                                //0x0000(0x0229)
  *                                                                   stopSprint Multicast                              //0x0000(0x0229)
  *                                                                   setAreaText                                       //0x0000(0x0229)
  *                                                                   regen                                             //0x0000(0x0229)
  *                                                                   SwapTools-                                        //0x0000(0x0229)
  *                                                                   SwapTools+                                        //0x0000(0x0229)
  *                                                                   lerpCameraSocket                                  //0x0000(0x0229)
  *                                                                   ConsumesOnDeath                                   //0x0000(0x0229)
  *                                                                   Health Vignette Effect                            //0x0000(0x0229)
  *                                                                   updateWeaponDetails                               //0x0000(0x0229)
  *                                                                   EquipStarter_Weapons                              //0x0000(0x0229)
  *                                                                   air_Spin                                          //0x0000(0x0229)
  *                                                                   OnLaunched                                        //0x0229(0x0229)
  Hit*                                                                OnLanded                                          //0x0229(0x0229)
  *                                                                   Stop Spinning                                     //0x0000(0x0229)
  *                                                                   retrieveControlOptions                            //0x0000(0x0229)
  *                                                                   ScanForInteraction                                //0x0000(0x0229)
  *                                                                   toSprintServer                                    //0x0000(0x0229)
  *                                                                   stopSprintServer                                  //0x0000(0x0229)
  *                                                                   JumpStart                                         //0x0000(0x0229)
  *                                                                   JumpEnd                                           //0x0000(0x0229)
  *                                                                   JumpStartSERVER                                   //0x0000(0x0229)
  *                                                                   JumpEndSERVER                                     //0x0000(0x0229)
  *                                                                   SwitchWeapon Multicast                            //0x0000(0x0229)
  *                                                                   SwitchWeaponSERVER                                //0x0000(0x0229)
  Interactable*                                                       Interact Multicast                                //0x0000(0x0229)
  Interactable*                                                       InteractSERVER                                    //0x0000(0x0229)
  RollMontage_NET*                                                    dodgeRollSERVER                                   //0x0000(0x0229)
  *                                                                   equipItemIndexSERVER                              //0x0000(0x0229)
  *                                                                   equipItemIndexEvent                               //0x0000(0x0229)
  *                                                                   unequipCurrent Multicast                          //0x0000(0x0229)
  *                                                                   unEquipCurrentSERVER                              //0x0000(0x0229)
  weaponBaseActor*                                                    weaponPickupFunction                              //0x0000(0x0229)
  DamagedActor*                                                       Hurt Self Multicast                               //0x0000(0x0229)
  DamagedActor*                                                       Hurt Self SERVER                                  //0x0000(0x0229)
  *                                                                   DrawTheHint                                       //0x0000(0x0229)
  *                                                                   HealthManagement                                  //0x0000(0x0229)
  *                                                                   DamageTakenEffects                                //0x0000(0x0229)
  *                                                                   Fire Held Item                                    //0x0000(0x0229)
  *                                                                   ALT Release Fire                                  //0x0000(0x0229)
  *                                                                   ALT Fire                                          //0x0000(0x0229)
  *                                                                   Release Fire                                      //0x0000(0x0229)
  actor attached*                                                     AttachModeEvent                                   //0x0000(0x0229)
  *                                                                   SpawnStarter Server                               //0x0000(0x0229)
  *                                                                   Death Check                                       //0x0000(0x0229)
  PickupItemBase*                                                     PickUpItemBase _ USE                              //0x0000(0x0229)
  *                                                                   PlayerInputSwitchWeapon                           //0x0000(0x0229)
  *                                                                   Client Possessed Inits                            //0x0000(0x0229)
  Actor*                                                              BndEvt__PlayerState_K2Node_ComponentBoundEvent_1_ActorEndPlaySignature__DelegateSignature//0x0000(0x0229)
  *                                                                   ReceiveEndPlay                                    //0x0229(0x0229)
  *                                                                   YawFix                                            //0x0000(0x0229)
  *                                                                   DropAllTools RPC                                  //0x0000(0x0229)
  *                                                                   ZoomCamera                                        //0x0000(0x0229)
  *                                                                   Client Damage Effect                              //0x0000(0x0229)
  OverlappedComponent*                                                BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature//0x0000(0x0229)
  *                                                                   PickupFULLHP                                      //0x0000(0x0229)
  *                                                                   pickupHPEffect                                    //0x0000(0x0229)
  *                                                                   PickupAMMOEffect                                  //0x0000(0x0229)
  *                                                                   FullAmmoEffect                                    //0x0000(0x0229)
  Interactable*                                                       ranOverItem Multicast                             //0x0000(0x0229)
  *                                                                   Reset Interact CD                                 //0x0000(0x0229)
  Player State*                                                       notify hitmark                                    //0x0000(0x0229)
  *                                                                   SetFavColor                                       //0x0000(0x0229)
  *                                                                   Mesh Bounce                                       //0x0000(0x0229)
  *                                                                   Outfit Change Multicast                           //0x0000(0x0229)
  *                                                                   Outfit Change check                               //0x0000(0x0229)
  *                                                                   Outfit Change Check LOCAL                         //0x0000(0x0229)
  *                                                                   update Color Local                                //0x0000(0x0229)
  Damage Type*                                                        Poison Check                                      //0x0000(0x0229)
  *                                                                   name manager                                      //0x0000(0x0229)
  *                                                                   MSG_PlayEmote                                     //0x0000(0x0229)
  *                                                                   Server_PlayerEmote                                //0x0000(0x0229)
  *                                                                   Multi_PlayerEmote                                 //0x0000(0x0229)
  *                                                                   toSideCam                                         //0x0000(0x0229)
  *                                                                   Equipment Camera Check                            //0x0000(0x0229)
  Target*                                                             send fragged message                              //0x0000(0x0229)
  *                                                                   Spawn Protection                                  //0x0000(0x0229)
  *                                                                   DropFlagServer                                    //0x0000(0x0229)
  *                                                                   BubbleShield                                      //0x0000(0x0229)
  *                                                                   Color Set                                         //0x0000(0x0229)
  *                                                                   HP Regen                                          //0x0000(0x0229)
  *                                                                   Energy Regen                                      //0x0000(0x0229)
  *                                                                   Enter_Combat                                      //0x0000(0x0229)
  *                                                                   EnergyCostServer                                  //0x0000(0x0229)
  *                                                                   Enter Combat Server                               //0x0000(0x0229)
  *                                                                   EnterCombatEvent                                  //0x0000(0x0229)
  *                                                                   InpAxisEvt_FlyAxis_K2Node_InputAxisEvent          //0x0000(0x0229)
  *                                                                   Multiplayer Initialize                            //0x0000(0x0229)
  *                                                                   Global CD                                         //0x0000(0x0229)
  *                                                                   Bubble Shield End                                 //0x0000(0x0229)
  *                                                                   Bubble Shield Pause                               //0x0000(0x0229)
  *                                                                   set server YAW AIM                                //0x0000(0x0229)
  *                                                                   Crouch Multi                                      //0x0000(0x0229)
  *                                                                   Crouch Server                                     //0x0000(0x0229)
  *                                                                   Crouch Event                                      //0x0000(0x0229)
  *                                                                   OnLanded Server                                   //0x0000(0x0229)
  *                                                                   OnLanded Multi                                    //0x0000(0x0229)
  HitComponent*                                                       Ragdoll Collide                                   //0x0000(0x0229)
  *                                                                   exit combat                                       //0x0000(0x0229)
  *                                                                   ReceiveTick                                       //0x0229(0x0229)
  *                                                                   Set Camera Pitch Server                           //0x0000(0x0229)
  *                                                                   Crouch NET Server                                 //0x0000(0x0229)
  Target*                                                             Client Damage Event                               //0x0000(0x0229)
  *                                                                   Died                                              //0x0000(0x0229)
  Killer Actor*                                                       On Death Client                                   //0x0000(0x0229)
  *                                                                   Kill Voice Line Client                            //0x0000(0x0229)
  *                                                                   Kill Streak VO All                                //0x0000(0x0229)
  *                                                                   Falling NET Server                                //0x0000(0x0229)
  *                                                                   CanJump NET Server                                //0x0000(0x0229)
  *                                                                   Kill Voice Line Client - Weapon                   //0x0000(0x0229)
  *                                                                   ZoomCamera_local                                  //0x0000(0x0229)
  *                                                                   Combat Entered                                    //0x0000(0x0229)
  *                                                                   GCD                                               //0x0000(0x0229)
  OverlappedComponent*                                                BndEvt__PickupZone_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature//0x0000(0x0229)
  *                                                                   Dodge Roll Action                                 //0x0000(0x0229)
  *                                                                   Jump Action                                       //0x0000(0x0229)
  *                                                                   FlyCheat                                          //0x0000(0x0229)
  *                                                                   Flag Drop Timer                                   //0x0000(0x0229)
  *                                                                   Update Ammo Dispatch Event                        //0x0000(0x0229)
  Target*                                                             Update Ammo Dispatch Owner                        //0x0000(0x0229)
  *                                                                   Interact Action                                   //0x0000(0x0229)
  *                                                                   Interact Timer Event                              //0x0000(0x0229)
  *                                                                   Crouch Buffer                                     //0x0000(0x0229)
  *                                                                   Start Crouch Event                                //0x0000(0x0229)
  *                                                                   WeaponFired Event Bound                           //0x0000(0x0229)
  *                                                                   airDodge                                          //0x0000(0x0229)
  *                                                                   PickupGoldEffect                                  //0x0000(0x0229)
  *                                                                   spinExpire                                        //0x0000(0x0229)
  *                                                                   spinCheckWater                                    //0x0000(0x0229)
  *                                                                   Pressing Crouch                                   //0x0000(0x0229)
  *                                                                   Releasing Crouch                                  //0x0000(0x0229)
  CallFunc_GetGameInstance_ReturnValue*                               ExecuteUbergraph_BP_PlayerCharacter               //0x0000(0x0229)
  DoT*                                                                DoTApplied__DelegateSignature                     //0x0000(0x0229)
  *                                                                   bIsMeleeSwinging__DelegateSignature               //0x0000(0x0229)
  *                                                                   onJumpDispatch__DelegateSignature                 //0x0000(0x0229)
  *                                                                   onLandedDispatch__DelegateSignature               //0x0000(0x0229)
  *                                                                   onDeathDispatch__DelegateSignature                //0x0000(0x0229)
  FiredWeapon*                                                        WeaponFiredDispatch__DelegateSignature            //0x0000(0x0229)
  *                                                                   GCD_Started__DelegateSignature                    //0x0000(0x0229)
  *                                                                   inSpawnRoom__DelegateSignature                    //0x0000(0x0229)
  *                                                                   OnFireDispatcher__DelegateSignature               //0x0000(0x0229)
  *                                                                   EquipWeaponDispatcher__DelegateSignature          //0x0000(0x0229)
  *                                                                   fullyZoomed__DelegateSignature                    //0x0000(0x0229)
  Killer Actor*                                                       OnDeath__DelegateSignature                        //0x0000(0x0229)
  *                                                                   HurtDispatcher__DelegateSignature                 //0x0000(0x0229)
  *                                                                   DropflagEvent__DelegateSignature                  //0x0000(0x0229)
  ParticleSystemComponent*                                            P_Bubble                                          //0x0668(0x0008)
  PointLightComponent*                                                PointLight                                        //0x0670(0x0008)
  MaterialBillboardComponent*                                         MEGA_WEAPON_LIGHT                                 //0x0678(0x0008)
  StaticMeshComponent*                                                Typing_Mesh                                       //0x0680(0x0008)
  CameraComponent*                                                    FPS                                               //0x0688(0x0008)
  SceneComponent*                                                     jumpFXLoc                                         //0x0690(0x0008)
  BP_CircleDamageIndicatorComponent_C*                                BP_CircleDamageIndicatorComponent                 //0x0698(0x0008)
  SceneComponent*                                                     centerMode_zoom_aim                               //0x06A0(0x0008)
  SceneComponent*                                                     centerMode_aim                                    //0x06A8(0x0008)
  CapsuleComponent*                                                   PickupZone                                        //0x06B0(0x0008)
  ChildActorComponent*                                                FreeLookActor                                     //0x06B8(0x0008)
  SceneComponent*                                                     right_shoulder_cam                                //0x06C0(0x0008)
  SceneComponent*                                                     left_shoulder_cam                                 //0x06C8(0x0008)
  SceneComponent*                                                     left_aim_cam                                      //0x06D0(0x0008)
  SceneComponent*                                                     right_aim_cam                                     //0x06D8(0x0008)
  SceneComponent*                                                     center_aim_cam                                    //0x06E0(0x0008)
  SceneComponent*                                                     FollowTarget                                      //0x06E8(0x0008)
  SmoothSync*                                                         SmoothSync                                        //0x06F0(0x0008)
  SceneComponent*                                                     CostumeAttachPoint                                //0x06F8(0x0008)
  SceneComponent*                                                     FlagAttach                                        //0x0700(0x0008)
  SceneComponent*                                                     name widget locator                               //0x0708(0x0008)
  SceneComponent*                                                     damage Number location                            //0x0710(0x0008)
  SceneComponent*                                                     healFX                                            //0x0718(0x0008)
  AIPerceptionStimuliSourceComponent*                                 AIPerceptionStimuliSource                         //0x0720(0x0008)
  AIPerceptionComponent*                                              AIPerception                                      //0x0728(0x0008)
  puzzleWeight_C*                                                     puzzleWeight                                      //0x0730(0x0008)
  CapsuleComponent*                                                   Hint_Scanner                                      //0x0738(0x0008)
  SpringArmComponent*                                                 CameraBoom                                        //0x0740(0x0008)
  CameraComponent*                                                    TPCamera                                          //0x0748(0x0008)
  *                                                                   cameraSocketTimeline_alpha_34FABBBA4D3DDA7DDADFC5971056D914//0x0750(0x0004)
  ETimelineDirection*                                                 cameraSocketTimeline__Direction_34FABBBA4D3DDA7DDADFC5971056D914//0x0754(0x0001)
  TimelineComponent*                                                  cameraSocketTimeline                              //0x0758(0x0008)
  *                                                                   bounce_timeline_NewTrack_0_5070A0784BEB7A741A42E08C3DDE1790//0x0760(0x0004)
  ETimelineDirection*                                                 bounce_timeline__Direction_5070A0784BEB7A741A42E08C3DDE1790//0x0764(0x0001)
  TimelineComponent*                                                  bounce timeline                                   //0x0768(0x0008)
  *                                                                   CameraZoomTimeline_Alpha_71BA6C714CD67C41937C18B43BBFB7C3//0x0770(0x0004)
  ETimelineDirection*                                                 CameraZoomTimeline__Direction_71BA6C714CD67C41937C18B43BBFB7C3//0x0774(0x0001)
  TimelineComponent*                                                  CameraZoomTimeline                                //0x0778(0x0008)
  *                                                                   inventory_ui_timeline_alpha_94C20CAA4426E45A954586BCF94253AF//0x0780(0x0004)
  ETimelineDirection*                                                 inventory_ui_timeline__Direction_94C20CAA4426E45A954586BCF94253AF//0x0784(0x0001)
  TimelineComponent*                                                  inventory_ui_timeline                             //0x0788(0x0008)
  *                                                                   healthVignetteTimeline_Opacity_5BAABF284C073CCD4C8BB49585B6CD6D//0x0790(0x0004)
  ETimelineDirection*                                                 healthVignetteTimeline__Direction_5BAABF284C073CCD4C8BB49585B6CD6D//0x0794(0x0001)
  TimelineComponent*                                                  healthVignetteTimeline                            //0x0798(0x0008)
  *                                                                   BaseTurnRate                                      //0x07A0(0x0004)
  *                                                                   BaseLookUpRate                                    //0x07A4(0x0004)
  *                                                                   OnCrouchButtonDown                                //0x07A8(0x0001)
  BP_weaponBase_C*                                                    CurrentWeapon                                     //0x07B0(0x0008)
  *                                                                   FirstPersonView?                                  //0x07B8(0x0001)
  *                                                                   tailPhysics                                       //0x07BC(0x0008)
  *                                                                   Kasparian_LeftUpLeg                               //0x07C4(0x0008)
  *                                                                   Kasparian_RightUpLeg                              //0x07CC(0x0008)
  *                                                                   hipsPhysics                                       //0x07D4(0x0008)
  *                                                                   cameraPitch                                       //0x07DC(0x0004)
  *                                                                   runSpeed                                          //0x07E0(0x0004)
  *                                                                   walkSpeed                                         //0x07E4(0x0004)
  Vector*                                                             currentCameraSocket                               //0x07E8(0x000C)
  *                                                                   canRun?                                           //0x07F4(0x0001)
  *                                                                   mainEquipped?                                     //0x07F5(0x0001)
  *                                                                   canSwapTools?                                     //0x07F6(0x0001)
  equipment*                                                          equipment                                         //0x07F8(0x0010)
  *                                                                   Health                                            //0x0808(0x0004)
  starterWeapons*                                                     starterWeapons                                    //0x0810(0x0010)
  *                                                                   PlayerInt                                         //0x0820(0x0004)
  Transform*                                                          SpawnLocation                                     //0x0830(0x0030)
  *                                                                   cur_item                                          //0x0860(0x0004)
  *                                                                   canCast                                           //0x0864(0x0001)
  *                                                                   tickFloat                                         //0x0868(0x0004)
  BP_weaponBase_C*                                                    ExisitingPickup                                   //0x0870(0x0008)
  BP_Unarmed_C*                                                       unarmed                                           //0x0878(0x0008)
  *                                                                   maxHealth                                         //0x0880(0x0004)
  *                                                                   alive?                                            //0x0884(0x0001)
  SoundBase*                                                          RepsawnSound                                      //0x0888(0x0008)
  PoseSnapshot*                                                       Snap                                              //0x0890(0x0038)
  Vector*                                                             aimLocation_Leftie                                //0x08C8(0x000C)
  *                                                                   slowerRunSpeed                                    //0x08D4(0x0004)
  *                                                                   Current Area                                      //0x08D8(0x0018)
  *                                                                   fallDmgVelocity                                   //0x08F0(0x0004)
  *                                                                   immuneToFallDamage?                               //0x08F4(0x0001)
  Vector*                                                             startCameraSocketOffset                           //0x08F8(0x000C)
  Vector*                                                             destinationCameraSocketOffset                     //0x0904(0x000C)
  *                                                                   Player_is_ADS                                     //0x0910(0x0001)
  itemsToDropOnDeath*                                                 itemsToDropOnDeath                                //0x0918(0x0010)
  *                                                                   levelDebug                                        //0x0928(0x0004)
  *                                                                   canDodgeRoll                                      //0x092C(0x0001)
  rollingMontages*                                                    rollingMontages                                   //0x0930(0x0050)
  ScannedObjectDictionary*                                            ScannedObjectDictionary                           //0x0980(0x0050)
  myOwnedProjectiles*                                                 myOwnedProjectiles                                //0x09D0(0x0010)
  *                                                                   inventorySize                                     //0x09E0(0x0004)
  *                                                                   Detonator Upgrade                                 //0x09E4(0x0001)
  scannedAlly*                                                        scannedAlly                                       //0x09E8(0x0010)
  SaveGameData_01_C*                                                  save_ref                                          //0x09F8(0x0008)
  *                                                                   helmetEquipped?                                   //0x0A00(0x0001)
  AudioComponent*                                                     currentSpinSound                                  //0x0A08(0x0008)
  DamageResistances*                                                  DamageResistances                                 //0x0A10(0x0050)
  ParticleSystemComponent*                                            spinTrail                                         //0x0A60(0x0008)
  *                                                                   invertInputYaw                                    //0x0A68(0x0001)
  *                                                                   invertInputPitch                                  //0x0A69(0x0001)
  UserWidget*                                                         deathUI                                           //0x0A70(0x0008)
  UserWidget*                                                         challengeUI                                       //0x0A78(0x0008)
  Actor*                                                              interactableActor                                 //0x0A80(0x0008)
  *                                                                   ADS_righty                                        //0x0A88(0x0001)
  D-Pad*                                                              D-Pad Entry                                       //0x0A89(0x0001)
  *                                                                   AttachedState                                     //0x0A8A(0x0001)
  Actor*                                                              actor attached                                    //0x0A90(0x0008)
  *                                                                   slotPressed                                       //0x0A98(0x0004)
  Actor*                                                              spawnedWeapon                                     //0x0AA0(0x0008)
  AmmoStruct*                                                         HeldAmmo                                          //0x0AA8(0x001C)
  AmmoStruct*                                                         MaxHeldAmmo                                       //0x0AC4(0x001C)
  AmmoStruct*                                                         pickedUpAmmo                                      //0x0AE0(0x001C)
  AmmoStruct*                                                         AmmoToBeReturned                                  //0x0AFC(0x001C)
  CustomColor*                                                        HelmetColor                                       //0x0B18(0x000C)
  MaterialInstanceDynamic*                                            HelmetDynamic                                     //0x0B28(0x0008)
  *                                                                   DefaultSlotOverride                               //0x0B30(0x0001)
  AnimMontage*                                                        MeleeWindupAnim                                   //0x0B38(0x0008)
  AnimMontage*                                                        MeleeReleaseAnim                                  //0x0B40(0x0008)
  *                                                                   RegenCap                                          //0x0B48(0x0004)
  AnimMontage*                                                        takeFromFloorAnim                                 //0x0B50(0x0008)
  AnimMontage*                                                        pistolAttackAnim                                  //0x0B58(0x0008)
  PhysicsAsset*                                                       RagDoll_Asset                                     //0x0B60(0x0008)
  *                                                                   leftLegSocket                                     //0x0B68(0x0008)
  *                                                                   rightLegSocket                                    //0x0B70(0x0008)
  PlayerControlState*                                                 controlType                                       //0x0B78(0x0001)
  DamageTypes*                                                        incomingDamageType                                //0x0B79(0x0001)
  AnimMontage*                                                        ThrowAnim                                         //0x0B80(0x0008)
  AnimMontage*                                                        rifleShootAnim                                    //0x0B88(0x0008)
  *                                                                   currentFOV                                        //0x0B90(0x0004)
  *                                                                   DesiredFOV                                        //0x0B94(0x0004)
  SoundBase*                                                          hurtSound                                         //0x0B98(0x0008)
  *                                                                   headsocket                                        //0x0BA0(0x0008)
  *                                                                   bodysocket                                        //0x0BA8(0x0008)
  *                                                                   headShotted                                       //0x0BB0(0x0001)
  AnimMontage*                                                        spinAnim                                          //0x0BB8(0x0008)
  AnimMontage*                                                        wallHangMontage                                   //0x0BC0(0x0008)
  *                                                                   Name Visibility                                   //0x0BC8(0x0001)
  *                                                                   current_outfit                                    //0x0BC9(0x0001)
  *                                                                   RegenAmountPer                                    //0x0BCC(0x0004)
  BP_DoT_Effect_Damage_Over_Time_C*                                   CURRENT DOT                                       //0x0BD0(0x0008)
  BP_FloatingName_C*                                                  floatingNAME                                      //0x0BD8(0x0008)
  *                                                                   currentCameraSocketSelectionVar                   //0x0BE0(0x0004)
  *                                                                   sideCam?                                          //0x0BE4(0x0001)
  AnimMontage*                                                        Unarmed_AttackAnim                                //0x0BE8(0x0008)
  Controller*                                                         KillerController                                  //0x0BF0(0x0008)
  *                                                                   lookspeed                                         //0x0BF8(0x0004)
  *                                                                   DropAmmoOnDeath                                   //0x0BFC(0x0001)
  OwnedStructures*                                                    OwnedStructures                                   //0x0C00(0x0010)
  *                                                                   OnJumpButtonDown                                  //0x0C10(0x0001)
  *                                                                   Desired Arm Length                                //0x0C14(0x0004)
  Controller*                                                         KillerControllerNonSelf                           //0x0C18(0x0008)
  DropflagEvent__DelegateSignature*                                   DropflagEvent                                     //0x0C20(0x0010)
  AnimMontage*                                                        putAwayBeltAnim                                   //0x0C30(0x0008)
  AnimMontage*                                                        putAwayBackAnim                                   //0x0C38(0x0008)
  *                                                                   HasFlag?                                          //0x0C40(0x0001)
  BP_DoT_Effect_Damage_Over_Time_C*                                   currentFireDoT                                    //0x0C48(0x0008)
  EquippedCosmetics*                                                  EquippedCosmetics                                 //0x0C50(0x0010)
  CharactersSelected*                                                 this_character                                    //0x0C60(0x0001)
  Camille_Outfits*                                                    Camille_Outfits                                   //0x0C68(0x0050)
  Equipped Cosmetic Reference*                                        Equipped Cosmetic Reference                       //0x0CB8(0x0010)
  Friday_Outfits*                                                     Friday_Outfits                                    //0x0CC8(0x0050)
  Dalton_Outfits*                                                     Dalton_Outfits                                    //0x0D18(0x0050)
  *                                                                   outfitSetup_Complete                              //0x0D68(0x0001)
  SkeletalMesh*                                                       newBodyMesh                                       //0x0D70(0x0008)
  *                                                                   MainMenuDummy                                     //0x0D78(0x0001)
  *                                                                   Camera Pitch Local                                //0x0D7C(0x0004)
  *                                                                   SelfDamage_Divide                                 //0x0D80(0x0004)
  Blaise_Outfits*                                                     Blaise_Outfits                                    //0x0D88(0x0050)
  WeaponAnimType*                                                     CurrentWeaponAnimType                             //0x0DD8(0x0001)
  Color*                                                              BlueTeamColor                                     //0x0DDC(0x0004)
  Color*                                                              RedTeamColor                                      //0x0DE0(0x0004)
  Bingo_Outfits*                                                      Bingo_Outfits                                     //0x0DE8(0x0050)
  *                                                                   inCOMBAT                                          //0x0E38(0x0001)
  abby_outfits*                                                       abby_outfits                                      //0x0E40(0x0050)
  AnimMontage*                                                        Dagger_Montage                                    //0x0E90(0x0008)
  *                                                                   isCloaked                                         //0x0E98(0x0001)
  AnimMontage*                                                        Guitar_Emote                                      //0x0EA0(0x0008)
  *                                                                   Roll_Energy_Cost                                  //0x0EA8(0x0004)
  Vector*                                                             grndMovement                                      //0x0EAC(0x000C)
  *                                                                   Roll Power                                        //0x0EB8(0x0004)
  *                                                                   EnergyRegen                                       //0x0EBC(0x0004)
  *                                                                   alwaysUseYawAim?                                  //0x0EC0(0x0001)
  *                                                                   Character Scale                                   //0x0EC4(0x0004)
  *                                                                   Body Material Index                               //0x0EC8(0x0004)
  MaterialInstanceDynamic*                                            Body Material with Mask                           //0x0ED0(0x0008)
  Hemlock_Outfits*                                                    Hemlock_Outfits                                   //0x0ED8(0x0050)
  Charlie_Outfits*                                                    Charlie_Outfits                                   //0x0F28(0x0050)
  *                                                                   SpeedMod                                          //0x0F78(0x0004)
  *                                                                   OriginalJumpHeight                                //0x0F7C(0x0004)
  *                                                                   OriginalWalkSpeed                                 //0x0F80(0x0004)
  *                                                                   Global CD Time                                    //0x0F84(0x0004)
  Character_Montage_Struct*                                           RollMontage_NET                                   //0x0F88(0x0018)
  PlayerState*                                                        OwningPlayerState                                 //0x0FA0(0x0008)
  TimerHandle*                                                        BubbleShieldTimer                                 //0x0FA8(0x0008)
  Controller*                                                         KillerAssistController                            //0x0FB0(0x0008)
  *                                                                   Can_GCD                                           //0x0FB8(0x0001)
  *                                                                   Aiming_YAW_NET                                    //0x0FB9(0x0001)
  *                                                                   Crouching_NET                                     //0x0FBA(0x0001)
  *                                                                   HalfHeight_Capsule                                //0x0FBC(0x0004)
  *                                                                   Crouched HalfHeight_Capsule                       //0x0FC0(0x0004)
  HurtDispatcher__DelegateSignature*                                  HurtDispatcher                                    //0x0FC8(0x0010)
  *                                                                   isSpinning                                        //0x0FD8(0x0001)
  Vector*                                                             Death Velocity                                    //0x0FDC(0x000C)
  Controller*                                                         controllerForDeath                                //0x0FE8(0x0008)
  Vector*                                                             last collide                                      //0x0FF0(0x000C)
  *                                                                   netTickFloat                                      //0x0FFC(0x0004)
  *                                                                   randomBOTid                                       //0x1000(0x0001)
  *                                                                   Disable Timers                                    //0x1001(0x0001)
  BP_FloatingDamageNumber_C*                                          myNumber                                          //0x1008(0x0008)
  OnDeath__DelegateSignature*                                         OnDeath                                           //0x1010(0x0010)
  *                                                                   lastSlotPressed                                   //0x1020(0x0004)
  SoundBase*                                                          sweeper_voiceline                                 //0x1028(0x0008)
  SoundBase*                                                          killing_camille_voice_line                        //0x1030(0x0008)
  SoundBase*                                                          killing_dalton_voice_line                         //0x1038(0x0008)
  SoundBase*                                                          killing_friday_voice_line                         //0x1040(0x0008)
  SoundBase*                                                          killing_abby_voice_line                           //0x1048(0x0008)
  SoundBase*                                                          killing_bingo_voice_line                          //0x1050(0x0008)
  SoundBase*                                                          killing_blaise_voice_line                         //0x1058(0x0008)
  SoundBase*                                                          killing_hemlock_voice_line                        //0x1060(0x0008)
  SoundBase*                                                          killing_charlie_voice_line                        //0x1068(0x0008)
  SoundBase*                                                          KillStreak                                        //0x1070(0x0008)
  SoundBase*                                                          KillStreak                                        //0x1078(0x0008)
  SoundBase*                                                          KillStreak                                        //0x1080(0x0008)
  SoundBase*                                                          KillStreak                                        //0x1088(0x0008)
  *                                                                   initializedOutfit                                 //0x1090(0x0001)
  *                                                                   PlayerControlledAtDeath                           //0x1091(0x0001)
  SoundBase*                                                          RareDeathQuote                                    //0x1098(0x0008)
  *                                                                   IsFallingNET                                      //0x10A0(0x0001)
  *                                                                   CanJump NET                                       //0x10A1(0x0001)
  fullyZoomed__DelegateSignature*                                     fullyZoomed                                       //0x10A8(0x0010)
  AnimMontage*                                                        FallingStamAnim                                   //0x10B8(0x0008)
  Vector*                                                             Mesh_StartLoc                                     //0x10C0(0x000C)
  Vector*                                                             LeftHand_Pos                                      //0x10CC(0x000C)
  *                                                                   LookingAtFriend                                   //0x10D8(0x0001)
  *                                                                   LookingAtSomething                                //0x10D9(0x0001)
  OriginalResistances*                                                OriginalResistances                               //0x10E0(0x0050)
  SoundBase*                                                          Spawn Quote                                       //0x1130(0x0008)
  MaterialInstances*                                                  MaterialInstances                                 //0x1138(0x0010)
  SoundBase*                                                          ExplosiveKill_VO                                  //0x1148(0x0008)
  AudioComponent*                                                     CurrentQuoteSound                                 //0x1150(0x0008)
  AudioComponent*                                                     CurrentHurtSound                                  //0x1158(0x0008)
  SoundBase*                                                          Rifle Kill Headshot VO                            //0x1160(0x0008)
  SoundBase*                                                          Rifle Kill VO                                     //0x1168(0x0008)
  EquipWeaponDispatcher__DelegateSignature*                           EquipWeaponDispatcher                             //0x1170(0x0010)
  OnFireDispatcher__DelegateSignature*                                OnFireDispatcher                                  //0x1180(0x0010)
  *                                                                   DropHeldAmmoOnDeath?                              //0x1190(0x0001)
  *                                                                   UseSmoothSync_Override                            //0x1191(0x0001)
  inSpawnRoom__DelegateSignature*                                     inSpawnRoom                                       //0x1198(0x0010)
  SoundBase*                                                          KnockOut_VoiceLine                                //0x11A8(0x0008)
  SoundBase*                                                          meleeKill_VO                                      //0x11B0(0x0008)
  *                                                                   RegenTick                                         //0x11B8(0x0004)
  TimerHandle*                                                        combatTimer                                       //0x11C0(0x0008)
  TimerHandle*                                                        GCDTimer                                          //0x11C8(0x0008)
  GCD_Started__DelegateSignature*                                     GCD_Started                                       //0x11D0(0x0010)
  *                                                                   overrideBackSockets                               //0x11E0(0x0001)
  backSockets*                                                        backSockets                                       //0x11E8(0x0010)
  loadout_02*                                                         loadout_02                                        //0x11F8(0x0010)
  *                                                                   Loadout                                           //0x1208(0x0004)
  AnimMontage*                                                        spinAttackAnim                                    //0x1210(0x0008)
  AnimMontage*                                                        altPickSpin                                       //0x1218(0x0008)
  *                                                                   YawLimit                                          //0x1220(0x0001)
  *                                                                   CENTER_CAM_MODE                                   //0x1221(0x0001)
  SlateBrushAsset*                                                    IncomingDamageIcon                                //0x1228(0x0008)
  *                                                                   FOV_pref                                          //0x1230(0x0004)
  *                                                                   scoped                                            //0x1234(0x0001)
  TimerHandle*                                                        WeaponPickupRepeat                                //0x1238(0x0008)
  TimerHandle*                                                        CrouchBufferTimer                                 //0x1240(0x0008)
  SoundBase*                                                          MegaWeapon_VO                                     //0x1248(0x0008)
  SoundBase*                                                          PickMe VO                                         //0x1250(0x0008)
  AnimMontage*                                                        chakram_Atk_montage                               //0x1258(0x0008)
  AnimMontage*                                                        chakram_Idle_montage                              //0x1260(0x0008)
  *                                                                   TargetDummy                                       //0x1268(0x0001)
  AnimMontage*                                                        bow_drawn_montage                                 //0x1270(0x0008)
  AnimMontage*                                                        bow_fire_montage                                  //0x1278(0x0008)
  SoundBase*                                                          Taunt_VO                                          //0x1280(0x0008)
  SoundBase*                                                          HealMe_VO                                         //0x1288(0x0008)
  TimerHandle*                                                        SpeechCooldown                                    //0x1290(0x0008)
  *                                                                   CanSpeechWheel                                    //0x1298(0x0001)
  SoundBase*                                                          Thanks_VO                                         //0x12A0(0x0008)
  UI_SpeechWheel_C*                                                   SpeechWheel_UI                                    //0x12A8(0x0008)
  Vector*                                                             lastHitDirection                                  //0x12B0(0x000C)
  *                                                                   CCd                                               //0x12BC(0x0001)
  Falcon_Outfits*                                                     Falcon_Outfits                                    //0x12C0(0x0050)
  *                                                                   preventDespawn                                    //0x1310(0x0001)
  *                                                                   FPSon                                             //0x1311(0x0001)
  SoundBase*                                                          TeamLosing_VO                                     //0x1318(0x0008)
  *                                                                   bIsTyping                                         //0x1320(0x0001)
  *                                                                   PlayerHostile?                                    //0x1321(0x0001)
  Actor*                                                              PatrolActor                                       //0x1328(0x0008)
  *                                                                   Patrols?                                          //0x1330(0x0001)
  GameModeBase*                                                       GameMode                                          //0x1338(0x0008)
  BehaviorTree*                                                       Default Behavior                                  //0x1340(0x0008)
  BP_PatrolPath_C*                                                    patrolPath                                        //0x1348(0x0008)
  *                                                                   splineDistance                                    //0x1350(0x0004)
  *                                                                   patrolSpeed                                       //0x1354(0x0004)
  Vector*                                                             Patrol Location                                   //0x1358(0x000C)
  AI_State*                                                           aiState                                           //0x1364(0x0001)
  *                                                                   bBot                                              //0x1365(0x0001)
  Controller*                                                         Recent_Healer                                     //0x1368(0x0008)
  SoundBase*                                                          Welcome_VO                                        //0x1370(0x0008)
  DamageType*                                                         ReceivedDamageType                                //0x1378(0x0008)
  *                                                                   grappling                                         //0x1380(0x0001)
  *                                                                   HoldingMegaWeapon                                 //0x1381(0x0001)
  *                                                                   SurvivalMode                                      //0x1382(0x0001)
  *                                                                   BonusHealth                                       //0x1384(0x0004)
  knownTractors*                                                      knownTractors                                     //0x1388(0x0010)
  WeaponFiredDispatch__DelegateSignature*                             WeaponFiredDispatch                               //0x1398(0x0010)
  onDeathDispatch__DelegateSignature*                                 onDeathDispatch                                   //0x13A8(0x0010)
  *                                                                   ScopeSpeed                                        //0x13B8(0x0004)
  Vector*                                                             aimTargetLocation                                 //0x13BC(0x000C)
  *                                                                   aimBlocked                                        //0x13C8(0x0001)
  *                                                                   isSwimmingNET                                     //0x13C9(0x0001)
  AnimMontage*                                                        staffCharge_montage                               //0x13D0(0x0008)
  AnimMontage*                                                        staffRelease_montage                              //0x13D8(0x0008)
  TimerHandle*                                                        spinExpireHandle                                  //0x13E0(0x0008)
  TimerHandle*                                                        spincheckwaterHandle                              //0x13E8(0x0008)
  *                                                                   inSpawnZone                                       //0x13F0(0x0001)
  *                                                                   DisableSpawnQuote                                 //0x13F1(0x0001)
  DamageBuffs*                                                        DamageBuffs                                       //0x13F8(0x0050)
  *                                                                   Quote_Pitch                                       //0x1448(0x0004)
  Gwen_Outfits*                                                       Gwen_Outfits                                      //0x1450(0x0050)
  *                                                                   SpeedModB                                         //0x14A0(0x0004)
  *                                                                   TryOnOutfit                                       //0x14A4(0x0001)
  DoTs*                                                               DoTs                                              //0x14A8(0x0010)
  *                                                                   SpeedModPowerUps                                  //0x14B8(0x0004)
  onLandedDispatch__DelegateSignature*                                onLandedDispatch                                  //0x14C0(0x0010)
  onJumpDispatch__DelegateSignature*                                  onJumpDispatch                                    //0x14D0(0x0010)
  bIsMeleeSwinging__DelegateSignature*                                bIsMeleeSwinging                                  //0x14E0(0x0010)
  DA_CharacterLoadouts_C*                                             LoadoutDataAsset                                  //0x14F0(0x0008)
  CurWeaponLoadout*                                                   CurWeaponLoadout                                  //0x14F8(0x0010)
  *                                                                   bScopeOverridePassive                             //0x1508(0x0001)
  DoTApplied__DelegateSignature*                                      DoTApplied                                        //0x1510(0x0010)
  ImmuneDamageTypes*                                                  ImmuneDamageTypes                                 //0x1520(0x0010)
};


class BP_Char_Panda_C : public BP_PlayerCharacter_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x1530(0x0008)
  *                                                                   unarmed_Attacks                                   //0x0229(0x0229)
  *                                                                   OnNotifyEnd_6A2A31F543E59087799BC6933BF90468      //0x0000(0x0229)
  *                                                                   OnNotifyBegin_6A2A31F543E59087799BC6933BF90468    //0x0000(0x0229)
  *                                                                   OnInterrupted_6A2A31F543E59087799BC6933BF90468    //0x0000(0x0229)
  *                                                                   OnBlendOut_6A2A31F543E59087799BC6933BF90468       //0x0000(0x0229)
  *                                                                   OnCompleted_6A2A31F543E59087799BC6933BF90468      //0x0000(0x0229)
  *                                                                   OnNotifyEnd_64213DCA411BF746EE9F6A9A5FD74D2C      //0x0000(0x0229)
  *                                                                   OnNotifyBegin_64213DCA411BF746EE9F6A9A5FD74D2C    //0x0000(0x0229)
  *                                                                   OnInterrupted_64213DCA411BF746EE9F6A9A5FD74D2C    //0x0000(0x0229)
  *                                                                   OnBlendOut_64213DCA411BF746EE9F6A9A5FD74D2C       //0x0000(0x0229)
  *                                                                   OnCompleted_64213DCA411BF746EE9F6A9A5FD74D2C      //0x0000(0x0229)
  *                                                                   InpActEvt_CharlieAbility_1_K2Node_InputActionEvent//0x0000(0x0229)
  *                                                                   InpActEvt_CharlieAbility_2_K2Node_InputActionEvent//0x0000(0x0229)
  *                                                                   InpActEvt_CharlieAbility_3_K2Node_InputActionEvent//0x0000(0x0229)
  *                                                                   InpActEvt_CharlieAbility_4_K2Node_InputActionEvent//0x0000(0x0229)
  *                                                                   InpActEvt_CharlieAbility_5_K2Node_InputActionEvent//0x0000(0x0229)
  *                                                                   InpActEvt_CharlieFire_K2Node_InputActionEvent     //0x0000(0x0229)
  *                                                                   InpActEvt_CharlieFire_K2Node_InputActionEvent     //0x0000(0x0229)
  *                                                                   InpActEvt_Fire_K2Node_InputActionEvent            //0x0000(0x0229)
  *                                                                   InpActEvt_Fire_K2Node_InputActionEvent            //0x0000(0x0229)
  *                                                                   Melee Ability                                     //0x0000(0x0229)
  DamageType*                                                         ReceiveAnyDamage                                  //0x0229(0x0229)
  *                                                                   currentItemUIIndex                                //0x0229(0x0229)
  *                                                                   Color Set                                         //0x0229(0x0229)
  *                                                                   ChargePunch                                       //0x0000(0x0229)
  *                                                                   Chi Launch                                        //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   Can Swap Call                                     //0x0000(0x0229)
  *                                                                   Success Fire                                      //0x0000(0x0229)
  weapon*                                                             Weapon Voice Event                                //0x0229(0x0229)
  ActorObject*                                                        weaponBase_Pickup                                 //0x0229(0x0229)
  *                                                                   Dodge Roll Action                                 //0x0229(0x0229)
  *                                                                   PlayerInputSwitchWeapon                           //0x0229(0x0229)
  *                                                                   MeleeAbilityRequestCD                             //0x0000(0x0229)
  *                                                                   MeleeAbilityCdEnded                               //0x0000(0x0229)
  K2Node_CreateDelegate_OutputDelegate*                               ExecuteUbergraph_BP_Char_Panda                    //0x0000(0x0229)
  HitBoxCapsule*                                                      forearm_hitbox_L                                  //0x1538(0x0008)
  HitBoxCapsule*                                                      arm_hitbox_L                                      //0x1540(0x0008)
  HitBoxCapsule*                                                      forearm_hitbox_R                                  //0x1548(0x0008)
  HitBoxCapsule*                                                      arm_hitbox_R                                      //0x1550(0x0008)
  HitBoxCapsule*                                                      Leg_hitbox_L                                      //0x1558(0x0008)
  HitBoxCapsule*                                                      Thigh_Hitbox_L                                    //0x1560(0x0008)
  HitBoxCapsule*                                                      Thigh_Hitbox_R                                    //0x1568(0x0008)
  HitBoxCapsule*                                                      Leg_hitbox_R                                      //0x1570(0x0008)
  HitBoxCapsule*                                                      Body_Hitbox1                                      //0x1578(0x0008)
  HitBoxCapsule*                                                      Body_Hitbox                                       //0x1580(0x0008)
  HitBoxCapsule*                                                      Head_hitbox                                       //0x1588(0x0008)
  MaterialInstanceDynamic*                                            skirt dynamic                                     //0x1590(0x0008)
  MaterialInstanceDynamic*                                            cartigan dynamic                                  //0x1598(0x0008)
  DamageType_Base_C*                                                  DOT_BrushOFF                                      //0x15A0(0x0008)
  Class*                                                              Brushoff_Dot                                      //0x15A8(0x0008)
  *                                                                   meleeAbilityRequested                             //0x15B0(0x0001)
  *                                                                   bDisablePandaPassive                              //0x15B1(0x0001)
};


class BP_Char_Wolf_C : public BP_PlayerCharacter_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x1530(0x0008)
  BP_Player*                                                          Find Bleeding Enemy                               //0x0000(0x0229)
  *                                                                   Bleeding Enemy Distance                           //0x0000(0x0229)
  *                                                                   Color Set                                         //0x0229(0x0229)
  *                                                                   Pack Leader                                       //0x0000(0x0229)
  *                                                                   Move speed multi                                  //0x0000(0x0229)
  *                                                                   Santa Hemlock                                     //0x0000(0x0229)
  *                                                                   Died                                              //0x0229(0x0229)
  *                                                                   Enforcer Hemlock                                  //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   Bleed Event                                       //0x0000(0x0229)
  *                                                                   Lifeguard Hemlock                                 //0x0000(0x0229)
  Temp_object_Variable*                                               ExecuteUbergraph_BP_Char_Wolf                     //0x0000(0x0229)
  HitBoxCapsule*                                                      arm_L                                             //0x1538(0x0008)
  HitBoxCapsule*                                                      arm_R                                             //0x1540(0x0008)
  HitBoxCapsule*                                                      upperarm_L                                        //0x1548(0x0008)
  HitBoxCapsule*                                                      upperarm_R                                        //0x1550(0x0008)
  HitBoxCapsule*                                                      Head_hitbox                                       //0x1558(0x0008)
  HitBoxCapsule*                                                      Torso                                             //0x1560(0x0008)
  HitBoxCapsule*                                                      Torso                                             //0x1568(0x0008)
  HitBoxCapsule*                                                      Torso                                             //0x1570(0x0008)
  HitBoxCapsule*                                                      Torso                                             //0x1578(0x0008)
  HitBoxCapsule*                                                      UpLeg_L                                           //0x1580(0x0008)
  HitBoxCapsule*                                                      UpLeg_R                                           //0x1588(0x0008)
  HitBoxCapsule*                                                      Leg_L                                             //0x1590(0x0008)
  HitBoxCapsule*                                                      Leg_R                                             //0x1598(0x0008)
  Bleeding Enemies*                                                   Bleeding Enemies                                  //0x15A0(0x0010)
  *                                                                   BleedingLowestDistance                            //0x15B0(0x0004)
  TimerHandle*                                                        bleedTick                                         //0x15B8(0x0008)
};


class BP_Char_Snek_C : public BP_PlayerCharacter_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x1530(0x0008)
  *                                                                   Color Set                                         //0x0229(0x0229)
  *                                                                   Santa Dalton                                      //0x0000(0x0229)
  *                                                                   toAimCam                                          //0x0229(0x0229)
  Temp_object_Variable*                                               ExecuteUbergraph_BP_Char_Snek                     //0x0000(0x0229)
  HitBoxCapsule*                                                      arm_L                                             //0x1538(0x0008)
  HitBoxCapsule*                                                      arm_R                                             //0x1540(0x0008)
  HitBoxCapsule*                                                      upperarm_L                                        //0x1548(0x0008)
  HitBoxCapsule*                                                      upperarm_R                                        //0x1550(0x0008)
  HitBoxCapsule*                                                      Head_hitbox                                       //0x1558(0x0008)
  HitBoxCapsule*                                                      Torso                                             //0x1560(0x0008)
  HitBoxCapsule*                                                      Torso                                             //0x1568(0x0008)
  HitBoxCapsule*                                                      Torso                                             //0x1570(0x0008)
  HitBoxCapsule*                                                      Torso                                             //0x1578(0x0008)
  HitBoxCapsule*                                                      UpLeg_L                                           //0x1580(0x0008)
  HitBoxCapsule*                                                      UpLeg_R                                           //0x1588(0x0008)
  HitBoxCapsule*                                                      Leg_L                                             //0x1590(0x0008)
  HitBoxCapsule*                                                      Leg_R                                             //0x1598(0x0008)
};


class BP_Char_Raccoon_C : public BP_PlayerCharacter_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x1530(0x0008)
  CallFunc_SpawnSoundAttached_ReturnValue*                            Play Deploy Sound                                 //0x0000(0x0229)
  *                                                                   InpActEvt_Character Special_K2Node_InputActionEvent//0x0000(0x0229)
  *                                                                   ReceiveTick                                       //0x0229(0x0229)
  *                                                                   RegenAmmo                                         //0x0000(0x0229)
  *                                                                   PlayAmmoRegenFXLocal                              //0x0000(0x0229)
  EventInstigator*                                                    Kill own turrets                                  //0x0000(0x0229)
  *                                                                   Color Set                                         //0x0229(0x0229)
  Temp_object_Variable*                                               ExecuteUbergraph_BP_Char_Raccoon                  //0x0000(0x0229)
  HitBoxCapsule*                                                      Thigh_Hitbox_R                                    //0x1538(0x0008)
  HitBoxCapsule*                                                      arm_hitbox_R                                      //0x1540(0x0008)
  HitBoxCapsule*                                                      forearm_hitbox_L                                  //0x1548(0x0008)
  HitBoxCapsule*                                                      arm_hitbox_L                                      //0x1550(0x0008)
  HitBoxCapsule*                                                      forearm_hitbox_R                                  //0x1558(0x0008)
  HitBoxCapsule*                                                      Leg_hitbox_L                                      //0x1560(0x0008)
  HitBoxCapsule*                                                      Thigh_Hitbox_L                                    //0x1568(0x0008)
  HitBoxCapsule*                                                      Head_hitbox                                       //0x1570(0x0008)
  HitBoxCapsule*                                                      Leg_hitbox_R                                      //0x1578(0x0008)
  HitBoxCapsule*                                                      Body_Hitbox1                                      //0x1580(0x0008)
  HitBoxCapsule*                                                      Body_Hitbox                                       //0x1588(0x0008)
  MaterialInstanceDynamic*                                            skirt dynamic                                     //0x1590(0x0008)
  MaterialInstanceDynamic*                                            cartigan dynamic                                  //0x1598(0x0008)
  *                                                                   Timer                                             //0x15A0(0x0004)
};


class BP_Char_Gwen_C : public BP_PlayerCharacter_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x1530(0x0008)
  CallFunc_CreateDynamicMaterialInstance_ReturnValue*                 UserConstructionScript                            //0x0229(0x0229)
  *                                                                   InpActEvt_Character Special_K2Node_InputActionEvent//0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   ElementChange                                     //0x0000(0x0229)
  Gwen Alchemy*                                                       StartListeningForForms                            //0x0000(0x0229)
  *                                                                   Color Set                                         //0x0229(0x0229)
  *                                                                   Self Buff Refresher                               //0x0000(0x0229)
  K2Node_CreateDelegate_OutputDelegate*                               ExecuteUbergraph_BP_Char_Gwen                     //0x0000(0x0229)
  HitBoxCapsule*                                                      Thigh_Hitbox_R                                    //0x1538(0x0008)
  HitBoxCapsule*                                                      arm_hitbox_R                                      //0x1540(0x0008)
  HitBoxCapsule*                                                      Leg_hitbox_R                                      //0x1548(0x0008)
  HitBoxCapsule*                                                      forearm_hitbox_R                                  //0x1550(0x0008)
  HitBoxCapsule*                                                      forearm_hitbox_L                                  //0x1558(0x0008)
  HitBoxCapsule*                                                      arm_hitbox_L                                      //0x1560(0x0008)
  HitBoxCapsule*                                                      Leg_hitbox_L                                      //0x1568(0x0008)
  HitBoxCapsule*                                                      Body_Hitbox                                       //0x1570(0x0008)
  HitBoxCapsule*                                                      Head_hitbox                                       //0x1578(0x0008)
  HitBoxCapsule*                                                      Body_Hitbox1                                      //0x1580(0x0008)
  HitBoxCapsule*                                                      Thigh_Hitbox_L                                    //0x1588(0x0008)
  *                                                                   FastFalling                                       //0x1590(0x0001)
  *                                                                   FastFallTick                                      //0x1594(0x0004)
  *                                                                   CanStomp                                          //0x1598(0x0001)
  MaterialInstanceDynamic*                                            hairClip                                          //0x15A0(0x0008)
  MaterialInstanceDynamic*                                            gwenArmMaterial                                   //0x15A8(0x0008)
  TimerHandle*                                                        BuffRefresher                                     //0x15B0(0x0008)
  BP_Gwen_Alchemy_01_C*                                               MyAlchemy                                         //0x15B8(0x0008)
};


class BP_Char_Bunn_C : public BP_PlayerCharacter_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x1530(0x0008)
  StompTarget1*                                                       StompCheck                                        //0x0000(0x0229)
  Temp_object_Variable*                                               mothArms                                          //0x0000(0x0229)
  *                                                                   InpActEvt_Character Special_K2Node_InputActionEvent//0x0000(0x0229)
  *                                                                   OnNotifyEnd_09A6112D4BF5977F5CF72D96D439D6DF      //0x0000(0x0229)
  *                                                                   OnNotifyBegin_09A6112D4BF5977F5CF72D96D439D6DF    //0x0000(0x0229)
  *                                                                   OnInterrupted_09A6112D4BF5977F5CF72D96D439D6DF    //0x0000(0x0229)
  *                                                                   OnBlendOut_09A6112D4BF5977F5CF72D96D439D6DF       //0x0000(0x0229)
  *                                                                   OnCompleted_09A6112D4BF5977F5CF72D96D439D6DF      //0x0000(0x0229)
  *                                                                   Color Set                                         //0x0229(0x0229)
  *                                                                   stomp Effects                                     //0x0000(0x0229)
  *                                                                   fastFall Server                                   //0x0000(0x0229)
  *                                                                   JumpStart                                         //0x0229(0x0229)
  *                                                                   fastFall Multicast                                //0x0000(0x0229)
  *                                                                   StompScan                                         //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   FridayStompServer                                 //0x0000(0x0229)
  *                                                                   FridayStompMulticast                              //0x0000(0x0229)
  *                                                                   StompTicker                                       //0x0000(0x0229)
  *                                                                   StompEvent                                        //0x0000(0x0229)
  *                                                                   StompCoolingDown                                  //0x0000(0x0229)
  Hit*                                                                OnLanded                                          //0x0229(0x0229)
  DamagedActor*                                                       StompEffectsServer                                //0x0000(0x0229)
  Temp_object_Variable*                                               ExecuteUbergraph_BP_Char_Bunn                     //0x0000(0x0229)
  HitBoxCapsule*                                                      Thigh_Hitbox_R                                    //0x1538(0x0008)
  HitBoxCapsule*                                                      arm_hitbox_R                                      //0x1540(0x0008)
  HitBoxCapsule*                                                      Leg_hitbox_R                                      //0x1548(0x0008)
  HitBoxCapsule*                                                      forearm_hitbox_R                                  //0x1550(0x0008)
  HitBoxCapsule*                                                      forearm_hitbox_L                                  //0x1558(0x0008)
  HitBoxCapsule*                                                      arm_hitbox_L                                      //0x1560(0x0008)
  HitBoxCapsule*                                                      Leg_hitbox_L                                      //0x1568(0x0008)
  HitBoxCapsule*                                                      Body_Hitbox                                       //0x1570(0x0008)
  HitBoxCapsule*                                                      Head_hitbox                                       //0x1578(0x0008)
  HitBoxCapsule*                                                      Body_Hitbox1                                      //0x1580(0x0008)
  HitBoxCapsule*                                                      Thigh_Hitbox_L                                    //0x1588(0x0008)
  *                                                                   FastFalling                                       //0x1590(0x0001)
  *                                                                   FastFallTick                                      //0x1594(0x0004)
  *                                                                   CanStomp                                          //0x1598(0x0001)
  TimerHandle*                                                        StompTimer                                        //0x15A0(0x0008)
};


class BP_Enemy_C : public BP_Char_Bunn_C
{
  SceneComponent*                                                     PatrolTarget                                      //0x15A8(0x0008)
};


class BP_Char_Opossum_C : public BP_PlayerCharacter_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x1530(0x0008)
  Class*                                                              Attach DoT                                        //0x0229(0x0229)
  *                                                                   Color Set                                         //0x0229(0x0229)
  *                                                                   FireFighter Blaise                                //0x0000(0x0229)
  *                                                                   Sailor Blaise                                     //0x0000(0x0229)
  *                                                                   Miner Blaise                                      //0x0000(0x0229)
  *                                                                   PJ Outfit                                         //0x0000(0x0229)
  *                                                                   WaveCommander                                     //0x0000(0x0229)
  Temp_object_Variable*                                               ExecuteUbergraph_BP_Char_Opossum                  //0x0000(0x0229)
  HitBoxCapsule*                                                      thigh_R                                           //0x1538(0x0008)
  HitBoxCapsule*                                                      Leg_R                                             //0x1540(0x0008)
  HitBoxCapsule*                                                      Leg_L                                             //0x1548(0x0008)
  HitBoxCapsule*                                                      thigh_L                                           //0x1550(0x0008)
  HitBoxCapsule*                                                      arm_R                                             //0x1558(0x0008)
  HitBoxCapsule*                                                      upperarm_R                                        //0x1560(0x0008)
  HitBoxCapsule*                                                      arm_L                                             //0x1568(0x0008)
  HitBoxCapsule*                                                      upperarm_L                                        //0x1570(0x0008)
  HitBoxCapsule*                                                      Head                                              //0x1578(0x0008)
  HitBoxCapsule*                                                      Torso                                             //0x1580(0x0008)
  HitBoxCapsule*                                                      Torso                                             //0x1588(0x0008)
  SkeletalMeshComponent*                                              whiskers                                          //0x1590(0x0008)
};


class BP_Char_Mouse_C : public BP_PlayerCharacter_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x1530(0x0008)
  Mesh*                                                               JesterHatPhys                                     //0x0000(0x0229)
  *                                                                   PlayHurtSounds                                    //0x0229(0x0229)
  *                                                                   InpActEvt_Character Special_K2Node_InputActionEvent//0x0000(0x0229)
  *                                                                   Color Set                                         //0x0229(0x0229)
  *                                                                   Miner Camille                                     //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   Special Detonate                                  //0x0000(0x0229)
  *                                                                   Detonate Server                                   //0x0000(0x0229)
  *                                                                   USB Mouse Skin                                    //0x0000(0x0229)
  *                                                                   USBMouse_Hurt Event                               //0x0000(0x0229)
  *                                                                   Jester Mouse Skin                                 //0x0000(0x0229)
  Temp_object_Variable*                                               ExecuteUbergraph_BP_Char_Mouse                    //0x0000(0x0229)
  HitBoxCapsule*                                                      arm_hitbox_R                                      //0x1538(0x0008)
  HitBoxCapsule*                                                      forearm_hitbox_R                                  //0x1540(0x0008)
  HitBoxCapsule*                                                      Leg_hitbox_R                                      //0x1548(0x0008)
  HitBoxCapsule*                                                      Thigh_Hitbox_R                                    //0x1550(0x0008)
  HitBoxCapsule*                                                      Body_Hitbox                                       //0x1558(0x0008)
  HitBoxCapsule*                                                      Head_hitbox                                       //0x1560(0x0008)
  HitBoxCapsule*                                                      forearm_hitbox_L                                  //0x1568(0x0008)
  HitBoxCapsule*                                                      arm_hitbox_L                                      //0x1570(0x0008)
  HitBoxCapsule*                                                      Leg_hitbox_L                                      //0x1578(0x0008)
  HitBoxCapsule*                                                      Thigh_Hitbox_L                                    //0x1580(0x0008)
  HitBoxCapsule*                                                      Body_Hitbox1                                      //0x1588(0x0008)
  SpotLightComponent*                                                 SpotLight                                         //0x1590(0x0008)
  SkeletalMeshComponent*                                              whiskers                                          //0x1598(0x0008)
  StaticMeshComponent*                                                glasses                                           //0x15A0(0x0008)
  MaterialInstanceDynamic*                                            Clothing Dynamic                                  //0x15A8(0x0008)
};


class BP_Char_Bingo_C : public BP_PlayerCharacter_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x1530(0x0008)
  *                                                                   ComboStealth                                      //0x0000(0x0229)
  K2Node_DynamicCast_AsBP_Melee_Dagger*                               DaggerLevelUP                                     //0x0000(0x0229)
  *                                                                   Cloak Shimmer                                     //0x0000(0x0229)
  CallFunc_CreateDynamicMaterialInstance_ReturnValue*                 InitializeBingoStealthShader                      //0x0000(0x0229)
  *                                                                   DecaleCombatColor                                 //0x0000(0x0229)
  CallFunc_Array_Get_Item*                                            Cloak Mode Function                               //0x0000(0x0229)
  *                                                                   InpActEvt_Character Special_K2Node_InputActionEvent//0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   Server Cloakmode                                  //0x0000(0x0229)
  *                                                                   Cloak Toggle                                      //0x0000(0x0229)
  *                                                                   Multicast Cloakmode                               //0x0000(0x0229)
  weaponBaseActor*                                                    weaponPickupFunction                              //0x0229(0x0229)
  *                                                                   Color Set                                         //0x0229(0x0229)
  *                                                                   SpyOutfit                                         //0x0000(0x0229)
  *                                                                   Cloak Ability                                     //0x0000(0x0229)
  *                                                                   Energy Regen                                      //0x0229(0x0229)
  *                                                                   Theif Bingo                                       //0x0000(0x0229)
  *                                                                   ReceiveTick                                       //0x0229(0x0229)
  *                                                                   Enter_Combat                                      //0x0229(0x0229)
  *                                                                   Kill Voice Line Client - Weapon                   //0x0229(0x0229)
  *                                                                   Force Exit Combat                                 //0x0000(0x0229)
  *                                                                   Hype Bingo                                        //0x0000(0x0229)
  *                                                                   SmokeBomb                                         //0x0000(0x0229)
  *                                                                   MultiCastSmokeBombEffects                         //0x0000(0x0229)
  Temp_object_Variable*                                               ExecuteUbergraph_BP_Char_Bingo                    //0x0000(0x0229)
  *                                                                   Cloaked__DelegateSignature                        //0x0000(0x0229)
  HitBoxCapsule*                                                      Leg_R                                             //0x1538(0x0008)
  HitBoxCapsule*                                                      UpLeg_R                                           //0x1540(0x0008)
  HitBoxCapsule*                                                      Leg_L                                             //0x1548(0x0008)
  HitBoxCapsule*                                                      UpLeg_L                                           //0x1550(0x0008)
  HitBoxCapsule*                                                      forearm_hitbox_R                                  //0x1558(0x0008)
  HitBoxCapsule*                                                      forearm_hitbox_L                                  //0x1560(0x0008)
  HitBoxCapsule*                                                      UpperArm_Hitbox_R                                 //0x1568(0x0008)
  HitBoxCapsule*                                                      UpperArm_Hitbox_L                                 //0x1570(0x0008)
  HitBoxCapsule*                                                      Head_hitbox                                       //0x1578(0x0008)
  HitBoxCapsule*                                                      Body_Hitbox                                       //0x1580(0x0008)
  HitBoxCapsule*                                                      Body_Hitbox1                                      //0x1588(0x0008)
  DecalComponent*                                                     Decal                                             //0x1590(0x0008)
  MaterialInstanceDynamic*                                            CloakDynamic                                      //0x1598(0x0008)
  MaterialInstanceDynamic*                                            decalDynamic                                      //0x15A0(0x0008)
  Cloaked__DelegateSignature*                                         cloaked                                           //0x15A8(0x0010)
  *                                                                   dagger_level                                      //0x15B8(0x0004)
  BP_weaponBase_C*                                                    ourDagger                                         //0x15C0(0x0008)
  *                                                                   oEnergyRegen                                      //0x15C8(0x0004)
  *                                                                   REVOLVER_LEVEL                                    //0x15CC(0x0004)
  *                                                                   bCloakAbilityEnabled                              //0x15D0(0x0001)
};


class BP_Ally_C : public BP_Enemy_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x15B0(0x0008)
  DamageType*                                                         ReceiveAnyDamage                                  //0x0229(0x0229)
  UpdatedActors*                                                      BndEvt__AIPerception_0_K2Node_ComponentBoundEvent_0_PerceptionUpdatedDelegate__DelegateSignature//0x0000(0x0229)
  Actor*                                                              BndEvt__AIPerception_0_K2Node_ComponentBoundEvent_1_ActorPerceptionUpdatedDelegate__DelegateSignature//0x0000(0x0229)
  *                                                                   sayThankYou                                       //0x0000(0x0229)
  *                                                                   sayFollowingYou                                   //0x0000(0x0229)
  *                                                                   sayStayingPut                                     //0x0000(0x0229)
  *                                                                   resetHello                                        //0x0000(0x0229)
  *                                                                   taggedByPlayer                                    //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   Command Follow Player                             //0x0000(0x0229)
  *                                                                   Command Stay Put                                  //0x0000(0x0229)
  *                                                                   Command Combat                                    //0x0000(0x0229)
  CallFunc_GetKnownPerceivedActors_OutActors*                         ExecuteUbergraph_BP_Ally                          //0x0000(0x0229)
  ButtonHint_Offset_C*                                                ButtonHint_Offset                                 //0x15B8(0x0008)
  RescueStates*                                                       RescueState                                       //0x15C0(0x0001)
};


class BP_raccoon_dummy_C : public BP_Char_Raccoon_C
{
};


class BP_Opossum_dummy_C : public BP_Char_Opossum_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x1598(0x0008)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   ExecuteUbergraph_BP_Opossum_dummy                 //0x0000(0x0229)
};


class BP_mouse_dummy_C : public BP_Char_Mouse_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x15B0(0x0008)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   ExecuteUbergraph_BP_mouse_dummy                   //0x0000(0x0229)
  SkeletalMeshComponent*                                              Detonator                                         //0x15B8(0x0008)
  *                                                                   detonator_dummy?                                  //0x15C0(0x0001)
};


class BP_bunn_dummy_C : public BP_Char_Bunn_C
{
};


class BP_wolf_dummy_C : public BP_Char_Wolf_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x15C0(0x0008)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   EquipStarter_Weapons                              //0x0229(0x0229)
  Actor*                                                              Destroy Our weapon                                //0x0000(0x0229)
  K2Node_CreateDelegate_OutputDelegate*                               ExecuteUbergraph_BP_wolf_dummy                    //0x0000(0x0229)
  SceneComponent*                                                     Hand_R_fake                                       //0x15C8(0x0008)
  BP_Harpoon_Gun_C*                                                   dummyWeapon                                       //0x15D0(0x0008)
};


class BP_snek_dummy_C : public BP_Char_Snek_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x15A0(0x0008)
  CallFunc_AddComponent_ReturnValue*                                  UserConstructionScript                            //0x0229(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   ExecuteUbergraph_BP_snek_dummy                    //0x0000(0x0229)
  *                                                                   holdingDummyRifle                                 //0x15A8(0x0001)
};


class BP_gwen_dummy_C : public BP_Char_Gwen_C
{
};


class BP_Char_Panda_dummy_C : public BP_Char_Panda_C
{
};


class BP_Bingo_Dummy_C : public BP_Char_Bingo_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x15D8(0x0008)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  CallFunc_Array_Get_Item*                                            ExecuteUbergraph_BP_Bingo_Dummy                   //0x0000(0x0229)
};


class BP_Turret_C : public BP_PlayerCharacter_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x1530(0x0008)
  CallFunc_SpawnSoundAttached_ReturnValue*                            SpawnLoopSound                                    //0x0000(0x0229)
  Player State*                                                       IsEnemyToLocal                                    //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  DamageType*                                                         ReceiveAnyDamage                                  //0x0229(0x0229)
  *                                                                   ReceiveTick                                       //0x0229(0x0229)
  *                                                                   ConsumesOnDeath                                   //0x0229(0x0229)
  *                                                                   Turret Skins                                      //0x0000(0x0229)
  *                                                                   EnemyCheck                                        //0x0000(0x0229)
  Actor*                                                              BndEvt__AIPerception_K2Node_ComponentBoundEvent_0_ActorPerceptionUpdatedDelegate__DelegateSignature//0x0000(0x0229)
  *                                                                   ZoomCamera                                        //0x0229(0x0229)
  *                                                                   lerpCameraSocket                                  //0x0229(0x0229)
  *                                                                   Death Check                                       //0x0229(0x0229)
  controllerForDeath*                                                 Notify_Controller_WeDied                          //0x0229(0x0229)
  OldController*                                                      ReceiveUnpossessed                                //0x0229(0x0229)
  HitComponent*                                                       Ragdoll Collide                                   //0x0229(0x0229)
  *                                                                   Loop Sound kill                                   //0x0000(0x0229)
  *                                                                   Found you sound                                   //0x0000(0x0229)
  *                                                                   Fire Held Item                                    //0x0229(0x0229)
  *                                                                   Change Loop                                       //0x0000(0x0229)
  *                                                                   DeactivateSpawnVFX                                //0x0000(0x0229)
  Temp_object_Variable*                                               ExecuteUbergraph_BP_Turret                        //0x0000(0x0229)
  StaticMeshComponent*                                                turretBody_01                                     //0x1538(0x0008)
  ParticleSystemComponent*                                            ParticleSystem                                    //0x1540(0x0008)
  Pixel_Outline_Controller_C*                                         Pixel_Outline_Controller                          //0x1548(0x0008)
  HitBoxCapsule*                                                      Head_hitbox                                       //0x1550(0x0008)
  HitBoxCapsule*                                                      Body_Hitbox1                                      //0x1558(0x0008)
  BehaviorTree*                                                       Default Behavior                                  //0x1560(0x0008)
  MaterialInstanceDynamic*                                            TurretMaterial                                    //0x1568(0x0008)
  LinearColor*                                                        turretColor                                       //0x1570(0x0010)
  *                                                                   EnemyTurret                                       //0x1580(0x0001)
  AudioComponent*                                                     LoopSound                                         //0x1588(0x0008)
  Abigail_Outfits*                                                    ThisTurretSkin                                    //0x1590(0x0001)
  Vector*                                                             forwardVector                                     //0x1594(0x000C)
  ParticleSystemComponent*                                            buildCircleVFX                                    //0x15A0(0x0008)
};


class DT_TNT_Proxy_C : public DT_TNT_C
{
};


class BP_BrutalShot_Projectile_C : public BP_Rocket_Projectile_C
{
};


class BP_TNT_Prox_Poison_C : public BP_TNT_Projectile_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0448(0x0008)
  SourceMaterial*                                                     tnt_m_color                                       //0x0229(0x0229)
  Object*                                                             Would Trigger                                     //0x0000(0x0229)
  OverlappedComponent*                                                BndEvt__Range_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature//0x0000(0x0229)
  *                                                                   Triggered                                         //0x0000(0x0229)
  *                                                                   Explode                                           //0x0229(0x0229)
  CallFunc_SpawnEmitterAtLocation_ReturnValue*                        ExecuteUbergraph_BP_TNT_Prox_Poison               //0x0000(0x0229)
  ParticleSystemComponent*                                            Radius                                            //0x0450(0x0008)
  StaticMeshComponent*                                                FakeOutline                                       //0x0458(0x0008)
  AudioComponent*                                                     Audio                                             //0x0460(0x0008)
  SphereComponent*                                                    Range                                             //0x0468(0x0008)
  Actor*                                                              other actor                                       //0x0470(0x0008)
  *                                                                   Triggerable                                       //0x0478(0x0001)
};


class BP_TNT_Prox_Projectile_C : public BP_TNT_Projectile_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0448(0x0008)
  SourceMaterial*                                                     tnt_m_color                                       //0x0229(0x0229)
  Object*                                                             Would Trigger                                     //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  OverlappedComponent*                                                BndEvt__Range_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature//0x0000(0x0229)
  *                                                                   Triggered                                         //0x0000(0x0229)
  K2Node_ComponentBoundEvent_OverlappedComponent*                     ExecuteUbergraph_BP_TNT_Prox_Projectile           //0x0000(0x0229)
  ParticleSystemComponent*                                            Radius                                            //0x0450(0x0008)
  StaticMeshComponent*                                                FakeOutline                                       //0x0458(0x0008)
  AudioComponent*                                                     Audio                                             //0x0460(0x0008)
  SphereComponent*                                                    Range                                             //0x0468(0x0008)
  Actor*                                                              other actor                                       //0x0470(0x0008)
  *                                                                   Triggerable                                       //0x0478(0x0001)
};


class BP_TNT_Prox_GIGA_C : public BP_TNT_Prox_Projectile_C
{
  PointLightComponent*                                                PointLight                                        //0x0480(0x0008)
};


class BP_Trap_Projectile_C : public BP_TNT_Prox_Projectile_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0480(0x0008)
  BP Player Character*                                                Apply Dot to Trapped1                             //0x0000(0x0229)
  *                                                                   Timeline_0__FinishedFunc                          //0x0000(0x0229)
  *                                                                   Timeline_0__UpdateFunc                            //0x0000(0x0229)
  *                                                                   Scale Timeline__FinishedFunc                      //0x0000(0x0229)
  *                                                                   Scale Timeline__UpdateFunc                        //0x0000(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   Trap Target                                       //0x0000(0x0229)
  *                                                                   Triggered                                         //0x0229(0x0229)
  *                                                                   Cancel Trap                                       //0x0000(0x0229)
  DamageType*                                                         ReceiveAnyDamage                                  //0x0229(0x0229)
  *                                                                   Triggered Server                                  //0x0000(0x0229)
  Target*                                                             Lerp To Center                                    //0x0000(0x0229)
  *                                                                   Friend Light                                      //0x0000(0x0229)
  *                                                                   TimedTNT                                          //0x0229(0x0229)
  BP_Player*                                                          Notify Bleed                                      //0x0000(0x0229)
  HitComponent*                                                       BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature//0x0000(0x0229)
  HitComponent*                                                       BndEvt__CollisionSphere_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature//0x0000(0x0229)
  OverlappedComponent*                                                BndEvt__CollisionSphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature//0x0000(0x0229)
  OverlappedComponent*                                                BndEvt__Box_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature//0x0000(0x0229)
  *                                                                   FriendLightTick                                   //0x0000(0x0229)
  K2Node_CreateDelegate_OutputDelegate*                               ExecuteUbergraph_BP_Trap_Projectile               //0x0000(0x0229)
  BoxComponent*                                                       Box                                               //0x0488(0x0008)
  SceneComponent*                                                     CharacterLocator                                  //0x0490(0x0008)
  PointLightComponent*                                                Light                                             //0x0498(0x0008)
  SkeletalMeshComponent*                                              Trap                                              //0x04A0(0x0008)
  *                                                                   Scale_Timeline_Alpha_CF6C962D493849369CE3A39644BEDA26//0x04A8(0x0004)
  ETimelineDirection*                                                 Scale_Timeline__Direction_CF6C962D493849369CE3A39644BEDA26//0x04AC(0x0001)
  TimelineComponent*                                                  Scale Timeline                                    //0x04B0(0x0008)
  *                                                                   Timeline_0_alpha_87E31CA24F12E5B007ED3B8707401B8A //0x04B8(0x0004)
  ETimelineDirection*                                                 Timeline_0__Direction_87E31CA24F12E5B007ED3B8707401B8A//0x04BC(0x0001)
  TimelineComponent*                                                  Timeline                                          //0x04C0(0x0008)
  *                                                                   Trap Duration                                     //0x04C8(0x0004)
  *                                                                   Trapped                                           //0x04CC(0x0001)
};


class BlockoutToolsFunctions_C : public BlueprintFunctionLibrary
{
  __WorldContext*                                                     BlockoutRoundVector2D                             //0x0000(0x0229)
  __WorldContext*                                                     BlockoutRoundVector                               //0x0000(0x0229)
  __WorldContext*                                                     BlockoutRoundFloat                                //0x0000(0x0229)
  StaticMesh*                                                         BlockoutSetMaterial_D                             //0x0000(0x0229)
  __WorldContext*                                                     BlockoutRoundVariables_D                          //0x0000(0x0229)
};


class CharacterSelect_C : public LevelScriptActor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0220(0x0008)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   ExecuteUbergraph_CharacterSelect                  //0x0000(0x0229)
};


class Blockout_Stairs_Linear_C : public BlockoutToolsParent
{
  *                                                                   SetupStepSizes                                    //0x0000(0x0229)
  Temp_object_Variable*                                               AddBlockoutStairsLinear                           //0x0000(0x0229)
  *                                                                   UserConstructionScript                            //0x0229(0x0229)
  Vector*                                                             StairsSize                                        //0x02A0(0x000C)
  *                                                                   bRoundSize                                        //0x02AC(0x0001)
  *                                                                   NumberOfSteps                                     //0x02B0(0x0004)
  EBlockoutStairsType*                                                StairsType                                        //0x02B4(0x0001)
  *                                                                   StepWidth                                         //0x02B8(0x0004)
  *                                                                   StepDepth                                         //0x02BC(0x0004)
  *                                                                   StepHeight                                        //0x02C0(0x0004)
  *                                                                   bUseGrid                                          //0x02C4(0x0001)
  LinearColor*                                                        Color                                             //0x02C8(0x0010)
  *                                                                   bUseTopColor                                      //0x02D8(0x0001)
  LinearColor*                                                        TopColor                                          //0x02DC(0x0010)
};


class BP_StreetLamp_C : public Actor
{
  PointLightComponent*                                                PointLight1                                       //0x0218(0x0008)
  SceneComponent*                                                     SharedRoot                                        //0x0220(0x0008)
  StaticMeshComponent*                                                StaticMeshComponent0                              //0x0228(0x0008)
};


class BP_Car_Prop_Interact_C : public BP_World_Prop_Base_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0230(0x0008)
  CallFunc_GetMaterial_ReturnValue*                                   UserConstructionScript                            //0x0229(0x0229)
  *                                                                   Timeline_0__FinishedFunc                          //0x0000(0x0229)
  *                                                                   Timeline_0__UpdateFunc                            //0x0000(0x0229)
  *                                                                   Shake                                             //0x0000(0x0229)
  *                                                                   Event OnDamageVisual                              //0x0229(0x0229)
  CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult*          ExecuteUbergraph_BP_Car_Prop_Interact             //0x0000(0x0229)
  StaticMeshComponent*                                                Wheel_CollisionMesh                               //0x0238(0x0008)
  StaticMeshComponent*                                                CollisionMesh                                     //0x0240(0x0008)
  StaticMeshComponent*                                                DisplayMesh                                       //0x0248(0x0008)
  *                                                                   Timeline_0_Alpha_6D9E20F748F73EA6FF72849993576D88 //0x0250(0x0004)
  ETimelineDirection*                                                 Timeline_0__Direction_6D9E20F748F73EA6FF72849993576D88//0x0254(0x0001)
  TimelineComponent*                                                  Timeline                                          //0x0258(0x0008)
  *                                                                   Direction                                         //0x0260(0x0001)
  *                                                                   ShakeAmount                                       //0x0264(0x0004)
  LinearColor*                                                        CarColor                                          //0x0268(0x0010)
  StaticMesh*                                                         CarMesh                                           //0x0278(0x0008)
  StaticMesh*                                                         WheelMesh                                         //0x0280(0x0008)
  MaterialInterface*                                                  override                                          //0x0288(0x0008)
  *                                                                   OverrideMaterial                                  //0x0290(0x0001)
};


class map_shootingrange_C : public LevelScriptActor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0220(0x0008)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  CallFunc_GetGameMode_ReturnValue*                                   ExecuteUbergraph_map_shootingrange                //0x0000(0x0229)
};


class Action_SpawnBots_C : public Action_Base_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0278(0x0008)
  *                                                                   Action Start                                      //0x0229(0x0229)
  CallFunc_GetGameMode_ReturnValue*                                   ExecuteUbergraph_Action_SpawnBots                 //0x0000(0x0229)
};


class Blockout_Box_C : public BlockoutToolsParent
{
  CallFunc_AddComponent_ReturnValue*                                  AddBlockoutBox                                    //0x0000(0x0229)
  *                                                                   UserConstructionScript                            //0x0229(0x0229)
  Vector*                                                             BoxSize                                           //0x02A0(0x000C)
  *                                                                   bRoundSize                                        //0x02AC(0x0001)
  StaticMesh*                                                         BlockoutBoxMesh                                   //0x02B0(0x0008)
  *                                                                   bUseGrid                                          //0x02B8(0x0001)
  LinearColor*                                                        Color                                             //0x02BC(0x0010)
  *                                                                   bUseTopColor                                      //0x02CC(0x0001)
  LinearColor*                                                        TopColor                                          //0x02D0(0x0010)
};


class Blockout_Ramp_C : public BlockoutToolsParent
{
  CallFunc_AddComponent_ReturnValue*                                  AddBlockoutRamp                                   //0x0000(0x0229)
  *                                                                   UserConstructionScript                            //0x0229(0x0229)
  Vector*                                                             RampSize                                          //0x02A0(0x000C)
  *                                                                   bRoundSize                                        //0x02AC(0x0001)
  StaticMesh*                                                         BlockoutRampMesh                                  //0x02B0(0x0008)
  *                                                                   bUseGrid                                          //0x02B8(0x0001)
  LinearColor*                                                        Color                                             //0x02BC(0x0010)
  *                                                                   bUseTopColor                                      //0x02CC(0x0001)
  LinearColor*                                                        TopColor                                          //0x02D0(0x0010)
};


class remove_all_items_debug_C : public TriggerBox
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0220(0x0008)
  *                                                                   UserConstructionScript                            //0x0229(0x0229)
  OtherActor*                                                         ReceiveActorBeginOverlap                          //0x0229(0x0229)
  K2Node_Event_OtherActor*                                            ExecuteUbergraph_remove_all_items_debug           //0x0000(0x0229)
  RotatingMovementComponent*                                          textRotator                                       //0x0228(0x0008)
  TextRenderComponent*                                                TextRender                                        //0x0230(0x0008)
};


class FO_Sky_Sphere_C : public Actor
{
  *                                                                   RefreshMaterial                                   //0x0000(0x0229)
  CallFunc_CreateDynamicMaterialInstance_ReturnValue*                 UserConstructionScript                            //0x0229(0x0229)
  StaticMeshComponent*                                                SkySphereMesh                                     //0x0218(0x0008)
  SceneComponent*                                                     Base                                              //0x0220(0x0008)
  MaterialInstanceDynamic*                                            Sky material                                      //0x0228(0x0008)
  *                                                                   Refresh material                                  //0x0230(0x0001)
  MaterialInterface*                                                  Skybox Source                                     //0x0238(0x0008)
};


class kill_trigger_C : public TriggerBox
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0220(0x0008)
  K2Node_DynamicCast_AsBox_Collision*                                 UserConstructionScript                            //0x0229(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   Damage Actor                                      //0x0000(0x0229)
  OverlappedComponent*                                                BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature//0x0000(0x0229)
  HitComponent*                                                       BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature//0x0000(0x0229)
  *                                                                   SetupSolid                                        //0x0000(0x0229)
  OtherActor*                                                         ReceiveActorEndOverlap                            //0x0229(0x0229)
  K2Node_ComponentBoundEvent_OverlappedComponent*                     ExecuteUbergraph_kill_trigger                     //0x0000(0x0229)
  BoxComponent*                                                       Box                                               //0x0228(0x0008)
  *                                                                   SolidCollider                                     //0x0230(0x0001)
  *                                                                   Lava?                                             //0x0231(0x0001)
  Class*                                                              DmgType                                           //0x0238(0x0008)
  *                                                                   DPS                                               //0x0240(0x0004)
  Actors*                                                             Actors                                            //0x0248(0x0010)
  *                                                                   water                                             //0x0258(0x0001)
};


class item_spawner_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  *                                                                   UserConstructionScript                            //0x0229(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   spawn Weapon                                      //0x0000(0x0229)
  *                                                                   resetRespawn                                      //0x0000(0x0229)
  *                                                                   Timer Event                                       //0x0000(0x0229)
  K2Node_CreateDelegate_OutputDelegate*                               ExecuteUbergraph_item_spawner                     //0x0000(0x0229)
  RotatingMovementComponent*                                          RotatingMovement                                  //0x0220(0x0008)
  TextRenderComponent*                                                TextRender                                        //0x0228(0x0008)
  SceneComponent*                                                     DefaultSceneRoot                                  //0x0230(0x0008)
  Class*                                                              Item                                              //0x0238(0x0008)
  BP_PickupItemBase_C*                                                spawnersItem                                      //0x0240(0x0008)
  *                                                                   RespawnTime                                       //0x0248(0x0004)
};


class NPC_Spawner_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  *                                                                   UserConstructionScript                            //0x0229(0x0229)
  *                                                                   ReceiveBeginPlay                                  //0x0229(0x0229)
  *                                                                   Spawn                                             //0x0000(0x0229)
  *                                                                   resetRespawn                                      //0x0000(0x0229)
  *                                                                   SpawnCheck                                        //0x0000(0x0229)
  Killer Actor*                                                       OurNPCDied                                        //0x0000(0x0229)
  *                                                                   RespawnTimeFinished                               //0x0000(0x0229)
  Temp_class_Variable*                                                ExecuteUbergraph_NPC_Spawner                      //0x0000(0x0229)
  ThisSpawner*                                                        SpawnerNPC_Died__DelegateSignature                //0x0000(0x0229)
  TextRenderComponent*                                                TextRender                                        //0x0220(0x0008)
  SceneComponent*                                                     DefaultSceneRoot                                  //0x0228(0x0008)
  Class*                                                              Bot                                               //0x0230(0x0008)
  BP_PlayerCharacter_C*                                               spawnersItem                                      //0x0238(0x0008)
  *                                                                   RespawnTime                                       //0x0240(0x0004)
  SpawnerNPC_Died__DelegateSignature*                                 SpawnerNPC_Died                                   //0x0248(0x0010)
  TimerHandle*                                                        RespawnTimer                                      //0x0258(0x0008)
  *                                                                   CanSpawn                                          //0x0260(0x0001)
};


class pumpkin_random_C : public Actor
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0218(0x0008)
  chosen*                                                             body random                                       //0x0000(0x0229)
  CallFunc_K2_SetRelativeLocation_SweepHitResult*                     Ste Random Stem                                   //0x0000(0x0229)
  *                                                                   Random Pumpkin                                    //0x0000(0x0229)
  CallFunc_K2_SetRelativeLocation_SweepHitResult*                     ExecuteUbergraph_pumpkin_random                   //0x0000(0x0229)
  SceneComponent*                                                     offset checker                                    //0x0220(0x0008)
  StaticMeshComponent*                                                stem                                              //0x0228(0x0008)
  SceneComponent*                                                     stem_offset                                       //0x0230(0x0008)
  StaticMeshComponent*                                                Body                                              //0x0238(0x0008)
  SceneComponent*                                                     SharedRoot                                        //0x0240(0x0008)
  stems*                                                              stems                                             //0x0248(0x0010)
  Bodies*                                                             Bodies                                            //0x0258(0x0050)
  StaticMesh*                                                         ChosenBody                                        //0x02A8(0x0008)
};


class BP_GoldenGun_C : public BP_Pistol_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0500(0x0008)
  SetOwner*                                                           OnPickUp                                          //0x0229(0x0229)
  K2Node_Event_setOwner*                                              ExecuteUbergraph_BP_GoldenGun                     //0x0000(0x0229)
  PointLightComponent*                                                PointLight                                        //0x0508(0x0008)
  *                                                                   goldenGunShots                                    //0x0510(0x0004)
};


class BP_TNT_FireBomb_C : public BP_TNT_C
{
};


class BP_Foam_Pickaxe_C : public BP_MeleePickaxe_C
{
};


class BP_TNT_Fire_BombProjectile_C : public BP_TNT_Projectile_C
{
  PointerToUberGraphFrame*                                            UberGraphFrame                                    //0x0448(0x0008)
  SourceMaterial*                                                     tnt_m_color                                       //0x0229(0x0229)
  Object*                                                             Would Trigger                                     //0x0000(0x0229)
  OverlappedComponent*                                                BndEvt__Range_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature//0x0000(0x0229)
  *                                                                   Triggered                                         //0x0000(0x0229)
  K2Node_ComponentBoundEvent_OverlappedComponent*                     ExecuteUbergraph_BP_TNT_Fire_BombProjectile       //0x0000(0x0229)
  ParticleSystemComponent*                                            Radius                                            //0x0450(0x0008)
  StaticMeshComponent*                                                FakeOutline                                       //0x0458(0x0008)
  AudioComponent*                                                     Audio                                             //0x0460(0x0008)
  SphereComponent*                                                    Range                                             //0x0468(0x0008)
  Actor*                                                              other actor                                       //0x0470(0x0008)
  *                                                                   Triggerable                                       //0x0478(0x0001)
};


